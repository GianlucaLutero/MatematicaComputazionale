(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    840226,      16568]
NotebookOptionsPosition[    828033,      16183]
NotebookOutlinePosition[    830945,      16257]
CellTagsIndexPosition[    830864,      16252]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.701758817043281*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "ff061b19-78df-4426-84ae-4a02cd5c333e"],

Cell[TextData[StyleBox["TRIGONOMETRIA",
 FontSize->36]], "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7017576485113573`*^9, 3.7017576639421873`*^9}, 
   3.704181489034257*^9, {3.704181520253621*^9, 3.7041815336189947`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"8fad6acd-86e2-4dc6-82e1-89f1a60f5c96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\</Users/adelevalerii/Downloads/WhatsApp Image 2017-05-19 at \
13.16.25.jpeg\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.704181541848222*^9, 3.704181603458057*^9}},
 ExpressionUUID -> "9cf134f0-a629-4a56-a075-2a437c5cb4f7"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,159,48,
   21760603017165781468,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7041962575419827`*^9, 3.704196272357894*^9}, {
  3.7041964631919556`*^9, 3.7041964750232697`*^9}, {3.704196689836558*^9, 
  3.7041966953261037`*^9}, {3.7041967566472044`*^9, 3.7041967595789547`*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.704181605884975*^9, 3.704182870271806*^9, 3.7041904189942093`*^9, 
   3.704190526817532*^9, {3.70419625761689*^9, 3.7041962723969903`*^9}, {
   3.7041964632105064`*^9, 3.704196475059869*^9}, {3.704196689858615*^9, 
   3.7041966953481894`*^9}, {3.7041967566717453`*^9, 3.704196759603521*^9}},
 ExpressionUUID -> "e270da07-3d6a-4e31-9f2e-dd2c22bbbafa"]
}, Open  ]],

Cell[TextData[StyleBox["Calcolo Numerico e Software Didattico-Matematica \
Computazionale\nAdele Valerii - Sara Gattari - Gianluca Lutero - Filippo \
Soncini",
 FontSize->18]], "Subtitle",
 CellChangeTimes->{{3.7017576683852177`*^9, 3.7017577041746807`*^9}, {
  3.704170107483343*^9, 3.704170112966247*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"5b35e99e-8570-4658-af04-5f307a8d7bd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "27012d45-0ea1-4f58-8190-50e8b92ac9a0"],

Cell[TextData[{
 StyleBox["Obbiettivi",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]],
 "\n",
 StyleBox["\n", "Text",
  FontColor->GrayLevel[0]],
 StyleBox["- Apprendere i principali teoremi della trigonometria con facilit\
\[AGrave] e divertimento:\n\n\t- Definizioni di Seno, Coseno e Tangente\n\t- \
Teorema della corda\n\t- Teorema dei seni\n\t- Teorema del coseno\n\t\n- \
Rendere i concetti facimente comprensibili agli alunni con disturbi specifici \
dell\[CloseCurlyQuote]apprendimento (DSA). \n\n- Infine, tramite gli esercizi \
guidati dare la possibilit\[AGrave] allo studente di mettersi alla prova.\n", 
  "Text",
  FontFamily->"OpenDyslexic",
  FontColor->GrayLevel[0]]
}], "Section",
 CellChangeTimes->{{3.7017577262703753`*^9, 3.701757728538085*^9}, {
  3.701757778833646*^9, 3.701757780764263*^9}, {3.701758122796708*^9, 
  3.7017581242681093`*^9}, {3.702187705035461*^9, 3.7021877678940477`*^9}, {
  3.702187834980485*^9, 3.702187936858981*^9}, {3.702188056149166*^9, 
  3.702188129207547*^9}, {3.7023575954637947`*^9, 3.7023576214336452`*^9}, {
  3.702957534935906*^9, 3.7029576008131323`*^9}, {3.702957670130249*^9, 
  3.702957718002822*^9}, {3.702957914559709*^9, 3.7029579664689417`*^9}, {
  3.7029580102657127`*^9, 3.702958086000264*^9}, {3.70295818071097*^9, 
  3.702958199843223*^9}, {3.703563402445723*^9, 3.70356340494981*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"28867ebd-4ddc-4d62-8d18-4803749c67c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "496f1601-951b-40b1-89e9-198113a781e6"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A chi \[EGrave] rivolto",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757786788609*^9, 3.7017577952106047`*^9}, {
  3.701758096365346*^9, 3.70175811028111*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"1c64015d-75f2-4913-bd06-d48b6da81dcc"],

Cell["\<\
- Studenti del terzo anno della Scuola Secondaria di Secondo Grado.

- Prima parte (le definizioni) rivolta agli studenti del primo anno della \
Scuola Secondaria di Secondo Grado, in quanto ne hanno necessit\[AGrave] per \
l\[CloseCurlyQuote]applicazione alla fisica.\
\>", "Text",
 CellChangeTimes->{
  3.701757802564528*^9, {3.702188176195565*^9, 3.702188511755487*^9}, {
   3.702958231642229*^9, 3.702958262438171*^9}, {3.702958301256915*^9, 
   3.7029583388484077`*^9}, 3.702958755359706*^9, {3.704169933581469*^9, 
   3.704169945140485*^9}, {3.704170244541442*^9, 3.704170245718741*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"f9dc73bd-d5aa-4fe5-8812-54d33a5f8699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Prerequisiti",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757812179427*^9, 3.701757818585503*^9}, {
  3.7017581145044003`*^9, 3.701758117589946*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"f0a85a5b-0874-4db0-975b-4e210f1ba1e9"],

Cell["\<\
- Nozioni algebriche che si acquisiscono durante il primo biennio della \
Scuola Secondaria di Secondo Grado:
\t- Operazioni con i polinomi;
\t- Operazioni con le frazioni;
\t- Prodotti notevoli;
\t- Raccoglimento a fattor comune.

- Il Teorema di Pitagora 

- Propriet\[AGrave] dei triangoli:
\t- Criteri di congruenza ;
\t-Criteri di similitudine.
\t

-Goniometria (per il triennio): 
\t- Funzioni goniometriche (seno,coseno,tangente);
\t- Funzioni inverse ( arcoseno,arcocoseno, arcotangente);
\t- Angoli associati.

  
\
\>", "Text",
 CellChangeTimes->{{3.701757821007757*^9, 3.701757826242482*^9}, {
  3.702188561809354*^9, 3.7021887207319193`*^9}, {3.702189008946814*^9, 
  3.702189057732115*^9}, {3.702958793514718*^9, 3.702958859146895*^9}, {
  3.704169966799079*^9, 3.704169967633738*^9}, {3.7041753880885973`*^9, 
  3.704175421302066*^9}, {3.704190139002318*^9, 3.704190343210218*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"65271cce-8aa2-4634-9541-8ab133eb2f2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d4a3994a-d88f-4f00-98b2-db18aef836ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</Users/adelevalerii/Desktop/Mathematica/Trigonometria.m\>\"", "]"}],
     "\\\\", "Quiet"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Carica Package \>\"", ",", 
    RowBox[{
     RowBox[{"SetDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<<", " ", "Trigonometria.m"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", 
        "\"\<EvaluateInitialization\>\""}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<SelectAll\>\""}], 
       "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<EvaluateCells\>\""}], 
       "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.703569631646016*^9, {3.703866257456611*^9, 3.70386626964732*^9}, {
   3.703940891185894*^9, 3.703940892633933*^9}, 3.7039466013663073`*^9, {
   3.704004335365964*^9, 3.7040043426327047`*^9}, 3.704195596684803*^9, {
   3.704195746021558*^9, 3.704195870754549*^9}, {3.7041960764127383`*^9, 
   3.704196232801804*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "efc61d3a-ddfc-4487-8f91-61dfec0839cd"],

Cell[BoxData[
 ButtonBox["\<\"Carica Package \"\>",
  Appearance->Automatic,
  ButtonFunction:>(SetDirectory[
     NotebookDirectory[]]; Get["Trigonometria.m"]; FrontEndExecute[
     FrontEndToken[
      InputNotebook[], "EvaluateInitialization"]]; FrontEndExecute[
     FrontEndToken[
      InputNotebook[], "SelectAll"]]; FrontEndExecute[
     FrontEndToken[
      InputNotebook[], "EvaluateCells"]]; Null),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.704196253219351*^9, 3.7041962724220886`*^9}, 
   3.704196475078164*^9, 3.7041966953616996`*^9, 3.7041967596182294`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n",
  FontSize->24],
 StyleBox["Regole",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]]
}], "Section",
 CellChangeTimes->{{3.701757998441074*^9, 3.701758093017961*^9}, {
  3.701758147471192*^9, 3.7017581510838003`*^9}, {3.70175826528433*^9, 
  3.701758273178944*^9}, {3.7029591428241158`*^9, 3.702959190381872*^9}, {
  3.7029595630691423`*^9, 3.7029595743307877`*^9}, {3.702959660841516*^9, 
  3.7029596671218147`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"eebc9a3e-1f4d-4185-98bf-2c9e5ec0cc68"],

Cell[TextData[{
 "- Per andare avanti clicca sulla freccia in alto;\n-Gli angoli sono \
indicati con le lettere greche: \[Alpha], \[Beta], \[Theta], \[Delta], \
\[Gamma].\n\n",
 StyleBox["Teoria",
  FontVariations->{"Underline"->True}],
 "\n- Quando vedi un pulsante clicca sopra per scoprire nuove cose;\n- Per \
vedere cosa accade prova a muovere i punti nei disegni (se premi il pulsante \
+ puoi avviare le animazioni).\n\n",
 StyleBox["Esercizi",
  FontVariations->{"Underline"->True}],
 "\n- Usa sempre le lettere maiuscole per indicare i lati\n- Schiaccia invio \
per confermare ci\[OGrave] che hai inserito\n- Il seno \[EGrave] indicato \
con: sen\n- Negli esercizi guidati leggi i suggerimenti e completa di \
conseguenza all\[CloseCurlyQuote]inteno delle caselle\n- Negli esercizi a \
risposta multipla clicca sul pallino della risposta che secondo te \[EGrave] \
corretta\n\nPulsante calcolatrice?\nSe hai bisono puoi usare un foglio per \
fare i calcoli"
}], "Text",
 CellChangeTimes->{{3.7029592909524612`*^9, 3.7029595200826263`*^9}, {
   3.702959843131048*^9, 3.702959851926807*^9}, 3.702960857833798*^9, {
   3.702961330801569*^9, 3.7029613704580307`*^9}, {3.702961659252536*^9, 
   3.702961686312952*^9}, 3.7040044149045*^9, {3.704004547202037*^9, 
   3.704004661355953*^9}, 3.704005021492406*^9, {3.704005175842289*^9, 
   3.7040052471763563`*^9}, {3.704170026111765*^9, 3.704170042566818*^9}, {
   3.704170443403023*^9, 3.704170447678187*^9}, {3.704175444448584*^9, 
   3.704175518464666*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"65f2a966-0f58-4ab5-91cc-3afc3391e721"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "662c697d-36a7-4e84-8fbd-936cc439c2e4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: SENO e COSENO",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703561953952704*^9, 3.7035620060291843`*^9}, {
  3.703563194375814*^9, 3.70356327112707*^9}, {3.703563334396192*^9, 
  3.703563365089061*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"a3bc7838-fb0f-40bc-b142-ca1a36dc64e5"],

Cell[TextData[{
 StyleBox["Il seno dell\[CloseCurlyQuote]angolo \[EGrave] \
l\[CloseCurlyQuote]ordinata del punto P",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox["                 sen(\[Theta]) ",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["y", 
     RowBox[{"P", " "}]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"d8f19e16-fddf-4039-8504-40f0665e549a"],
 StyleBox["\n",
  FontSize->36],
 StyleBox["Il coseno dell\[CloseCurlyQuote]angolo \[EGrave] l\
\[CloseCurlyQuote]ascissa del punto P               ",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->24,
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["= ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["x", "P"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"624205bf-720a-47d3-b203-f2699dec58e4"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->GrayLevel[1],
 CellChangeTimes->{
  3.7035699081514*^9, 3.703570728184163*^9, {3.7041792603981867`*^9, 
   3.704179331273465*^9}, {3.704179370064128*^9, 3.704179417500478*^9}, {
   3.704179482553731*^9, 3.70417954573979*^9}, {3.7041795814991837`*^9, 
   3.704179590887939*^9}, 3.704179912908823*^9},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b42f20ef-8eb8-4505-b903-b1082c9ebae2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defsencos", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703569865758745*^9, 3.703569868602861*^9}, {
   3.703570157260002*^9, 3.7035703000474863`*^9}, {3.703570584882036*^9, 
   3.7035705883114557`*^9}, 3.703862618133802*^9, {3.703862688559525*^9, 
   3.703862728464252*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "b88380e5-673a-4261-af01-e00664bfec47"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {478., {198.5, 207.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Red, Blue, 
               Darker[Green, 0.3]}, {"Sin", "Cos", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{529., {251., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703570086673793*^9, 3.7035705582335*^9, 3.7035705894076567`*^9, {
   3.703862623630522*^9, 3.7038626484758387`*^9}, {3.703862701216816*^9, 
   3.703862730161173*^9}, {3.7039408961937213`*^9, 3.703940904892466*^9}, {
   3.703941771404128*^9, 3.7039417811581984`*^9}, 3.703946794330942*^9, 
   3.704003074354559*^9, 3.70416829720728*^9, 3.704182870350656*^9, {
   3.704190419338297*^9, 3.704190447939559*^9}, {3.704190527111924*^9, 
   3.704190529720487*^9}, {3.7041962591709585`*^9, 3.7041962724925394`*^9}, {
   3.7041964641850963`*^9, 3.7041964751137295`*^9}, {3.704196690013813*^9, 
   3.704196695402812*^9}, {3.704196756745466*^9, 3.704196759649825*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "226da5ee-065d-49ab-bc7c-a862c784eb15"]
}, Open  ]],

Cell[TextData[StyleBox["",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7040058474588614`*^9, 3.7040058836280193`*^9}, {
   3.7040059146466913`*^9, 3.704005930423451*^9}, {3.704005979739992*^9, 
   3.704005997854095*^9}, {3.70400603316066*^9, 3.7040060505338573`*^9}, 
   3.704175572095076*^9, 3.7041757132200108`*^9, 3.70417628481666*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"cf213812-a977-42f6-8d34-514e88985674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonesen", "[", "]"}]], "Code",
 CellOpen->False,
 CellChangeTimes->{{3.7038661230170307`*^9, 3.7038661273565397`*^9}, {
  3.7038661706133275`*^9, 3.703866196608869*^9}, {3.7038662955113144`*^9, 
  3.7038662999021873`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "a0933898-eae8-4ae9-baeb-b472fca09161"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Seno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficoseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663013408756`*^9, 3.703866338606423*^9, {3.7039408967412786`*^9, 
   3.703940908900725*^9}, {3.7039417718211765`*^9, 3.703941783828933*^9}, 
   3.703946794573558*^9, 3.7040030745419827`*^9, 3.704168299453219*^9, {
   3.7041691920322533`*^9, 3.7041692049558573`*^9}, 3.704169766106948*^9, 
   3.704182870493985*^9, 3.7041904194051456`*^9, 3.70419052716072*^9, {
   3.704196260211737*^9, 3.704196272703596*^9}, {3.704196464975134*^9, 
   3.7041964753608866`*^9}, {3.7041966901541605`*^9, 3.704196695564739*^9}, {
   3.704196756892518*^9, 3.7041967597990646`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[1, 0.85, 0.85],
 ExpressionUUID -> "9ea5dc64-c69a-4670-9237-fba9520fbbe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonecos", "[", "]"}]], "Code",
 CellOpen->False,
 CellChangeTimes->{{3.7038663781597786`*^9, 3.7038663822816715`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "aa6610b1-50bb-4fe0-ad89-22d3ca02ed12"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Coseno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficocoseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663832968783`*^9, {3.703940896794318*^9, 3.703940926428261*^9}, {
   3.7039417718476787`*^9, 3.7039417868394766`*^9}, 3.703946794652046*^9, 
   3.7040030746039553`*^9, 3.7041683009901037`*^9, 3.7041691940094357`*^9, 
   3.704169771652755*^9, 3.70418287054158*^9, 3.704190419472086*^9, 
   3.7041905272055798`*^9, {3.704196260228253*^9, 3.704196272714123*^9}, {
   3.7041964649987025`*^9, 3.704196475383447*^9}, {3.704196690167672*^9, 
   3.70419669559181*^9}, {3.704196756910063*^9, 3.7041967598136053`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[1, 0.85, 0.85],
 ExpressionUUID -> "9cd6b6b5-06b2-483e-838f-390ea8876db8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "3329c87d-1a06-45ce-a2cd-fc587ad29a03"],

Cell[TextData[StyleBox["Osserva che OPH \[EGrave] un triangolo rettangolo ",
 FontSize->24,
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.704002520045436*^9, 3.704002569110077*^9}, {
  3.704002609203266*^9, 3.704002706699196*^9}, {3.704176884411623*^9, 
  3.704176926954159*^9}, {3.704179608084909*^9, 3.7041796381156807`*^9}, {
  3.7041796954286013`*^9, 3.70417972114785*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 Background->GrayLevel[
  1],ExpressionUUID->"f641fa14-e015-4896-9bf4-3b3960a89684"],

Cell[TextData[{
 StyleBox["sen(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "P"], TraditionalForm]],
  FontSize->24,ExpressionUUID->"e59dcb53-6b3d-4600-b211-eab2626ffb80"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["PH",
     FontSize->24], "_"], TraditionalForm]],ExpressionUUID->
  "0ead4553-70c6-4849-9b16-841f0e8eaaea"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["PH", "_"], "1"], TraditionalForm]],
  FontSize->24,ExpressionUUID->"45d04e20-4bda-4b91-85da-e83a2c957538"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["PH", "_"], 
    OverscriptBox["OP", "_"]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"14ecbde1-8b9e-4f1e-8d85-4c0510dba32b"],
 StyleBox["\n",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "P"], TraditionalForm]],
  FontSize->24,ExpressionUUID->"dcc6108d-558a-4030-aa47-4a8659724a4d"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox["OH", "_"],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "474c9a3f-9054-4b02-994c-357b64b083da"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["OH", "_"], "1"], TraditionalForm]],
  FontSize->24,ExpressionUUID->"134c9c2d-bc1c-40b4-bd00-8eac9d69e96f"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["OH", "_"], 
    OverscriptBox["OP", "_"]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"0a93022d-a8f8-4b2f-900f-1fa1dd741b45"]
}], "Text",
 CellChangeTimes->{{3.704002520045436*^9, 3.704002569110077*^9}, {
   3.704002609203266*^9, 3.704002706699196*^9}, {3.704176884411623*^9, 
   3.704176926954159*^9}, {3.704179608084909*^9, 3.7041796381156807`*^9}, 
   3.7041796954286013`*^9},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3aac99b1-aa51-4fb4-a1d0-6fe446681566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rapporti", "[", "]"}]], "Code",
 CellChangeTimes->{3.70386277636623*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "c19c712c-ace5-41eb-a29b-8672b266d7be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {462., {198.5, 207.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9432$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9432$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], Thick, 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}]}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{
               Darker[Green, 0.3]}, {"\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{513., {251., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703862777693576*^9, 3.703940896841196*^9, 3.7039417718626924`*^9, 
   3.7039419072994184`*^9, 3.703946794719541*^9, 3.704003074653544*^9, 
   3.704168303013137*^9, 3.7041828705913553`*^9, {3.704190419538583*^9, 
   3.7041904385117483`*^9}, 3.704190527254795*^9, {3.704196260455119*^9, 
   3.7041962727687435`*^9}, {3.7041964650648637`*^9, 
   3.7041964754235535`*^9}, {3.7041966902082777`*^9, 3.70419669566451*^9}, {
   3.704196756942155*^9, 3.7041967598485975`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "a4cb78c0-f9f9-4114-a286-fcadffc4f50b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["sen(\[Theta]) ",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "OPPOSTO", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,ExpressionUUID->"01e91f61-f4ec-42cd-90cb-6c39ffbb993d"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     OverscriptBox["AB", "_"], 
     OverscriptBox["AC", "_"]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"f2889c35-92b8-4f64-a7c2-e0faa37099e4"],
 StyleBox["   ",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "ADIACENTE", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,ExpressionUUID->"b944ddc3-8fff-4f34-9647-bc591f9aac5e"],
 StyleBox[" =",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     OverscriptBox["BC", "_"], 
     OverscriptBox["AC", "_"]],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"e1c288c0-ddef-44c9-8a07-f502c20eddc8"]
}], "Text",
 CellChangeTimes->{{3.703562630593067*^9, 3.703562897231632*^9}, {
   3.703562928577821*^9, 3.7035629464673862`*^9}, {3.703563019580144*^9, 
   3.703563031947398*^9}, {3.70356551397563*^9, 3.703565517468425*^9}, {
   3.703565551194296*^9, 3.703565554128024*^9}, {3.703862759791403*^9, 
   3.7038627612753*^9}, {3.703866459730482*^9, 3.7038664961437783`*^9}, 
   3.7038665278697076`*^9, {3.704170853725994*^9, 3.704170861870492*^9}, {
   3.704170935119911*^9, 3.704170937328288*^9}, {3.704176934678528*^9, 
   3.704177007719675*^9}, {3.7041799241270723`*^9, 3.7041799267032433`*^9}, {
   3.704180823228427*^9, 3.704180842078218*^9}},
 TextJustification->0.75,
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c5741caa-323d-4976-ae87-5953bbe4f2a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangolorett", "[", "]"}]], "Code",
 CellChangeTimes->{3.70386282246383*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "748000fa-f200-4166-9a9d-fe3b508ce699"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {2^Rational[-1, 2], 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {
            0.7071067811865475, 0}, {0.7071067811865475, 
            0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"B\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703862823428588*^9, 3.703940896894593*^9, 3.7039417718939495`*^9, 
   3.70394298377773*^9, 3.703946794869362*^9, 3.704003074786738*^9, 
   3.704168272757625*^9, 3.704168305564983*^9, 3.704182870726534*^9, 
   3.70419041960432*^9, 3.704190527377727*^9, {3.7041962605678034`*^9, 
   3.7041962729049263`*^9}, {3.704196465194705*^9, 3.704196475553336*^9}, {
   3.7041966903421335`*^9, 3.704196696017421*^9}, {3.70419675708905*^9, 
   3.704196759991417*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "b26d484c-2f8a-44dd-9b5c-5d9f9819d46f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Il triangolo ABC \[EGrave] rettangolo quindi posso applicare il \
teorema di Pitagora: ",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AB", "_"], "2"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",ExpressionUUID->
  "85745048-e65e-4bd0-b716-b079d842d09c"],
 StyleBox["+",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     OverscriptBox["BC", "_"], "2"], "=", 
    SuperscriptBox[
     OverscriptBox["AC", "_"], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",ExpressionUUID->
  "845a9760-5282-4d6c-9954-c6ce5432f3dd"],
 StyleBox["  \n\ndividiamo tutto per ",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",ExpressionUUID->
  "ec55451d-541e-4e27-a20f-5f27aa87612c"],
 StyleBox[" (posso farlo perch\[EGrave] essendo un quadrato, sono sicura che ",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["AC", "2"], " ", "sia", " ", "positivo"}], ")"}], "."}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",ExpressionUUID->
  "8691e93d-8451-4918-90c3-24bcdab0805c"],
 StyleBox[" \n\nOtteniamo ",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SuperscriptBox[
      OverscriptBox["AB", "_"], "2"], 
     SuperscriptBox[
      OverscriptBox["AC", "_"], "2"]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontFamily->"OpenDyslexic",
  FontSize->18,
  FontWeight->"Regular",ExpressionUUID->
  "cf70a657-8e6a-415f-97a7-86a3788ea58f"],
 StyleBox["+",
  FontFamily->"OpenDyslexic",
  FontSize->18,
  FontWeight->"Regular",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SuperscriptBox[
      OverscriptBox["BC", "_"], "2"], 
     SuperscriptBox[
      OverscriptBox["AC", "_"], "2"]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontFamily->"OpenDyslexic",
  FontSize->18,
  FontWeight->"Regular",ExpressionUUID->
  "76615b3e-3854-43e5-8892-a17b9f4fdc69"],
 StyleBox["=",
  FontFamily->"OpenDyslexic",
  FontSize->18,
  FontWeight->"Regular",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SuperscriptBox[
      OverscriptBox["AC", "_"], "2"], 
     SuperscriptBox[
      OverscriptBox["AC", "_"], "2"]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontFamily->"OpenDyslexic",
  FontSize->18,
  FontWeight->"Regular",ExpressionUUID->
  "aaeb36e9-cae6-4446-97ad-a5b7613dcddd"],
 StyleBox[" che \[EGrave] uguale (guardando le formule di seno e coseno) a: \n\
\n",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["sen",
     FontSize->16], "2"], TraditionalForm]],
  FontFamily->"OpenDyslexic",
  FontWeight->"Regular",
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "537c87af-9086-4ae2-baba-8cb70d542648"],
 StyleBox["(\[Theta])",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" + ",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox[
     StyleBox["cos",
      FontColor->RGBColor[0, 0, 1]], "2"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontFamily->"OpenDyslexic",
  FontWeight->"Regular",ExpressionUUID->
  "7dd5cc96-6ab6-48a0-b9ca-a08bd0277064"],
 StyleBox["(\[Theta])",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = 1. Questa \[EGrave] la",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 StyleBox[" formula fondamentale",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular",
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[" della trigonometria!",
  FontFamily->"OpenDyslexic",
  FontSize->16,
  FontWeight->"Regular"],
 StyleBox["\n",
  FontFamily->"OpenDyslexic",
  FontWeight->"Regular"]
}], "Text",
 CellChangeTimes->{{3.7041757526875563`*^9, 3.7041760153642683`*^9}, {
  3.7041760753019323`*^9, 3.704176260794841*^9}, {3.7041770144791727`*^9, 
  3.7041770484312353`*^9}, {3.704180017693006*^9, 3.7041800454176397`*^9}, {
  3.7041800948155937`*^9, 
  3.704180195645027*^9}},ExpressionUUID->"2645e9b6-c371-44ab-996b-\
0f142b07d7b5"],

Cell["", "Text",
 CellChangeTimes->{{3.70417558292304*^9, 3.704175620058526*^9}, 
   3.70417570215348*^9},ExpressionUUID->"c3794a6d-a99f-4f2a-9ba6-\
19668b9df497"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "127890ed-ba16-42ab-81a5-d1a4c0887359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Calcolatrice", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942948273542*^9, 3.703942951729044*^9}, 
   3.703948397538411*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "33addc57-ad12-4f54-96f0-eae9c73c3a21"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["devea_shm", 3, 1]],30,
   "FrontEndObject[LinkObject[\"devea_shm\", 3, 1]]","30","30"},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{
  3.7039429525834045`*^9, 3.703946795693454*^9, 3.70394839860182*^9, 
   3.704003075054468*^9, 3.7041820034746237`*^9, 3.704182871047069*^9, 
   3.704190419670208*^9, 3.704190527646962*^9, {3.704196260959442*^9, 
   3.7041962730324497`*^9}, {3.704196465514621*^9, 3.70419647573034*^9}, {
   3.7041966904627676`*^9, 3.7041966962645617`*^9}, {3.704196757220915*^9, 
   3.7041967601127634`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "a86eba76-58e0-4913-a5ad-5c7b3feb4b8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EsercizioEsempio", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039420235445185`*^9, 3.7039420274694376`*^9}, {
  3.7039481991561823`*^9, 3.703948203560149*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "f76284ba-c14e-4f2b-be14-65067bf316cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esempio 1:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esempio 1:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Theta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 25 \\\\\\\\nC = 50\\\\\\\
\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\" \"\>", TextForm]], "InlineText"],
      Text[" "]], 
     StyleBox[
      PanelBox["\<\" Sin(\[Alpha]) = \\!\\(\\*FractionBox[\\(A\\), \
\\(C\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\\\ \\)\\(25\\)\\(\\\\ \\)\\), \
\\(\\(\\\\ \\)\\(50\\)\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(1\\)\\(\
\\\\ \\)\\), \\(2\\)]\\)\"\>"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxDividers->{"RowsIndexed" -> {3 -> RGBColor[1, 0, 0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{5}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7041828825378847`*^9, 3.704190419737241*^9, 3.704190527690646*^9, {
   3.704196261065694*^9, 3.704196273065054*^9}, {3.704196465589349*^9, 
   3.7041964757779775`*^9}, {3.7041966904929514`*^9, 
   3.7041966963031826`*^9}, {3.7041967572550244`*^9, 3.7041967601498632`*^9}},
 
 ExpressionUUID -> "85d94e88-50c8-4c42-bec5-11f48f772728"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "98a57774-de45-4b81-a33b-d9999ffbe613"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: TANGENTE",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703563451333693*^9, 3.703563480763627*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"4a909eba-d39c-41e1-bc4f-4eef9e871f13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"definizionetangente", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862859615328*^9, 3.70400306888826*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "97f5c21a-9e14-4727-adf9-8df6050a1352"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {478., {198.5, 207.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9496$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9496$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{1, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {Black, 
              Disk[{1, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, Thick, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, {
              Opacity[0.2], Magenta, Thick, 
              EdgeForm[
               Directive[Magenta]], 
              Triangle[{{0, 0}, {1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], 
             If[
              Or[Trigonometria`th <= Pi/2, 
               And[Trigonometria`th > Pi, Trigonometria`th <= (3 Pi)/2]], {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}}]}}, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}}]}}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{1, -3}, {1, 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text["K", {1.1, 0.1}], 
             Text["T", {1.1, Tan[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Rotate[
              Text[
               Style["Tan(\[Theta])", Orange], {
               1.1, Tan[Trigonometria`th]/2}], 90 Degree], {Orange, Thick, 
              Line[{{1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Orange, 
               Darker[Green, 0.3]}, {"Tan", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{529., {251., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703862860503118*^9, 3.703940896925843*^9, 3.703941771940825*^9, 
   3.703942052907565*^9, 3.7039467958689327`*^9, {3.704003075201689*^9, 
   3.704003077693231*^9}, 3.704168316114337*^9, 3.70418287119738*^9, 
   3.704190419805656*^9, 3.704190527742277*^9, {3.7041962614785075`*^9, 
   3.7041962731016574`*^9}, {3.704196465972967*^9, 3.7041964758436613`*^9}, {
   3.7041966905311036`*^9, 3.704196696407412*^9}, {3.704196757293147*^9, 
   3.704196760202004*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "b13a2514-6065-4727-ba4c-f87adcd04c7b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n",
  FontSize->18],
 StyleBox["I triangoli POH e TKO sono simili infatti essi hanno:  \n\t-\
\[Theta] in comune\n\t-sono entrambi rettangoli\n\t-per differenza anche il \
terzo angolo \[EGrave] uguale (la somma degli angoli interni ad un triangolo \
\[EGrave] 180\[Degree])\n\nEssendo simili, il rapporto tra i lati \[EGrave] \
lo stesso:          \n\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["TK", "_"], 
    OverscriptBox["PH", "_"]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"42d20d63-4052-4ce1-ae2c-708edb7ccb48"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["OK", "_"], 
    OverscriptBox["OH", "_"]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"d23a690c-1c98-4397-9ebd-ba7c081c5762"],
 StyleBox[" \[LongRightArrow] ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["TK", "_"], 
    StyleBox[
     RowBox[{"sen", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"206edc82-878d-4611-b548-93ad2b009784"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["OK", "_"], 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"010bb446-724d-456e-be2b-fce48cdc14a3"],
 StyleBox["      ",
  FontSize->18],
 StyleBox["OK \[EGrave] 1 perch\[EGrave] \[EGrave] il raggio della \
circonferenza",
  FontSize->16],
 StyleBox[" , da cui    \n\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["TK", "_"], 
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"912077cb-440f-4779-b01a-b1dd9454b380"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"23477084-a565-4174-86b3-7f62952ef5b9"],
 StyleBox[" \[LongRightArrow] ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox["TK", "_"],
    FontSize->16], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->18,ExpressionUUID->"36fadfd2-95af-4f70-af2b-50a80b5165f1"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"20e31f45-fdcf-43ac-b756-e885d48025ec"],
 StyleBox["\n",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.7035635034658527`*^9, 3.70356375446353*^9}, {
   3.703563792728937*^9, 3.703563825332163*^9}, {3.703565521175215*^9, 
   3.703565571882224*^9}, 3.704002981896831*^9, {3.7040030286269617`*^9, 
   3.704003044383288*^9}, {3.704176312018694*^9, 3.704176429941606*^9}, {
   3.704177067881744*^9, 3.704177085252469*^9}, {3.704180250381908*^9, 
   3.70418040108222*^9}, 3.704180441755076*^9},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"836f6f18-d2f8-48fe-bffe-a214b300080f"],

Cell[TextData[{
 StyleBox["tan(\[Theta])",
  FontSize->20,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" = ",
  FontSize->20],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->20,ExpressionUUID->"e31f7f61-dab6-441a-a9c7-7e126364a7b6"]
}], "Text",
 CellChangeTimes->{{3.7035635034658527`*^9, 3.70356375446353*^9}, {
   3.703563792728937*^9, 3.703563825332163*^9}, {3.703565521175215*^9, 
   3.703565571882224*^9}, 3.704002981896831*^9, {3.7040030286269617`*^9, 
   3.704003044383288*^9}, {3.704176312018694*^9, 3.704176429941606*^9}, {
   3.704177067881744*^9, 3.704177085252469*^9}, {3.704180250381908*^9, 
   3.70418040108222*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2bf07270-1912-4699-923c-ee8fb2d42906"],

Cell["\<\

\
\>", "Text",
 CellChangeTimes->{{3.7035635034658527`*^9, 3.70356375446353*^9}, {
   3.703563792728937*^9, 3.703563825332163*^9}, {3.703565521175215*^9, 
   3.703565571882224*^9}, 3.704002981896831*^9, {3.7040030286269617`*^9, 
   3.704003044383288*^9}, {3.704176312018694*^9, 3.704176429941606*^9}, {
   3.704177067881744*^9, 3.704177085252469*^9}, {3.704180250381908*^9, 
   3.70418040108222*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"5bef2238-4789-4189-afec-9112323252f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonetan", "[", "]"}]], "Code",
 CellOpen->False,
 CellChangeTimes->{{3.7038668881404796`*^9, 3.703866910984089*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "9a2a6b6f-ab27-4436-ba1a-4478d7087c35"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Tangente\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficotangente[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.703866896716856*^9, 3.703866911801592*^9}, 
   3.7039408970104885`*^9, 3.7039417720788507`*^9, 3.7039420601349435`*^9, 
   3.703946796153141*^9, 3.704003075387569*^9, 3.7041828714089622`*^9, 
   3.704190419871764*^9, 3.704190527890283*^9, {3.704196261849969*^9, 
   3.7041962732856236`*^9}, {3.7041964661243687`*^9, 
   3.7041964761433125`*^9}, {3.704196690689242*^9, 3.7041966967259893`*^9}, {
   3.7041967574550667`*^9, 3.7041967603756275`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[1, 0.85, 0.85],
 ExpressionUUID -> "1de6aa3f-453b-4dd2-83fb-21cfdec94440"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "cc4718d5-2b71-428d-a73c-de37ed219aa1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ANGOLI NOTI",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035641514009333`*^9, 3.703564164977171*^9}, {
  3.703564203834907*^9, 3.703564205135581*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"a2480c7b-8e5d-4e6f-acaf-d308d914fe90"],

Cell[TextData[StyleBox["Osserva i valori di seno, coseno e tangente dei \
principali angoli.\nIn questa animazione puoi osservare seno, coseno e \
tangente degli angoli che sono multipli di 30\[Degree].",
 FontFamily->"OpenDyslexic",
 FontSize->16,
 FontWeight->"Regular"]], "Text",
 CellChangeTimes->{{3.7041764398457823`*^9, 3.7041765217199183`*^9}, {
  3.704190567911936*^9, 
  3.704190574420127*^9}},ExpressionUUID->"31dcc374-c919-4869-91e7-\
bbffcd4ad6a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti30", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862957984501*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "c501c8a0-49ec-4378-b83f-00cdd4e80b80"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, ""}, 0, 2 Pi, 
      Rational[1, 6] Pi}}, Typeset`size$$ = {561., {219., 248.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9541$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9541$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 Pi/2], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}, Null}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 6] Pi, ""}, 
         0, 2 Pi, Rational[1, 6] Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{612., {281., 290.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.70386295918711*^9, 3.7039408970417404`*^9, 3.7039417721257286`*^9, 
   3.7039421042354956`*^9, 3.703946796217732*^9, 3.7040030754545813`*^9, 
   3.7041683206030483`*^9, 3.704182871475142*^9, 3.704190419938036*^9, 
   3.704190527938703*^9, {3.7041962619848723`*^9, 3.7041962733222136`*^9}, {
   3.704196466180527*^9, 3.7041964761869535`*^9}, {3.7041966907724442`*^9, 
   3.7041966968003206`*^9}, {3.7041967574919033`*^9, 3.704196760414181*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "5cbef8b8-b9d5-4997-aff5-5f361c5eb5a7"]
}, Open  ]],

Cell[TextData[StyleBox["In questa  animazione puoi osservare seno, coseno e \
tangente degli angoli multipli di 45\[Degree].",
 FontFamily->"OpenDyslexic",
 FontSize->16,
 FontWeight->"Regular"]], "Text",
 CellChangeTimes->{{3.7041765283983297`*^9, 3.704176558856835*^9}, {
  3.7041905815591173`*^9, 
  3.704190584628248*^9}},ExpressionUUID->"60be76d6-ed4a-4a8e-8801-\
eec71ebe2ff6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti45", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862986160528*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "ab55440f-ac1f-45fd-b75b-d96cddc0285f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 4] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 4] Pi, ""}, 0, 2 Pi, 
      Rational[1, 4] Pi}}, Typeset`size$$ = {561., {219., 248.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9599$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 4] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9599$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 Pi/2], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 4] Pi, ""}, 
         0, 2 Pi, Rational[1, 4] Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{612., {281., 290.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703862987445499*^9, 3.703940897110343*^9, 3.703941772156979*^9, 
   3.7039421075433903`*^9, 3.703946796367025*^9, 3.704003075688933*^9, 
   3.704168323243307*^9, 3.7041828716438923`*^9, 3.704190420005744*^9, 
   3.704190528075053*^9, {3.7041962625897446`*^9, 3.704196273514244*^9}, {
   3.7041964670030203`*^9, 3.704196476520617*^9}, {3.704196691187976*^9, 
   3.704196697066265*^9}, {3.7041967576779003`*^9, 3.704196760641153*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "496d042f-4f6b-4b2c-a2f5-c8c19b6eb710"]
}, Open  ]],

Cell[TextData[StyleBox["Osserva che il seno di un angolo \[EGrave] uguale al \
seno del suo supplementare: ad esempio il seno di 30\[Degree] \[EGrave] \
uguale al seno di 150\[Degree]. Questo ti servir\[AGrave] in una slide dopo.",
 
 FontFamily->"OpenDyslexic",
 FontSize->16,
 FontWeight->"Regular"]], "Text",
 CellChangeTimes->{{3.704177826486671*^9, 3.704177836227373*^9}, {
  3.70417790432281*^9, 3.704177977262665*^9}, {3.704178010054338*^9, 
  3.70417802517276*^9}, {3.704180524271583*^9, 3.704180542182276*^9}, {
  3.704190594263165*^9, 
  3.704190606279574*^9}},ExpressionUUID->"f1685c28-9bf0-4503-b03d-\
60cf4829d5f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e8a7e8c2-b615-4317-9e1e-aa9eb67abda8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Promemoria: FORMULE INVERSE",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703572668497764*^9, 3.7035726722315607`*^9}, {
  3.704176600507595*^9, 3.7041766039391193`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"3f4b87f1-9332-4017-8ad3-9d4f2811442d"],

Cell[TextData[{
 StyleBox["Come trovo l\[CloseCurlyQuote]angolo \[Theta] a partire dal seno?",
  
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.5019607843137255]],
 StyleBox["\n",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox["sen(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->18,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"2ddb49c2-89c3-4d4b-86bf-97508f37ef55"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arcsen",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", "2"], ")"}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"7955bac7-b5a9-4193-87a2-c4bae33d45ca"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"180ff14e-6834-490e-95c5-15a9e026cdeb"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"c3bf070b-403b-4ba2-bd9d-d40870b04094"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come",
  FontSize->18],
 StyleBox[" seno",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"61d3ad21-4945-4643-befd-45e8a74fac69"],
 "\n",
 StyleBox["L\[CloseCurlyQuote]",
  FontSize->18],
 StyleBox["arcoseno",
  FontSize->18,
  FontColor->RGBColor[1., 0., 1.]],
 StyleBox[" \[EGrave] la formula inversa del seno!\n\n",
  FontSize->18],
 StyleBox["Come trovo l\[CloseCurlyQuote]angolo \[Theta] a partire dal \
coseno?",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.5019607843137255]],
 StyleBox["\n",
  FontSize->18],
 StyleBox["cos(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"2a1d0a2b-5b57-45a5-bb5f-da9ea245dde5"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arccos",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox[
     SqrtBox["3"], "2"], ")"}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"d95e3c5d-d5e5-4c3d-87f6-5fa29caf1368"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"6f8fd7c2-dbdb-430e-9f3d-0b7dc3c3be00"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SqrtBox["3"], "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"2e42b775-f2ae-4bf9-8a17-e724df1c00af"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["coseno",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"049e7cc0-4d3c-4d99-a99b-f3c70eec82b1"],
 StyleBox["\nL\[CloseCurlyQuote]",
  FontSize->18],
 StyleBox["arcocoseno",
  FontSize->18,
  FontColor->RGBColor[1., 0., 1.]],
 StyleBox[" \[EGrave] la formula inversa del coseno!\n\n",
  FontSize->18],
 StyleBox["Come trovo l\[CloseCurlyQuote]angolo \[Theta] a partire dalla \
tangente?",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.5019607843137255]],
 StyleBox["\n",
  FontSize->18],
 StyleBox["tan(\[Theta]) = ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["3"]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"838c8cd0-8425-4768-8e65-50d6c23511fc"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arctan",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", 
     SqrtBox["3"]], ")"}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"490cc33d-0dfd-4655-a9f2-99defae9bdea"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["tan", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"e08d5574-e543-4d0e-82ef-449def078b74"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["3"]], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"a7ac1c3c-4d6d-4702-bef1-a3fb6e1d6ba1"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["tangente ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"a4daa3a8-4877-4f96-bf12-0abe1ce24ed8"],
 "\n",
 StyleBox["L\[CloseCurlyQuote]",
  FontSize->18],
 StyleBox["arcocoseno ",
  FontSize->18,
  FontColor->RGBColor[1., 0., 1.]],
 StyleBox["\[EGrave] la formula inversa della tangente!",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.703573152250655*^9, 3.7035734743492117`*^9}, {
   3.703573505001946*^9, 3.703573531372149*^9}, {3.703573568538046*^9, 
   3.703573604206109*^9}, {3.703573657966654*^9, 3.703573658944536*^9}, {
   3.7035737252961493`*^9, 3.703573797417841*^9}, {3.7041713010812483`*^9, 
   3.704171305919359*^9}, {3.70417661503507*^9, 3.704176671500309*^9}, 
   3.704176720256481*^9, {3.704190615830072*^9, 3.704190635984571*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"f3499736-a878-42fe-b2aa-286ec6d48717"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "eaf6e525-c36e-4362-8f56-a8581be1a2d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio1", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039421126114435`*^9, 3.703942120523225*^9}, 
   3.703948224644946*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "764634c7-7c1b-491d-b259-41bbb1e4184e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio Guidato:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio Guidato:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", 
     ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 40 \\\\\\\\nB = \
110\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha]),Cos(\[Alpha]),Tan(\[Alpha]) e l'angolo \[Alpha]\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 1: Cerchiamo l'ipotenusa C.\\n Applico il Teorema \
di Pitagora:\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Passo 1: Cerchiamo l'ipotenusa C.\n Applico il Teorema di Pitagora:", 
        Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        ButtonBox["\"Teorema di Pitagora\"", ButtonFunction :> Module[{}, 
            CreateDialog[{
              Style["Teorema di Pitagora", FontSize -> 14, Bold], 
              Graphics[{
                Line[{{0, 0}, {0, 1}, {1.5, 0}, {0, 0}}], {
                 Lighter[Green, 0.5], 
                 Rectangle[{0, 0}, {1.5, -1.5}]}, {
                 Darker[Green, 0.5], 
                 Line[{{0, 0}, {1.5, 0}, {1.5, -1.5}, {0, -1.5}, {0, 0}}]}, 
                Text[
                 Style["\!\(\*SuperscriptBox[\(A\), \(2\)]\)", Bold, 20], {
                 0.8, -0.7}], {
                 Lighter[Red, 0.5], 
                 Rectangle[{0, 0}, {-1, 1}]}, {Red, 
                 Line[{{0, 0}, {-1, 0}, {-1, 1}, {0, 1}, {0, 0}}]}, 
                Text[
                 Style[
                 "\!\(\*SuperscriptBox[\(B\), \(2\)]\)", Bold, 20], {-0.5, 
                 0.5}], {
                 Lighter[Blue, 0.5], 
                 Rotate[
                  Rectangle[{0, 1}, {1.8, -0.8}], Pi/3 - 0.06, {0, 1}]}, {
                Blue, 
                 Line[{{0, 1}, {1.5, 0}, {2.5, 1.5}, {1, 2.5}, {0, 1}}]}, 
                Text[
                 Style["\!\(\*SuperscriptBox[\(C\), \(2\)]\)", Bold, 20], {
                 1.3, 1.3}]}]}]], Appearance -> Automatic, Evaluator -> 
          Automatic, Method -> "Preemptive"],"\"\\n\"",
         "\"Applico il teorema \[LongRightArrow] \\!\\(\\*SuperscriptBox[\\(A\
\\), \\(2\\)]\\) + \"",DynamicBox[
          ToBoxes[
           InputField[
            Dynamic[Trigonometria`catetoNome], String, FieldSize -> 1], 
           StandardForm]],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoNome, "B"], 
           StandardForm]],"\" = \"",InputFieldBox[
          Dynamic[Trigonometria`ipotenusaNome], String, FieldSize -> 1],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \\\\ \
\\)\\)]\\)\"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaNome, "C"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Sostituisco i valori \[LongRightArrow] \
\\!\\(\\*SuperscriptBox[\\(40\\), \\(2\\)]\\) + \"",InputFieldBox[
          Dynamic[Trigonometria`catetoValore], String, FieldSize -> 3],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoValore, "110"], 
           StandardForm]],
         "\" = \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\)\\n\"","\"\\n\"",
         "\"Ricavo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{"\"\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBNome], String, FieldSize -> 1], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\""}, "RowDefault"]], DisplayForm],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoBNome, "B"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Approssima il risultato per difetto!\\n\\n\"",
         "\"Calcolo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{
             InputFieldBox[
              Dynamic[Trigonometria`catetoAValore], String, FieldSize -> 2], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoAValore, "40"], 
               StandardForm]], "\" + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBValore], String, FieldSize -> 3], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoBValore, "110"], 
               StandardForm]]}, "RowDefault"]], DisplayForm],"\" = \"",
         InputFieldBox[
          Dynamic[Trigonometria`ipotenusaValore], String, FieldSize -> 3],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaValore, "117"], 
           StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 2: Cerchiamo sen(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 2: Cerchiamo sen(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"sen(\[Alpha]) = \"",FractionBox["\"A\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"40\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 3: Cerchiamo cos(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 3: Cerchiamo cos(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"cos(\[Alpha]) = \"",FractionBox["\"B\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"110\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 4: Cerchiamo tan(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 4: Cerchiamo tan(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"tan(\[Alpha]) = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senNome], String, FieldSize -> 3], 
            "\"(\[Alpha])\""}, "RowDefault"], "\"cos(\[Alpha])\""],DynamicBox[
         
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`senNome, "sen"], 
           StandardForm]],"\"\\n\"",
         "\"Sostituisco i valori di seno e coseno trovati ai passi 2 e 3: \"",
         FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\"/\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum, "110"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Ricorda! La divisione tra due frazioni\\ndiventa la prima \
frazione moltiplicata per l'inversa della seconda:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum2, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen2, "117"], 
              StandardForm]]}, "RowDefault"]],"\"\[CenterDot]\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum2, "117"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen2, "110"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Dopo aver eseguito la moltiplicazione tra le due frazioni \
ottengo:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen, "110"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Semplifico ai minimi termini la frazione e ottengo:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum2, "4"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen2, "11"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 5: Cerchiamo \[Alpha].\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 5: Cerchiamo \[Alpha].", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        "\"\[Alpha] = \\!\\(\\*SuperscriptBox[\\(sen\\), \\(-1\\)]\\)(\"",
         FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum3, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen3, "117"], 
              StandardForm]]}, "RowDefault"]],"\")\""},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.704182898443487*^9, 3.7041904200702257`*^9, 3.7041905282053623`*^9, {
   3.704196262863328*^9, 3.7041962736961346`*^9}, {3.7041964673013153`*^9, 
   3.7041964769436436`*^9}, {3.7041966915747137`*^9, 
   3.7041966973840475`*^9}, {3.704196757899017*^9, 3.704196760838422*^9}},
 ExpressionUUID -> "6e70c683-20ed-4755-a886-ee8f603e93f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "97f35bd5-8e5b-47c6-b08c-2c23589bf25f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio2", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942141975054*^9, 3.7039421471372027`*^9}, 
   3.703948260963499*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "eaa3ea4a-3bcd-4de4-bc0c-7b345c1db612"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 2:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 2:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0.7, 0}, 0.2, {3.141592653589793, 2.0647376957144776`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0.7, 0}, 0.2, {3.141592653589793, 
          2.0647376957144776`}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1.3}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {0.5, 0.6}, ImageScaled[{0, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 1.}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.6, 0.08}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.15, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"B = 30 \\\\\\\\ntan(\[Beta]) \
= \\\\\\\\!\\\\\\\\(\\\\\\\\*FractionBox[\\\\\\\\(3\\\\\\\\), \
\\\\\\\\(5\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare A\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! tan\[Beta] =\\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(cateto\\\\ opposto\\)\\), \\(cateto\\\\ adiacente\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! tan\[Beta] =\!\(\*FractionBox[\(\(\\ \)\(cateto\\ \
opposto\)\), \(cateto\\ adiacente\)]\)", Bold, 20]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto adiacente?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto adiacente?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$9768], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$9768], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$9768], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catAd$9768], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catAd$9768, "A"], 
        StandardForm],
       ImageSizeCache->{0., {9., 38.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto opposto?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto opposto?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$9768], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$9768], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$9768], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catOp$9768], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catOp$9768, "B"], 
        StandardForm],
       ImageSizeCache->{0., {9., 38.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"tan\[Beta] = \"", StripOnInput -> False], TextForm]], 
          "InlineText"], 
         Text[
          Style["tan\[Beta] = "]]],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catOp2$9768], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catOp2$9768, "B"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catAd2], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catAd2, "A"], 
             StandardForm]]}, "RowDefault"]],InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[LongRightArrow] A tan(\[Beta]) = B \[LongRightArrow] A = \\!\
\\(\\*FractionBox[\\(\\(\\\\ \\)\\(B\\)\\), \\(tan \\((\[Beta])\\)\\)]\\)\"", 
             StripOnInput -> False], TextForm]], "InlineText"], 
         Text[
          Style[
          "\[LongRightArrow] A tan(\[Beta]) = B \[LongRightArrow] A = \
\!\(\*FractionBox[\(\(\\ \)\(B\)\), \(tan \((\[Beta])\)\)]\)"]]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quanto vale A?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quanto vale A?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$9768], {"50"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"50\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$9768], {"18"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"18\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$9768], {"2"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"2\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`A$9768], {"50", "18", "2"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`A$9768, "50"], StandardForm],
       ImageSizeCache->{0., {9., 38.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7039428724679375`*^9, 3.703946796565926*^9, 3.703948261791901*^9, 
   3.70400307597867*^9, 3.704168334504569*^9, 3.704182871926577*^9, 
   3.7041904201597843`*^9, 3.704190528305566*^9, {3.70419626318157*^9, 
   3.704196273820485*^9}, {3.7041964677505045`*^9, 3.7041964770914783`*^9}, {
   3.7041966918624706`*^9, 3.704196697539951*^9}, {3.7041967580112047`*^9, 
   3.70419676095725*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "7e190e9f-609c-4086-bac3-69403776443a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c44748c8-a41f-40d2-bf07-d3ea0c0187a5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DELLA CORDA",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035739489576197`*^9, 3.703573973609384*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"a33b1612-b74e-48f9-9c46-ec96819a1e28"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   OverscriptBox["AB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "f4dc1443-27f4-4ff8-838e-ffce7caf47da"],
 StyleBox[" = 2r\[CenterDot]sen(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Subsection",
 CellChangeTimes->{{3.703574010488777*^9, 3.703574028471489*^9}, {
  3.704176754391079*^9, 3.7041767543958273`*^9}, {3.7041768182505627`*^9, 
  3.704176823853882*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"948e0298-4cf3-4236-a7c8-678768c04e0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863021932871*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "869e5c9f-96e6-4903-8c35-700a9f6ba94c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-1.0275825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     TemplateBox[{"\"\[Theta]\"","\"Corda\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
        FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.4666666666666667, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0., 0.7, 0.]"], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0.7, 0.], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "40"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863026297469*^9, 3.7039408971415963`*^9, 3.703941772194463*^9, {
   3.7039467968618593`*^9, 3.703946798466337*^9}, 3.7040030762824917`*^9, 
   3.704003265236156*^9, 3.704168338260044*^9, 3.7041828720343933`*^9, 
   3.704190420305722*^9, 3.704190528376338*^9, {3.704196263755334*^9, 
   3.704196273918707*^9}, {3.7041964686084185`*^9, 3.7041964772311563`*^9}, {
   3.704196692039379*^9, 3.7041966976277094`*^9}, {3.704196758096407*^9, 
   3.70419676105485*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "d014e3c4-f426-4904-8ed2-c297e582aa88"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.704003267432983*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "aa506e30-f01b-4780-af5b-7f929886411b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "b98afe31-6ef7-4b77-a0fb-93070ade76b3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsubsection",
 CellChangeTimes->{{3.703574115201405*^9, 3.703574126467238*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"6c5cc4b5-938b-4641-9638-b1ccbef0334c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda2", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.7038630957334414`*^9, {3.7038670598514757`*^9, 3.7038670713926587`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "b16aeae3-4dc1-42e5-b134-d1de75b55fd5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 3.641592653589793, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 3.641592653589793, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {504., {198.5, 207.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9814$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = 3.641592653589793}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9814$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[{
                  Cos[0 - 0.2], 
                  Sin[0 - 0.2]}, 0.02]}, {Black, 
                Disk[{
                  Cos[Trigonometria`th], 
                  Sin[Trigonometria`th]}, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {
                 Cos[0], 
                 Sin[-0.3]}], 
               Text["   C", {Cos[Trigonometria`th] - 0.15, 
                 Sin[Trigonometria`th]}], 
               Text["r", {0.4, -0.15}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}]}], 
             PlotRange -> 1, ImageSize -> 400, BaseStyle -> {15}, Axes -> 
             False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[Trigonometria`pa, Trigonometria`pb, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red, Null}, {"\[Theta]", "Corda"}, 
               LegendMarkerSize -> 40, LabelStyle -> 15]}}, Spacings -> 0]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, 3.641592653589793, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{555., {251., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.704168342340809*^9, 3.704182872096211*^9, 3.704190420371641*^9, 
   3.704190528424411*^9, {3.7041962638721437`*^9, 3.7041962739643173`*^9}, {
   3.7041964686575475`*^9, 3.7041964772893395`*^9}, {3.704196692119578*^9, 
   3.7041966976767445`*^9}, {3.704196758130999*^9, 3.704196761098794*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "23e5931c-ba72-4062-b065-c7969950b55b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704004674507036*^9, 3.704004674523614*^9}, {
  3.70400475101376*^9, 3.7040049191839933`*^9}, {3.7040049632508287`*^9, 
  3.704004986859641*^9}, {3.704168367163673*^9, 3.70416837192686*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "6b21ac7e-1579-441b-bd6b-3e374443d6b9"],

Cell[TextData[{
 StyleBox["\n\nMuovi C lungo l\[CloseCurlyQuote]arco viola!\n\nCosa puoi \
notare? L\[CloseCurlyQuote]angolo \[Theta] ha sempre la stessa ampiezza!\n\n\
Perch\[EGrave]? Perch\[EGrave] \[EGrave] un angolo alla circonferenza che \
insiste sulla corda ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox["AB", "_"],
    FontSize->18], TraditionalForm]],
  FontSize->16,ExpressionUUID->"13ffa2e7-ccfe-47b1-81d1-54395798dd6a"],
 " (ricorda che tutti gli angoli che insistono sulla stessa corda sono \
uguali)",
 StyleBox[".\n\n Quindi possiamo posizionare il punto C in modo tale che il \
triangolo sia rettangolo ed applicare le formule che abbiamo visto prima! \n \
\n 2r \[EGrave] l\[CloseCurlyQuote]ipotenusa e AB \[EGrave] il cateto opposto \
a \[Theta], quindi, considerando che ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sen", "(", "\[Theta]", ")"}], "=", 
    StyleBox[
     FractionBox[
      OverscriptBox["AB", "_"], 
      OverscriptBox["AC", "_"]],
     FontSize->16]}], TraditionalForm]],ExpressionUUID->
  "6356828a-b343-4997-9234-a536e8eaf89e"],
 " si ha:",
 StyleBox["\n ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["AB",
     FontSize->16], "_"], TraditionalForm]],ExpressionUUID->
  "172114e7-17d4-42cb-90e2-06b84f87c139"],
 StyleBox[" = ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["AC",
     FontSize->16], "_"], TraditionalForm]],ExpressionUUID->
  "854615ba-7df2-4780-b2c9-ce1243bad62f"],
 StyleBox[" \[CenterDot]sen(\[Theta]) = 2r\[CenterDot]sen(\[Theta])\n\nQuindi \
",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AB", "_"], TraditionalForm]],
  FontSize->16,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "20e663d5-84e4-4cfe-905a-4b8b6a3d5111"],
 StyleBox[" = 2r\[CenterDot]sen(\[Theta])",
  FontSize->16,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[".\n\nQuesta formula vale sempre perch\[EAcute] \[Theta] \[EGrave] \
sempre lo stesso! \n\nQuando l\[CloseCurlyQuote]angolo \[EGrave] nell\
\[CloseCurlyQuote]arco rosa cosa succede?\nProva a muovere D lungo l\
\[CloseCurlyQuote]arco rosa!",
  FontSize->16],
 "\n"
}], "Text",
 CellChangeTimes->{{3.703574313395405*^9, 3.703574337691551*^9}, {
  3.70357437300624*^9, 3.703574505325901*^9}, {3.7038672782667184`*^9, 
  3.703867293700658*^9}, {3.704003393257348*^9, 3.704003400707918*^9}, {
  3.704003477407679*^9, 3.704003480868709*^9}, {3.704172459277309*^9, 
  3.704172504369363*^9}, {3.704172579034595*^9, 3.704172585092595*^9}, {
  3.704177156090205*^9, 3.7041772903543463`*^9}, {3.7041773356752863`*^9, 
  3.704177519099537*^9}, {3.704190714804245*^9, 3.7041907157962723`*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"89c0288f-674d-490d-b69b-1ff57ab443c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda3", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867148332883*^9, 3.7038671863854427`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "fd50934b-7a52-4480-8d01-fe61c0223ebf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 0.4, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {507., {198.5, 207.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$9858$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {Trigonometria`ptctrl$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$9858$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`c, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Disk[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Darker[Green, 0.2], Thick, 
                Circle[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                
                Triangle[{
                 Trigonometria`a, Trigonometria`b, Trigonometria`c}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {
                Rotate[{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  Polygon[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 0.1},
                     Trigonometria`b}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {
                Rotate[{
                  Darker[Green, 0.3], 
                  Line[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 
                    0.1}}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[Trigonometria`b, 0.02]}, {Black, 
                Disk[Trigonometria`c, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {Part[Trigonometria`b, 1] + 0.1, 
                 Part[Trigonometria`b, 2]}], 
               Text["   C", {
                 Part[Trigonometria`c, 1], Part[Trigonometria`c, 2] - 0.1}], 
               Text["   D", {Cos[Trigonometria`th] + 0.1, 
                 Sin[Trigonometria`th]}], 
               Text[
                Style["\[Delta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] - 0.1, Sin[Trigonometria`th] - 0.1}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], Trigonometria`c + 0.1], 
               Text["r", {0.4, -0.15}]}], PlotRange -> 1, ImageSize -> 400, 
             BaseStyle -> {15}, Axes -> False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
               Trigonometria`pa2, Trigonometria`pb2, Trigonometria`pc2, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red}, {
                Row[{"\[Delta]"}], "Coda"}, LegendMarkerSize -> 40]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{Trigonometria`ptctrl$$, 0.4, "angle"}, 0, 2 Pi}},
       "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{558., {251., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7038671880872765`*^9, 3.70394089721062*^9, 3.703941772310358*^9, 
   3.703942323558496*^9, 3.703946797031694*^9, 3.704003076477169*^9, 
   3.70416837617039*^9, 3.704182872309442*^9, 3.704190420438116*^9, 
   3.704190528543461*^9, {3.7041962644473095`*^9, 3.7041962741277523`*^9}, {
   3.704196469075204*^9, 3.7041964775615854`*^9}, {3.7041966925710015`*^9, 
   3.704196697990594*^9}, {3.7041967583639603`*^9, 3.7041967612705746`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "6fa060e3-b93d-4dd8-abab-4e4d51700b82"]
}, Open  ]],

Cell[TextData[StyleBox["ADBC \[EGrave] un poligono inscritto nella \
circonferenza quindi gli angoli opposti sono supplementari, cio\[EGrave]: \
\[Delta]=\[Pi]-\[Theta]\nPer questo motivo i seni sono gli stessi infatti \
sen(\[Alpha])=sen(\[Pi]-\[Alpha]) (Ricorda che lo abbiamo visto nella slide \
9). \nQuindi anche considerando l\[CloseCurlyQuote]arco rosa la formula resta \
la stessa!!!",
 FontSize->16]], "Text",
 CellChangeTimes->{
  3.703867310209563*^9, {3.703946844322687*^9, 3.703946849334548*^9}, {
   3.7041775477583714`*^9, 3.704177607728545*^9}, {3.7041776695486183`*^9, 
   3.704177684086732*^9}, {3.704177715993634*^9, 3.704177790257174*^9}, {
   3.704178041105434*^9, 3.70417806302042*^9}, {3.704180630509338*^9, 
   3.7041806309678087`*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"0a8d95fe-8362-4a7a-a06b-68d0bbae9100"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "8198f957-0f2c-442d-bc21-b3ff3c00aa7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio3", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423340109363`*^9, 3.7039423376875615`*^9}, 
   3.703948279815196*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "003c7e99-2f7d-4eee-b667-e219ae97d5dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 3:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 3:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.8, 0.],
         FrontFaceColor->RGBColor[0., 0.8, 0.],
         BackFaceColor->RGBColor[0., 0.8, 0.],
         GraphicsColor->RGBColor[0., 0.8, 0.],
         FontColor->RGBColor[
          0., 0.8, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"2\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      TemplateBox[{
       "\"r = 2\\n\[Theta] = \\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\\n\
\"",StyleBox[
        "\"Trovare \\!\\(\\*OverscriptBox[\\(AB\\), \\(_\\)]\\)\"", FontColor -> 
         RGBColor[1, 0, 0], FontFamily -> "sans sarif", Bold, StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"\\!\\(\\*OverscriptBox[\\(AB\\), \\(_\\)]\\) = 2\[CenterDot] \
\"", StripOnInput -> False], TextForm]], "InlineText"], 
         Text[
          Style["\!\(\*OverscriptBox[\(AB\), \(_\)]\) = 2\[CenterDot] "]]],
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`raggio], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`raggio, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] sen(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`angolo], String, FieldSize -> 1], 
          "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`angolo, "60"], 
            StandardForm]]}, "RowDefault"],"\") = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`AB], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`AB, "4"], StandardForm]]},
          "RowDefault"],"\"\[CenterDot]\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`coef], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot]\"",TemplateBox[{
          TagBox[
           SqrtBox[
            InputFieldBox[
             Dynamic[Trigonometria`coef2], String, FieldSize -> 1]], 
           DisplayForm], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef2, "3"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703948479686776*^9, 3.704003076670199*^9, 3.704168379970766*^9, 
   3.704182872497851*^9, 3.704190420533996*^9, 3.704190528674733*^9, {
   3.704196264875696*^9, 3.7041962742906857`*^9}, {3.7041964694777336`*^9, 
   3.704196477725387*^9}, {3.7041966930356264`*^9, 3.704196698156947*^9}, {
   3.704196758610083*^9, 3.7041967614465427`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "265c07fe-5bc0-4103-bb7a-b62f8dad8ef5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.8775825618903728`"}], " ", "}"}]], "Input",
 CellChangeTimes->{{3.703948466611709*^9, 3.7039484751513357`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "8827ca64-945d-4275-8c6b-ced38b47898b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.8775825618903728`"}], "}"}]], "Output",
 CellChangeTimes->{3.704196274358899*^9, 3.704196477769472*^9, 
  3.7041966981995163`*^9, 3.704196761491661*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "79411d95-75b5-41f9-913f-49a0af07715d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio4", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423479597387`*^9, 3.7039423521548414`*^9}, 
   3.7039483319061213`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "bb8e7eba-a2ea-45da-92b6-976392ca2708"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 4:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 4:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"5\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      TemplateBox[{
       "\"r = 5\\n\[Theta] = \\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\\n\
\"",StyleBox[
        "\"Trovare \\!\\(\\*OverscriptBox[\\(AB\\), \\(_\\)]\\)\"", FontColor -> 
         RGBColor[1, 0, 0], FontFamily -> "sans sarif", Bold, StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quindi il lato \\!\\(\\*OverscriptBox[\\(AB\\), \
\\(_\\)]\\) misura:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style[
       "Quindi il lato \!\(\*OverscriptBox[\(AB\), \(_\)]\) misura:", 17, 
        FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2$9945], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2$9945], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2$9945], {"5"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"5\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2$9945], {"30"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"30\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`AB2$9945], {
        "\!\(\*FractionBox[\(5\), \(2\)]\)", 
         "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)", "5", 
         "30"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`AB2$9945, "5"], StandardForm],
       
       ImageSizeCache->{0., {9., 38.}}],
      StripOnInput->False,
      Magnification->3 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703942353134987*^9, 3.703946797347062*^9, 3.70394833284067*^9, 
   3.704003076760845*^9, 3.704168382792261*^9, 3.704182872578257*^9, 
   3.704190420586835*^9, 3.704190528757172*^9, {3.7041962653178606`*^9, 
   3.704196274403404*^9}, {3.7041964699098053`*^9, 3.7041964777960505`*^9}, {
   3.704196693193554*^9, 3.7041966982160916`*^9}, {3.7041967586727495`*^9, 
   3.7041967615171523`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "bd173207-b0d1-4a89-b713-844688eb7748"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e5ff2ab5-1c1b-45c2-87ef-ae5888966edf"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEI SENI",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7037525095800962`*^9, 3.703752516021167*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"27ab370e-739a-45e8-9525-f17fa8be66d2"],

Cell[TextData[StyleBox["Dato un triangolo ABC qualsiasi:",
 FontFamily->"OpenDyslexic",
 FontSize->16,
 FontWeight->"Regular"]], "Text",
 CellChangeTimes->{{3.704173149065812*^9, 3.704173173162977*^9}, 
   3.7041907338720284`*^9},ExpressionUUID->"46ad9e4a-aba3-4fdb-8c94-\
d9d3f4d56e75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     OverscriptBox["BC", "_"], 
     RowBox[{"sen", "(", "\[Alpha]", ")"}]],
    FontSize->24,
    FontColor->RGBColor[1., 0., 0.5019607843137255]], TraditionalForm]],
  FontSize->24,ExpressionUUID->"840642b1-e55e-41e4-aaf3-be0215515229"],
 StyleBox[" = ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     OverscriptBox["AC", "_"], " "}], 
    RowBox[{
     RowBox[{"sen", "(", "\[Beta]", ")"}], " "}]], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "e29c08e0-ab0b-41bf-a8bc-bc608a3115cd"],
 StyleBox["= ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["AB", "_"], 
    RowBox[{"sen", "(", "\[Theta]", ")"}]], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "c6d9871e-d618-421a-9238-1c015dcd0530"]
}], "Section",
 CellChangeTimes->{
  3.7037529150196342`*^9, {3.7041780973977327`*^9, 3.704178186973826*^9}, {
   3.70417825933104*^9, 3.70417828261061*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"16f3095b-68ec-4752-9f11-56c8106feb7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863173930427*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "c8db4ac1-8e83-47f7-9518-6293f0117750"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863174920074*^9, 3.7039408972796335`*^9, 3.703941772360749*^9, 
   3.7039423605461826`*^9, 3.7039467974020567`*^9, 3.704003076824266*^9, 
   3.70400351514786*^9, 3.7041683871005383`*^9, 3.7041828726425457`*^9, 
   3.704190420654331*^9, 3.704190528806189*^9, {3.7041962655988293`*^9, 
   3.7041962744485235`*^9}, {3.7041964700647306`*^9, 
   3.7041964778276343`*^9}, {3.704196693325386*^9, 3.7041966982468967`*^9}, {
   3.7041967587163677`*^9, 3.7041967615597887`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "539e942b-444c-4efd-afe6-5644474f82c9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d900f154-99e5-4186-9c3f-acf46c69304a"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["DIMOSTRAZIONE",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]],
 StyleBox["\n",
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]]
}], "Subsection",
 CellChangeTimes->{{3.703752766267577*^9, 3.703752805006543*^9}, 
   3.7038673536104937`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"f6dd1530-c906-48ab-8df0-dac3cf9e9a8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867359916173*^9, 3.7038673665860524`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "c69a4915-9ce9-44d5-952a-7032f81beb0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7038673711823397`*^9, 3.703940897310891*^9, 3.703941772394822*^9, 
   3.7039423631528177`*^9, 3.703946797453463*^9, 3.704003076892997*^9, 
   3.704168389454422*^9, 3.7041828727114058`*^9, 3.704190420722754*^9, 
   3.704190528857915*^9, {3.7041962657351685`*^9, 3.7041962744816146`*^9}, {
   3.7041964701303697`*^9, 3.7041964778492208`*^9}, {3.704196693378026*^9, 
   3.7041966982664204`*^9}, {3.7041967587494817`*^9, 3.704196761589372*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "d3787db0-e815-4dbf-afbb-ebbfe0ca7a72"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Direttamente dal teorema della corda:\n",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["BC", "_"], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "e40c18f6-a1f6-4179-ae99-59c2791d9216"],
 StyleBox[" = 2r\[CenterDot]sen(\[Alpha]) \[LongRightArrow] ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"\n", 
      OverscriptBox["BC", "_"]}], 
     RowBox[{"sen", "(", "\[Alpha]", ")"}]],
    FontSize->18], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "bf07dac5-f192-4fa6-be01-524c4938bf7c"],
 StyleBox[" = 2r\n",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AC", "_"], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "d6a8fca8-9e16-456c-bd3a-d1407da9ede6"],
 StyleBox[" = 2r\[CenterDot]sen(\[Beta]) \[LongRightArrow]",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{" ", "\n", 
      OverscriptBox["AC", "_"], " "}], 
     RowBox[{"sen", "(", "\[Beta]", ")"}]],
    FontSize->18], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "9877b6bf-a3ac-4074-afc4-c19522e423ac"],
 StyleBox["= 2r\n",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AB", "_"], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "2df575bf-1bab-47c8-b54e-9b0647238e7b"],
 StyleBox[" = 2r\[CenterDot]sen(\[Theta])\[LongRightArrow] ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     RowBox[{"\n", 
      OverscriptBox["AB", "_"]}], 
     RowBox[{"sen", "(", "\[Theta]", ")"}]],
    FontSize->18], TraditionalForm]],
  FontSize->16,
  ExpressionUUID -> "ccf319e4-80a9-44a0-9c51-67a6a06861a3"],
 StyleBox[" = 2r\n\nQuindi:",
  FontSize->16,
  FontColor->GrayLevel[0]],
 StyleBox["\n\n",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     OverscriptBox["BC", "_"], 
     RowBox[{"sen", "(", "\[Alpha]", ")"}]],
    FontSize->24,
    FontColor->RGBColor[1., 0., 0.5019607843137255]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "bf3012f2-c352-4a43-8636-6110066050ff"],
 StyleBox[" = ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     OverscriptBox["AC", "_"], " "}], 
    RowBox[{
     RowBox[{"sen", "(", "\[Beta]", ")"}], " "}]], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "3c819b6b-a139-45fc-afb6-cda85905fec8"],
 StyleBox["= ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    OverscriptBox["AB", "_"], 
    RowBox[{"sen", "(", "\[Theta]", ")"}]], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "08547cb0-b5d5-4725-a091-53998d8e7fb9"]
}], "Text",
 CellChangeTimes->{
  3.703752814660338*^9, {3.704178303221066*^9, 3.704178458781307*^9}, {
   3.704180683436183*^9, 3.704180687437531*^9}, {3.70419081646301*^9, 
   3.704190819376313*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",
 ExpressionUUID -> "ac658347-7d30-4ff0-99e3-98593d227af8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "a6df3a26-7079-41ed-8c66-4b9dc53eec51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio5", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423655741987`*^9, 3.7039423787640705`*^9}, 
   3.70394834205114*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "d7e410e7-863b-4609-a910-75d6ec17b29d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 5:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 5:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {-1, 1}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.6, 0.4}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.1, 0.6}, ImageScaled[{0.25, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {-0.8, 1.}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {0.1, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 6 \\\\\\\\n\[Alpha] = \\\
\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\\n\[Beta] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(105\\\\\\\\), \\\\\\\\(o\\\
\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare C\
\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"Calcolare l'ampiezza dell'angolo \
\[Gamma]:\\!\\(\\*SuperscriptBox[\\(180\\), \\(o\\)]\\)-(\"", StripOnInput -> 
             False], TextForm]], "InlineText"], 
         Text[
          Style[
          "Calcolare l'ampiezza dell'angolo \
\[Gamma]:\!\(\*SuperscriptBox[\(180\), \(o\)]\)-("]]],InputFieldBox[
         Dynamic[Trigonometria`ott], String, FieldSize -> 3],StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`ott, "105"], StandardForm]],
        StyleBox["\"+\"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`al], String, FieldSize -> 2],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`al, "30"], StandardForm]],
        StyleBox["\") = \"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`res2], String, FieldSize -> 2],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res2, "45"], StandardForm]],
        StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->1.5 Inherited], "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Utilizzare la relazione \
\\!\\(\\*FractionBox[\\(\\(A\\)\\(\\\\ \\)\\), \\(sen \\((\[Alpha])\\)\\)]\\) \
=\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(C\\)\\), \\(sen \
\\((\[Gamma])\\)\\)]\\)\"\>", TextForm]], "InlineText"],
       Text[
        Style[
        "Utilizzare la relazione \!\(\*FractionBox[\(\(A\)\(\\ \)\), \(sen \
\((\[Alpha])\)\)]\) =\!\(\*FractionBox[\(\(\\ \)\(C\)\), \(sen \((\[Gamma])\)\
\)]\)"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{FractionBox["\"6\"", 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`al2], String, FieldSize -> 2], 
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\))\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`al2, "30"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`c], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`c, "C"], StandardForm]]},
           "RowDefault"], 
         "\"sen(\\!\\(\\*SuperscriptBox[\\(45\\), \\(o\\)]\\))\""],
        "\" \[LongRightArrow] \"","\" 6 / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num3, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den3, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`num4], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`num4, "C"], 
            StandardForm]]}, "RowDefault"],
        "\" /\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\*SqrtBox[\\(2\\)]\\), \
\\(2\\)]\\)\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Ricavare:\"\>", TextForm]], "InlineText"],
       Text[
        Style["Ricavare:"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{"\"C = 6\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num5], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num5, "2"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den5], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den5, "2"], 
             StandardForm]]}, "RowDefault"]],"\" / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num6, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den6, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`res3], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res3, "6"], StandardForm]],
        TagBox[
         SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`res41], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`res41, "2"], 
              StandardForm]]}, "RowDefault"]], DisplayForm]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7039423804651833`*^9, 3.703946797547654*^9, 3.7039483425793743`*^9, 
   3.704003076958263*^9, 3.7041683918843822`*^9, 3.704182872777069*^9, 
   3.704190420787685*^9, 3.7041905289420757`*^9, {3.7041962659320507`*^9, 
   3.7041962745206985`*^9}, {3.7041964701860447`*^9, 
   3.7041964778772974`*^9}, {3.7041966940953007`*^9, 
   3.7041966982914877`*^9}, {3.704196758784046*^9, 3.7041967616474175`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "429165e2-cf33-4b25-96fb-2c36b609ac11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "74e0ba1b-538d-45b1-8a09-0f50e5f2eb50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio6", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424332140646`*^9, 3.7039424400257196`*^9}, 
   3.703948350866846*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "9bc6c068-7a23-4af2-ad10-50a1af786ef2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 6:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 6:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.6, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 12 \\\\\\\\nB = \
9\\\\\\\\n\[Alpha] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare sen(\[Alpha])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, \
0]], Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! \\!\\(\\*FractionBox[\\(A\\), \\(sen \\((\
\[Alpha])\\)\\)]\\) =\\!\\(\\*FractionBox[\\(\\(B\\)\\(\\\\ \\)\\), \\(sen \
\\((\[Beta])\\)\\)]\\) =\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(C\\)\\), \\(sen \
\\((\[Gamma])\\)\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->17,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! \!\(\*FractionBox[\(A\), \(sen \((\[Alpha])\)\)]\) \
=\!\(\*FractionBox[\(\(B\)\(\\ \)\), \(sen \((\[Beta])\)\)]\) \
=\!\(\*FractionBox[\(\(\\ \)\(C\)\), \(sen \((\[Gamma])\)\)]\)", FontSize -> 
        17, Bold]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quanto misura sen(\[Alpha])?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quanto misura sen(\[Alpha])?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$10055], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$10055], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \\(3\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$10055], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \
\\(3\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$10055], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`res4$10055], {
        "\!\(\*FractionBox[\(3\), \(2\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)", 
         "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[
        Trigonometria`res4$10055, "\!\(\*FractionBox[\(2\), \(3\)]\)"], 
        StandardForm],
       ImageSizeCache->{0., {9., 38.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7039424412624683`*^9, 3.7039467976983147`*^9, 3.7039483527227783`*^9, 
   3.704003077060176*^9, 3.704168396084214*^9, 3.704169544979862*^9, 
   3.704182872908856*^9, 3.704190420858584*^9, 3.7041905290461082`*^9, {
   3.7041962672079687`*^9, 3.704196274622457*^9}, {3.7041964709940605`*^9, 
   3.7041964779850936`*^9}, {3.704196694301838*^9, 3.704196698406296*^9}, {
   3.704196758926408*^9, 3.70419676174584*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "24115d58-74a1-46ce-81c0-0533f0658305"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "41b2bb30-5cfd-49e3-962d-49993bc646a3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEL COSENO (o di CARNOT)",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{
  3.703753102306326*^9, {3.703753757882468*^9, 3.703753769382806*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"878e6daa-fd72-45fd-8bb5-2fe5df3102dc"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AB", "_"], "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "42b69aee-2e2e-47aa-8977-4e2c41d37850"],
 StyleBox[" = ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "47d5c5ac-0fa1-4c2a-9d62-9a816bef7de4"],
 StyleBox["+",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["BC", "_"], "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "6c92a1db-9f90-49b1-94dc-d5505927f6d8"],
 StyleBox["-2\[CenterDot]",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AC", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "b8e8f05f-1134-4d0d-9c7d-45644d7cb184"],
 StyleBox["\[CenterDot]",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["BC", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],ExpressionUUID->
  "dca5142e-017a-4799-a090-91821f4ddb71"],
 StyleBox["\[CenterDot]cos(\[Gamma])",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Subsection",
 CellChangeTimes->{{3.703753125728129*^9, 3.703753180277624*^9}, {
  3.703947162107607*^9, 3.7039471963935423`*^9}, {3.704178507155758*^9, 
  3.7041785674708557`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6d6b9555-e62c-4ed6-9dc3-4b7744ce43b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863204159693*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "ba1b0424-5eb7-49f3-83ec-04763b5b49b0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863205287299*^9, 3.703940897342144*^9, 3.703941772441698*^9, 
   3.7039424523239822`*^9, 3.703946797752244*^9, 3.704003077133994*^9, 
   3.7041683993122663`*^9, 3.7041828731702538`*^9, 3.704190421058077*^9, 
   3.704190529112401*^9, {3.704196267397969*^9, 3.704196274680109*^9}, {
   3.7041964713070602`*^9, 3.704196478071288*^9}, {3.7041966944711275`*^9, 
   3.704196698497037*^9}, {3.7041967589992833`*^9, 3.704196761797991*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "baf4c583-c9c9-4e57-a785-ce28215c2f0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["bottonepitagora",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["[",
    FontColor->GrayLevel[0]], 
   StyleBox["]",
    FontColor->GrayLevel[0]]}],
  FontFamily->"OpenDyslexic",
  FontWeight->"Regular"]], "Code",
 CellOpen->False,
 CellChangeTimes->{{3.704181006929517*^9, 3.704181017225535*^9}},
 ExpressionUUID -> "190c9301-1e24-4f63-bffd-3810ef14cb36"],

Cell[BoxData[
 ButtonBox["\<\"Teorema di Pitagora\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`pitagora[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.704181018364779*^9, 3.704182873226617*^9, 3.704190421159474*^9, 
   3.7041905291742573`*^9, {3.704196267431055*^9, 3.70419627469167*^9}, {
   3.7041964713832164`*^9, 3.704196478089338*^9}, {3.7041966945152445`*^9, 
   3.7041966985672207`*^9}, {3.7041967590173025`*^9, 3.7041967618130045`*^9}},
 
 TextAlignment->Center,
 Background->RGBColor[1, 0.85, 0.85],
 ExpressionUUID -> "e471af90-6081-46eb-b971-95cdf016fd71"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "bd142521-b6a4-4440-8eb7-a4085abbf0ed"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontSize->24,
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsection",
 CellChangeTimes->{{3.703753200599216*^9, 3.70375320242968*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",ExpressionUUID->"5fb87b21-48b6-4a1f-87af-a39e4d8ccfe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno2", "[", "]"}]], "Code",
 CellChangeTimes->{3.7038632420367403`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "9ef48162-8491-4ae1-b73f-4cd34e9e1e64"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[NCache[{{2^Rational[-1, 2], 0}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0.7071067811865475, 0}, {
           0.7071067811865475, 0.7071067811865475}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"D\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox["\<\"h\"\>", 
        NCache[{0.6571067811865474, Rational[1, 2] 2^Rational[-1, 2]}, {
         0.6571067811865474, 0.35355339059327373`}]], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863328195582*^9, 3.703940897379905*^9, 3.703941772510723*^9, 
   3.703942455040086*^9, 3.703946797803369*^9, 3.704003077193606*^9, 
   3.7041684022974653`*^9, 3.704182873292973*^9, 3.704190421508431*^9, 
   3.704190529246681*^9, {3.704196267495758*^9, 3.704196274727234*^9}, {
   3.7041964714935093`*^9, 3.7041964781164083`*^9}, {3.704196694625521*^9, 
   3.704196698606327*^9}, {3.7041967590493183`*^9, 3.7041967618400764`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "5da734e7-bafc-4a13-83d0-c5f0cce5955f"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["Guardando il triangolo ADC: \ndalle formule ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"cos", "(", "\[Gamma]", ")"}], "=", 
    StyleBox[
     FractionBox[
      OverscriptBox["CD", "_"], 
      OverscriptBox["AC", "_"]],
     FontSize->16]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"f37cbcff-8ad3-4335-a1bc-92773e26182c"],
 StyleBox[" e ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sen", "(", "\[Gamma]", ")"}], "=", 
    StyleBox[
     FractionBox[
      OverscriptBox["AD", "_"], 
      OverscriptBox["AC", "_"]],
     FontSize->16]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"4c9f1596-9aac-4c74-857e-199e03b1f0ff"],
 StyleBox[" si ottiene\n\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CD", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"667ec5ce-a2d8-46af-afbb-0d7e73d95cc8"],
 StyleBox[" = ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AC", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"ae5b5a9c-dba5-467e-848b-802fbcdd5886"],
 StyleBox["\[CenterDot]cos(\[Gamma])\n",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AD", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"4ba311b2-05bb-4de2-bb3c-662b4d93fec1"],
 StyleBox[" = ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AC", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"0b91138d-29c4-4e2d-a341-10a7516f8fa7"],
 StyleBox["\[CenterDot]sen(\[Gamma])\n\nPer costruzione: ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["DB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"60b68964-2604-487b-8b79-33d964013d40"],
 StyleBox[" = ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"174539db-08e5-487b-b4d1-cdb6a2cbc1c4"],
 StyleBox["-",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CD", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"e58ff968-1735-490c-bc16-2a2e8496b412"],
 StyleBox[" = ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"a4a4ee30-f7c0-49e6-b77e-f1b723cfc708"],
 StyleBox["-",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["AC", "_"], "\[CenterDot]"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"e944a2b4-eb20-4383-8d2f-7c97bb4ac529"],
 StyleBox["cos(\[Gamma])\nApplichiamo il teorema di Pitagora al triangolo \
ADB:\n\n",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AB", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "5b7a26d0-a678-404d-ad9f-92d320aa797b"],
 StyleBox[" = ",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["DB", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "193aa7f4-7e7f-45d8-9159-38de980f5796"],
 StyleBox["+",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AD", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "f151b7ac-f0d6-4606-bc4d-38fd3548d914"],
 StyleBox[" = ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       OverscriptBox["CB", "_"], "-", 
       RowBox[{
        OverscriptBox["AC", "_"], "\[CenterDot]", 
        RowBox[{"cos", "(", "\[Gamma]", ")"}]}]}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  FontSize->16,ExpressionUUID->"0d3ba991-73fb-4172-8a85-ff170df71889"],
 StyleBox["+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       OverscriptBox["AC", "_"], "\[CenterDot]", 
       RowBox[{"sen", "(", "\[Gamma]", ")"}]}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  FontSize->16,ExpressionUUID->"8d922b08-7e9b-4cba-98b5-3841a22356aa"],
 StyleBox["\n\nSviluppiamo il quadrato del binomio: ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["CB", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "60d9c707-663c-4198-a510-a51c77f4894b"],
 StyleBox["+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "1412b40d-f144-4807-82a1-964d8f68f721"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CenterDot]", 
    RowBox[{
     SuperscriptBox["cos", "2"], "("}]}], TraditionalForm]],
  FontSize->16,ExpressionUUID->"64e63d01-5f2a-4afd-b7f9-f8079ff76e6b"],
 StyleBox["\[Gamma])-2",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"16810b81-7f09-4380-932a-c869e8b4be71"],
 StyleBox["\[CenterDot]",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox["AC", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"50af9034-b777-463b-8d94-c12093b428a3"],
 StyleBox["\[CenterDot]cos(\[Gamma])+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "0f281d91-0d06-4751-95ca-ffd04268073b"],
 StyleBox["\[CenterDot]",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", "2"], TraditionalForm]],
  FontSize->16,ExpressionUUID->"d9b148d4-805a-406b-b5a8-1d84d75d180f"],
 StyleBox["(\[Gamma]) \n \ne raccogliamo a fattor comune il termine ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "07d28dd1-f62c-4c73-a553-aaccd302806a"],
 StyleBox[":     \n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     OverscriptBox["AC", "_"], "2"], "\[CenterDot]"}], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "ee3cb177-1cf6-4451-8189-3cfd16ce8ee4"],
 StyleBox["(",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]],
  FontSize->16,ExpressionUUID->"8b688b73-dcdf-4fd1-bb62-e3ac88610fcd"],
 StyleBox["(\[Gamma])+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["sen", "2"], "("}], TraditionalForm]],
  FontSize->16,ExpressionUUID->"e0c6acb1-ccae-4b0a-8982-5fb8afe8469b"],
 StyleBox["\[Gamma]))+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["CB", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "acacf589-6223-4f8a-b4e2-234620b6092d"],
 StyleBox["-2",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"abd71563-2df5-4f07-8305-196aeb12cb20"],
 StyleBox["\[CenterDot]",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["AC", "_"], "\[CenterDot]"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"ed9ad69f-8719-4323-8f85-28f7e42799f2"],
 StyleBox["cos(\[Gamma]) =  ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["AC", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "05946f70-e22a-469b-83e2-1548de121e5f"],
 StyleBox["+",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    OverscriptBox["CB", "_"], "2"], TraditionalForm]],
  FontSize->16,
  FontColor->GrayLevel[0],ExpressionUUID->
  "396f109e-6ad4-4752-a0ff-9cda93bbb070"],
 StyleBox["-2",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["CB", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"1f74735e-9c8e-4fdc-b78d-1f2394e8d8f2"],
 StyleBox["\[CenterDot]",
  FontSize->16,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["AC", "_"], "\[CenterDot]"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16,ExpressionUUID->"0845944c-67e7-48f4-874a-e3ae4e38ae38"],
 StyleBox["cos(\[Gamma])",
  FontSize->16,
  FontColor->GrayLevel[0]],
 StyleBox["\n                                                                 \
       ",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.703753264726861*^9, 3.70375371938772*^9}, {
   3.703867496292187*^9, 3.703867498010098*^9}, {3.703868029554041*^9, 
   3.703868030100976*^9}, {3.703946980353115*^9, 3.703946981855782*^9}, {
   3.703947238305213*^9, 3.7039474804819927`*^9}, 3.7040035715827007`*^9, {
   3.7040038564875193`*^9, 3.7040038843328733`*^9}, {3.704004074662993*^9, 
   3.704004153666554*^9}, {3.7040041882806463`*^9, 3.70400421884643*^9}, {
   3.70417332677776*^9, 3.7041733302315617`*^9}, 3.704173361856007*^9, {
   3.7041786602449207`*^9, 3.704179123527399*^9}, {3.704180741719327*^9, 
   3.704180755759803*^9}},
 FontFamily->"OpenDyslexic",
 FontWeight->"Regular",ExpressionUUID->"9e536f31-3215-4808-8224-af383e3b4fac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "33cfab2c-7ae8-42ef-80e9-26e97505bbe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio7", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424902213645`*^9, 3.703942519593337*^9}, 
   3.7039483587752533`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "550579ec-d37c-4f1f-bcd1-6c9407aa7f66"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 7:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 7:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 2 \\\\\\\\nB = \
3\\\\\\\\n\[Gamma] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(60\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare C\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Applicare il teorema del coseno:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Applicare il teorema del coseno:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`A7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`A7, "A"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`B7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B7, "B"], StandardForm]],
        "\" - 2 \[CenterDot] A \[CenterDot] \"",InputFieldBox[
         Dynamic[Trigonometria`B8], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B8, "B"], StandardForm]],
        "\" \[CenterDot] cos(\"","",PopupMenuBox[
         Dynamic[Trigonometria`G7$10096], {
         "\[Alpha]" -> "\"\[Alpha]\"", "\[Beta]" -> "\"\[Beta]\"", "\[Gamma]" -> 
          "\"\[Gamma]\""}],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`G7$10096, "\[Gamma]"], 
          StandardForm]],"\")\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quindi:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quindi:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`Val7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val7, "2"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`Val8], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val8, "3"], StandardForm]],
        "\" - 12 \[CenterDot] \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val9], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val9, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val11], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val11, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`Val10], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val10, "7"], StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Da cui: \"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Da cui: ", Bold, 20]]], 
     StyleBox[
      TagBox[
       TemplateBox[{"\"C = \"",SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`Val12], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`Val12, "7"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       DisplayForm],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7039425203416495`*^9, 3.703946797949709*^9, 3.703948359643725*^9, 
   3.704003077258898*^9, 3.704168406330283*^9, 3.704182873373398*^9, 
   3.7041904216218987`*^9, 3.704190529313163*^9, {3.704196267541849*^9, 
   3.7041962747718525`*^9}, {3.704196471545675*^9, 3.704196478163992*^9}, {
   3.704196694701456*^9, 3.7041966986664357`*^9}, {3.7041967590974464`*^9, 
   3.7041967618872023`*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "d274d49f-47be-4a26-9a67-0dfa18b9fc83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "7550307c-13c6-4e02-9ff1-913f87ebb124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio8", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942548966643*^9, 3.7039425547660713`*^9}, 
   3.703948365698081*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "b416cb98-c1a4-42e0-9f72-6d8b42c45421"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 8:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 8:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
         DiskBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{-0.2, 0}, {-0.5, 1}, {1, 0}, {-0.2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.4, 0.4}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.2, 0.6}, ImageScaled[{0.3, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.8, 0.08}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 24 \\\\\\\\nC = 12\\\\\\\
\\!\\\\\\\\(\\\\\\\\*SqrtBox[\\\\\\\\(3\\\\\\\\)]\\\\\\\\)\\\\\\\\nB = 12\\\\\
\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
cos(\[Gamma])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \
\\!\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\) + \
\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) - 2A\[CenterDot]B \
cos(\[Gamma])\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! \!\(\*SuperscriptBox[\(C\), \(2\)]\) = \!\(\*SuperscriptBox[\
\(B\), \(2\)]\) + \!\(\*SuperscriptBox[\(A\), \(2\)]\) - 2A\[CenterDot]B cos(\
\[Gamma])", Bold, 20]]], "", ""},
    {
     StyleBox[
      TemplateBox[{
       "\"cos(\[Gamma]) = \\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\\\  + \\\\ \
\\*SuperscriptBox[\\(A\\), \\(2\\)]\\\\  - \\\\ \\*SuperscriptBox[\\(C\\), \
\\(2\\)]\\)\\), \\(2  A\[CenterDot]B\\)]\\) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`val13], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}], 
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) + 576 - \
472\""}, "RowDefault"], 
         TemplateBox[{"\"2 \"", 
           InputFieldBox[
            Dynamic[Trigonometria`val14], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}]}, "RowDefault"]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     StyleBox["\<\"Quindi cos(\[Gamma]) misura:\"\>",
      StripOnInput->False,
      FontSize->17,
      FontWeight->Bold], 
     StyleBox[
      TemplateBox[{InterpretationBox[
         StyleBox[
          RowBox[{
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$10144], {
                "\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$10144], {
                "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$10144], {
                "-\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$10144], {
                "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3]}], "Deploy"], 
         RadioButtonBar[
          Dynamic[Trigonometria`res5$10144], {
          "\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)", 
           "-\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}]],"\"         \"",
        DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[
          Trigonometria`res5$10144, "\!\(\*FractionBox[\(1\), \(2\)]\)"], 
          StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7039425556176467`*^9, 3.703946798062866*^9, 3.703948366469611*^9, 
   3.704003077340789*^9, {3.704168411624454*^9, 3.704168421452804*^9}, 
   3.70418287346058*^9, 3.704190421742292*^9, 3.7041905293909397`*^9, {
   3.704196267717576*^9, 3.7041962748359795`*^9}, {3.704196471639884*^9, 
   3.7041964782431693`*^9}, {3.7041966947591095`*^9, 
   3.7041966987225847`*^9}, {3.704196759162812*^9, 3.704196761938357*^9}},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "efd308f8-cfe2-41ba-89b2-80493a723969"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c9f68e56-5109-4e91-93f2-37ac61b83c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio9", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039425664315176`*^9, 3.703942574381358*^9}, 
   3.7039483708077374`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "381db649-3665-4d99-abf5-aae9acb787e5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 9:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 9:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Sia H l'altezza del campanile\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Sia H l'altezza del campanile", Bold, 20]]], ""},
    {
     StyleBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxcvQe4JFd1LXx5fjbG/v0A22CSLAwiRwESwQaDweBATsb+njFgm5zBYEAm
iCgMyiinkSbembm3Y+WcqzrnnPNNcydJSA7zr10lyXzv6kzTXV1ddcLaa699
zj7FH33sC+/9+P9aW1v7ym/i5b0f/fqbvvzlj37jfU/Ahw98/iuf+sTn//mf
/vLzX/3nT/zzl1/zsV/DwQ/jXwP/6P12p7/TH52dLs6O5/uzxf50vjOZrgbD
3cl0ZzrdG0/PDGf7k9GZ4fjcZHp2Or1/MN4fjc9Opuens3OT2ZnZ7MwUHyen
5tPtUWev197ptU8N++fm07OL/ulF78Hh6MKpvf1e778X27vd8U53/MBs94Ht
3Qv4e+g/8PLL+XK33t6vDy7snrkw3Dk9XZ6drlDOTFfnx6vzk+2zk9np0fSB
xdaZ8ezsaH5+OT+/mJ+b4fqL+7dWO4PJ6dni7GJ1erH85WL7geX2+fnqzGT+
y9XO+dkSPzmPpi23zi230LTdwWhnutybr04vt/dmy1PzFcrZrd37d/fxioO7
0wXK/mILrzuT+dZotjudopya4zjez04tlqfn87Pz3bOLnf3ZKiqnpsuo7E9X
u6P5/mR1Zrk4vcB9V+e3ds6tdk6jN5bb57a279/eQTm3tXV6ivqsTk3Q4cu9
8WJnOMPrmfn2mdn2/ny2N5nuzxenZnM06txq68xiSR+ns1V/tLeYbk/QivGZ
1WJ/d7WznO7MFtuz2c58vrtcUjPni7354vzW9unlcm8xPztcnp9u3Y8uXZy6
f3X6/OLU6en2/nhrZ7zcm2ydmW+dnm2dWszRQJTTy9U+GrhEt8xPLVDJFU44
u0SF9x7Y2tunBi4f2D714N7ZB2bL+2fLaFCojKZU1eXqNOofnrY7muEVv31g
tnV+fur8fO/cbPf+wdb2bL4zns3Hk2l/OGx1G9VatVTaH07OTBcYu/unS4zm
mdliZzzZGo6W/cFyMNzuDRfdwXa3s9Xt7rQ72+3OXr9Ppdff7w/3JxEgR7vT
0f58ujsZ7056ZyfDc7PxA6v5/UsqD64Aoe5+b/Afu9vnZwvC3n/956RZmzYb
RVs9sxxdeOiXFx58cK/bOz2cbNUH53ZOPTDfQbl/QeXsbPvcZH52PNvrj/YH
493++Mx4cXY63hr0l93O9qB3GhgDkBarXbKX6VmcPFns9VGx6Znx/ByaNlud
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
x0ARxDQnJBkuwYtpXmSkRErnRFfRHVkFCA2BdxTZtTULtdLg4VhdQSgBRkqJ
PAP0kLNmWF2UTEmOMiWIcRST8npVmnBybTdcO86QFKSVmYxODx7wDdWxVFzY
sykbIXDtjGm4qmppKq3quobnoZiuYwS64iiiZQIXlmfotqHjjUW5YSoO2qbm
22ZgmwVdzehKRlNpHRMYBgLDHB4PFQjz9jO0dSQEYcbPhqk1UKc+oExZDhas
gWa8oBpNTUOUlM1kqoVCtVzu1Jvbw8le9DC0cfiYrxk9tit8RtkO8Nlvd3f6
k3GlOSjVB9VGvVAveEXL9CQahDDsEaMdizz0lCqxsgxx5JMtC8eMdFw7aWvH
isIRM3XiZHzzIMt6XKzCnaiLG2k/fUvHuvrKz1364y++7o6r/vrwze+/7sp3
KrHbhJPHv/SFz1zy/Cc95Wlrn/y/b6oKd5RT3z78w1df861nWewnb/jBn7zz
bb/12LW1Vz/vSUdvv8WXNcfhTYMVtBTUBiNYbEqFJcDlZlSjqLr5dEaxONtR
0+nN9ePH4qnNE+snjq9v2rbvGvTkAFkgZ2RJhqs5Gq8qTJj2nKacKVO1Xcqz
Qs/SSgccK8JZgfK4aF2SAgPaOJeinaaIphXyL4ZhKuG2I0vRuEQaqDVFS2U1
mQGOUVQxqaTldUZJSiqjWYA4n0aEzoKDfJUxFEY3BcfXckUjk1P9rGLlJFuy
wJUwqrTlq5anaJakGrxug8BV1w1h5Oq+40Gt+x7qa5RYM6uYDsjGsnjL4Fwj
bViiauia7eOybiHv5i2rwNmZmO2f8PycETiq4xl+YGZc1bX0IHAKlu7bYQE+
Pd1zAWPdcTR0pIXrQCKSSlTpjU0ZiRnPyUK9qrIVTnxqkToNXKDRs3RHkw3K
6VJNzw58JxMmWgSBnwOW4I4Hrc5qRs/NW/RHW+PZ9mR2ehXS4NYOApOt0bRf
bZxf7W73xosOPaOp12hWS0XHyVAQRBKFVq0FShpEtM5qKm8YUBtZRUgpwkk1
nTSSvh4rKQmdT57k0ifS4MiNipJuWgKI655+8bYff+s113z3LXdf+/ajt7/v
lh+8I37fj/79yi/84z+88x/+/m2f+8zbL3ry2rc+/tb4rR87eNWf/vRrz/PS
n/vRl17+xteu4e+J/3vt37/9b3KcrRVL40HLdsNNVJpnSLYm6YBCRjNzihOk
fdkRipVsJudACiViJ++686477zzAsLyhRHoJsaCsa6YpaoaoZa3Adfww98/U
KKOYZgy1MCuGVopDDwgKQsAX7X3TFNrvxNGOTjCq7/qeGXp2W6OUb0sL8xVo
SymniqLK6xpvqmpC4pOykIQ0oLxrISRRDiTlO4rnqYFvuhkMq24GhlOws0GW
lndNU/FgNqA6A5LewFhalGlK+YEOpcdYYbaYZdmel5I9QdMlDY2Swn0QCC/g
/AteoejkS1657JU9J4dfyFaOxY3g7UUYj+1QUqtj6p5n50wVQCkEbt53856b
z3uFLKjLzmSsQJb0iCQ1BX2C8AfO17dgxApY2oPsjoRoOGkJKrSj+BrIhFUg
aAJP2vTQEctxgqzrZn2/Wa6OewMwHoQfyPDc9t6D+2fxenZrD0wIPkTgDHqc
N/vjenfS6taK5WwQQKXQqmuYXxIlyYTLSDAAQTN4TcurIqvIxwwhYTGenS7A
IFUppisJhtVS64HC1DOyFegH6tnrfvC1V/70X19/x9V/Fb/7vbde9Vfc0e9+
9qPveNVLn/bHr//Dr37xXb+xtvbhv/6j27//V0eu/vOrv/acrPjFa75x+Yfe
e/EbXvs7X//s30nxVDNXblVrOd+KxY+F06S+BRTprmcoWd10ZMNPeXpGDvIU
utH2G0E6duzo3Xffd3IjRksfDE9hIwbOzSiKIctSIZ/LZgq+G1BHUdz38DRs
lLLy8B5i8ta0hRNSHk5RMQ2BJpl1sKZnu7Q0qqj/kxCraogPo531FuUbyL4k
mayoM7wnqznTL9hBoNm2CES5jm6BamgtR6OdAZZNS+816HDPz7teKQiKnm9a
EH+gaBeKzjZMx/Qdk9gGPGPCpYdXAGvlHADGz5heYLgeMZgZWG4AdtUzvup5
suOKFsFZsn3T1yUoT/zK1xRKovYsAqGBeFqDTaH44ECcA6xqgibDZCmH0Ak3
1iEWhsHaAGS4s1+H4Ix2moQe2DDoiR+0DSqEJXBrRKG0KkuObec8gDvbKFUm
/eFW+CTSncniodPn/+vcL89DFm7tnds+hSOLPj0raTkcLHrdWWcIiVjLlwoB
ZKGRSiRp5VQJ4yMTYT8smhOZlMbbusbp2qYncjbrWEzWZA1DTZsao4mGkCzY
XDVvei3vaDt/3bc+98LvfvlFh2/4q2O3vP26K16bl6+9/keffN0rn/TEx699
8L3P/cyHX33b9z94zVdec9uVL7/xu8/LSZ+795o/+9evvMXlfjGr+wbLVZ1y
YFsyn6jWSlC9FqjCzWUtaBjD1jRH0OyUo1G6v0KTxUxCg50IQjweQ01j8SSg
pIiaawf5DByEEyWjGvRkIDO0cS1cQX44V+HRaWeacwZ6ZbRRsi0NcoyeRxIu
OIihlNQl6HiIecptMMIH4Lim5lLKCzDNuIxlpjQzrQWyW7IKZadYsoJAMjO6
C5Z0IbSA3PApHpQb6ltZy845bgBiKuayQQHhMiwenGzhTCfAN64bGPB+Zlg0
33I91w98L/AN1wZgBEVH4eS8E0T6DXxdcLNFP9uwsjUzyPpFxyBxkrEylOtn
eq6TQZDi4nw3A6fpwdUbPgzC1tDXiFxsXXHDbQt2yH5OhMBw4lojufrIXieX
sgws1Bk9HCWWh6stXDTFDbPNeX6dHlPW3VvtnFnu7E6We7PVA3t7vzx16uzW
1uklNOFqdzqddbv78+XWcDTvdKftdrPaaJaqiGhgm4iLaapWoj0d6DX4JTmd
EpMJDiOrMJ4WdyH707q8aehQNFKc50+g3zSp5Am1Zr6w3ZGX3Xu+9Zln3/iD
y5hDH0gc+Oubvn/56cGJB7cMRbjuxus+WszfcuHC6QtnlPRtH7zliudc/fWL
uEPvv+JTT0lsfPfCf3cuXHjIEpSylbc0+F6u1a4hvoQUd6yMbXswA5vyUfWs
mOUhxWifsgzXF4oHmlzRdYthgBcpFYslNmMg9MAFpTj0lAtKApGj/JMooybK
VfiV5QmaJUZQQK6Olq00XhBo9jCZTiPy5QUN8ZCGkIGCUgwJPXoFwYBGSVoS
QicmYzG6Df8rOjnVy+uZjGrDNRYMeEEnsL0MZR7bto1RNP2MR9nSDhyhTyQd
+JZtAtrgScdxbUAtl/VzGc/LQyP5Hpg141ZKXrGYyeUDwEm34XRc+D7F9PzA
8H0DXBpkgoCeKlb3Mg3Lz2cKHr40vawdWKbjOh6wGmYhZjN+IZctZTJF4NNG
ZyiWRezn2DpESxAm/JMs1BT4XMRW/5Pnj0Kqz8sChLhE4OGaDqUXhrlnuDhl
M6oaalmvVCfd4d5qcW5FqAP2dqezc9s7Z1Zbp+bz/cVyezwZNZtbg96kWe9V
6x34YsRgcF62o4fJeLoEVyzQjmnaDSTR5ghRTSXSMp/0DMYWWDUpiiclNSbI
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
SHOz5d3+9XOid3XehteKd3/W7HDDbW1pLWmRyaTcJUY5PNA3UOBVxMfnSsdk
xT5QJodDmQkUOWCxRw4FNGX+f0QORdxmdDVE0PlJQRNHmqRRsg2Ymqsqn1XL
gSB0lTbRaABuOHz3qGlGLLMx0dDW2Dbc0Xd8+PAPoydOHDz+w8GR70ZGvh85
eOLgoZ+PHjs2NDzU2TXY3Q1B2NXe1t5c31qfjkSBYvJuYg2yfIjlgzz6n9FZ
p1T4kei2IYVkPiSzpMrTKp56Q0KkWMlHi6RhmMlIfYNupbT9SvCdB272eHOm
kAdmcgcmMHvP5grGk/umkXunkWVT/PvHEkXn8/smCkUTo74rjMDde7fd8eXb
VxUXftMSJTI2KvRCSpEVxowwouIzkINZUSPq6DKiQaRCLNoRY2ObJuK5ExaD
rAagqwMuAMPKJkNXZw+yZDSTaoBk4OrSMFm9NSjHULUh+UVjcYbhgMGQJG4B
uqrnEPZiMMAC/IOCC4mipqYWiLDP73PjULDMWDLREHFSwIdisYSroRKNO7zK
Q5wDR49YTtyJRGUcFbcbUw1tGeAupRs3PLBn5x1FBfdv2XDXlg339jbWHe4l
Tp5sP/lr5oXH59y24LyHll748Ru31xR9teyVe/dtemfNxw9/8+EdFfkvffvJ
tbT3+e3rX/nwjTttoZwq3y369/HVe6pyP9v46V11+97Zu/GZmtxPkkxdM7xd
0YpwTpRr5h1KwR0TtFtDrSI3CAHwEwTuscNFZ1UuXSlHHoc2FYD/2W0ZDDqZ
wxZiVGjC8UMVvhWP3ZtotPebemHW6vm3bsOsnrboStYDDE7GY83pTEdLy6Ge
4SMDo0cGDv9wePT70dFsK9f3h0ZH+/r7Wtv6Onr62ttam5oa00AcAXBBPggy
jJ8gvBTpg4skvRRdR4aDFBlk6DDHBwWJkPmwwgbR6FZEsRfLkVWLBoBvWHZj
LNXoGElhn+Z7+5GlnmDBBUL1pVrNDGH/XwETcgWzyf0zyNLpUuUMpXKWXX2J
uH+6WDonuH/+jjU3fv3+9eVF61vjXNpW46qJuUxjIwnBsEhswQMyZkRsDC3a
UjnNYDXg40A+sNWFdZ2pXedk1zgTiR/wNx3nw7OaQqqkxyLJqBOBG5VdvJbh
xCJxS7eBGKJVGMNBMsM+B0WORiNQtnAlqFFFsiD2otFEKpUAArJvXzGwFQh2
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
ptVJQxWPAMAKkWQtRVXRdDXL1gIgpJg6lqihQl7CX4U21AJJkX7SB68AN8H1
xXCkP1gNfMCQozYfaY8m280KxfvWE0s8RMFsat+lYvE0pWiWXHglt+eaUO7l
ZNGltTkTqLxJXOGE2k2nVm/5cyB3dvmuRaW7b6nat7PJ4ZKa5ogYhAA5JC3M
iUBMFAPlmm2U5pFpSUHTW1gsOCWB8zkcjhphHIqKxkk8hQ6Ubne9wJO/eQpz
tCSyrqwl5/YEUm4nJ2RKVdUMimL6+4e6uvrz8vJWr16zfXtOR0fr7t27Hnvi
wbvvve3Rxx745LMPWlozhimu3/jtPXffsXTpraEw8Y+fTx4+fARgZFFR0f7i
IlihXQ3NSS0RsepVMckpjqibIcbt0QYSp9a0tlSvXnNtXt6N3up7JPEVovp5
nnmpYM+tH7wz896lpz375OV33T5h6cKxLzx96X13nz//Os+8qzw33OBZsOCU
JfPPuPLi310z99zbrvVcc7Fn7Gme156/uKL0FUH4mPC/rlDLKvOfK9j4fGXO
Cj1Q63CqyELKkghe1UwS9/lVATIhRg1uCLDY2erqu3JsVjeYx/B0g5B3p3Rc
kyYIPhUn+3HwS8PmAexckV0XUzo7I4bnKq7qY1bP89+OZrI7icY6mhaPOC3p
dEdL86Hu3iP9g4f7h74/fPDHI6PHR4aOjQxBEI70dEEQjvQN9bW3tzY1ZhI4
MA1on2Zq/P5Shqlk6EqOrea4agUyIePl6RoeIs/vC0A0hr08ETQkMWkkTNVB
GT+ewf54EWpSssNwMtx+teLV1x/w+HdNIfZMFwvG6/umOiWXC7vmsjlz+Pw5
ZO4EsWiCVjxRyD9bKp4ilM3dtWrWinfPLs1fm1DrbI7VaF1XbIomRS3IiV7d
EAzJ0hXLkkVNJAUpKEohSaZQrwmCUMW5CVmBm+5mRQxC1k2DgM5Z3I5RkfVB
SKNDBM+je5+rC60pJlTqzu5ub53/5MmTe/dWTJp0gcfjOeOMc37++0/5+Xkf
ffL+o48/fMedS+DFd997fcOmVW++/fL06VP/9Kc/L1v2qePEGxpaqqt9Tzz5
9COPPrzvQFFcc0zGsPRGkU1RYlR3ErQs0RyjWoA2Aw2Z4mUfXbh5w5y9+641
5Fct+f16e1nRtsX3Lfac4vGc6fFcNMFz7h88p3o8k8d45s7xjDnLc9Vsz9Qx
nnNP80w5xzP1DM9FZ3rGo26Z55arPHs2PmyzX0SlFbL/HalsWdEXTx746pNM
iO5zOm0qKhK6rWUENSQoKNwl4lCyjCa2NEsSLFAwNIGUVEl0jXVwqJLmpCCg
ZiZrgoXbf6h8AEQZWK/rD6nBK+jKixrMeIgRDIdQM+t/jADQ5BCPDFTIwEbc
tjPJRHMK2HHrSGcPwL+hzp4jQ/1HhweODg9CHEJAHurr6W1ugmzZ29be3dHR
lKmPmQ7OlTKon+sPBRiUOeYphgoQQI0JIhz2ASoKbKvzlQaDbDiss6yjqKas
MoxSJci1nBTiqLAlyVFdcLgDB/a8/uwTc3zbrvfuuKJiy1gib65U/IBQ+hRd
dYcTuWV04CmVWWQSi9TAdIs4Z1/Oabu+vfHLV+8s2Rnqb+2W6VAmBtw3pEph
y1BtByobPFA0M8QfqEq2Jtga42jYqQlVWnbPtoEAshypG+jWSQJ4wEZiV/ZU
hCWqW7ZjmIalpoFDAL62LN5xFFcKSWHCSn/PIMeGbr/9qr+c4Tl/HD7l746P
soRq2lCZQnn5O+CV995/K69g1/vvvT9mzLlvvfFqVUVpwFfDc9Rll8559plH
d+3YXFiYU5hbIUs6lBfAmqZmtTZ1OUoyZjfgGKdwoKmx5MNlV676dm5ZyZ2q
8IKv5tZ//TO0Z899D9038cy/eK6dO/XmhfNuW7zwriU337b4qlsWz1ly49SF
8yfeMn/qnTfOXnLNxTdfdvGNV4+ff+VZZ/7Os/haTzr6RW/HmqrSe2uqnysr
e3312icKCr6pr4ffUjR1bCaxtaTq+DWHUDRSEAkFCLJASgyFWwCoPKNZcsQQ
bJriaJJDw0xG+Y+ZS9bPBeqi62nOya7DgYxGungu6rqFoxdM1v0qq0Lj2hQQ
2H3NUrLrGlkfjbc1p/vbmgc72w4P9v4wMnx8cODE0ODR/r5j/f3HDw4d6u3u
6mjpaWvvb+/s7exsrq9POjjEg/MsHB0I1bE8ro4wGSCoEI+y4ciAKK6UpL3B
YKiulgsGJAbNgcMUU8EK1RqQAt1OWZGoKlpMfmXRy2+/NKdm4w3+3fOqt88i
dl6Tv3xexbqHD2y+paJovr/0uoLVs8s2XEwXXRQlLgmVzd6/9e6dX75Yt58C
/KBzVEPcNBXGMeFmotARtupo6BYMkYYqcBKpCkGJrYWSAEQU/XwktBOWZNZG
QVPUhbQdYMUGdtNpgM/RB1jRZFNJmqh0KusaQEpW16GIOFGz/vjRH959543P
Pnt93YaPPv70+VNO8fyfs0Yvv/IcBOHGTWuHR/pM03zyycfhFh09fGiwv3fN
6m9nzbiAZUIjw72ZtF1dFeJY1FACLuJYcVkyJRal1WKW0dDAfndC2rL5ru3b
FlSW3yOzTzHhB0/+GijMvf+RB8ZOPMezcP6kWxZdsWDe7BvmXXD7TZcsWTj1
5hvGLrpxzC0LxtyxYMot185ceOWMm64Zv2T+2PPP9txz8ymZyFeH+nMo/9N1
1S9Qoc/27Hy9qnzdYHeqMZWI2RHLjMSsRi0StuJotAU1AiJTkjiV423NcNQI
SrmqgK9VlhEYCusyBNt/3NYE12zo/2Gsk1VayPqYZBOg+W/HwKz1GM6/8zTE
a9QwEhGnvaGxq72xrxWCsP1gXzfEHgTh9wdHjg8Nnhga+n704KGe7vaWxoGe
9oHu9s7WxpaGVEMyFomYON0m8SQdEiVsJCapUJj0cXRIEmiJZ2XDy/GBMEH6
6uigH5VIBBw3qg5RVSqqbxuWqJoiYRA7y3NfeOuFiSUbrq/dtbB41YXb3p95
w1jPvZedf+vlf7r+Is+CSzxXTfbcfqln8wfnR0IL5ODSDV8s/PKt+2r3Vfa3
NBl8KG5JhiK4JtDYKkG5Fu/AxHmBkESS48MyGxaoOqgckAUpJgjhp6ATKQuZ
EO6HiafxkqzgoRIeLLrIT0I/JgeFaDTIS5QokBrkK91paequrqiDMHv55b9t
2bb86Wfvhc+HBocg/NINkW9WrZg6ffyGTWtjCbuju7m/v+/w4dGuro7unq71
G9bNnDVj/do1Pd2tiZilAyrgbYCXO3fuDgRDiVgDCl4aGZ5VUPIjRXV1eleu
uCYvdzFJPmaoz7PUgydP6qX7HvzbQ2dO+Ktn4XXjbltwyc03zrll4SW33Tzj
1psn3bTg3EU3nLX0xvNvXzRp6fypN1894/YbJt524/nnnOpZdL2HZ9/o7dks
ia+L9HuE7+Ptm14sL1491FXfBiUwDvjejlv1ToqOJCUnwhk25ziy5t4iW1Uj
hoWKSXjkhScjWRH4rCbPf+xy/mNml/XQyXqa/NtjV8tuTWfNJbP50D2p10zU
XdQhCCGaWjMNnW0NvS1NfW0tQ92dh3t63C6ake9Ghr8fGf5udORgT1dXe3Nf
Z1tve0trU31TJtmYjMcTjqGjFxYCfplx3VaDBBXgWULgUAWelepwWjDM0AT8
K5zRhXIsyHWyTpimpgiyI+lJi21QS+rKX3r1+THVu29mqu7et+niFS9gkbvg
D56pp3lO83jG/M7zJ48HXvroyTNTwoNN1tNrPrtq+VtLCjblNsUtmfLxoWDY
X0uHw6hizoYZJkxxQYrz8WKIE6HU+jkhBGgfcIpuoRUNZD90qxMZ1P/TREjp
wJThdVGmRQElCJCzqAJLSq5UAiByUhIpV4XATiUyHy37GN7eHXcuvHD2+S7m
8tTW1Gzfkrdo4bw//dGz7P13vjt+5NDIgGuUCfRHrq9P79+/9/EnHrvkkovR
LEwU2zobadavqQ6QyNKSAzXVlehEKVqAjEROdUwxnQp1dlW9/96c1asuKyy8
3l97O0Ped/Ike2D/fc88fv70CZ6bb5x426KZS2+6+IG7roE0eOtNk29afM6i
6/+y8Iazl944dsn1YxdfO/XmBWMWzj/9L7/33L7YQwZfbWr4UhPec6wv6ire
WbvqodztH3U2mU1pOw7JHoVZjUiai6YBobGmI9gOytFioy829ON2C9JYnsbT
JVVG+U9FcL1W/sdC9D8WTtlI+z+zYvbF/zhPZYmJq7aHOji6JMIfTclUR3ML
lOPh7o7RgV4oxEf6+04MD34HgHBk6IcjB0f7ujvbGwe6O3s7WtubG9uaGlrR
2s4CKEaTAfR2l3BGlYWkyBIsTXDooUPwUhjdxRBD8G7/PCCuICPUSAoKEEmo
a2FnokLcyK8pfvrV58/Yv3uuGLyreMcln76AD/eaKWcuvnzqFRecfsPFZ0z6
k2fanzwfPTcmJT7YnH5m3bdX7dj+kElyx4c62lKRmKbEDCsVS0TtuG4pmXQk
lpEjKSkSFZyYmIipyTgq/EDejkVMx9ISMcfAll7atJUI2sVjlYWibOBxB060
o6aAqaeTsUQsFougul8qaTfUpxvS9S2NHYloal9RbjpjvvHGU+ed94dzzv1z
YUHBxRddmQ3IZ55+fMUXn1RVlmTSqVQyThCh0dGDL774/Ny5l23ZsgkSpmWa
LMM0tyQV3YDH6MRMeCq+ukBdbai6KgikLeYo0Yg3ndn7/rtzdu643uu9K+y7
21t148hIzvat17/0zDigIffeMh2CcNH8WbcsnHnLoum33DRu8aK/3nT9mYtv
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
2+13/O2G+bdddcXi2jpj/cb9Ny54NItCr7jyqlXf7hwa+LUh9Z1tDBt62y8/
/lbhNNU6euy3LxozHSf/+yTEAyfqomxm6huDYcpB6x0TzUU1hWMZ3DPEV2yU
6NexmRrwPTxf3TXgtAxJUzlVVuHRNDV2Nacbt25c93uPZ8L/bupbgK07y/J+
HbWMlNYSpkgdmoDVacPAyLQOhdqpjJAGrYnEMQMRB1OpkgSh6hgSDGK1Rgil
NkIoCFGLQSTJ///nnH32/b73ut/v973XWnuvfTn3/LmQRIf5+7zfhk73fHNm
nb3XXnut73u+933e7/K8P/x9v/mR93/h0T/634898rW/eNzWec9SLV0e9zoy
x0eeuyrL8+N16BmhZ4We5rtq4JqRYzvAh4jo1rGMUFE0wwDr12C7fPYyTdd2
vTDMPS8xNEsVAVhjQAu4aGsspWCYIu4FTZPA22EAATNKl8dPduvSOVoJOhHY
8AyN+TF+OGaGQJQFU7MUUaX9OAiW22NgjxvyVAZ8h6ZLEK71RqSryfNTqo3J
eKIIpAtXpvPFPNvOCIQnywpm8IWT0x0Iv+OOizILw5P1sppnSeD5lonakOGF
xuDpDXCw2iEo11WUWv1K83C/Xturk1LV1VZnr9vb73UalN6e0g924Strrb0W
3hwdcHIfvgNMCLSIb4AY8DyiwyuDWI7QuJ/+zMfe+Z4f/75XXbrhta/gJ+0S
dd1r544O5MLdjgWJpyQhU4ES1kzBr1jOwxGs7KhPKwTZcP0IZnHca/OTjjhp
D0ak2DwdS0k8d6zgE5/4IyDtfe//9V+7+2MfeP89N77x7ffc9wdvect/vPnm
W+6977PL6jpD4g89+Luff+6MNFD3L2t33Pafb/u5X7zrrrs++MFfvfWW9952
6/tueecdr/rBV//mfR873a68cCZS6jm5g3BtQPtbaFUE5XDdRZDD3SpQ1Lyu
a3BxUxK2mg5IFHq/3d4/3D9s1tuWGT3915dveh1NXHJ8e7PNTk7XZ2fXqvKY
pfIURyMSCJRE2aR0WprMcbYme47mEj5FR5NtVVFkhZSCRog61F4H1EvRFXzi
yKLZrPeHAx7sF5BBhHH1aqPTGAhTlZ+q+kSRppIwEuSxLPDCmDK3DOi+ByyH
M6XgPmg3SPyWEg50aoIgA4dwqoqqajpgrlq25zuBwPRDaCMEAZssIRAojiTK
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
oZum4bh2miZpGqMZPM/xQj/xzTRycK+zIInDMMSjmDZNCMucYUiua1gWeoVu
4848xzE9y1PdAH1As9DNbCMMvSgKohhRIrqFjbgNv+X7bhQ5QWADuogsDFPH
BQF4TUeXMx3XMlG/hkY5vU3Nsg2cH4ReiCoMfXbg41K6ruArtmP6AX2KM9Hn
cDKO8Q4ugivgX4eGSFSDnen5jovQwkefdPDjMbE7P/KcwLF828Q95rMkR1Sb
pUUcw+16ug7gOSb+aoFrJzRt5y/z+f/LuH22WtH83XJxttyuF6tVvkj9SJWV
86oCS7xYkkeGMaySKAkczwTqZNcksTjftF3DTAw7tZzEclPHTB0rc6zd+sPA
1j1L9eHDdDMwLRQGVy1U9dSyE8MMHaDaDx0vAMt3vYQCoCj2o8DB4wQJbdDP
UGI38Y3A0zzXDGI3ncdFHhf0Jvs3T8pZOE99nEwrzlBwEHtp4ESJk2R+lrgJ
UIf353E+i/LMjGdWmtqAqIuS2H7mRqkDnPm5l5dBuQjmuGARlWU6X84X62JV
Audh7KANLHSQED+KnwNWM6DACcukOFmv1+VyjVpalFWexx6tAc4Cd5Wni9kM
KEwAvCRZRG4Z+VWEe45x8Rwcxwt823I0OQmseeKnoR17duoHie+lfuLisUM7
CCyH3vTnUQjjkAPugeebRsJ01bIwzGN/nc+oHg01dFCrBqgT6nOexItZhlKk
SRYGWRTiHRzTr2fpco47Q217gYNG1F0T37Jn+Ak8PXDl2HR9nJwmdI5toeDT
yIF/McmN4qM4xqVwwpz9JVnpOEpCP/Td1PPpU9cv/GCWxHQCbibLqtl8nRc4
mEURvnI0L86r1fl6c5wXqyRdJvPNrNxkeZFmJWrXtBVJvFgtrm2qZzebs3V1
vCiP8jmccuI7kQdTZWehB6JYwChEXhmmVYJa9fLQL6Kg8IEoB+dErhV5ZhoA
+QAMoOXlND4ZUDLlOK6SvEpmVGJWktkyysogLoNoGeGjfJ0V62RVRYtFUCyD
Ik+zKi+PV9t1sUQjzqK0wHfzMk/wUMk8TufUvrMym6PgzTwqymxRZsvSm1VR
eTzfHCP6T7INye+UZTQr49kC95AVq/liNSs2SVUly2VUrqLlLEmLdA5LWOVL
lFVRrXL8aD6PZ/NkUYTlMq6KLE+DpEjL7apaL1GKTbUsZ7NVOStmcZHFm2W+
WixmcYzYriyKdRhskqiaxaskwymEwyjLCAk2usquv80iv5hleZYU4Wwee0Ua
LmZ4nKyEESjn6+VqWSw21ToOonkSleSe4kWebytUTpT6TplGZRoWCeAarmb5
tlxsy/JosViR8nO2TDMcLNK0RI9I0w2aHhdP0jJO8jCCyVrn+Wm1mgfhzA+K
OFnPcYWyiGL8mzju0arCLwJRVTHHMR52tSjW1WKZzXByBmTGuGxG+kURHsrH
Yy5wkWy+neWAGe5xvSgRcGyrags0ZrSY8HRZnaPqcAUYxmReJRlsURakszBz
TQ8c6biYn1eLa+vqfLM8W5VnVQEc5lk0j4M8gfUJF1GwSPCw6TrP1vO0yhIc
L9N4lSZogjwNcSawSrnjEzJVyyQow7iMknWanRTFcbnezhdMKna5zeeb+WxJ
5iKs0vkqw78IzBfrWbFOV0fzzXa2OcqX59XRs5sz/N1k5a4czSs6mC022eJo
vjxdbM6XR6fl+riottl6O1uhbPB3vj4tT06X6y2leF5t86pKi3VcbNLFSb4+
nq+O59XxfHmCq+WLKs2X0YzwnM4r4DNfHi/RE4+PFptVPl+h0Rflpiy2izWM
ZDVbHi2qbVmt8Qh5USbZxfHqqMIJ8+OqXJfoFLCW6D6L49zfzlIaB8vLbYbu
AzNbsVxFAHwMBKaxC/zgnU2xWqTFYhZtytkWqCsKhqX1UblazcvnTi/wc8us
qGYgDKh29JQEWF8Vs11BF8K/6zKr5vBqlJmrBPBwJhCYZbBRACEs0vl2e7Ja
HVfV0XK5KUt8ui4KvLOky2aA1km1Oltv8BHDbXp2fLQqi0U+Wy3Ks9X6FN9l
6ZZwfbiKLAhwhRMAbLHAr8yT5Gg236To8jlNiKzWZ8vV2aK6oIPqBL0D7y+W
u4QRiE3WabJCPwvnAfyj7c8QgrghmMj/BQwO6XE=
         "], {{0, 94}, {215, 0}}, {0,
          255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{215, 94},
       PlotRange->{{0, 215}, {0, 94}}],
      StripOnInput->False,
      Magnification->5 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"Trovare H, dove H \[EGrave] l'altezza del campanile\\n\"", 
         FontColor -> RGBColor[1, 0, 0], StripOnInput -> False],StyleBox[
        "\"Approssimare il risultato per difetto\\n\"", FontColor -> 
         RGBColor[1, 0, 0], 8, StripOnInput -> False],"\"tan(\"",InputFieldBox[
         Dynamic[Trigonometria`tang], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`tang, "42"], StandardForm]],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`altezza], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`altezza, "H"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`base], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`base, "80"], 
             StandardForm]]}, "RowDefault"]],"\" \\nH = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`base2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`base2, "80"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] tan(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza2, "42"], 
            StandardForm]]}, "RowDefault"],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza3], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza3, "72"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.704183008266856*^9, 3.70419042190835*^9, 3.7041905294566717`*^9, {
   3.704196271575998*^9, 3.7041962749981527`*^9}, {3.7041964742878733`*^9, 
   3.7041964784526415`*^9}, {3.704196694989596*^9, 3.7041966988998966`*^9}, {
   3.704196759314528*^9, 3.7041967620894003`*^9}},
 ExpressionUUID -> "02659047-7a0c-46cb-9382-c0a530a57ebe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0f88e0b8-3ce3-4fa1-9a35-135d50c33eb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio10", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942584421835*^9, 3.7039425886934366`*^9}, 
   3.7039483747941933`*^9},
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "df940de0-e5d9-4dd9-bf14-d9431f1b034d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 10:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 10:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["", Bold, 20]]], ""},
    {
     StyleBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
04f++BITQw0bhAY7Z7zqtBv8iAy2ZZmLohbihyZ/IJIvtI162nWtgjQMqQKs
5gACVGiZiazwcTsbQzxBFY+Ig0+4JdTXsYKaf0IPoS2Qsl3UlxXIa05l3SXG
l9mIXQgui6FlSrbTqpMPuwNRQox7Ue8HWjxFCqqHVR0U72YCjBoPrW/F1p8H
V9ciibVoYj2UiMfjq7FoOBmLryVWN5Jrmzvbr968efpsa3U9urGRWFuPbWxF
nz9b29lZffFy89375wcfXn56/+bw0+7p0aezk716MV0vZrqNUq9VHnSaV836
Vatx2213G/lhrTyo5a+ahU71vFE87dXPbwbFH9q1TuGodv6xUz66G8JQnm6W
TtvtdKeZrRTP8tnDSna/28h+Gea+u85/dw1ZfDZsng2aJ8P2xXUrfQVSpFFE
uqV41q9kYAOS5bpdAryAhgfFfjto3fTrf/nt5U2vlj/fP9t7U8+f/fTT3365
BMAdA9O+v2r/5V33tlO+bBYvIaNb57f93G0/e9VCK1buQH70yt+CeOgXr7uQ
6fc5joEAMLlqZ266hbs+AATYUtf1SQ3cDfBkNF171dbLsO3840le/NBohnfE
k5870HT3hPdjPmBcPFr487MCedyL8jhG3bPoPM0sgALDBMh6WYfb3KCJQI2e
WwXRAmDJ9OCE1dSwlr5uoZnlq24hc3oQ1guwJp84DSM7hWBiASlCByAfsSDB
6YYGbgqGe8gpdZoOovViOlIADmY90y36ojOTT7LSkODhWSaESQJ3H4fFJ094
UM3ERAYsfkQVgAmyJ5RsASAQD6ygQxaAAKpRKHjb4EO9XjhgG5yFUW8aNxGo
uDFJKVPwZsi/JyaBQj5pwi2O+QI4nvgC414eExK8D3zGJx5OF13ClDuAFsTp
faQQJn0SB86PqiW69zHqbWZGX9DoU1GA2dEnxNFSOH3iFbV5kLLNCx4hvEyg
JmHcgLfoDy8gCaGt4MVHaH1BzC2t+5RNr7RpcHIAChAndiHuDCQd8hqIkGmf
HHpxABAAjwMccEirS2x0TojOitFFIrjMRh1CAvUtU9o8GbTpbEHCA4AgRF2B
hFOMe+RVCEQPIY5WFkirQBU7G1lB65I0jxD1iPEVTrH7A3Y6YGcCLj7qCcTJ
wCorahQneWnR4xdZVQ2BkkiuBaOJUDwWiyZikXAoHI7FQmuxyNNE8sXa+ur6
6tbm5tpGbD0Zffly/d3ui739V+nTN2fHry9S7wvpT7nUhwx4lsxBpXhaLeTq
eTRV2iqddqrZYTUH6LhsVq9b9btebVAvtkvn3Xr6spbrl8875YNm+aB7cdTP
HaA6Z+Nk0Dytlt7XcnuXw/Kgl21W0/mL/Ux6r5IBRh20yyiuB+dX3ZPLVuqm
l/7utvTDVeVztww/e5T4ncplq9jTV7rdDpp3w+Z1tzpsFX/3+fo//M1f/Zvv
bnu1QiFzNujWf/rpP970WrX8aTV/dt2qfhnU7roV4MZ1q3jbAZ1ThgCGfO6W
ACPfXlXuBqXPQ8BIdWRAMExgz12/+GUI5qVy2yvqPEEwwQ4FDsD0QNKilbts
FIGlaNLkob7x0IKCqihYfoxEBYYGRs1o/+PVOo8pMeqGfcyWEZRGtRQ4GK39
qaCpHBzdUgqQ3q9j04SUCXoheEot1aucDetpcEZXHYDJflCfGkY9D17BQAgG
n2D0CRMkP0FwE4Q0oZcrwfIYYBD3o95vvWYCuSyguVQ3O+nkICac3JQ+JWoC
4YGMBpIiAJYpj4C6tdH0hwh3cUvGuEeY8CCPYySAKsyk7nGmCNHk1Yd4Mmj1
h8wkqrJiPQC3uNkDTaw4ONRLtvLQReYC8SABAQx+1fD3wWTCCw5IGkdTNpL+
cVCME0iKwOdCnARgEgF4FN6eGfW3q4aHqWFcOTFjoAGyCFRFmb4XXZFpKjzt
D4MyMel4QZNKPgnDxOpXHd7wEgHjfsRORWw+DVGF0pdMEkE7atmNgR8BqpDB
bX9ohwo+dUgJb3DDq2245NVlPjpHa1Mu/jfzPuXZ3pIQn2XCruCWW9u2CYl5
KTkvrzoFvROYT8xRmsHBjy/5xxYpCEDWPCXPkfKCX7XzaHnUigAvF17SKycr
0ppN1DuW+eCKFPMEwj4lbmeUGRcztUxY7X47KXmEMK1tiqF4IBZjtTAyKiBE
Np5GVreVSIRlRJpneSEgSYImydGgtBnWtsMhUeaiES0aCUbj8rPNyLuXm+93
N1FD6fG71PG7s+O3p3vPTz7tpPZen++/Pvn0onT+oXj+Ac3Ypg8b+RPwJsNy
4bJaGlQvGrnj2sVBIwt64LRbPWrk9yrZj83zDzeV1F3rfNgA/hwWs++q+Xe9
TqpeOSmVDgrpg1zmQy63Wy3sNqv7/eZ+s7Fbr75tVz/1mvuX7bPrPhiiVK98
ft0sXvdLw0ahmT8FddQFCdSudNF8Svevf/fl3/+7Hy973WL2Ipc+h9tv725u
+41mKdsooULBsFG6bFW/Hza+GzZv27kvPVAjpesuqBoABZwBZAbgoo7hgMsa
D1XQ8k03DzwBZQIb4IN0vADT8tgN6ZIDd5FdwHtDPGlkRoIEwwTXTEZVkREH
MB8wTPTtHJYQI0kzWvf3qGkN9uQfg0V/LpoDGomlqw5qtr+Dd94uXjUK/QaC
if5cYAia9dbdUKpbPhtUz/vl9HW3eHGyp6oIJlNO/xQqipJjTmrMQf3WSz8h
mG98whgpjvulcSowRgUmGTA1IoQRdXJyU14GnjLpoiddjMEDqc2hkf0h9IoK
CpMTBWrlcnH6mA5qJ/DE7Z/wspMEZ2YCRr884eXHPdyYnf3GRn+1SP1mnvzG
DrgQjHpV5Imd/nqR/GrB9/WCb9zOTDr5CUgfBz/hCky4pHEIZ2CCgNNKgI57
jBD3YUYTQEEDDaECcMxsyMRoRgat+jfzYRMfNrDaJIOsigHMC4guf9hEonle
IBgyOHQILfBHXWGKBZVY9flrtFYuMkOG4dboQZMsAJxZrzLnleYJBTkLSnN6
wi5fxEPGPERshQhDOHwQoQVCs9ORJSI4vcKbbPSMk5+B78fmN7npaYJfYJUl
QbPLUWd4Y1lbnw0k5qS1P13m/nSZN/FrFnHjt2z8CZcYE1cXhM0FcWtZ2XFq
z33Rl/TqO3btXWDrA7v6hk4880W2vZEtT2TbHdqyScklMb6kbi2r23ZtZ0lZ
s0sby0rCEd4iI5tE9CkReeoNbXvCW/7wDh177Y+98UXeCKHVQHRbTjwLxJ5G
n75df72/+fp9eOvFxouX28/fPHv56t3r3f0P74/291P7hxf7R0fnZ5l8tloq
FbKpavmi3kjXiidtGCU7qV734rJ90amddGqpfit7A7/nSv62m7vr5WF0vmnA
3Vwze9rMoWhkT7uli2ENBuiLDlrJst+tnly2Ty7zR58bxze1o35j77J91G18
qtc+dVqnP/7Y+/KlcXNbub4sXV7lPl9nvr3Lffcle3e7d3P98fr64PPV2d0g
dd0/v2qewY//qp6+7SOr0iqc14sXw1bl6qr1+XOvV2m2S9XU2fmLnZ2Xz56d
Hh5m0+l+p/PDd9/f9S7vht3Pl4NhvXTdrn3ptL7rdvvN7FWnBAGO5qoNmV7B
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
MI5nj2rZw3ruuJ47wpM1aLZXv+QOHAO/zFYlhaMD4zvo6lbuBjV6VXCFsN/I
XTdAlpTQlHEj369mPveqN63iEBKwngUo3fTLg16pC5aqme11kA656pUAhteA
iDaK6+7PnR449TBMAC9wFzdaQPLCXWxDIB2AJFV4z/ljOPI//P77//j//i53
+h5SFfQMnAdyGQ7Gk62Pqxyj3P9PrarDWBiVUDDHHhuZXygT/H6wHcM98/j4
EYj+mCd6oTWDuXHVzt10C5gnsIGXCfyBONFhctk4HzbP0DUY0Sqbc3S5lfIp
PL1ZPMcXQEAXNyifoSVFyKuChjkfVFHRtVe96MDogPri0p3qKagasDkgY+Cd
ZE4PsDIZcwcgJrzyOIRPnnRCyktTbmnCKU44IWHB46BCqJEOG8m4kUiYuJAR
1Sdj6JICEHzUSGso79BI/RD3jWQKmoSlYgZ/DNzHuE8dJwJ6p6toJILT6LI8
QaODN3tQhXbK4f3T6YV/Nfbkn//a/K/HrN8skKiFg4GTR8Z94ScABy84F4jw
GJzHpxmAHuhyIty4Lz7hi5jcEeCeAZSSHiZ30OJD1w0zesP6UsHwLOocCy1Q
UQuroguigmdB09ABKynP+gNWSHZGseobM5Q4z8qLnLIkBBd4FbWgQwhhG6Mt
8tKyoNj0WBZVm6g6RW1FDDqkkFcIuQXNLQSdXMLOqCtsyCXGCSXuUSJOMeQQ
ZRsjLrOSV5LdorTC8i5RIoMhryIzkU2/FPWrMUKMEFSQlyLR6Obm+g5DUAJN
JEPiWkheV+XU3u52LLbOC4lQcDMaWk+ENxKJWCwUDkfiq4nkavLpq1fP3jx/
sft89+PLg5N36dRRtnCUyqJLc2RS77Lp9/n8u2LhY7HwrlDcLeXf1yp7vcZh
vwnS9wSpgoquTOrZDlrGlelVMmCc4XZQz+No5M5A9NZzp3Db1LvT20UYvM4b
hePHlycdXU9s1OrwWO1ft8GV5AZABhQ5jIJbfTZB1xJl/dI9hbsOsjY3kCmN
3HfD+neDGlpAB8k4KH8LOuS6cTmodNuQSmhpvA4T1PGFrssBCIIsbucf5x2c
+Xd3HbwuBr/JUb0UX74MMhdGZHRtMV0S/PWPV5njd8Ac7HRgAx8JASf5exXI
L3iCH8KvPqLBqLv1MZFGTfKjPaOrCvwiHi/iG73QEKxfA0CBbA6gAwMEyPAL
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
D+JfEEszK04tbaRsIR2ex9X3yUvk2tJ4wvGglt4MXgIIKfSli8JppCKVI0tV
ztIBnjopZA/hCSmF6C3wT5VDeuIYPaJDJ6+eUhfpbaHVCyzkslNHKVVdO8Vq
Uj6jY7pIGYBCxxYbSEsIjLioPYJgItf2YY+FqSN5eArb5DAFeUVWxXxXsAyQ
EwImwEBgm6tsA1cBYEFdfXZPZ/exiVgVmMkWV94CkAE+o9M5Ew4mbk72WILg
x1ePBX9+fHn67cEFGLBAKt4aXPxR3+hfXZ18e2juvf6Zd65Mv3t1/GcDU2dH
Fn/WP/Zn75575+L49z/sH1z4BIbwD84Nvz80//bliZ9enXu3f/6Da0tnhlc+
uL78DiDSpcn3rkyBr3FuZAV17DERDu1d1Apb6Ju5M7p05+y16XNXBgevjf7N
69++Pvl3bWLmh+9eeK/v+l++3/fWxdGzY8tnTzoMYoH/9aWPBhfODy1+BDA1
OPNh0lDm7MjMGVyUmT1/bfajkekLY3NXJhb7xhevTC0OToAtwfDvn1g4f3n8
4uDUlZGFofGlocmVsYmlsZmFyenl0cnF8bGp4ZEJsOvDYCgCNjQ0PDQyMzax
MDa7ND67PDm3OjW/Nr2wPDW/PDo1NzG7NL24Nre0Cntml9fW1+/cvHX/yeOn
jz59+OLpZzs7m/v7mzs7L4rZXbpaqBZ3aqWtKkqS7vDVPZHO8vV9trJdoxEK
uHqhWtmrFbZ1hpKquY0Hq9nNe5X9Byr8lNXtQMq3TZqn9jAwyGYMek+vbeMK
bAWI6LFkqFTPnLSehJu2qPOYBga3ipfkOgY6DQwkVKhIZps637GktiV2LLlr
KaEhJKu9mM7qKmzTxTApGaq9IhvpumdvahZOmjDSYexo9QDAB1yMhEhgjpmK
qlzwkoljHAV2rJNF0l4JIKJYeErINCUn8OopMCHqZOBkASnqpRPpyO1Vayfv
JbiUejpvmEyP+5Ce5HcIB/Ws2pD1oFNI0gsj5Awpwfhu14leikKwoveCU3qT
HpZW/qYwkvYG1biSypXcxIUBmgEkBKCD0A9PqZKdABoAI8THIdtvmElicIeo
ScYgyWojeKKycEdldR6T3ABJDC6j8HtSbZ+r7wLIwEsKm7O4kiPABRR8/c1q
ztv9Uz87yVZ9bxh7XH4wsghs5AeXRn96efI9FFydwZ5c16ff6we4mPjRhxfe
vtQ/OL36g3N9Hw7PnLu2+M7V8YuTN7Aty9DCz64tnh9eTTpTLL8/MP923/SZ
obmPRpYvz9y6Mn3rPGqbr12YQF6BAun9U+cHpn928drV4anpudmf//zV67/5
Bi6p8/Uv3nr/gx+9+8HY7M3BmZULw5jP/9HocUtQAJDzI/MXri+cHZy/NDh9
ZWr+8uR83wSu0l6bWL42uYS4MbF0ZWTy8vDU1dHZ/ompwdGpgdHpq8MTV4Yn
xidWJqfXZ5bX5xduzswvz8wszswuzs+sTExOTo5NjY9OToxOTYxNTU/OLs0v
L80vra7curl+787N++s3766t31m/cffGjZtLS6svXm6+2Nje3tqD/9s725md
vXw2VyqUq9VSqVxgKhW+VuGYSr24z9M5Va5rbFEV8ho4wuiBwhivuGLZhJ9b
KNqYIcDx1f3cS0zzEMr7e8/ucZVNkdrgqOeZrdtU9lN4C1/aYYs7fP6xUtkW
6ztSHY7c4UubCcPBmlNLrBoJDXAwqawKT7HFCfZAQeIBMAIuUiDXYl08cPWG
LrYtJTa12BQiHbwJDtHAEhq2SIIJvXiSjneibPzG68F3seR4Ij94GBvdUEPd
Y0cg0mGnApUpMyFQQPgPWejpLd4npIKUsqbk4VhnLInHhhYHGykypDFMcnw6
eNMoay82pulk6ZhNh3NvOW1vLmvqHKXBkFMJrgTWCI1JfZM0k6TXaUphobfb
BeEh6YWlV9IrYUQESXpYTRn1q8USAQqR2gUDSAEMIY4PgZf/P6vuI5iwOQIm
5BHAJOkaloVt/KOEvC0WdDELt67E5VRsO4gemSVmMaKLQSGmWthfOpZtPGkZ
mfSOTLpag4Mz89al8bcuTwF6vD848bOh0XMD4+9eGfzR+Stn+y5fn19bvv/4
8uj8mcHRD/tHz47MDcyvfzi8cB68ifHlC5Mrl8ZXLowunR9ZOHN9tm94rX/8
1uWptb6Z9UuTqxdmVs9PLX0wvNQ3e+fiyFLf2MqZvuH+oeGB4ZH8/q6hs5Qg
bmxn/+R7/+/3f/r2+PLNyRv3B6aXgWD0ja/2jS9fGl/uG125gqedv3Jt+vL1
2Yv9Y32DU5cGpvoGx/qGxq8MT18Znrk2Mjk1tzIxuzI+Mzc2Mzc1vTgJNjs3
MTM3ODo2OT4DGDI9Mzs9NTM7OTk/Mzc3P7U6P7cyP39zZe7+7bVH9289+/Tj
52CPH7549mz75cvMznZ2e3t/bx8RI1/K5fcYtiYzjMSyMl9TBFoTGUeXbE06
aMUN34kjq+m7ninr6OPjlO2pNXTqeZgyCo5UaWh1NLVWK3wm1XMw9sH9LGee
s4Utkdphis/r+cdM6Qldeprduk3nn7pyGSglX8twledSfTMhHhkdxcQyDsph
0R1XbuhKrEuRLoa60FSUtqYdGFbT4WNgApbYNtWGLsSK0tSUruU2VKmj67Ep
N23MGo0suglzvVttuUrTlVM86aUQ3zUSOE1VvwA9AFKIgjrZ6AWlFEB607eI
g/NdMCHw1Qtrx29RsLWczVfCJD/NI9HRnsXT3jOniES8ttRx603b+G7BHcGQ
3q6ap149lZKaggnsT3vipGByirT0+jgET6xvN/HsZSC9+iTpGwlYYUQFDVts
AM0AMAFwECo7ACBkmzwShOk1AiNwGBqFUZGkldgeARNMQeTBp0Oim0Bi1Rb3
bbFoKQUDLkMqmQJY2ZCzJp/xkiuHL7OcPU6nPzO28m6iSZgU3S8k6sezZ5PY
CCDDxYnFD66Pnx2cvIRtDqbPXZsYGB0ZmJy8Ojo6vLxyFXO65vunF8+NzWJm
1/hC3+TSpcnFi5OLfTMrA5Mr/VPLAxPrYFdQMHD53NjyhYkVsHNji+CbfDAw
2z82/97FgZ+eOfcX3//hX3z/e0NXzk/MzU4tLb7z7pmP+gevTy8Mzy9fGJ0d
mlvrn1jD5dqJlWtTNwamlq9PrQ1PwvZqf//41YGJ/sGpwesT14anR8cXxidn
xybnRkemRobHh4fHr1+Dx8mRkdGJiSkAktmZ6YWFhbX1G7durt25e/vh3ZuP
H3z8/OG9nZfPdjc+K+zvVEt79XKBrZUZqlincmyuLFM1rcYonGAonGcqoWPE
rgVA4VlqpKuxqUem3tD02JBg0tckXuFZiaUlrsZX9qv5nVrmpVjfr5e2qP0n
pd1P6/tP69ln1cxTevcpu/ussP+ELm+y1KZSy9kihe1daBQ8j8yKo+Yiq+Lr
hXbEfXlgNlD4VOsGzGHEH0bcYSQd+OpRqL6Kzc+bTsc1O67edu2max45/qHj
vfKCz924E4hNB0Y33zalrmW0DLNlGF3LaetGZCotW204cuyIocuHDh1HVNNV
0yHcCyYpG4FT9SilC2lIk6yPkGGbMpk09pJaGgVNhzAZ8qeGeQoyvXiCwVs5
6QOVdHtxxSo8xdzXnghMilSpS9UbPU4/moz9U2DSm9HaO7pTTEhXbXrzQ1K4
6NU6c04kiXqdmlMdhNPoR9LBHLuFkiQ6giS/s1N5iiTHfXb4slbPHPssTO6U
KclLJyRkT61nyVoPcXOAz+hMHnwcFfhGQk4SylG0UP4oqwkZld83laItZlCg
Xi1iBbdacWQKDtDEjC3m3ORPS/RMjsHk/bGVd67Nv3Nt4f3x1bevLfzwytTb
w8uXZu5O3Nscv/38+ton/VMrl6YWB2dvzK7dWbr3ZHBy8q2z5/71n//l6OLy
6M3b1xdvXJ5dfetSf9/MUt80+BrLl6eXB8aXhybXrs2sAIcZmLx9deLmueGZ
M1fHPxyevji1fnXu9qWp9eGlBxdG1wYnVvpH5iemli5eufiP/+gPv/en/+rC
QP/U3MLEwuzyvXszN+6NLN86NzDdN702tHRnYP7+6NLD0ZX740sPJ5Y/GVt+
cH3xwfLi3YWFuwuL9xaX7q+uPrp199O795/d/eSzJ4+3Hj3c+PTR1uOnL5+/
2NnYyuzsogLHy52d3UwuXy7myqVKpVCtVXi6LPFwd4kumMr4BhAJLbQUNFuO
NbNhWC3LDgwj0I3Q0CIThqHpqZpniIEmgbmK4PCcyVR0qiiLisjSIstoHCfR
5VoZM9IVvuAqdY3P4sKKVo7Vii8VPDEfSuXQAWekJlA74P50fKAEXFOrfBNL
v/nKedXiDmP2qMEeNvmmz5hi8SBWfnGkfN4S2l6147FdTz4M5YPQaPtawzZi
22kH3iu/ceRFXwStL4P210G3GyoNGP662DX0Q9vtmGZTNzqW3VAAA82WbYWW
ENmi79Z9nwr8SmwrsSOFybIs4gAaSyw02QZZMLWFpic3EgN8I3lfsB/cHCK0
TpZcewUMe/kGYSwkKJqCSRpfTUk+2Z/6RHgxNh/rXMPE9SOdKWJpPAGTJB7b
m/6RLqE6Jy1p0ohu7/Jub7SErAQREpUW9KXZIyRYRFCiN8SaBl5600tSsCJA
1Isbad5Or8dE+l+k7YPtk27Cvewo3UPaFhOTsXBmP0kyKaJoQ6LOavEkowwt
SUHJaXTOYAtwjAlghTknGGlxk+OtJGOWmM4VPKMUu/CVlk05rwtZUy4Y3A54
OpZa8AAedUx1w4x6Yd+VCz4KO9TC46rhxM3pnz4zNP/+wOwHQ5ivdWlk+aOx
2QHg/jfur3z86cef7d178mJi8cbVsYlrswuLNx98eOXsP/3nf/QH/+0f/LN/
+S9Wbqw8ePD4cv/w+Svjw4sf903dPjOy9u615Z8Oz783OntmfObD6YX+oYmL
g5N943PDi/cGl+70zaxdmF3tW7g5sHZzeOXmxNqtlRu37t279+z+g/ur62sj
1xOV0TsrS6vD49MD14aHRsYnZ+amZ+dn5xenZ6fnpmamJ8amJ64tTk/eX5t/
dGf96cdrj++tPr1/Y/vZJ5mNJ7nNx1Rmg6uAO5AFvyCZWaoyXRCorEjvCWw2
pLcaYq6pFFtKKRJyDp/xJcqXKhHmYFO+XiMi/76KbVVtqZykl5cUGrvbC5V9
sZoTKQT2eu4lU9jki9tMfpPJv+CKm0J5W6WyEv9UET5T+R2N3zZwZS3rMmVP
oBoiG0lMixfaotaRtSPd+tJufON0O3bhyK195WtfhvYXTtD1Gm3bCU2tYWlJ
jJGMEXD8+aYN5MQ48M2OYzRcpeHKLV898PVDlz+02Fca/aXJfONyX3vKK18C
a7jAImg4uGWpbcdqmHbDMmPD6Ro2UJe2bnfATLlriIcOf2izR079wKRig2sY
TNPA6R4XccCbMDhPlwFzAksMrMQZUdlArTbVWkstejrrnwzS3oF2qtXLKXKS
ugAEXgB/2tghQkhTvFKXh8AO4SdIUWyMlsC1WclasKvV08Bs6nCRtxB1srQ7
Xq/n0pvfTgY1ClAn+/822ZAUlODkqT8FB6fVPanP0htpgTeeCpymVKc3cpKu
FhGPhjg4b9yZE3JC8k96mAl6OnqSAavxeTA5CY2C5yLUduERtoF1yEwGHlHJ
TaFIRn2y3ofZ9TZKnaCdVAhSFmBRYnYiJgNujiMXHQlDQJpU1KWSKuR1uYQv
qXlXxb+iF0xIOPT9oekPrs+dv770s6GJ80OzVyaXhufXJ1Y/Xv340+m1G+eH
Rj64MHB1fGJi5cbVof7/84//1X/+9//+P/mnfzQzvzi7tPb+pb6+61NXplcu
T672Td/um787sHxvaPlW/+L6pYX1kanVwfHFgfGF/umVKxOLZ4bn378+d3Zq
/urCzbHV+3M37i6u37lz++7Du/ef3v9k4/7d9Vt3lpeXJ6fnh0fGhq9PDI1P
jk7Pjk8uXhufHL4+PjwyMjw8OjE6vjI3fXt97cGd9U8/vvXw3k2wZ4/uv3j8
YOv508z2s3J2m60W+FpJ5WlFrEhcCUzmK6rC6pUtrbprMVmbyzvA69isyZWx
2RBPcsIrloChSzCTr+hYv1ZJjJJrWaxcq+c1tmTwleL2s8reCyr3WWn/GVg5
81k1v0EXd1jqJVfdlJgdldvVBfghyrHMNHWuqfANlQ1lvimwDUFsiVJbktuC
fuCW2lb1wJWOHL3tGB3bbrl22zUw9GHUfa0e6Kj+F+gccIaWaR0GWsuWIxNL
VDAu4SttV+i6fFOvH+rM57bypa18HmhHrtz2xIYtNR296WgdC0ztWFbT0Jum
0bSM2NAbpgLEIzbEJqaZ8R2j1jXrEXgrOh07MEHzgc44GgsWmLybbPgK+hqB
wgSonFYNlKp3ksxJeEWaWJ7WmKSORm8KGZnNyXBOA7BkqTd1mno71qXvPc4Y
QTChesObvSUt5I0EE0hv33Sp9zsaZd8KdKSLxWlqR+qt+CdNr8gqOZyHXCQB
IvBQUhXW3kUcElk9tRbcm5z27YDqt6wXN3o9nR7nCC1RRjoWHyDhU51k1wNW
AOvorRrGFuo5EhshTwmSnK4HFN68hN+AVMDaQKBGUkkD4BIKhlxy4OKlLEy1
KG6j0SmYXJxaw54LYytX59auzt/86Nrk2aGpodm16wurM2t3V+8/nFhYP9vf
/7NLl69OTk6t3Fxcm//zH3//7/xn/+m//pN/OTM3Oz01d77v6vT8+qXhyauj
i5cnl/rhvfO3BmbW+ybmL46MXhubuTw4dWFo/MLQzIfXJt8bGPlgaOzD4amP
RqdHZhYnllfGZxfHx8fXFheePLxXePni8bMn6zdWgYMsrSyv37i9tnZjaWXt
5u0Hc7PzM3MLC3MrS0sr9+/cfvns0c7Wi8Lm5tbLT18+f7jx/NHWCyxXye1t
UeUdpp7jmAJTzzO1fK2yA1Yt79SovWot67J5mytYXMHGcldgcXmDwy4hGo1i
PipXkGsF4CGEiqBVcwpdVOrJfIHVKBUyJ0rHC7I5MLEGHDWj8yixq5sA+EVH
K7kG3OfVSK83bLFrSW1bbml8S1NiRYgUHtdWJCnktcjPRG45suqxLoQ637TU
2AFPQWmBe+LzkQdeRj12YLipXdc+9KOWhzGQhiVFthQHYsdX0N2wpKYudCyp
a0sHjnzkKW1PbQLmJEUxTU9pIpNRGoHUdmWAjpYjw1Vh5a9xkpyGiyOYke7p
VGCirCLJYMcUUxiwJmPrWFhHdNQTQ0ISqfCWbykKpkshvSV+vZDSu76T5s+f
WmrpzShLHaXejBRSzNt7/l48SVPQSStwMhIJK0gGMjgRZFWXck9K/+BHVNli
mi2P9cvim0XhVFctgYha4nQcgxJhC+mifO8w71V+7oGF4qkklpMQ67cSTuDt
yYUVE3sTNkn6Eb+xRJ0VYQTuNKAW8JgiA1EkgD2p2omRFAgTJEmVT8hyMGwQ
zCF5sD2oUjoGE5ky5DLqWQF2yWVHpkw56wBY8WVf7wGTicWkLn5teO3+2NLt
j8amP7g6dml8dunOxyv3H91+/GR+7Ubf9ZELg8MjKKGx+Mn9m/1XL/zXf/B7
77794xtrC7dvri0tLTx9+nJ0emkETjK3Ojy7Ojq/PDIzOzw7Pz41O7d8Y2pu
aWR+fnhqaWhqfnBi8drU8sjc0tD4/MTs0tT8ytjo5ODQ1fnJ0ad3bxU2X25+
9vTWysLC7MSDu3dfPnn8yf2HDz55gOnmn73YfP5i6yUwgaxcg59Y9CXZExVd
gO8fQB7uXpgQWex8ZAkdX23B2LFEzOe0cKRg9RkWg4gxTKZCyWLz5nEeIJIN
icrIVEasYxMWrrzPFFELCB5hW6hu89R2oqm+r3HwW+ThESw04a6uA3nwVCrQ
a7HFNh2+60lhKIah0PSE0GZCokauYwSyBc6+LrQssWkKTZNv2xpYx7QiD7zU
SuwwocPGruC7UuBKnsXHMYCAELlcEn4UOo7V8dwDNwLvpmElJSqW0HLVhi+1
AUzgXTrb0vkDGxiOliCJBDDiOYLvcPhXh3wUiI1IiIJ6EFKeX/G9GnxuaFV9
EwYLDEbBUVlLFm3wphX403CZGPPYYabW2UR+ENGDCJfBl+xZMOhQAM3T6umK
5ymlwdRBOFXSQmChl0ucCpymeJJ6T+63lT2IC5Mu2vbgCUc6XsEjAY1kgMMM
C5dHEVlUIrwMIxEe4alM54mRsZmoOzJJAR2MSqr3vQm8VMkJE8F2fIrJHmwR
3p68RKWvwn7y6aS0H44heJWU+ZcSRnF8DBj56OS9b3b2Grna32VUcjfmiYwA
wQ0tFZtKUAJe6pVO6lU+IdBhnKgQENJC3pjiiSMXXLmIcRKxSPSsYMNCtav9
5IBvg8nUysWp+Svj8wPTqwPzK2f6x9/96MrZ/qGp1ZXJ1bXFm3eW1ldHp6f7
R4cGr1/vG7x27vy7b//kh7//+//VD7//p5cufDA6dHV0oH9qfHx2cnFqcm50
Aru2jUzNTk/OzMxNLQB1WVqenF+Ympufmlsen54bHp8aGZ0dn5m/dHHgytXB
q1evnv/ow3Pvvzt4+eKNhckn92/eW12dGxmevT50a33lwb1bN1fm76yuP3/w
6NN79x9+fOvlw08yG89r+/tSOc/mM9TOdinzrFbYZMo7bHmXLe8JNFhGZLJi
spDKUpt8bUek91Q+Z8olcPdiGcFEJYUMdEalMyhXXtkHpgEmwluKe0xhJ5Hy
2BWovMJvi/QWV30pMdsq1tfj8plQ3cOfRijp6EgWNbFgKhVHrwYWbRucqdIG
yo2yvo0p31gwawqRyXdMoWuJh476ytOJfeHajQbViuhuJDabSqspx57s+5Ln
MoHLOg7tGVXfoCMNWITZMawDPWr4MrAUz5QwQ8yTowCXYxo2H1gs8hNHbrsK
Eg9H8x3FdzXPYV1AHk+Io3oUApKUPT/nB3k/qrhe1XSKllm1DdZURFNVNFlz
DcoDMq+BK8FHWj1CBbOar6L7E8DIRYeL8XTOg7nbABOCpL7YPelEaZ2IFlo9
+uq9S6g9yu0MiZqmdbKn8ru8E+XDUxlcxLvpzTXtgRQAn6qvw1OAHZy1HaVC
QmGJOGEt2TgWSgWDnRquZWRUNktmimSiBwehTJ4S1aZUVTUp9gcPokjMwCo5
GMhZsHQnGOzEYt7kDFJ9T6b3U4MjFQY/jpycTEypiCsx8inEyB5yGd81uCqS
qorZqiwuypBtMJI0AuOdgAkBFhTGVOHbg++nRmSUyCJOSl1SJ4hIFhAwsQS4
wlNgUvmdYHJ1cqlvfOHcdax7BSflytg0+CbDM8vvnr/wwYcfXb42ODW7MLM4
P78wPzk9Njw2MjJyaXZi6P33fjw1Ojg51Lc2PbU8Pz0+cn1sdHRseHxsfGJ0
bGJseHjy+uDYtaGJwcvXrg9dGxocRV3jkamp6ZmZmaW5haWFxY8//uTRx3cf
3Pv4/q0bDz++s/PsIZXbYCr7QjlTzWzQuX2Fq6g0zZWKfLloixxTzNHFHF+A
P7YWaUqg8T5fNypFgcvoShlIuAU3DzxqNVOtmUoJTJMKCp8Dg8EOjp4uZTQ5
g8VNJ0mAuDoGmMyWtHoepS8TAUyVQ70OuQ4vlTWWiowKLrKLeQsgWiuHdtXR
ipaclDnAaaUET3Cj6KgVT6s4Lu+gTiljY24VFzpCE30NoespXV87CPVuoB3F
5kGgdzztwDeaIRPGUrMptyI9itQoVDwXBmnV8zgAk8DhPY0NdaGhal3D6uoB
uCdNU45MObB4D7iWD8dLGB3VwCMQYitxgjzddxXHlnxb1ey66XAWQFNAeVHd
9ktOlDfDnO9nXadiO0X4LNOCTxRNTTc0z9dqromK5Z4OPhobmNWGDlZr6lWg
Ma5eAwoE876hsrrKaKqEqmiJp5NmyaY4cIp+nAKT4KSj7qlcfe9EUCgNUKRJ
Gr3JqGmEs1cBAHwQ1IFPOD+JK8LjSQ8suCQ4YZ04AmSaJqPp1DhKBQ/Tafo4
sCAcJ5yncQZCAL5rZPwqST4YDm0msSSjQ0mSvtKl2F7h1u8a+h3iMXkAEOhV
cyUXnzo1afSj183xsWaz2ss34DEFkyR8evwnpGDyBkmSsEkSiUU35zQzAR9N
zn3Xzbk8sdg/vXRhbPbqyPz4yvrk0u2xmZWZ9fUfv/3uD3789k/PfDg1M7m6
vLIwPzM3Pwv/15cmV5emP7698OTe6vxE/73lufvrq+NX+24sLt5cxQzROzdu
3l5evrm2cG95/sHC4sqNpZu31x7cvfHw/q2njx7svHiW29uq7u/Wsvu13F49
l6VLe2wFWEFB4SiJyTkCZYNDikpQjMlTKl426xqirfEAKaZQ9SV0KDqGEMm0
je3hMLsGA0SJnFdiWYXet8Qi/LE2tiMpozAgV1CS5GFUl0oSjLGaUixhOxUJ
5dPTBCqcKFUUMPRVmH+Fg5Br2bSP7gDV9JhWgIkWvlqLfb7pC61QbAVgArar
DtRmqLVaVqNhNAI1wNUWGdyQFoxuR+qEWicyjkLlKFAOGmoL9nti0+VCG1O8
PJcPwCXxRc/lHJszDaoZSy0ffBzAIqFt6G3dONLtr7Vm0xZ9TfBlbAuFDeMc
MDEweBcVnvnYFCMDPCDZc2XHEm1DVHXacBjLpW2vZvtly6csvxy4Fdcp2nbB
NmnbZuEw11Yd27BNJ7JY30w62KpAiioNvd40qTZcj0k1tFqY1OgZWt3UOEkT
RF0M1WpgMCnN6DUSDElzVLwedaAUT3pXdk5xmN4MtF4Acb4t4AwAkkQbqCSa
QeZcbPKi80UDEzWBmeAejPzAG1HuHlz+hPzAL47JIZiFhR2mTlvFSgy2sWUM
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
P/zev/cf/cN//+/+X//xPzj7D/75/D/+3p0/+cndn3706NKVT1aWX96//Xx5
bmx2+v1Pn54pK5dfVaigsh3TpYgXDxT3wGi2jNAXLb5Q93m1rZtNVWur1oEV
HZh+izOV6NeMd1i3XWCZTMtjGzEbNkWzpVuvPOswNIBR0R5bbqqVLx3+1w05
U8pXq5ztfSMpB170Tffot7/57et24+e//PKbNswCoZz9bI3buxlpj1r6rY55
wwQ41WvgDxp8WaoVFRbGEd8NbE/m5FpRLJUdno8005MNhzMbSsO39l01YxtZ
U8vogCTJ9Ac3qiEViZlSQZEoVaqAyRLK554IuFXAzTekKvg4plgF58hWaxY2
+KsmlbM0kmQLBk7NU2rH0QyhnDoXxLUh/CFdI4ZtGOMEMch+wkxg2+kBBJJe
ktIbgk4AJg24edQaHCxRu0kf8CIJsKSsJgUuLDOH2QrzPFkihoDlD3o9soA2
w40N93CNlPcmCRJMEr6mTi2yfNdsGYCuZqFVHQBeEXNXzBMdVxQGZItykqEB
biM4iRZPudqxYh4uxKPVSJSmB52oN/lsUgl7oDMJgVFIMkwFKxSSAiL3GEyI
Biyu5oSYeAasQ8DwWSB3Y/WoqbfbequhtBpq25cAT1qhDDhzgJUpWqtpNYDe
RlqrYXY6+qumeRDLSdma3IqYVsS2Yw4MEKnh8ZHDtDGaARyDw0AoZn1wWDaC
QQnMeCcG2JIIo0mRAVTkdwgR99Z3nDJS5N57MGEXgCTdUAMWBHiSygO2A0yt
P86ut+V2cJw/n+Rmk5PzRF0HLDQxvtq01IalNAFyk7BtpMF3JbYtqbj7FNC7
iZ/ItiLl3/689c1XcWCL+cKnvLIjqHs1dkfUck7I+4Fk20oQWUEY+JYbOEBk
5EbovX79m393KKy8OPjv/tcP/5Pf+/5/+T+N/f7/dvt///O9f/bDl3/4xwv/
8z859yf/99X+S+sL42tzw9fmxn7y5M4PCtm/pDMrWvVmw3rRdYqRVogUqq3y
Rxp/ZAi/DuRfeVJHqQT0XkupHDlC12Y7UdgJNdevOy6leRXNrak6duNwdNOz
DKBnjlxyJRzg4O+A331gSIdNod0qvn7dev268dd/E0dd9vAr7esvdKG+83ls
/eqrCFv/KJlQ/UyvrnKVosFXgezB94CSxWzBkWDKBqDmsTCTqzYsuHmMUKCt
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
0q8Sbs6GnMuO27PcGXcpS0aEUL0aEsCjPyzQAo1zlJvnGEZgvAzz2Gl9Qvif
s/Rzin7ksuZYs/I8hleSW7Sn5gtu5e8/fv9beWiWx8/e26LLms59dtWdvK/l
p4fqD9/aZdqOT9cdXPH1j4eO7stIO3r5+Ao86xvBcdCVtkem786YOb7vsAHJ
n05ulby6zbiFXSbN7z11yejFKybMm7R686ebNvVOT5nkfTjQcbuF43ol8/WS
pisYfr8EnlaCfdiUyWhAZzaiM+rjhnqcvb7gSOQcCYbLJTx3KgYyqwUzquZk
VnnurPNfPEHxNnS9SCCfNgn/1oOVO3s8XRhnN5+xrWxpINoqRD0lH1Elou6y
v0tdX7BTlUe7FGULhrXCsO+xUqpnUkl1TsrCxx9Bz+Qqhr23496lfnO3zVpt
HTv73KyVO/aeufzkH+X5P8oL5Z+/lb9cHm/K3dRtO08sWXd8wborK763bD1O
7zgpHr4auJSWd+7e84t3Lj+wW57+/jwY9gcYk+i9HyQeyES66NeDa5Um7TTl
oAFbd5s5l05yZvHgJohnMXBMHmyIo3EDCSdAGVXxPQvAFv51GYaJhwKJFq5I
mF1TRShWA6bNg3jbD0GmMZR/DaegX2N7/GODt4jUaDUkWn5HoyraOfAEpDao
EBdV0vLQYTBq3Tca9KEzjMVD5ELAtAWTxpCpPEASxgiMp2FvDvhVZI0CBcc1
SoxFoOxq8ssCy+n9etKvJ3C9HyrQqgZriVXFJwhlUGkfCuCTBokEH8Qg+a0i
rk7YUcVMAJgQngzGl6UKcZsEvxksW3NW6qFD+wCYZAveHNEb5d1h1hnhVDBh
oQVVKQDVwXAChoIkVYNwbC4Zof1R8CvljlCeKOWCRsKatKhaSashCTINTGB3
P5RJcaOSEplWG+vUdmB1mQMwsYd5pxqQKQIK1asBDxCSqAkmmILRCtXU0G5h
ClhTNY+dTw0M+SeF5Ih1Cz5TNizo9XAOo1f/kLZlBXC1FN9tgyXxHMERbj/h
4xiCE2mPQGe7DNmk6ylHPqLxHJclZM/IJ02/R/H/PhUf5fn/Uf6T80KZs2Z/
lWbTarddkzT0eL/lh2Z+c3PCFz/P33zw1I27BtNtFr9QQPwUNS7M1k0Vbw93
3RyQ7Vl3ct+Qi2cXXjq/8NiZIz/+tO7I6e2HTm/ee2L59h/G7t43aOc3DS+d
aHDzfJWbx7H0C5jpFyz9DGa6WtJ2s4zxQinDxdKmyyUyf8EMV96x3XzXe/dD
771yqecx34NKjK2Ox1TN76ohBBtL0USK/vjBk3amvK54/mAjMTjLPtLuTia9
Y7OFsUGyQ5BrEOUaR8RuL/Lm37qY/ODKN+f3LK7XpDqG1S9d5i8IJiUVrARE
klKYUu1DD4bFYzUGLNtnnLIxo9+n5zoO3NZ14J7pC7am2QpQSNniYHb+dGTi
9BWtOo6tmDCiWvO5Cb02th2xr+OEPR1Gf9c9eXv/WYe++enU4dN3+cCzx3nP
f4uGBY+Rd6QJBCydYgkrQzoZOCHdBlxxwf0w6E3j4PQ0yPrVATfgSs4iPUYS
LD01YELB+VBaDsLAetJV+TKrNngr1rRFjeAFrXS0m8ZZNJ4SCyyaCLNGBFSK
8UZAJrb/TgMQFERFxCq25KwwRAwnrVg0KQNYuA4TKHpVMQAKlBX5V68DtqpW
iZErPDELdKpp4BrpBFIP5bBY8BIj8FJ4Ri9CXQiTBD4mYFiMXaAtPOXgCBtF
2Gi/jWXMDGOGtTGEWRVlMvDgsdcMy05URWuOMEiEMUCrQpQeVcreq04t90Ep
bKR0LUEhQUuY81r16T8fgeJIAEbA4gIW4ZxRHg8VgQmChSC4iTM+pIgYEfxR
mXzKcY9YJp/Bs/3uELinE46QH05yyaE9al7GGYSmFrgCo9QjwNYe1aAyqg9Z
BJbTqyJpcFSuFw7TpC1hwQmL2NUYS1TCAZgA3xW8MC9EoXkHLPA9AGuGAG6G
VZGEVaVmUDoePFZHihca2AEG9kkbOJoqaICjEd6MKytP9j8PkRHSwzlNks+a
DT4gS/FeR4Rns2VWEFiS9rMSzYmcl2U55ldJzIiEnBHZwtMZjP92tpT55yvv
i1dkhuu2gbalePFGA+diVYd93OWHhOG/9l52eOmP5lkbb6/adT/VFAiFIs+D
pjzvoVDGvBx98mPn2Efe5FeR9W7Hsuynx3J+O5bDi7j1YUi2+8n7WY7TtzK/
/zVzzeVfx1stE52GnsZbdR13q5P365guV7Zeqee+1cZwCbNcwcyXsIyTWPoJ
LOMUZryAgY03f8ZMqZjTUvK+GfvVjN3jsLN2bOMV7LOfsPW7sZ+OYAf3YacO
Y/cvlzWnVqVcNZ2Ocn6qnCDXZqiWTvPg8WPLL1k6ccDEGd27YapzQhfGTDCl
RGEMdg2G1dtiVPpvUub/pHQYd2L4rKtDJtLzlqxdvup7myfi9PAb1m3q07Nn
rVpxdRu1adxlQtLAlX2n/TRhyZmxCw/2Gr+6f/LKiV/snjR17fzPfnhwx54v
5f3zpCDicwW85jzOBxYOQVj8gBqwHopwMr502XsvG78nkSYBaikboXIguIOT
quQOCdM6LLh9kEU3a7Q2/YVrUItLIHYQG/bUfBUEIOAxYCghDninLs1jQdEP
dBC0AzD1UFbIxyGzhvKAaGOsV6NmncxqNsSAho0WE1REYAIPRcLwCKQ5hE0C
V6wbgIlO8L7WfUWuFAvDy6YAY0ejTuGUUlXQAOAJ1KHF7QyezuAZAmUI8JYA
bxNoI0lmUjgAB5MAPiBrFxmrCGMUbhFOW7MxrIPnXKLgFQRfSHSLLOzapgA0
UXYoVQ1V/XUwGAIYvV8fAL6HD3YlqHUmelUOziLSUOgYUKcQD7uTIuAkDJk/
q7KNUM5UtQDlQhgCHIxciUCPsyF5AfQEoI0PPVZZiUfVEXrdPqNqLcLQShEQ
uV8b85ap24OUs+hZ1QuCyswe8DPCQkEk8Ky6ERpq75Vwm4jbijSBoSqv4LPI
hCOHx8GzAdIRIJ2qnpJPDeN4wUZEuMChwFM5gj9XJIKkCzh+Udn3JMpkSz4J
N0Q5+2OZzoH0zaV+UgIgrUTjEutlGZIUaJnk8xjuCevI9usknyHX7y0gg0+y
80K5eXt3HT+y49ru7ZZ6PbaV6fd9rV67hg88323Nr9N+MkzdceCrC5svWZY6
o2NddB2vA8u6gUVNmOLHXpixV3bsSdb7Ct9IYRtl8y1ZW83nfEslu+dffNIL
R5NnjvqvyARFTPjNX/6pu9RjxwdSBvbSXyWYWuKRqZpsxYgHpd33G3gettLd
qJt+vqnlcm/f5S7MlYYFGUN8Z+ef3/Tl2jkb5y8+1H7ozw2G/Dq2jr5PT1PH
mWLcuHDDkX+Pn6QsmqLsXppzZMUp/OwPd45O2nNszKc7R1Tr36xeUu92HdYe
bYEp/yyIx7R/NUur/9UCgCIOV+w/Lezba/AP57FNl7E1KQmf6WrMSB+y3fft
Rc/2478Mnrb0g2ZDyrRb2nLSie7zrvdacL35rAvt15tqLE3v/kOw51aq/zZ+
xIor9YZvHLfpxmXzX6SkMMFnbNRDsUbRTbJ2ggVLWM6SZZNM4QLJUhwjgfs7
jIrHBDDhr1ZkMkADyh6TijWDxa7Vd8WGOxB6IACJDa6iX2OLyRHCvE6/krHh
XCusP1e15bVC9JicETiCXRuPrpqV9ug0SsUWja1BTo5aNAuLb6EygFqmCzXo
1IFfLNQIQvEccGS71rjHQhQFWKpGOWgTT1sE/z2eyJB9GSKAX09awJshu1Il
Vybvy2Q8Opm0ZAuwER6AlejQ50A9AUcYEAqw3v0OyWeWAYD40kjPA8aXKpBZ
gBOxXjPwAOG4E9YrEl7BC2PaEDMZuwgbQi0BDioDSLQR/cwJ+C2mhyg1HGLc
CEw0hwRiiIBrj2EkhPOCLchguZea7lFf6EbP/v8yuNh5X+HL1ceQVQHQUA3F
XtBG1TvyQuPg24GfAQAyKrwA9Iio5wa2QyUBwg62h9V9gKGPACARvUTy29Fb
ADgSKEdEdD8KkWGAz159mHQXSGSe4Je9FlhNB5wrxsuTPpHzs4KPoP0hhsum
iTzKHMYzAoTlEUk8ooVn0Ww5lP3l6k1Lp66fMWNP2VZLPx74XdvxpxfPtw7e
cnrpsYwF+45/e3XfRf32dM+S+2lJWTc/0l3CQqnY79ZSjzNLPM76kL9VOt9Q
J1tXy3YnwXwzLmBr/5zq99Tf64m7y2NvOyXS6xXZ6Lkv/omv+mNv9ail/H+F
Zvn2Wk+9DR+5S4X1NQJZ7aL2DkFzC1Hf+pGp10t3z2fWpn8Sg323xn732aBB
fdq1GTCgUqfxNfqvGdv7fN+J11vOelh/ZErSkLQRowxjR6WMHLXz84VfHt65
/OTe2es2jOs+OKlplwHN+6zGGh9QjjRSnq1XAjOJE9M/GbAYw/pXrzPWeGiZ
ws9QjEnK3RGntn7RYnEKlqzruJEZMvNwYvKlTxZeTl59asicjfX7Tq3SeWrz
UdsGLbk2aOGN3ktSms+8/slGa9eN5unH8sZ/7x+wwT9m2dGWYzZN/PLU6bsR
u/t3Xs4LF/gFwSJ5CM5JcoSVl/Rh0QwvY7+XFjwSAX3p2LwGdC0oJMhZOD44
Fky0TIqGA7EOSezUGKZocHAxYqK18WqV7a8Nh53jRVMnCiUTY4KiFq17V+Xd
DoAqjFfPvxYNKIzHFpbPEa8LYBBSQX2zolF9anpFr848LRrjTtjhGGsKEBYr
T9mg70FbKG8qCwXTdIInS3Rmik6D4NFTTgNMoMO6erNA2Tmvg7DoKbMOKptB
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
p1b/Oo2mtZx8COu9ps2i08Nnnuu3+HrbyUd6TTs1b0Pa7DV3ew3fXqPOKAyr
Ub1ax7JlamPYu68rON6FHbqlS2LvfYC9XwarWBmrWhurXQdLbIi1aIF17oD1
6f7O4D4lB/XChvfCJozApo/DJo7DVgws8/kQ7MuJ2FfjsKUjsBVTsdWfYfM/
K9W+Z6U6HfvGdZnVeMju8V+IDfrer93r1MTNjiNX8/bfyv3hpm3Brk2j1q8Y
tGZvmyn72o7Y1WDcBWxSCJusYJ0v279dqhyrqJyroJyJy732w4rpMzstvtZ4
mb3F5DPjZu0aNXHxwAmL+878rtOi0x92nHJl/wYlpY9y7D3lxMeKqV31UUfi
B22sOHRXwrQT7afv6TJ2c6fk75tOPdJwyrE2M481G7+zzawTWK/dicvSW86+
0HzUzoQhy8ct21uvzfgZqw7fsIi5jx6/yMELRAvPE7IkPZGJp5wuQOsp1h9g
hKc0D652cAvWKkC0SEiRbuHrCCow1HAHDMqNSj7UxAqwBSAM2Ah2iA2nIHjR
VFg1nEFQExsJ0QiUKukJZxZog5VVymNRQyhIPQCCicxagpwNmMxAZIAqcEUq
KEV8SgeAApVqgweoeQSFR4oEb1VtItyqZoVsCCRhfJhWq7VJvToHx8RR9gB5
m/el6O4dt6dfYn1ppDuddGZQfpPVnu4D/hWcz+IhaDvhzYJC36QrxN8P8amA
EAlwKoEOlhZ74TgbBiKhnSGsPkem15FJwZ4FE+420s40xpPBqajL43bajTDT
yroMLBS1M0i0IxZMYimDRiiKRT80z+R/oi0awmgooXks4FmU4imW7f1X5yeg
DuKE07LU+Tjqr6iAtnAjrLFXN6o1sajg360W0GoG9SHRzD5tB1SZD+v2GY8I
i2whFsEeAXBpEdYgaQsgPXO/SaCtLGMhSSNN2AjGTTPge08tEDKjosnvzeB8
njwp9+lL5b4FT+o+MqFevyZt5jYat/udPutbzzo+YuGZbuMvdxp/dtCsawvW
ZS5ckzJs7A8NmiRjWBUMew/DSkL4eL8c9sH7WGnsnUqlStauWL1K3Wo14+MT
45u2imvWrkbz1hWTOlbq3q36yGEtxo9pPWNSm9lTkxbNar5qUYu1K5qtXdPs
hzkDdy1rd/7r7jd3Drnwba9T21vt/77elu1thozv0LpfcnyPJQnD9vde4KnU
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
MPnrlXJTZ0zqPKhB7S7tOsyv3Xt1iwWney+8MGTquWHj53UdNKttl7GduyW3
aNY7vnabxMR2VavWbdi4dc16DarWT6yZ2LRm/SaVqtWtVaVeYnzjOo2T4hLa
V63drFK1FrVqtY6v16lOvTb16rasWb1+tapxVStVjqtYqUa5KlXLVKhcslL8
+1Uw4L+Uex97H3oqJUpj775T9t13Gpcu1bte02nNu69sO2JHXP/t5T9Z2XzJ
3kYrzzT54mHSynWNZm1tu/hGm7kpbYeeHNz7zKDeqY1GkVi3o1NXfaGYJykb
MWVPScW6Z8CotfUn3Gg++seeY3Z0HLK55bCvW0/8oU3yj20H/ti+165ePbaM
HrquY++Fbaedw/qcK99x+brJnRXdFOViCWV3bUW39taW5VWr944buDth0i+J
Y882GH08bsTRxtNSmk36tdOsG41H7Gk7+1Tn1fe6f3ap86gdfftu3HHMmRlW
wk9+eyk58/wGL+8lg0w+a813p4j+NH/IJwbI5243RxV6JsXqSGMjIVp1a6z7
gfAhthQWxVW04MnbPsnbbowGSkVPOWCyxl84xyr2taiiXnUqbChTIyEhYrAe
1UkuEtQtd8IBDVzhZNsQuHfzTpRUKqrORZEf8CqHzFpkFk7DDNLWMAcg0aqC
iYHzWmEokvGIfgfnsftdKRydyePAwbD4STvL01xQ1jmdHilKZj/mH/3G5/1G
haM+JsgFw6GCZ4+lJzlSbraUFxJllqB4wON9Npa0UK5MrzWN9KYFYdebWwCs
zQs+oCfoN/IEVG0i3UaUb+IJddIZboPrGnj1AEwMaSd+PoRoTph93dIS5f8n
JPl3DIkBk3+J4qqH8qF0sAiFm2zFSvSLWYiG0Y9/ncAFnED0FRTDmaI4GHrW
rT2ljflDzkzhYGLOJ7F21VRhN8YaYG1hyhZh7HlQaA42DwJeLDFOBlxaojsa
pPiwl2dMISZTZvQ0pQ9w3OPIo//8pVzPMnTqMTyhdud27ebW7b++1eIzA1dc
7zXoSOOOg2s07l+pTuc6jZLiElvUrh9ft3HNcpXfb5hUt26bmg3a1W/RNalN
h05Nm3fs0LLPwM4TGvXqn5jUp2azHpXrdaqS0Cux9cBmScPbdRqS2KRjo8Zt
GtdvElejdp1KcfEV4uLL1Kr1Xu3aFeMql62PQUwppEQYlvR+2RGJ3ZY1GLyi
9eTv60/67v0Rc+LXbKiy4sdSC49XXTbu3eTl1Wf93Gjygfhe2+J6HKze/061
7odq1mrPnJ6j3OyoHK+s3O4n/zS5dGJnbPbZZqP29Ryxsd+Alb1Gb2g95dtW
U3f2Gb2/5ydHOvQ42WnY0Y4jv246bGvrKefiPvm2defR27/Zo9yurpyopRyq
o+g3Lh6W3Hz0kTarPK0X3Bm87Nd+K9L7byC7rSEGr7Z+suzaoPU3++029/sy
ZfC0I716rNt1nsuMKmLBixesJ58wQjAJ8fmM/ZnzpkDf8+Q62TDxzGPhiwZX
SbTa3McULnMRLmEbnJ9Cx+iWMG/Ucmj188UisdB/QJIFb8qe/KuTo70Kdsqz
LjgiljGrvcMGVYgAAZ1F9UNs6jhIt6b+F+RcMukLQNVrKK0vQRDwwo2qsx3i
fRHRA1kbYQX7yIDjs2YYjWEt0KCukVVSwQRcqCEOTioUYBGsVVUEgiSId4ML
1QzueqJAcgIty6FQ5IlPiJ64fPfgpXs7j13dvOfkVzsPr/xy54LPNqxa9d3W
r/dd3H/9+pl7pjQH52BFHLyOkPw4HPSDW+B8EHCFg3fkrTAI6TfLhCVAGKAs
pNdAuPVQZAbOxoWYxvuMcNo7lHZ0GTLvHz+EGv0Ao/FlC8CFAHgC3BI4WQ9s
ibUinRPv/2JgN6RjgJRMVGyBzchBqDzvgvKqPvDXsMskAGcneByAMmseVXYA
arupiV1XkHQJkJsgfHhtYAsszyuUloUGftWCWmq+3qVuAdu9aLhnUacVtCI2
CufyhHg4XFiALdVm2JMF2A24TkgAJjh4KkxDsX3g9TGkQRAtYdkjZPt5yhyl
dTJtJHBwdQUehZ7+5z/KjQxD596jqldoFZc4sXzvL+vOOT1yfUaXAYcT2iU3
6jihfpv+zbp0S2hTP7F5xYbtS5esi9XohJVtir0bj5WIw8pU+bBU2VpVy7Vp
UK5PhfZdqiR1r9ym70fN+n/YuH/FxoMqJ/T9qH6nuGYdEpu0qd+wSUJc42a1
miUlduxUv2e7Gp3afNy9a61Rrav0j/sorlqVCu98UAvD2mHv98ASB2DtB388
YWHlJeuwuZ9W27261HcbsHUHsOWDsWFjsGHrKgzYVK7rOmzgL1jfh1jN2Xtm
D1Ocy5WzHZSf2yi6qQvKYj3G9MDmbas+ak/H/uv6dlvSffDK+mNXNh27vO+Y
H3v3/rX9CK7ZDGebmT8Pm71tzrJLQ6f90nHS/upTTiv3SykX3ld+xJSTw8W7
9trJD2p9JnVd5xj31d3kLa4hG/N7fZE7YKV34MobPdee6r732qCNdycsPNO5
7erdF6JpEYXL+esFRT0mzD4ex0P+Atb6wn5TZO5483AuwvzmsQuwu8Gp4r9V
4qwyZxMZq0BZBIgndvTVq7cbgCQq1FBwSDeEGsoqIO+CtGlhFg0lYFs9A2Eq
NjWsOTCxLYFvZI3BLbuoa1hiYD9OgAbHN8uUhcf1AdoM0AbGOkg4eROAT7bk
laBEOYAOh6o/YFeTkh5VfBXcyDywJIb1SPDid8MJkoydB8wIfEbOJosOYCIP
610BcMksoFFGVdMVvLUNeizgpuyzODxunCK9XtLlpny4zPCRdJN/685DS9d8
O//zTdPnLZ8zb8W8Gcs+nTh75eyV2774+tLGww8OXZcy/H8IOf8JRp4IdBQH
pEYnU0Yo18YaeMHCSeAELAxl8eM6ns1iuEzKm4G7MhhfJmzJYbM4/AHuSGF9
6ZQ9jXOZdal3jh6A5fQyaQ0x9jDrjPJuJJQU4VzA0K8h8DdkHEiHLQi+L3Vn
mAR5y9CeYDc411uV6wwA8gV/tQAQA1AGNsIOUNKqHgT4Jxa1/9FWqBIDrwRb
4QO6uAH8D/PgK3aq4fTCCJhaE2hBFFUkIeUEz4Ld0NgOlP1HStfoJZCTUg5G
0vE8QFdwMuYobsknzbmEMZfKymYzHkkGmTMI0E0l3DbKY5LzKMX/93Ffzi0h
kspJl3F8rxi4lZOX/fSRcvFcZpvmI0thXWuXHN+1waoJI/YuXHi77+grNdt9
Xrvl983bnWvUZF9c3PxmjaYm1hgSX2Zo2wrz6787qea7Yxp+NLVuhYnlS/Z5
7/1m5Uonlqndv2KtAdWrD65ReUB8uX61yvVo+HHPJh93blQ5qU29rnUrNKpS
pmZ81QZVy8a1TOjQpGa7xCoJLeJbNK7c7l2sSQmsX2lsTklsWTlsU4v4060T
jnRs8/OA3qfHjrk7crh+8BDn6BGBgSNu1u1nqT1RqDF4f9tRa+MH7Ks60N2o
yVbF9jUsZAUg8OvqtdtSsC4/JEw83P3TDQPHfd07+du+03cOmr5/yKzD/Scd
7DNlf7+p+wZOO9B/2tHBM84NmXVryNzbwxem9p1vq5FcsHlR3ef2y8qZycp2
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
P5j7i+ekv2ldH7rAjZZ76KBDl2eiPdZyHpzh6Axh1GB8kuS/2tpon13/ZBJJ
n59W10OvXxfNWl3B1/8NJjpdjGogkSjm1qJ8zdQPGUwSwzSBiMVjC6WyFpm0
hcPiwnSyXFAFOhnt4pf8qsv0t2mMgnjBR/968owmqmMLc+5XpT8AQd87poEm
J6CaDyRzezEbUO8MQFILf839rITQ2Ya2I34P8/VMWBeQmLBkzap5/ou8wn2D
Vs1ftsTFfZmrh98cH2drVxOjSZPNJs+yMZhtY+xkMdHRWN/JRN9lsqGd0Vh7
E2NbIxPL8eYTR5lMGmXh7rTIdLTllEkz9IfaThwCmemN+guCXEYbLbMz27DY
8N4ZJ9Czq71lTWdb3OdPu1uUB9Wiw02yw92y/R3iNBikNjSv+fTOEdz1BGfn
ghOWLZcMW7mr2fWHqY1H2hSxoMEXNIR8l24E2HYgTALqMKBcBeThQL0SNK4C
6uVAvgxg3gBdDMR+APEFQj+N8ZYBbgDg+AN5XDfT8isKAcmgr5yRQGIGRGZt
b8ZJjlqDK1Fgt0PrEaibPqbx8+h6OQRg6FsjBFoHfpOPaOMM+8S1/y6K6RGc
7eQ/apM8V2C5Qv5bNiefwSlgMCtRvkwNAzHKRkVcDOFhKB1DGRKUKhaRxCIy
ipJlmsmzNInGyD/x5G9mIkOoWtP6XRUCqgrR5HX0FVP0C/f8XUeM9Wu/plsz
OsD5qZeFVDXGkSJVOCvQLD92nZjNlvFgEZklZYowihCpZcionFYYBS1NoKf7
uxIRkQoqr90j3H4oKaug5708k5qSvj7y4+N7oFkl59FUPHKzmPW1WQK+NIDP
6k4lT8qu4Vfn41b1/lH567tCUunbJzeO7kq8c+nE6WO7bl7Iun4l69K548cz
0w8fSD2ddWjf7i3Z2Tfznr2pqiBV1nIqiYKyOumzIr73mv2OAWkzw7OcVp1w
jjrvveWB5+ZbTuGnLfwPTAnMnLn2gl/yjcAdVwLSzgTs2Ltmz779Vy9UcOtK
yCU5b5+Ulhc/f/3iaV7u81fvSivKq6qQi5eeJqSe2JZ+Zc/Re5t3XEhMOpG2
+/Szt8VFREJuVdGec0cvP7l549F9XWi4v99VCyBaRaNVJf1Nq2t0SW46sqED
Fl1sCD+Dg4lW+PTPMPnpfmHXov0eWf/Es/+mIjqq+a/NP//V+oePtffXntEU
AAoIErhGjhAVYqIYo/BYRCKJVK9uVUkaBWwY4zO61GzQWqlk3ya8209+uU1Q
sqkTDgGN7l+kDl2Ic5fYo1PuAr4u7BbPbmcv/sxf/F01G3R7gW8bKgsdIxcu
ttMfYTBw9Ey7uXPmuM10c7SZZmNoaGVu6Oo8eZ698Qzb8Y6Opm4Whq4G4yz0
J9lYGZlbm9paGU2ebGBkNWnyFCMrcyNbSxN700kOpqY44MwxmeA2ZfKC4b9b
Txw+XX+g6xQTyHKMpjVBov/8R4dWvro6k/TOCAC3rvaxvd9xbrAEgHgANoIv
a0D3IvB1AQCrAZgPXgwCRyaBk76Ne2wBGz+5pL13bvenuV86ncDniaB9LFCY
ANFsIFj+tcW1Sz61FbFp5Vi0IVZdomlfRU7fMZcetvNntks3w62b5fGZ4f2Z
sfQzO7CbEwDKYlqJtkA+BCCDe0qGA6IFaLAFmFXzfeveg0vAwWhwzL3zhj4Q
mP1osxHABvVCqFMK9WCjOrjGHby53wTre3n7m9lnlfwrUviOqv51S0u1UkUR
IWwJu7meBzCMKcYEEpQtEbPEIooMo0gxqlRMxUTkvlECFDlKl+MgA9dJsFq5
qFbC/3stCTVpaZouEwJNZEezRQppmv5CmgYj/+jJJvlnH6R/Jl33S1ISUlQY
WyysYFGKMD5ZjXJwooJS6DCV0ilv7BBL2xDpJx4Pqy5vZVK6+VRe0fOrexPO
bIg/vGb1leTk09sSV82a7eswta7gPf7efa2Xi6jVVUWv6dX5rTL+tw5pm5on
h6vIZe+LXj54eiv7xb2r5QW5uXcuHT+468H1i0cPZpzNOnLhzMkn9+49uP/o
5o2bF85lp+/ceejE9UNHLx47c/vIyZuHjl7fduBq0oHbMwO3mXvFz1ydOX/9
GY/15xfGZXtvOOe94dT8DZnLY6+EbbucmHVnx7nzu28c3Xk5Me3S6ocVu8Sf
Hzd8e4Go7vKwpzz+q94eafdnlUTE/VB8/9Dp3THbNm3efTQ980ZC8sXYmNPb
tl+4erPg3J03KUfP+Kxbc/T6+Zcfn2mZSX9po3vfdb6OX5Ckf9RYJ2q0ztv+
8WVdeokustw/fUWDSH+H8HSwoH2yWreJzn/+fztUVRjzf+Wl4Ir4v+VSX5o9
Q1P5BZP7wIQsQmr5LAKltrajtVOCyXkUhohd264iNYly2VVHqz/soL3doaIm
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
60921p84VW/YeL3hEwwmWOuNM4OG6EGjh0EjDAaPN4IMDKARf0ITRgy2shju
5DTGec4oh1lDraeOsnYZazRFb7iBySQTC4PxowYO1YMg/cHQ3jhrtCQCKCJA
wyLAswCwNYAtgMIW1NsBiQ1Qu4B6TyB1liltwCEIXDYB2R71FxeAuqWAgV9p
DmrHdGCTmmWmADYDdBvAcvuMzJNKZ4kx25bGCY31Bs2NBu1qw47GcR2qMa1i
vUZk2CdsXCdm2CwYr+JOVHPMFExLGctWypkMCNM/E/5SUyEZRa/rozl46gBe
GIPioeKK0d0Vs8FlF3DNDtw1UD0a2/p0Wev2FZsPGZw4NrDshflnwerv2OYe
OOyzKrBTFdai3NsgvihGrsKcu0pBaTci7BYS2rh3eDy1SCATCflijIahtZik
ViKqEaPViLASRSkSEUOM44mIqck8gWsw5KOmh6pmuWo6jeBg0oBrYXzF8shq
Ia3P6Oq+zjxSHg4mdFTTO4uiRDXt9fDlgesmJcbADxAOQVOF2rfH4TDCo1UI
GVUYl6hE6wRUjlqEdrcolAISk/ScR8lpgHGGT31yKeJ+9vKL+70upM6h5iXd
3uOdEWaZ4W+UkeSQnT4/53LE9axViatnbF03/8a5FC2YsMkVu5JjE+JDT59K
z8u79PrNjZcvLz368OptZdH7qtLbeQ8vP7xx6ca1E2fPXL1x5/nTV5cvXD98
4Pi1czee3X355NaLSydvpMSlm7p5eEfEpJy6mrDvZMim3W6BcS6+663dVrkF
JmdeLyMjP/hKIJKBehVobQEtreCruLNX2tmMNPe09TQp6hn0GjaXWFr1ARPz
a4nV5WUlAiaXXktSiRX0WuLZwwdn+AXbuS8NXLV/TczFqNgzKWlH9u7ffvfp
uf0n02O37vUPPmJutzktvfRdkUwLJv2dITp/iC6R/pfiPh21+G/xonPb6jgJ
/qOu1k+XnaK9jyb6g5/pa9Yk5ZHxnUItYjSJOXJN6/ifg076I8l/p5HgTEMu
qpNyxFI+VwMmSKUUqZILiTI+XSkQyLg8TdsKpEoqLJIjxUoRLnCYSh5fKmCL
2YiMLavnCxoEVSp+UZOg7hNWz6jGSSytq7EMZVySM7Ornq9ivveQUb2B3As0
BP9o9OlU2X9psAQtVkA9E2DBQJL0jRX7DV0LmqNbFYlc7sncnEtnDmdY+KdD
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
+GIVvTS0WRD0vcMbNEZ/k63pEq/6ol7xo3npt0YvoFoImhf/aHTqVJt0Npm0
NLtXEQIPn1wZt3Fz2q6jQRsr3fwvQ78HD7XcpWe/F7LYBFmvGeOyfqxT8Dg7
v7EWXuMmexsYe401mDdo6HToDwtosCk0eDz0x2hcvvw52HywnuHAkUP0Jowc
Nd4a+hOnIcMg6M+BA/X7mr7+NnrQSE8v6OqFYPDpPPgUDlTTgMj4i3zml0/L
QU8Y6FgEehY21Tt86ZwPeldLThqBY3PBuRm92RN7Ci3EtUNrCdDHEojHGE0t
Gs/IdyC9985/EfjseditnMibjzZcuxF9I3v1/uxtB05uzMjctOtQcsrendt2
HdqYkrU59WpkwuXIhCsRG26Exl4Jjr0SEHtleeyFgLjzEXGnQ2NPh0afCojL
9t14PmDD+dCY06ujTgdEnvXanDM78aVn2OXzuy+ClyfBVVdw4XeQ45d7wE9v
1vQtlzIYFdEAtf+C/YnV63PkdnKhby+yHUiufxO9a+SWyTgUlMfF8AfKZYl4
PBQ3Pk0krJQgJXIRQcKsaxDAzTBPxiaL+aUKcbVUVMfhktWiWoxTIRMSFHCt
UkBpENHVGEMOU0TsaoWIijFr6vG1x6HgJufTJJw6lYgn0fRMw1c4CwcTCQ8n
zPgeypby6RIuTQWz5SgLYVBgOk5UmFKErUSZXEqFkF0pFdaymEWFb29mZSY9
upWZezfz7tm0RxcPPr18hPrh/rNzR3bFhW5Z7XUo+djOhJ2xEYmR65JSd589
cPLpvOXJDr7J0xemLIi84B9/3zvyxpwV5+cGXFgQdHlF9BOvtcUOfvetPK6Y
epyzW3rNLvCC+ZKT9uFnJ/vumbXx9PIjD712nnXdmLE4/dTK7Jvh994Sy+ly
RY+koZMvVglRTKYQd3e0fPnc0aVSdigVzRJRE8xTsuqktEqMViym53cLWW1c
cgOHIGMSRfQqTUdZIRnmV7HZxQxeAZNV0tCiIDIZbd9ASR22MnI7NDEYGhdo
7LZz8PxkyHMHNCt1mNfx4U7b9BdsHLN8F+SXDjmEBWedfs94/0vSmi7XXZdG
8kuTE53rQ5c3os2x16ao6QBE64TRXq/LVNE5ZLS/iDBrtNEf3ZX4NQ0YS4H+
J8m5P5j0zyDqBya4OuZohrEKajVIguMJQpTymGIOQ8Zn4weahl1IrVxCUkhI
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
tA7Ax4bhtFk4H41h05gYPn+Iw+pCI2sREy1UKpzJhuO502tgsbS7RtFQGbb9
4Pe7lQ4oOv1+3n+7RswOzczfzhb/cvDu/vMp+wwKf71Y8avOo7Dkjtaunrdg
8q+ukrcLft/No74VQVua5d3sCnRwSxy9/ZC38S6x2YKUrTOlbPxb/HnbhSuf
y0yFyzsbIUUDwQhjc50vEwMFb3PNL5/xNtCbgeGz4HwGQsiaFTJnhBw0n4US
MghsJolFJ7Dp0JeFZjPgHCaSz0FzGFgWhCf0GSYDy6OxhWSujC6cZ3JlFKKE
NDXbnjbUFDTVa02ZMZVRzV+LLcGaKRBqPmcffSHaBzZ+e/P0K5kYtrb284vn
autztnikY2trcN6j29eSK+wCq87Ylp71eqIe26HhXviratwOpdgdSnHv7feA
7TbZpmC+T8dx+0mNb/ef/nDHQdiXf74PgckXBz/7dv+nXx/6HPbnZx99s+3b
z7/ftuPLT//a8cW57V+c+hB28CvYiQ9hP376PuyT9+SDQStyA9LvqXY02m6s
XgRPvUVYLTHtr+X53WD1LBCZAq7bi3l72Zr+wrrhPMJMnKIGMo3l63arYe55
VCXLy5YhVVbRCONwis/NtajMpYgUur7nE13/qgtBjXoR/fox46aXx20udVhd
qvcOG3aLHnSN7HUO73YN73aJ7HGKaLYIrrMIqjQNKjUNKDYNKDAMTL/o/9DA
J/WiX7J+UIlGaK5KdKF+UKWdW62tU5WBX6F6aLma/yOLkGx9z1vn/fK+tao5
5thqbRzVU1AJSn8Ajd+ANBh4EuXqknLmUn6X4LFAYseaVlilXQRS3WfcA8v0
0yvcoDV65iLmhpg1LWKNiGkINgnLIqFp1FEGp48n6OMwe5dFjHk2nzRNpU8x
l1lz6zyRjIzF4ogLsgUBj4sjoRksOhVStlSUZJ49vyzgCilMHoErJC6titgs
jJBP57KIQ6MtlbVZ7S0loyN1bc2FdTXptTWZeZmx3W2P2puzG59kVZYkV5Wm
DHQ9Hh9s6GzMbWxoGZ8Ym0Zg61r7U7Jrwq+WhN54HHu9wcj+hpZe+Dk195PK
llb2wd5+l+zdvOxcfJNj/etLs+7ER6YmJWTdu1mU9rClorKpvKzjSW19cUlx
ekZZZnZ9SWFvQx1mbERCpz+VMcGzhRdz/FdL7DfropdrTPCcvzJHfrpMmBcj
VhawKwuY50vYl2sECX+czR5bp3YvUQf4yCYRvoOPaaNMt7EwPRRcH4sCJ+Jm
CIRZHBFLIFMJNBqaQUdSaRQZncjhYmjzGIIEhSFTiBNsdheX3EhAlMGHSumE
dsRsNZHZI1pFtk6VBya42riFhETciosv9A7NNPbKMnSttrBrjg4cjQzv8oke
cY7DukaPZ5XMjPcM/uNOj3pXcWxhxbstZ2+h493sx7vIAMHCFqS8feldMHm3
KLwFU29F0Fsi9H8EadM2XD6mkyYvFovoUKCh2LT/lfcaCWlbgYZCJB9ePMOT
q2O4kIXgyWEHz6RDuIHjMnEMBoYpLwpgWSwMh4PjMbFsOp5Jk3dLcihYIZO6
yBUtsahsVB1uLIE064UYsuBiHKUk09dCo2WW4huJyjrzLKDqLFP3boi3LUtg
83MfAaDwBuixuCZ11WZJV7yCQ+9HJfY4hPSdd607YNf8vVGLXkCOTnDpLp2r
h41TvzkZBvvT8utjtod0vX48rvfNfpWPfzj2wRcKH3/+92dfH/rq2+Ofbzv0
8ac7P/j8069/+OKb7b9++/XJn7Zpf/exGgz2+/uwA9ve++XU0e+MdGDKp2Gr
ovv4GWc2zQdw1YDInkdQfv5C6yVQAs91AccEMK2ei/QAsN2QeVAenX11TwWk
nwXVp0AN7Bvbib+t861ix1XdeswjscGp0ohMwbXCObv4Kf2wybOek0res1rB
hIuBs6Z+A5ZeHSYBg2YBQ0Y+/Qbe7Re9W0xD2g18GzRcy3Q9itQ98jS889U9
09Q8Hyi53VfyuqfklazvmK/snXMu4KGWR66pTbGJZZG2Zf5ptyxF9wx1p/v6
9qnajsUnnJ98o35H17/mtGcHqNcAmd+Dyh0gXZ1WW61l4nG17HpVvweW4Pxc
Zg9e6wHRLwuYP5aJ7svMZCn5uojRK2H0CwmTDDSWMIvFYpAsFlIqRXK4o3z2
FIMwS5xG4CcQTCxWQIUY8qiYwQAvXyyL2WTUGIsOpxJG8Pih5SXysw2WWIzm
Mic5zImn8zQqbpBFHKDC28uqGoNDI2KiI/PyslJTbt29eyM388Htm4lXE6Pu
3ohPiI20sTBUVz5tYWQU6u8T5u8WHnwjPubujZt5AcH3bNyvq5pEGLvc1rW7
/tcp98Nn3VR1vPRMA9LzmmdQVBSeNjCJoU2NrYvEiKFhHonExxOnuntok1Mc
JJwwMsJBzcwzcOt88jMRbYWHWWBOb4gwazLxswXJZt1KPg8IC+/j0makXAyL
MUsn9AlZEyLuhJAzzWGMEhFtNFwXbmKWjsIxUGgaFoNHTJBRE2wmhkSapVEQ
BOoUBj8Gx/UjcIM4xhSRPUHgTjKp0wT8GHJ2eHyovb+rdqCnbGSouKszs68p
q7r0bl/747xHqTV1FX3Do609w9llTxLTKrLzegoeDaY8bElMaYhKaggNqLyX
UJOcVBISk+seXRuc0JaX39LfUr/lTr8lUrZ0x5Zs2cKWf4mXf7k4vpU/Wy/x
37F2fFfUvNsQu/VR3P/f8zLeEph360pbnyP6ZxLHfzEoIlzIgIuZSAEbIZSz
FJSYQ+Sy8EwqikGC83gkJhNDIc+yqCgeE8dnEyQiJoeGImG7GLSeFSFxhc9e
ZE3T0de7W45gkAcENNUVjhmAOMlzvXnaT29kp1+KtQDbEbBPvZb8/Grhl3nJ
wbUlfRbNpLfdIND3jJN9kIN1iVton65b0Unn3D9tnpwJ43indBlHN+w1Tj1s
mPndqaSv/w7+6UTgcZ1Lvyi47Dhg9cVP2h98efaDT459/OnxbV8d+2bbsQ+2
bf/gq08++f7L7Tv3fv3lqW2fKn33sSoMdgAG26vw2+Hse+YMgmvD4x0ARABw
5/maP8ApA7oVD39BvKq1AUw2Xhi/EZoBvv6z+fMv5015nbqrmRog8XdQpgiG
HAs83v/bY1jXI1/b8aGhZ565X4muS4aRS6ZPbKt7bK+xf+sp+/ozTp0anmNa
bh0a5hX61k+UvavOu1Uo2uefhkDAPu9vq3RF+6xT7rkn3TMU3aBIPeWWdsrj
wSmPlJNu9064JavaZSraPjhkn6TgcEXd6tYFi8zzlrkHrR8edLx3yva+vm3p
Bcv846b3D9te/Tuo4NvI6TZf/RdNfqDgV1DwG2gOyfA2N3I2tY7VLay5SEVr
vJCoPOMfXsYdego3fc6OFTJjn4s756h1Qvw4F0liwsVckoxHY5DJEwhkC5nQ
zqSOsgkzuOlB9FQ7YroOPlOAm+ghzXZQ4J2o8SYWtlfIGMdMNuFn6rBTjVMD
j2nYjmUBnIJu62/Kqy+9VZNzKSDyUVjUw9DI5CtJ6UF+V4KCEx4kP0q6es/L
Ldjays3ayP6nb/+Awb749ccDv35/4I+fD/y2U+WX7ee+/OJv2AcHYe/9Bfvs
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
fO6uYxbjF1nS2DGHJe8jsQQ8DSkQopnsDSp5nEiEMxhIiYAgFeF49B0SYpaO
WJDQIWLiBhM+S9mapG0M07eGWdD+A8L0NX2dyl/B46Yg0D743iyJBkXRkNsI
1DaZPbvHinrXp2yf+dKzQn6t1UInn3oOPHVpvOUuvevP/M6P8FfP1S98pn8K
mdTM3fFsoRvlzCsl9NyN7b4d3/c7r6ovwnu+jRtTKt6LHbw2qaJ+GTmp+GbB
cQiXADt2HiLZ1ELN327di1xTMBtQ+CLIN1E+3XZ+LShN4lFoPApZQCNLqYR9
OklCl5sXFBe/xyHhBFSckIpjEPBUFI6OJrAItEMmTigXFagt6t46eW+Zh9ne
p8KOmSjpjWHZFhHh+8ybXTM33aIpaAmLfCjFSQUoIQslYGGEbIKIRZI7F87N
9kCCkI6XSyA+DX3TIYu+K7gRGytcEp5HIXKIaDYRzyXLz+UvD8chom6ybanb
ctvFoW1yaVtc2jZXDhbGMg4uELCOLySfxFQhA7dzfQIDH0dF/JTB3jujvV9u
r94T0QyOOa8+COVSxPGSZwZEwZ8YblcMfSC9Da7+C4DfyqT/5JLdlgbflWS3
pSWuxsUgLN1mHSN2NJ1GjbzHrN9um2cjNZOhL2Kmzd5sBZRTrGMhf1N5q+rR
EFy2/Lp043351vY6Hnw4kGMDAM7R0dHJ8bFQyGcz+HyR5GD/jERhLi7uVha1
dVUPdFe3dlcXdVSFDbXYQlftaZgYEV3h8Oq/hODvzEuVQ54vIKcDSjLgegKJ
zjX7r4D2G8D6AvCsoeuRo4gG595ckPkY1H4LGn8HBlSpLSk/PdT/2bXaOAYR
ly/xzdrSTq78OSz9WUC7ZeCeZTRUK3nIJKzLOnHcLkVuJcZMw4Z/TX8d1fDr
1fDt0Q/p0w3p0wlsNgiscU8ZCc6edo5qMQhqNQ1p0/KsUnYsUnF6r+1Z99Kp
/IFpjqL1W0WrwqfW71QcSjVcq3Q8atW8a9R8K9Ud2/Q8u419u3S9O5Tta57b
lqi6NZiEdVvEDKl7NWh5N6n7Nav5NhpGdFsmTOhH9qnbFum5NWh6dqm7d5n7
9tkGDBh5dirZ1euHDZpHjRqFT/1o26dwP7wgPxfMW4I6hZuxnOPqUvVXzXol
54zYbM/dnVgO25XM+ZInVDjmK1xS/3zIMtsXvOVzxwSUkUECY4tPwhxgkNJt
DG+RwZmWcmbPWbOAPCtZ7GFOd2KHGma6y2rrU0ub04vb39S2R41Nl3QMFU+v
tA1MNJU1ltV1dFU0DMSlN+W8X4jNmLVxbdMwrFPSaHih2qKu0vt32+K7bt3f
WXeo+E5rR06qhrzXTU5RCXVQ8jMPKE4vHR5omV0r6xp939rYN9c4CKlZ6h1s
Ky1vL69qq21NiUsMC4guyCmrKG9amFtDwnECroiIR2AR2yTcNou0zSNtkFA3
hfWpeAoVjSPt7ZLhOyz0Dh+3J0TvshHbtJ15GmSavDVFhY6KENMnpHkOeYkE
nyKiloRsFJuFWV+bX4Cscw8vYJyz5JohDc83utFNVtlThinz6gmjL2J7b/mS
bkfgfopEfuG3+GevkX96Dvwc2aedO2NaPKuR2vo0sUox8f2dmHzNd/XqRXU6
pU1hs8sP8moVzIL/xzfToGEubkfm0IHWLZjQTR/5OaRPwbpR4Ss378yaPdi2
HCYyFlFCRd9U/0avc0kb+2zYqQh1dYji4Jexe6N7W6PQrWESao3PxIo4ZAGb
TENvMfB7PCJUQEEKSTAubpeF26Ail2nIFSZ2XUDaE7PRPBqKht0mY3fYFDSX
u8dk7FIpOzftb+hoIZMgYJJ5DKKQTuJTsXJlwqUg+TeRVShX7l/om2w6gcPA
yO0Ph4ZlU/EcGoFNlQ8sl4nm0lFcFpTD2GXRNuWDQ98ScjaFfBqLgeMz5AaH
TL9pn7TIItXCIUGbK9q7W885BOXLfcOP+0ZApgsOtYHk8UdaGGCGAJbHBUft
WHzr48ltMV8PB42rLsmNiSwJjOxwCu7UcKx1iF945tZoENitFjNglA4xLSCb
FyIsczas43ZMfSAvrLv93iw3L7GG1jmLS+QjieRXkhwen3EOjyXSfb5AIhQK
pTzxAY5GG5+Yamltzs5Mrq0s6qx921QW0lZuszZizsXYH9GCgfj352df7IMf
+B9eyGR2Fxz/C4oL4NpdU00/IB4ernzLmH8Gn/evrvBOybAMq7QDFbag6jNQ
pgCm3Vy8kv/HpetJ1Jh/aHdmPMQ3FaKU0fVFYM73do36nlCb6E3LtEa1sEaN
kFoVvyZ1324t3wENn1F17+GXXkNq3j0GgQMavm1a7uWmIS167qWqtjkuoc22
8QNPbfK+Vo39QTPpiUXeM8v8x6/ynloXKL56o2j55smrvCd2BS+cilRdSlSc
3ys55SuZ12g6N+i4tqg4VinZFmu41Kq7Vaq6FKs6F79wKTEIatIPaVRyKVN2
KzcKbZb/IcUIjFX4iFfAW+eAWuuYSeOwxWdO1XcN87Tdmqx8Oj1fL3zj0K9g
0f8fT/2IraFyWQLq/z/Q+JQ1V3P/kf0jteSgqKTiYhM8wYGI1WdhVI5J332g
/fkT7ZdziguLkEJERG3KrmAS2iYdsoadgRJmafQlPn3xhDIn3htiztdDh0qm
W3ML0lzDoyxT8r3edyYML/e3DNcUVGRkFWcWNlTlVVVHZeQb2fo/0rJW1HK/
q2zzo6L9D48dv75n+/U9mztPXJQdknVcCu/pvn5olP3EKOuRabRDVHZwWm7D
0PgqnI4jXZKQHxArXNw6eZ/KvBSQLuhY4vYcD797KiaJ6CgOGS7hE44lrGMx
S8gisSjYfSaNSyKwMXghkcrHU/hMioBBl08xFHQFu7vE+LWyNAG2RULtcrAY
KYUiIpEFGBRpawW7Mo1bnWTuzBFWxmiQWSEBLqJh9jY3FlZW8QzhNoEX+a71
pVeaSXK9XcmEUd6YcurAk5imr8OHfokf/SVu5NuI9i+8G/7oVP5H19LPPSvv
Bjc/j+jUed2rldp51+eNSmzZi9flxoVdVk0tijm1n0fVa1Zuew6LQkevLEsp
tqUo86z5H7ybFEzyFT7Tc4nLhmxO39xxYGOkLLiQCuGSV7nUeT5jjk+f5lKn
JewFMW/1ULwrFe7xOLt8JlzMxotE5GMR9UTKOhXTz/fZn2Ssq33KmZB4xMXt
M5EHAtyJiHAmox8IKUImikFBMSlYFh1CI29SSNs0KuxfQVc+g8il4RhkNBO/
xyTC2WQ4l7Yjh4mQvSvibDLJeyw5eaiom2KMNJKQwRQxWUI2VcymSgVkMZfA
Ze6yqDtcBlTAhkt48MtLCh4/T8KsX51wPp6z6LjRhdH40S5zNimQR7AQkrQO
GGrXQlUgVf7Iv3PN+fKYaHVEsfvA9jghWx8yTMBhkEyQh9xuSUtPcfYPcIuO
c88qsX/dahI/dM+9Uj+pVz99wih9UyNly7Js17ZgyTZ+1dhtwdBpNLl6Y4Ui
w/PO2GzZr5ER2acTlvzVcsU46T7v06eb7Xwi6dXc6lZRZUlpTW5lXWZXR0Zn
Y0Tz+1cDjTrkNWsZxeaAbAs4pmcCtaNzxdNPaleXxucyzX2eCji2AxzvC5gv
c959dyphYrg0IdY+I+An2LgmqHMAZf8AUw93S53/QyP+8yy6+Vt4wZuxlMhB
x+j5+1Htf3N7+5WV3JVsemYh/N/1aiWNqgS2PHSufO7WpOrZ9dK9V8W9V9d7
SMmpSc2r/blT9ROLAhWHd7eeB//tnpu1b1lU0fYvein//rX9N1pxaq6lcoY8
s8o3CWzSdK+Qf6vhVq7tUanvU6sfUK/rX68dUG3i1m7u3aXj3aDpVmno22wZ
3Kbq9P5rtdjb+gnP7fMswzutEvrUvMofWOQqu71/FV3/PPPCMLTT3jHMzeut
fcqqZsquokfNY91EY8vS4Jh5s+AR5aQNBYuO/6OZbadnfjnfBhq/BCW/AVta
q7l2tk/tvT3iQmPUNzf8ZZTKY0zjxV6MbP2n8/U/ArT6JcVdRLTbwBFWtkZm
F7oXpvu2F8bhS9OI6SnY1CBiaoSyOs2ELK5PdKXFeXu7v8rKiZifbptEEcq6
etLLanzj01OL6vPqer3isu5pmf/lzpPvn758YWpuHxwUnZMQmhbim+QVlOGX
EBGWmZ3pYOv85Inyj3eeamjYVJQMbayxJKxfPwXycXCTrniNPf5AOLiAMyTk
VTZ++VJABJd8cMm6klIPBeiLYwa4FPFpe/CteQGTyMbiqQgMDYWjIvEs0hqf
sUklzWOR42TcvIC1zWRBSOh1LHSdiN6l4zBMPJWKwtIRSAYKwcKj+TDIEREl
RiOou1u0PTl5qAwKWyC5WsHQA1LKHpgHaIYV6CXVvoytU0poVIyufZxZ/zK3
WSOzWS256eXrnqeJ3U8ShpQSp57Gj2kkLpqmbJnErnxnVf3Eu1ctfsqxmuzd
tGxVgzSrZ8fOgJQZEN4DjNKpTjlouay9ZVWkoJOp8DsVt5g07NZNDVg+CSmm
4iVMlIi5J2FAhORlOmGcAB/gU2ZlQsj1Ce7igMJjQKnobQIaRsLK1cIOnbRL
w26QkOs09BoDt8bEb7CJm3TsKhO7RsevMkkQLgcrllD29zliEYvD3OWy99hM
BJuFZtLlUgTLoRK4NAKTjPkVJjeNtLg3iWpQHnObz1xnUCEsGuQmxiLHOA0n
YMm5xBDQGRIuc59HkfDJIjaeQ4XLH8NjwqQCuETEIRFQ8t/24YwHruhsYvPq
nO/8mD6P6XAldTjhGkuJakBoAvYtAE8b8DROeZpHlJeXPN0PIr1TkcX1QRIN
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
b4VWfeb57nOvdw+j2wwzZ+4Ftd0O7/lHdM+3hesRdWsOtXuKrwcfRtWa57bH
9W+GtEz5FbRahBR+/SpP4Vm2gsJ3WrrB1IX1m1vDtB0JaUcKXxbDZg+QU2L8
tJg5yeCNItld9INlsmCVJcSIZEf8IyA+A5wrIDsEklMgvPgkBdcycCEEh3Qg
5YKPlMtTIQDs/RMun81iIj8dEy6FC2Jyu5S4x0KsHHMgNHj/OX/jRLDKoS7I
HQ2bhqBTSXJ3yMKzWXj5u8E6ZNAEWMI+aVxInheRlwTkdTEJwqcghAyCmEmV
SxQencwkYTh0FJ+FkXIRAsYOm7pIpe9enJDARxSHUALbdiDAXzIw908Yz1g7
31+xNAHH4JKqCfYNzgU/gU/ffjhQAEDh+uL2mdgZnBZLaIVLizl57cVPA4vU
YxdMotZ1PZpV7HPM4zstciad323oRo9qxHYp+/faRG+4xUJ1LTuVNIu9vNua
m5dkp3QAds7B4oGMLH8b8bCPH+XX8IR0ABhkPlquX7fWYQsjy32VnV3v83tr
I9sr9ftaflxb+IZDuX0menBIu3NGe/CR8ZTPKgSXNuDjrY9HDz4d2gCeNRDq
AxA6S01p3m5801oWlvYmKLG24k0Z6HYGxQpgSOHDUNjt26X6+UCt4tiutNcz
qdbLe+aZ5dItj3blwmabsrH4MrF/NN8+ZF7FN+OlR7+mV+8L5467ryq+N3l3
y6Dwc53Mv6gl/kk99q+aCbf0kr7USfzJKNUopF3bs/EXwze3TLNu8uFTJ5S8
al+4Vat41j5xLNMP7lD3b1L3b37pXa/s26gZ3P7Sv0klsEk7sut5cI1+fLdZ
ypBBVIe2b6WGa6mJX5VHQr+NX5225duv7vn98Cz6lWezVWC7mUertnW5gU+H
WXCbXnDzi7Am7ZRxi/RZk7A+Mzm+nLNeOiSre74xSmgxTup67lv7nX29gsVk
8Aubw03Kea8vaFcAiwr4woc/fW/mUoS3Sq2Kzk1fn18XIYcAcANMhWuyAn9P
hUR35LCcl0ZNRjtdGyr8apoLK4d6KsdmGlYh+f291SOdvXPtxU1vgpOirP2C
Ne38zKzijW3jnDzefPZn87994fHgcaitU6KRmVN35xhijbq7iKMhuFKakACF
UvGbGPL84c4IY7Wbsdl7xlo7FayyyWNCzhSLtsDnblKpmwQchIzZI+MgDOIy
FT+BwQ0ydmvF5CkafJYMW9vnMIRiApm2imHOIsgTCOo8DL2KwO8yWDQ2j0Sj
7lLZKywknIaAMFBQOmaPCN0mw3ZIu3vo1Q38LgS3BSPtIvHbexuLawsTi6P9
4y3NbQ2ZNYWxb6sLaic7pzvq+vNyyzJSi3KLGmMSirUs/R5qu97WcLtnEPj1
S58n5onPrZKfeb1R8c195Jbx0C1f1bfspX/jC/faF+4NP5oW33lVquTeqRc+
/ty19WudvJ+Nil+6dDtlTL0bPyqeOikYPS1bAgUj58mtVL+CFdOQUkOnSDvP
MA1t/ajkpInZefksEFIRYtreKRV1Tt07I0L3Kats2jydNi843to/xx2fsy4/
HZ1+AMJ9wJUBmgwI+YAtBCTOOZp5QBBLiQcHtOND4QfAvbwpAHR8BT58AHwG
iUuBMQmLh7xtERHBIWxJKRAuelZEXxFTF3nEFSEHzmfjONSbOr0sIp1FIPEo
JCEFzcOhJaxVEWVLQt0VUXe4Nxt5sAIaQUSn8JlkLu0m2CJiEwWcm54jLPIG
l7ojFhL2hfgzKYJDbcHvRaI2TbDbzw5ZOp8kpoCtf83UBSJzIDG/4j0Dhz9f
i/7y4ej/gLPHJxKnT/s5xJ3Ekd742IKMpx55KkGTZlErdiHTJt5dhpEj6pGj
9gVQm2yIRly3sn+bTuCInme3uk2djWdHYTF8bUP4a64r5eR660DG+HgByOjj
X38ixQu3IXtzk9Mj02NTA819zaVVrRVvexqi+5ptx3pfwLdf7At0r2U6FxyV
K5oqYGiK+R7gzApcvvx4pAHEtoBnD3gW4Mh3DRWX1lVlldH71Dw2IczrYDwY
tNy5yVJbftwQqOHhP2NXATRLiXrJJW4RJZ7Ba8/Mx+75DWnkdDi+Gw/OI/jG
U22jF1+G5D+wbr5nVfeTRfE3hm+/Mcz7xrDwJ4t3P9u8f+Jc+8y1StOr7qVH
jYFvi1f6lFvqhLlfq3ZIi3PWtH5om4pLxUOrQlX3Kh2/Jv3AVnWPGg3felWP
ajXPau3gVsOILoOwToOoHrWQeoukQdv08VcJ/ZaRbeYhLdZhTS7xPc4R7da+
TcqmWfc1kx7qpj83zlG3K9d3rlZ3qtH1b9YK6dSN6zfLWbDLnTON6DHxqjFz
LVKySX1qnaodXmOW0qsT0aXk1X7Xd0rbpDLK3gmsWYNmuT757dVkUoh/rKJx
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
UP0mJsy3Pj69I+XrnHNsP1K1r3HPDkmG6xvGZW2agVnOZgmjn+ks+ISOgoV4
UKUAmn8Dmr9Rj97wz103y4EqZWxqpI/oRVbr2pTpWff4ZHB8K7kmmYsv/RsU
LcuMgidVgvp+Cm41Chs3i5uwSp6zSpozTZ61Sp+zyVy0zlhyy1vzeLvt/x7i
mrPknrlolzzlmblikzCk5FLxnUG6Z9aCc+qUmkethle9tl/zT8bZSk6VKi5l
Sm5l2gGNFjG95vGD5nEDNsnjHvkLfmVrvsWrvvmLfm9mvTOmnBO6XSM7vZMH
QjNnw7JmLXybvlIMuq0c+7NGwh215Nua8Q8t8h44lt5zea8a0GYaP+aZufC6
DOGTNGroUf7UJlcjqEE3qlUtsFnTt9kybuT7bPDUu9HbUh2sJYG6x6DyS9D3
ElER8pV6zF8tl1UcWsJ8DDuL/3wpVQenxvvb9xnLnwGKCvgUc7oX2pTt7Gzq
8kQl4Svl4jvm/T9Y9f7xZcHvHyc/MynwjR+q66MsIQBaJKjur0LRermyKe4l
ByoGUgCwJ1dE5rqMucrYXSbvQimEXTh6loRBEnc5DBhMQMDzsQghBUlCLmLh
83zaDoeGJON2mEQEj4zhUNE3pZLxWxzSAos0LabCJDQYC7dNw0J5FAyLhMFh
oDjcNg67xaCjmBQUHr1DxUGpBAgBvgpbn+IwsfsiKpeJZpBhXA6eQFhfXx/e
2Z0eGKjt6akcHW6cmu8em2obGK4fmWieWexeXxiGbM4N9DSVluS3t7aPjE92
9E3XtY+/r5soaV4orF+LfDOeXLrsnzMTkDcfV7rhlgtzzdrUDxm4b176tXbO
T3rZj61K1T0a7ONG7GIGrWK6LKLbLCKb7eO7HNL7bFMGbGKKfXJ7A94OB+YN
+GX1heYNZNTMlXStjq5S0MwjHJ3PFoh2INDiovybDFg2kUZEUdFIPpYkpojF
zEMR71J6DtawRxXdu6E5w2pW+X+7H/a9Zv4ds9qfTOu+0O7704tGhZ/zfvPg
3Zf6nfftR36xbP5ev+g7rVRNuzdmrrkRidWt7UtSATiXADr2TMaAyhg4AmT+
UK7iUEtCwsohB8En71DQm0wMiopDckjkAy5HRCIwkbsi+WViYLkkNIdwkxkr
ZuIkPPw+nyrmEng0rIRL5lOwZBSUiUfucykyFo2FJZD2OmArFai1bOiKBwFi
ciY0BUe64FwFiJSuGSpA+goIrUWIJ0Cqc0F/cET8nHv8neyjPpLs3dWfFBOS
7urWqOXYoRQypRS7qRmGfhUptE+UWb0WPfKdVQmffuLV/yqpJX+UsMwDLYvY
0WUahfP/msiC4xOqUIwRH5CPZayrM/HV+dHc1GBxWdW7osLOzsrxwYrWstCO
Ok/8TuoBO5mMsro4sAYftGW8H4T0b4BMDZy+AjzbkwNtGVPrnGwESDqAoXEq
MB3Y1Q9qNLcrSFF3LNF8HisZmwSdRqDqT2DYECT+U8FZnDAJ9HM2H4Y3KwdW
GXs3aJpXa9h0BhTygqqFJolLyu5NipbvjUN6nof23AntMwzot0tadMldtU2d
s8qYd8hddchZMY4fN06YtEmdsc1csEqetns9pxvS55614PB66ol92W/v+MRX
Y61jx1Rcap7Ylmn7tKm6V2v4NLz0qNPyabaO6XdMm7SOH7RJGPbKXvArXwup
hAQVrXvlzQS8mfPJHHNK6LYPafGK7Q3JmIjOXrT2qf9SMeie5usfX8R8/TD4
lnLkM8s8Na8aVb8mjaAWs7Ahn4zFjGp0aNacsXvdo1fZz73K9MI61IKaNQLb
zaJ6tMLnn72mKui0x6UXgU2Pm/hzmQKYibDyT1R4WXP/1YijrWdZzj/OuIrg
woGPDGCP/BWwXgGJH2DGt+abqTy6+5OiwxeqcQoPQxReJv2vVvKXOpkPTPPN
PesqW5Es6f/rCLwHwAgQjIhFsnk2GGcerVIX+eR+GWz1CMGUkkU0Kp5FxnNw
XD6GJKUyWAS5LMHQMdtM7O4BW266cXQMVEghSln0IxaVR4TTMMt01AwTO8nD
wvlyLOChDByUSYDTCBj5bGBSCQyy3PIg6ISbEqliLlpIh1NuEkFXRGzykYjF
paBZRIRUQCWitqeHO4eH2lqby9tayjpaK9ray5ua3nd3VU1Pdi7N9ZSWl7x9
lxcSHuHm4hsYHBMel5OYVpVXOhyb2uHgW6xtlffcOM/EteGRcZGGXbVr9KR9
/IpdzJy2Z9cvxoVfq6b/rJ2t7VzpHDca/3Y1rXIrp3YrtX49tWYpo3Uhq3Uh
sXUp/l1LWs1QSfdy/eh2+zRqaJU8s03dRnLwLAmDf8Dk8mgM6ub6Skt1hfxd
pHMINDKGhkZzCbR9mnSfd8kVAOY+4HwE7YuC8PzlF3bVd3QrnrtM3Hcc+8V5
9BuHmS8shv5bt/MfpkMPfFeeh6w/9Bz52aFO3b/FOKjKIqgg/m3H+Bz67Apc
nQIm44yPh7MwMCZiS0iBUuHzPMKajIVkolep6G0eGc3AI+h4tIzL26eQ2Gi0
BI/n0BAcGpRNhrLpED4LyuPuCfhoPh9PJ25TCTA5YfZ5BBkTyyZusvGbB1wy
G9O2MZWxtxxAQTsICJoyzuMr6bfg5DY4fw5YLwHfEux7nVN0Txiql6Kn4PjF
JTA+BLZ4cXRdR1JoRJmjV79uwOjL+KFH8b3PwyYMItDWcSLHvAO18A39mOmX
Xv1WUWXJzQv9e+S3bQMdk5tU9uH/bUf98fT6/EAmZu1LqB8u2QCcXp4fzE/M
l5f31td0jPW2zw6WdlT7DNZb4jZ8D8g+lB3VC4mcctoyzn0R4w6QGYEju2vO
q2uB3TXrOaDcBSx1cOh1ceIxhrb0HoiwqBj9/CeHiQhfMPoKVH910W4GZotq
n/32s/CPgZ1XPpXrGiHlKvbvNKyrtazbTQLGPAsQnqVY6+R1Hb9+PZ9Ww+Du
J36Nd/2aDAJ6zOLHrVNmTWPGTGPHHNKXrDMXjRPGDWJHLeLlPJl/lTjlkLms
4dvmnrvumrP2xL7itz/4vG6kOSbPafl0PLYp1nSr0/dp05KrFNcaDZ9G86hu
x+TxVwmDVglD7tkLXkXLEVUbYSVr/rlzfrkTXhlj7gl9ThHt7tHd4dnTUVkL
Fl41/7jnr6ibeutRyPeK4Y9NsvTcK4yDmtR969V9mkxCuvyylt400QIzVzRc
Kr/RSLhvlacT2moUN2AU22sY3e8WXP25C0Ih4FLhF19OhysY+NNN4GhAib6Y
o2MZ8MC0wT6iqWMg+FBsDKSu55T3AC5fR5w+oXSANH6+0ebF3b/+847q92YR
Cg/sFJ67/69h9E9Weff1MpX14lIyuyA3JdVhEvhid4DVUthTeqkRwA/xyVQc
4xBC3UZRFjgYrAghE+0J2Cg8A4WgIIgsIplNJFFRcsOCpGCgbAJcwiTIzQsb
gxASSEcc2iGbIiYhePhNFnqRR5zjYDF0nJwtWwzsLhm1TUbCyBgMg0Bgk+Sm
CU3DQbikbSEbysGuMzEQMRktYzEERPniu0mCQ/dZdCYWOdXbVVda2NNYPTPY
PTHY0VJT3FBePD7cvzw3MTXQ1TLYU9NSk/u2IDY9IzopI+Z1fu7b5q7h3ZKm
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
HhlUvOKbPe+VNukQ1WcX3OEU1RuUOuUZN2bh16pulmsf0PPNVff//Or0m4qf
okHqI9PMRyY5amcf5dnmnbiUVMX0S14z8O+7a1J4SS/7mmnhI+cqrdAui6Tx
h34ThtHdz33ybtmWf/0sOTAhDWDdzgckVwEsRjt5hv7gm/48NWZkOvaEHgj4
sW92vwOvb3MQfwWv9EXrVjVp1hd+vfXrHcdLWjGfKAZ9rhRyTS1Lz6w8P3MU
gyFvHoPz4Z0qeY2Qvxdy3m3mvqd5A9IQQEs2KdtQ6gZaQGCwSVI8Zp8CE+AR
PCwbQ1onUbFMJlbMJ4s454mXUh6ZS0aLyXgeDsdEoTgbSDFlQ8IhnzfDZcL4
VAZhfQ2PWGAQVnk0lIhJ3WSzRTQhE0MRUggcyhqfOCdjrch5yLM/pCLWNxaH
YRM9yJl+EmSWhVqmI5bRcxNTba0T3a19jXVjra0rE5MrY6NzfSMrQ6Po6bGW
WWRV12haaVN4cnFQfGFqUVtidouNV7ytZ5KOTYipc7Smpb+WZeALm0BLn0RT
14iflZ3/e9P4mxtG9565qeoHquv6eXpnF5cOtrQvdfYtDo2vdg7MtvWPtY2M
d01Pt47NDM/0tw51LK7Oz63MzE5NwKCLiNVFFhHFpZy3ojj7H3e3uAjoYmlJ
/jlMuCQph7zNxm3R0HwyiklBs4S0zbO5I9xWcQz57KHNp4/87ji03nAd/tq8
53OLrgtemKs+aKVY8tPUjUeJKy8y0HYNXM+O3eCuwxoECKoXPnfvULYrdElo
6VxizjOO+SKpeO8tkyskkYkcFu1wly/hYNkUqExA3N+kMZkoIm6NxcCyWUQG
HsnYIDPY40zWjECwJhbDRUKsTEITCagEDOq8O6GQy95YpmJHpYzBo81BEb1o
dTpovskVOeHKQBhuMVVPZc/BgRLYvQq2fvsgug72bYEgWE7wfCeN2WR4Hwhj
RFj3luGQ1ErD4qEsi7A8facp2xC6WsDEpYCkK+ERqtHl3kVM75yTJ/aoC9rt
L+0H7J3XMhqbmOc5rudq5O2HnaPDPQDeAXCyLZK+PwCne2BTtLO3KxDwCX1d
g/WlE7W5Ld3VXVUZ8e2lHqu9Ftx1LbCt+VpyV066eMzXeM+ze8tzAzJ/sO/5
Ydf47IE/N4g+UBPz9Anr95lojcmpeK+YPkM3pKtpKZirBUVfgdZ/gOYLy1ka
WrFxP/Wy8irrfCMyn2oHGFqXWXiMWoTPGQRPeBWhfcrW1bzbb5qXKLt3PvPu
v25aoupcE5A9F1mMck6eck2c981ZdU5dsk1atEucs0pcNI6asEpYMo+dM4qc
skhY1PMbtE9Y1vYbfGJXp+zQ8NmDcKvwSYf4xZeeXdde5mi6NKna1Wl7tGh7
tKk6VFiED/jnn0mXebeMhdDSlcRmfGwVOqISElV6xpNJ79RRp7ge74RRz4QR
n/iRhBKEc3hfVD7sX785/Pm/5l9etf/ujtsj/XRtx3IN61JTtybfxFm/TIhb
8opN1KS6a+Nd06J75sV3basU3SqfeTdeD590T692j4qwSp/6zGLhL4pB9Ikw
0PkvUKYA6jXk8K7vVR7967mqb46vkJoFqAF82ce7Wz+At5fB8SOw7UacDIzx
tDC38fSKyY8o7o4uG0kvXxwcovCZ2+A8lwGQwxQAfhkwwAF1i8PpQOJyN2ls
MfzDJkomps4I2MNi3rJEjN0UI7b4CDkbQ+ZhySwkjYHi8VAiwbnLsejcP5Ag
ZRM5BAxjA8HGo7mEDdoGjIBaJCEXmKQzYuDk5/6EhC0JdV/CETNYEhZPRGGw
NtAiBoJBnBaxVimYKczq7EhbZ29LTntt+lhn9WBLyWBL2XB7VVNZVkdjyUBr
w0xv7+L0JBYGZ5Bo2HXkeP9Af0NFVhU2PnPcK7jeM7guOWMsNWfKxjXnxkOb
b37R/vZXrUu39bWMffVsArXMvMycQh29Yu/pWN7RNFYzdXYOiE/OKC+u7uof
mCMTOMf7H04OwZvjU/HmNk8sFYq3xHvyzaM3u69FB2+2jt/s7B1sSoUsLvm8
LY6MjeeTkXQ8lEmGSQREJHShsvZ8z0QqouxIKNscjIwMlZAXubRFwTb+vK4E
vDeLiPv4rvZf7tvccay76db1tUXzX41r//F8+BOt7u9sBy56Dl7y7r7q1/Mw
akklcf2iw0RkP6hHguDq/e/V8hS+0PlR3V0/or57cg7L2d09BSSOiMPny7Z4
XBaOz0Zuijf4HASHieSwsTwekUVDc5jELcGmYHuVdSZLuDAaA0qlotgchogn
ohOZWzw5h0hmY5AHfOjJzsKxpJWJiYBMODGX3fkIOzlD5y1P8zzda/M5kD8A
sl/BviLYNn7NdhUS3F7JYiWCZCohdbLbKykv0i7E3D4+RtOt7LnVgo4zWcV3
7mZA+dP0csu8aZ9stkOCXNMD89hixCdmvb0FEAT/i2s+7L/jHr8Vgf/vWPi8
sO9ADM548uYAsBikpdmRmvKa5Jjmtsr8nqritorIxR5fFsLmUKAN3j4Fr26d
SK6DTW0g9f4gDHknCjuVuryWvHizdwdsfkum2izCMqYHzKc6lNILA7WjEV/f
a10sKgf1v4BmBVB5QTic4RsW7FTYrlM/F5OcZeeXqm6aYR065JoCcS2CmCbP
uGbD7eMX9D27VR0bNPx61Py6VdzaTSOGggtXI3LXvJOmPFLnPdNWnJKmbaPH
LaOmLKNnbWJnLRKWzOLnzSOmbOMWDYJH7ZNXdQKGX3h23DOv+PeDcKOAIbu4
OSP/AWWbSpPgISWrUiWriucu1Xp+7Q4Jo87JExbhfa5pC0m1sLwuSlYbIa0J
G1+zHpg1HZA15ZE87Jo44hU/Epg+FZEHiSmGJVeh72jHf3bZ/ZeHPl9dc7r6
OEjDMFNJN/W5ebFr9GhIPswtZd4lacE0eFTVpUXFuVnJpU7RoUbFtel6VI9z
ep1PaIKBX8PjRPxX2tVaz1+C2UgwoALyvwAdL+erPH99qf6LvU1IujF/OoDJ
vkQlXeATP3vL/h68MgDH0QDMAkA/ArAdgOcfY4S7ovfnZhGH4j34+s7MsrMC
YAtOFsEmEaDpLPrBJgS3Q0Wf7mPZ+7ghOb6XR4cwuCiyaInPHZMyh9HUFQx5
nkhZpLCgbA6cyVhnkuA04rklNY9K4FFwTAqGxyBIOOeNnEhEBA6HJuHWuUws
i73Oo6PYVCwJjqQgMQQYYnV6ELk2iFjuRcD6h7rr2uoqi9OyioqiysuSO9uL
K4pTc9KjCwrSigqzm5rr2ls6egf6hwanBvunBodnG5sHYuPS3Z28nugWOwW1
B4T32bhU2LmVewTWBYQ0egWWOrqm2zkn+IflN3XNDM/C6zr6usbGF2DInoXx
wdUZOA6FouCpDDqTxWTS6IfbeztS+fHB/tHOnkjEFQn5QongbIHkinmiTSJH
RGAyMFQKnIaFkJErbOL6FhPDpawzsStUPETAIS0vz1eUn8OET0dJmWgpcUWM
m9zhzG3xlwTS9ddnLAEgu6/zt5eWf7pq8qc7ngq3Q/70Iv9j48pPnw399Unt
p7q1Pzq1X/JuuerX+SB68ln8xrdmI9cc1x96YC5bjF826VLz7lb3rf/ZPOWZ
mVt2+7T4LYDgORyZTLotZbBxAgkJgIPtbSKLDReLCVsyhlzO2RRxBEwaRwRj
MOBnioXNJ3BYdD5vU8zbYhI2RYxdFv4M5qjXQiTYm5MSMzALLtQ1nzdC2zdn
4cyuFthXA9v6QPYSSBWB/Jd3kl93OPc+7LpuCzwFgmCROBsOL2uri3ELiDJ0
9zQKzjIMGdBwhCpZQU2jiVYl8JdpvTZZq2bBKAM3lLEfxtx3PCUbjlwAr35f
v96CraO3rN8dS97sb0nORvr0NWCSZODoXKfMjU+Wl+Q2VVS31kzPD0QNtYQs
DoZSYH5HPEdwbHCmlE7l34Od20CqA0TOp4KQtyK/I6nVsezZu/2fX7HUkIiI
pv7WkuLs7Bxf5+y0i66d17XTwEzG+eJbrgD6DFJLR5Vj8E5ZkJzsatvIKiWr
7PvmDY45GI9mvGcL3L5szisfo+00pOnQaejfZRTepx7Uqxc54pq5HJAPC8te
8s+aD0hf9M1acYqbsYudPjdxjZ2xjZ+3ilmwjJ4zj5yxT1yxjJ13S4WZhU3r
BfRf1c/9VjHqhVu7c/KqfeyUddSkU9zkPaN8RdM8dcda8+Au9+QZ+6hhI78O
+9jp7Pr1qgFmYS+zoIueUocJzp0PzJ7xS58Izln0TB73zZjySRvPaqIGZS0a
ejU+Nst5pJf8l+/1P/vFTF07UcskTcMo08i9xsSv3S5uxjV9xTlx2SRg8Pz8
yKH+oWPVY9c6xZhBTa8GK+8iPYesF0Ftz8OW/3YrKiY8DSwEn/fFqP0ITHm6
+zooPFHTC/Soy0tAwbQXx5SB3BRI7gDGL4ekK2DHGLx1g8BVOLtBh6DuAMxJ
tiE4+tQ6bXB5F8qN/DvAQgERkNbB1itAEO6KubsnvF05CvqWAX/NY4qYfDwF
iiJ0UimNfGYPmjyNJo7hyHMM5hKLBWPSIGTSCg23QifC2GQUbQOxgVmjEJEi
Po3PIZEI6xsoOAK6gNtYwSLm16GT0Pmh6eG+xamR+fHhqcG2hdmByfHmocHG
3o76sfGRhaml/vHhvuGB3rHR2ram6obmhq7+urbept7xOShuYHw9p7Q9IKLQ
I7TAxT/XzClW29hf8UWEjmncC6MoTYNwbcNAbaOAwKicrsFlJkeGIhCWIKsE
Oo5Cw8wvDqzBR4Ui/AYdwpPRXp3Its5m3A5Lvsng0PBCBp6CPYvq4Pj1ZcTa
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
4mE7jgTTJ5srYJ9KxU1QCcOCrQWSYAwtGd6QzUA4o2juHFO+QRUiF1cHmRw4
j7fOYi5gMd1o9NQGfAVPoFApMhxJjKfxcXTaOh5KJCMwGCQZSWRjuCKKXEoW
8fBkJga1SYBS4dMMxBINPoddHCFCptjro8SFTtp8B2ulhb7awUEPj/dWNLSV
nKdL8In8DQhicaC/s7asLK+qoaawpi0pt/tfv2gr/F39n1d9Pr4e8edb8f/V
rb3m3Pulfs3f1Cv+pV31X5OOz3Q7v9Dt/tFs/FPtjr+o1v9sNfqLzdRFp6Er
tv3f65V9oZr1rXrWz/rV1k5lPjFd5W3QoJiKqrrJ8cGlpelRPHJ0i4E4o9dY
a2VOkl14hGJenn2op4ueqr7qk7CXz9Ke3sz5VMH2ty9trHWd89IcMJCo2V7D
pR415LTWJsH2g9wNHHmAPceTbee9Lf293btHx5+92v3kRHYDSJ0AJUq8EjJU
a19VExOcnakTmaOf0q4ZP2OQyL3jSrUzG7Fxn7FPXNZJGFJN79fIn3qSOqwW
16fiUZHXgu4eIMHXmOD3M5w3r9+/ef3h8Jh3cPDq9Oj09OT45P2W5GgHghPV
9620dSz2N0AHMiBjaSPrDZmkKXsh2miPGSoFL8Gr62D/30D+o1z+5GDfGmyb
Avrj85Mm0ZNT6SMp/cGWLBhHrWxsTqlJ0H/gXamVQvmj9qrCFyYAXQJ6/nl+
4tlhttTS8sK1/AujwusuLcpujeahQ2YBwzbBi+6VGLssiKpP61Ov1nvOFfcd
yx65ljmmTlgE93qkTEQUQKKKoXG12LjGjdhadHwDNrAM75m3bJfa55w3a5Wy
ZBg5ZZE0rx8/8CK8+5n/0DO/8ae+I0ou9Tesi6+alV8yabljmPvl4+CbxvkX
9FJ+0oq9YpjyuVLADdMso6h2k+h+q/ihl/6td00zbWPHnjrWP3drs48b8Mic
SqpH5ffQC9qw6Y1rmXWQ3Mb1nJb1iLIp95R+w4A6h8RRy5gRh/Q5h0JUZMpY
VN5yfDHkuVnqpz8bfvyd1l11/2tKboraodZ+VV4J/XaRHUr2JWeaRMO/Qz+k
71EiTiWgRc0586pu8m+67erO07bedaFhac5xdRrJ2Adh5Kv3bakVLqD5Kuj5
/iw8XFhq0bP0ufCi9rp5VXSROxrzeG//t5PTJ1t8Jc7SxWPCBbB1lUu5tM31
lWM7ARLNwQAOZoNH7eYRu2ioFTmTuy9lCOgIDo4gIvK4OOJQW1NefHxySHx6
cHRJYlyQe3J0UExuhm9Tvc/keNzyTEVfQ2NV3pCve7mNZeZLgxAt80Ats5Cn
elH31FJuK2ZcVEm/9qzwikbZdf3WK3qt96y7H3kOfaaa8fWL/DuWjS/9+mwj
ptzix57oJboFNk5Dz3ujyA8BBs/AYzd4FKyYhn2/TTvkow8EcDlnbU+COJbh
d6UoMQMqYa3tSdGHYi6PgmDQV5n8Nbpglb0F4+4hSPwllhAl3KZIJFQWFc5n
YkQclIyN4JNWKIQpCmGeTlxn0xh0FotCJxCo61TqCpO5StyYw6xPb0CXWWgE
n4CW0LFbbCwbtcREzDPQy6iVsfnh7rXpXuzqBHq2Z2W4DjXdRkFMcClrs1Od
rW3npzlgXyDALMEn+noaSwvS4zOT01MSi0JCqx6qhP58PfSuau2Fx7XfP2q4
8HzkgsaowpcZf71e89nDtoua498+bf9cseG7py0/anZcNuy8adX1tWb2pyph
37yI/Fkn/Fs15x+eOvzwwt3SJSM4rbF5eCUxvaKqobevd3R2Ynh9aZCEnsMu
jQ+3VeUkWocHKwcHPg0NsLPRN9XVjjXVSXp8I/zbTwxVbpn6e1iX5euyKGHr
i/qIKS3spCZ9VVtKMHkjsT7ddHordj3Z0X2zd/vd2/++PfgOyNXBq3jAK+BD
i8pTPeKT4myCMrT8akxSptQjZjQjiTec6ZY2/YYuw5YxixZpC3q5s1rZk4/C
2u54lj11KhiHbm/Q92AIwuH+4ZkyOdg62Ns8PDzaffv6/y8UfseXbY7NwFOy
K5sb+me6ob1ZU10Juej+IPaagQBt/p5evAUu7r++AXYfgW2tE5nR+0P9D4e6
QPgUyM3AljWQmIkktnugZg5VXl2eXO1tdKUAXLYf/cfXZh3llQDhDVoUzv1O
R4Ljg/p+tkf9Qa/6pm3yC/sc58gFi6gl+xyIdyXeNmP1gWP1Lduih6615w18
ncod06eswgf8cuajS2BRRdCEOmxKKzG2HhNevhZaiHXPnbGJ73JMGbNMnDWJ
XLRKWjJIGHsW2KIaMKThM/7ce0zRqea2dfFN8/Irhs13zLI/fxx6STf1km76
Vf20qwbJX6kE37bI1fCs0/ZrsojtN48eVLWvMgrsfGRdoercZBPV4Z02EV+D
zOkk5LfhshsR2U2Iwm5kRi00rnTWPXXQKqrDK3veOW3WJnlKP2Ha0bczqRJV
0smy9m/65b7TR189/+pX/U9/0fv1rp2WfY57/IBzwpCaU6WKS7WGV7tx5Lhe
GOSpT/sDx/zf9DOuGFeoe/VbBrV6JzVY+5V4p0I0XCdM3ZuM1Z9/WIgG/Y9B
jgKY/3a0wv0PmlmfOzZ5JDoh5p7sbBnI3gSJhf70uZeAYAWkznKE8iHJaZNa
QMG1UWAyImaUxeoUc8f4PPjuNv9gh8dkIgU8FovKpZHpM1NzVcU1qdHpvi6B
zlaeznZhbrZ+SeGxnbXV8NlFAoQ61IhKDp600m3QUi5/qlKo9aJMRaP45s2s
S1crbt9q+O3q6M+X2r/5qeGnG40/3m7/7Wn/VfXRf14q+ufVzOu6VVZhfb6Z
fQEpDc9NXf0SC9Zo52XMPNHW6ioUBofwqOgdEeHtDuNIipYwIVziLIuyKOQg
N/lYAQPKpK4xmMuvKNItGptPJTFJSAYNwRZiWCIMlYkk05A08tnbKFIui4fF
cQgYERG7zaAdSFFbAqSAgZLyiTIpmcOFUekzQuEcjz3KoIxQ8SN84oKECRUz
Vtm0BTZ1nkNeEzHgYiaGTlhbmh2Er42vry/Mzw1BIZNY1CqVij4TRgsLk929
nWe/fH22e6C5YLi1cKGvpqepsLO2tLeza3xiLTdv0NG9yMG3Vd++TvFFwU3V
vJdWXS8tu6+pJd3SyFDSLb6sFP/tNf8vLzv/7Sfzj380/fyG+a8qTjd13VWs
ve2iMiLzK1MqalOrmypbR3vHl1c3CMNTc3jcWQAqZdNwOPgMC7923oCPhSMg
B4jEGgSsnMtYg8/PlhR3lhb25CY356ZXNNfkV1VY5ub8xMQbMnFqLLQGD6Mp
wWnsMzQ/SPXAvgnYMQdyFbB7Hby5BI6vnmwZga3sfVYXdqkrLT4+Kr7GIbhZ
169TO3TkplO7ajBMPZ7nGrGq6zdlmbxsmwc1z1nVCO+96VB4yTDeMbaSu3+e
lIbDb+zvnefsnb4GH/bAu9OdV3t7h0fnS8Y78IrGwnd01yWl+lcVp6wMjvTn
VzSnmuNmlcWUazzM0w/0wm3wmXj/zt62EZC5AIkl2FN78/bR8c5jILcEYu8t
pu8GO054Olc3WJmdkp3n6KKQBq7ZdsabqgBswvvSL0DXv8DAj4QSb33znu9c
JD/7QE0S2l66FzjELznnonwrV5wyYaYJk3ftq+46lmsGtD7zqlFzr7VLmbCL
6w/IWzpTJoGFK3HVqORGSlgF0j1/IbgA5ZkxaRHbbps0ZBG7YB67ZJu2YhI7
rOrd+tx3UMNnVNWz/559+T3r7DsmRZf1iu8YpH6lGHxZJ+GydsJNg5Q7VrkX
dZOUncvvW+eruJQbhfXaJI7qeLXo+XUr21W98OpyjOlyTxmKLF3NasQWd+FK
zq5ubEUvIa1hOaFqISh33D1jxCdv2SV93ixmWNm33cClNrFyo7xP4B7Xf089
9G//Vf/DJ48++lz185907r0IsApo8EgeMg3tUXepf+7ZZBAxZOc3ourWrhTQ
/civQ8m1Wc256ZlzhUFwnbFfoZ1buXv4pEPSxmWjrNAwH7DoAqo/PreQgnpb
+mf9SangiX1adU0ogxq9JU9HroVSl0IBKwyIHd6hFY/IOnKZN2vbTcgjCvhD
W7ujB0fLkj3Y1g6RJ6dgGMgN6sYcHLGG2kCRKBgCc2EJVVPRGROdFxll4+Fn
GBzsmJlxFsrkdtZ2ZCfV2RlH/PC11n8+1fzk0xf/+Vznz3/RUlB4pKCgqKCg
+rdPIxX+6KSgYKKgoKvwB3OFf3t89F2cwif+X95Iu6ySfOtl5EVlKy1rbwvv
wOr2EbL4nXBbRGDQoIhlHApGws4TEBM09DgTP8fYmOEQlmi4BSphSchAy8Q0
IQdPpCxtQzZlGKEIy2ei8EwcnkrEkfBYOoVAxuGxMDgZjttliSkwBBuG5aJx
u3S+kAHn4lfx0GkqZvkMTVjs6Dqyk0EdkUuWZcI5KX9hVwDZ5a0zCQvIpf7F
8fah7tqV+UE6BU5hoHEEOI6KXtmAdo0Nj0FWJ6DQjsmJssbG5tbu3qGxswkS
EWbjaK4S5K1TnOGfEesYH2JdXZI0OzU8ubCQVlQVEJWhbenzz69vKij8+S+f
XP318vNfbildvv38mY61lYNPYHBCUkZBcESSp2/YS2Pz5KLCzvHRwemZ2ZUV
KBqBIxBJdAZbKBHLxIfHMpGIf/jqfI1/f7jDpaO5ZMz7g52TI8m2dO39G8TB
4RIAW3sitmSH9+H0+H+ZYgAQ8Niw4YHbrw8c93n6b6WmYN8F7DgAueF5H5yd
p+/3lE+YN05Fl8H7++Cd+jbdkolOgcw3NTU12jpFuQTUWPp26Xp36YR1XXMq
UYuZsKiluOdQDaOXzVNhNplw/ehxZedqFbsiM7/ymj7Ym9+/dfeQe26idn6C
83vW/Il0A49aWlnGk3AkOmZ6qbWxKSo3x7yj0hc51jBZG91bflvI+h68+eGA
+xAwEg6P723KdXb3vIDMG3D1T7duyw5/3d6/BaTmbwi+S8N+lQNxQ+iZiLRc
L988B9tQhWjwmWoAGDMFjX8FZf8E9Q+252NdvJ1vm1bftEIYJ3ACGzlaUX0W
mavBtVS3zDmjyBHtwD5Fp0pl9waTuFGDqB79kA6X5EmPjMmQotXYElhgwVpM
FSalkRxWvu6ateCdueqeNmUa1W4e02MSNWsctWSVvKIfNfzYrV7RvuGxQ89j
m6Zbprk3DOKv6aRcVsu68Dzqu0fBvzyL+OZx0K/PY+5bZN42TlW2y7/0Iu4M
LPp+LQ7xU6Yhvfr+Xc+c67R8BpwiWhyjewMzx1Kq10q6N+r6SDUDuOq+M6qg
cpuR0QVz3qljdnF9tsnj5nGjWmEDduHjkRW42DK0e/yQtn3xNWXvf36n8fcv
1P70H5XvblgZOeR6JQ/aRw08dSx/Ylv9IqjLz7/vpW+XZsqifs6yYVTPE8uK
H3Wzr9sXm4ZVWVjHBkcOP3ZevBdB+/cje0SVG5h5eb533XwJjOfdvxry5dNx
07Sxkq6g5SnrvAjlxb4kOTn8lPkYCO69lmofHlq+BQ+lR3OinW7x7jB3cxJF
7YWSRxY25vshU0VdLRH5WaHZuTmNLWOrUDSLubqxMb6GxzPzp1eyRqbzRkfL
B3pqxkabRoYaKisyEuIDYxPCwuKjfMJjLB08NAws1XSMVLVeaBgFqr50UNE1
v69l8EDTWsM8yMCp0MylztK91Se+Nz6/P7m0bQSChxFFBObRBhtQmTgGn7kt
lx4eCuVSqpAJ51FWdzgYDmFFQkdu8WjbQvq+VLQjkfDZNAxxbXtaIl8TbaHF
WzixiMSlYjcoWPwmTyBlclhYChtNPBJt8ZAkCY68TWGdMIW7fPEmmc4hIM8m
IJ+O4NGgAsb6pgi+K12XcJZ59Bk2eYGGWYDNjg12NvfWNSRnRMbFhgUFe9q7
Wzn5u6eUF1cMDOX3DvvmV7lnlhh4RlxTNfKLyRodXz6bLJXNKXGpHnmFoR3t
2cU5wWEhNtmZYa2tFZWN1e7BQdrm9o80tX+6euejv3/24/cXvvnqxy+//uKH
b765c/2K0oN7es+f+TpZpcUGleclj/S1ChjYk7dnsYFMLuHikfC58WHI+DiZ
ABEJcLs7dD4bTyNhuBSchEsRsHAyDvntrnxfeiYnobs7sFcHyJMj5p6UL5Ti
T96IATiQSuaPdvvp9FDEspacZ/VG5PqB7wUEPoDrdMrTfy94+kHy4MPOQ8C5
BCSXwYcXANjRMI6jw/Fl9aUhKeWP9MN0nar0XZr1fRvt0vsfBxQ9S2rWKevS
S2O+iIfoJ0N0QsaV7Ks17Sr9U8ebBzFk6fFrcPIGbL4DQgB29g+kxztvwHsg
FolHhyfzi1vrWwb7hkbb28uaGoI6amzHG1yZy+XE5QTY3N3drX8D8DWQPwPS
FCDzPN4Jer0XDjY9AE/z3e6N3dPfJIc3wKEjGxZWUxsWnBSfWdbv4lGm41x9
w7VRwWJJ38kdzKiBKgVQ/g/QHpSYV3kjvOaKQ6m6bb1nHDq4Rq6XCzfMnfSt
xuqHTD07b5DXourdrO7fYnMWuaSMu2XO+uQsh5ZC4mrQsTW48NL12BpsYjM5
oBTmnj3vkbLimjJhFtVlEdNvFDFjFLFsEreoGdx137n6pmXVHaOmu+aVt/ST
Lr0IvqgWfVEp4UdFv28V/X5UCvrqtud/lQLuGqbdM8t4ZJXztVLQNb2kM1Vg
GTFkFjas///YesuwOrYtC5TXfbvf7b5y7tG4EPcQhxCCB4K7u7u7u3twd3d3
Z8Nmb7a7u+IaIEk9OLd/vvrWr/pVVV/NscaYa84xvVuUHRs+OjSZ+JRZBtS5
RHSE54zmN8DLO5Bl7Wtl7bCiNnBuIzSubM4na9gktM0qccQmadIwbswmatIh
fsY+YjAgbTokfcrGp/zeS9tfrmv8988yP11TffcpyNyjxjK07a1ptqxViZZ/
h71DmbJzpWryrGHegnHk0EfLinvaRU9tK+Wc8tyDC/Rts987TDwKJCj49xmp
SW+NRwKtf87F6HyzHJkq+b77jveYWaZLiP8NR5V7NSmRcxOuFOwj4Ejlq9hi
j297Kn6OFeWjqZVY6jCMMDm80lI7Xp/bUhuUW24VFafq7vJS3/iDqaVXalrF
YFP74sAYEbVzOs1dX1rfJZ39u3wGg81A0qhzWEw3ntFHZI4SaPMoyuIybGpp
bXIJNjCzXN8zMTQw1z21Mtw31ds73TuzAp4Ew+fgNBR9B4wXQnB8MIGxfQSs
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
uGauuoX1hmZ2KDvHS7nWPPdEKjsWfLArsoobdEiZtE4Y8cqf88yY9sycTqrD
BhYseWfOuSRPOCdNuaQvWKXMaQV1avoNK3u3a4W1yThUyrt0q3iMqQeMPzXO
f2acc0Mu7sKrSMkPIbc/eF5+aXTpifGl+7a/39P75ZbOP29r/nbH8PJzm7vv
vZ4pBz/XiHyhEftAJUZKL+OlXpqWV0tQIdojE6zjP6BonqbtUGgf2hyc2ptQ
NFnauFLfBatuXylvX63qgOQ3rcSXzLun9QeXgF1SphxSx9yzMUZhE6bhg355
ywFpM2ZeNS5BzWVN8JCE7lvPLX+9rvP6U4hP/MBjpUDJj77vtJNVnCp1fGuV
PUuemKW9t6mwClq0DwOpuHf8oRVzySrtjWuptmuDhW21pVPjJ//uvwVMuUvL
AlMtQIPMedlJ562R2uhflZLuO83pOFaaadhYftYK9VfgsZx/7Khw6LLphRLP
Xl6TkJB49SRI/kPeK+mYOy/jVQznX6nOy5nP63hO67sPOsaMLzIBwtER6oCB
PhWf7PFRaNDszMDyzAB0uZ+A6RYxBsSiPia9hUbsIGH7CagJMnKKgpmhI8Yp
sEEksp9FXeQxUQzsKg07KWJNiYVDAl47mVBJpbVTKOME0hKRssZgImmcNQJ7
hk0+T3wwiTA+AcpAL3CQC5uUtbPFxoKFZBwbA2fgYRw8joPH8sgkMgm7udKG
GioRosa42FH8au/qYhONNo9GDeNxYwLmMp0wVV0U1d+Z31aVVFMQHe1pZGSr
Y+uuF5vpG5cd5B7u6B7kXVbbERZXaGzuJy2nd+XWc4m//vRff790+fbbf/zx
5l+XZP77hv4/b+tceqx3+4XZIxmHZx8870v7Skr7XlOIfKybeetT9G8vzOIL
u4dnzx2HXtgvKngjVX2RT4xHpW2X5O1WtXxw+kEEJbeF66olKm4tSU1rUOEP
+v4u75vwEDje+orkbqwgyL1L4OqluS8waAWNWM+lNgsYHTxaF4/Wyyb1CEmD
Ysq0mDjBww3uU+lfWawTLueQR1+n4ZgEMIeK2hHSeGwcEbdCQiwx8UQOnsbA
Ujdp/LMg/rHXQ8JkUCleoyM3ieSbm+tXj3YuAdu/AjsXgPWLAP8asP4AWH8H
bMh8XZfeETz5vv4GEGkDQOUaOD8pN03fN/ujV7d2Alo/nakVt6bqMWAQOOad
y3TOEhkkbOrE78lnHSkkU2T8+1+ZJNoHZYxOgE4OfvwbHA+PTwQHYsYWaxc4
JytfT0QrK0MVNfkpWflNHfPdPatNNeUdtYEDNfrzLQqbRKOzBzj9dku0/6tg
89bekSxw8u7k8ArA0AOYSsdQ6SOiCcA9U2cGTJxCWZtGVE2+S26fS8akXTHl
cbz4Xzbwv92NSMjAAQ2PgeJ/nTcID6pbBwU/CAL9bjSmYN/tkw4JKGRZx6HN
g7qcM5oV/NIVPCs/u00puVXIORRZxA7ZJo/ZJQ565M15Z897Zo1HlK5FFiwH
fVnxyV72SF10yVi2SVrUjxzSDJz/HNinH9Yr59Kg4jWkGzxrEj4nY132wjDt
jkq8pHTMU8Wo+x+db740knxudOuF3bXHupfv6l+6r3v1qdmdt84PPno/VQ56
rhIhpRV/Ty3yiXryC/10Nbf68HKCbx5M27dPwTxT3anYLuhM5oyegUlh7VJ1
B7ShE1LdvlrbA8tvACWUzrsl9wSXgJyTx5xTRh0y1gxDh80jhv1yQD6pU+be
ja6hbYX1GI+o1t/uGUj8/OHNp5CA5DFFs4ynKkGyuonaXm2aHvVyjgVvbTPU
/ZodYqcNvQdfGhX+Uyniol7iC/tiPftGS7smM7d2teB+yei+q8ozoWbxwKDF
n0MA/+frRFZS4uAjzQbdgMVPpgVaCj6pYZ5rK+4AkPYNMK1ulHjzWvrXv96y
M64L8YMGh8C9/VEmVhRpBbiVr8jAFaps2m3hNzawtA3lCqbQq+2weRZ+BAbu
QsF6uOzZbd7MOn9MSO/nUXpIqDYGboxPWtpioA/4pH0ubp2+to6fZ1NWRMw1
EWONiQedIQyTPMehTDFJ/RT8EA0/ej4DFL9MJcHpDAKLRaIzKTTMPAE+QUbP
sHBzbMLMJmV5lwndoCztsOG7PLSQiRDRYZsC7I4AvSXAsOjwLVQPc639iLd0
tIsUisBwzDidswqFD67CBgiUWchqX3KCZ215QkNNal1VUmqYjUdoYHRGXPNA
Q9fMcOvYVMvActc0KyiyU9cs990H//vPzK7f05aSs1TUCLj1zObCbbNfpOwv
PbG7/szu3iv7DwohOoapBtbF2tZlUqox95XDf31i9dfrKlH5TWOLkLOQUfQZ
M0lEWadR3zoMPTHpe2Iw+NEJKmu//FCjX/JTi0kAuKBvB8YDiGIAxfuKFR0y
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
90mddYwbsT9DktAxw/BR/cgJlaBhRbcOOadaVf8aOZtcZctyJcMiGbWoX67K
X7mlfFNSTfKW5p07ylevP7ty7c61q4+vXXr526U3Fy6/u3RN+sZtFcnHWjef
md97YXPnjfNrzYjrMr535ELlrUte6GbLWhW/M8nT9ut2yICq+7aputSYBTZ4
J/alFU2Wt4Ib2lfqO0D1bYuNXWv13YicekhBOyayYC6sYDa8DOGWMm4W0uYQ
N+KZMeuaOmkTO2gV2m0d0R+cCzL2rH2sEPD7E5v3ejGyGmFPP3i9UPdR0E3U
MClUtyj65JCt7lP6ObBBz7Pzs1O9iV+reWi3nH37jc8VD/XLNAMKHBMTAmJT
Lrm03ckHfpJO4OR4A233z2tieyR5o4mG6v7X35Q8MGiRtgnIq8jDLzPALcDE
SBmHNwpey8eTO1YgU/MgEJaIw9Ho67snop3Tw6OvP37sbe7QxAI0n7O8uQ2h
Y+qYpL5dweqxACckrjFXwRzkCp8EZaCXaNgFKmmaQZ5jUqaZtDkuY47HmhFS
F3jkSTZ9Qsif2hDNC9nzNMIsATHJwC/wqatiLozPBpFwo2joIBkzxyfBiAwE
jgylkMBU0ioWvYhCzK0uD4+PdvYPt/QOtfSMt1U05NV3Fi+u9PaNlrV3JHQM
jw9MzVd39hc2j2bVTEVk95l6F5i5F9n6lfhG1XuHFLn6JSelVeXmN4VFZtk7
eCcm59U1DnypHjoDDX3XVFPvzE/2IebBKTqugS7hcZm1beNg2AIE2THcOzQz
uISbB4OmFubH5qYnwZAlHAFHZVDRKOTy8tzszHh/fxd4YZZNJTLojJqq87k5
G4TVP8eqHh8ArHOX5PPg+vbn/nzunHwkxKIXeklrg8A34sl3JHDu4k0CtkiA
GAWs478L8Ycs/AYDzacRiFgkmUak0ekUCuMMTEhkJpXIppB5JMISlYZjMygc
FoNDR1JxK3TcmoCIFZGQu8zFfe7cKQN3QGaLEDDCbOnyRAim35K6YL1O0Pkh
VgTECgBbCRCoASK5r8xbR4JLwIHkzsYzLkNzazuCRksc6Pts42+jambiHFlr
Etz70bXyg1uxUcS4QyrdIp6m4D+lHNGnFN5qkDbvkIszigC552OLqk7zqwXZ
hdOCjT0A2AIAMXDMPNni/puR8Hm7a3DC8OhweWVeQX5SQ2t5e0vy1FD0VIf9
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
NjX39ixpfKeRFYeoQneTwAx1xyUTh90XngOfoxd0E0AWKSDzNJBW0KCyU4dx
0IxpyJJDAsQ2ad41Z6QLyqEff2Me8A+B/+szEq4zv337vxYjOIVQ39dU3l5f
XN+W9aW9MKe1ubhiojmcvOQoxlsc75n/OPp8un1niyG5S1c6H4Yu1ABECsdi
ub0tVdHGmz3RW2DDYo8SMNprWVj7xiozUsvPX9a+wCAc/8oa99SE9c7r0DAX
eONWNdRRDdRpASV/O98fpx2fqNpcdKQ6ZsMCS/HOGcsmYePqXp2qbq3qnl0f
bevP0EAvuOuMk3jlzHukTdvHj7klTnqnzoeVgUNLwP55C16Z0y6ZE66Zs/YZ
U5Zpk/oxA4ZRoxohfQoe9YoulZqedZ+dq96Zf5F9ZXfh0ueffpb+1z9f/vbT
o6s/37/207U7l27cvnD51h+/SP76y7Xffrry888Xf/3t8u+XLl764/dfb5zd
u3bhyb0HMs+eat+5r3VJUuW3m5pXn1lce+14R9brjmLwY/W45/pZMiblr43L
HppmyjpW6wV3OqROOyYMmwc1eSf2pBROZheMF1fOtbRB2wfgzT3w2l5UTRes
rANc3E/MboTFFk75pQ45x/Y6Rg3YxAw6JI66ZS05JM8YhXWre9RqedTaRbTF
5s9XNpJ9O3H3VGKu/mxw8X9e//Py+//9aP/WJV/PNlXjs+8d9TgJk+qntlld
rnqA59+BAAkgWKLf8Z6blvUV+caftJc+BkxYZXTrJHW9dKo3c8rkdaQDNfeB
Rgmg+3d0jes/pMIkbE5d4kqSSmaTS5enkJsoMX9NAEVgprYIEACH/g5f2YNP
0DFdSHwrBt9PR0E4IAKTjudSsZvrFBJlmkgeodKHIastFPwIk7gkoKB4ODgZ
skyCL/GICCJqcn62tj63ojgzpaEiv74mr6Yqq+BLZmVFsZuvm6m1uZqhrpa5
hZWzu2dIjIKuvZSc0TM5SytLh9i4zMjodBNzJzUNU43/j6m3Dmp0y9a4uTNz
752Zc06fFtwaaaGbdncBuvHG3d3d3d3d3d2d4JAQSELcXQhO00L7+4Uz3/3q
q9p/5KWoVIqwfvt59lp7rXdWmppmGpqmWrq2Wm/NdLVsXZxDM5NrKkt7stJq
Q31yzPWfG2m8cLTQTwgLKMjMri4umRma/Lj/YZvNOdjaYWDWD3ik9xzUNgPC
IU7sscEsagMB18yg9vDYc4fb6G0eiYYn0ClMgW/DI8nIJQRpHcmnE/fZlPds
7C4VzqatMilgJhHCpqxvEjf4JAQDv87ErTGIG1sMHI+K3mQTVpfn/9OdnrcD
ZnDn2VvL/G0wiTqJwQ9jsBM4/NTcbHNeSVRYlGNyekjfWCN/j7SEnJpcH95Z
hQE87jcuk7a2Sl1b5mLW+OTVfeb6AW31A2v1I2/9kLO2y0BtUVGbFPI2k0Yh
bW2xf3GphxwyZYtFYuPwFBzm/SH0y/f+3f2e1ana9qKA8UaVjXFF5ty9/UVH
gKzyC6cCULUA7rtvtKfH3Kdfd1SPj0w2N613PyeiOdmNk2mOcdGvXcrvm04+
NaLeC5nTjFzTj4dapKzapqzpB4xoew7axC3peg++tK/WcKmMLpog7P2nGO34
M8AFjgR67teXjz/+LwX2cRg0W1CRV9lZX9XZUVRaV1pYPlCfhZ4O+LVpC/B1
Phxc+bIv84nzxz5Z8ZhkBTDDAGboyaWbfbtPW692eNe+ftAEPibyqc1tPVUR
+TFe8W76kUEP/QtehrYrmnWKG9HOuwEGad98vYJ/jjoBbfeBfBlg3Lw90vzC
2wSlBCCgEBlQhLSIntPy7dfx6n/t0Kbi0vrIqtw4sM8iqs8lccIzfc49bcY9
ZcorYzYwGxJcshxSsuyXtyLwNS4ZMw5ZC3aZ86bpc3pxIPWwoecezc/sqnW8
Gu3C+vTcK+7oJiuLPzv3vzfO/FNZ7N9XpM5cuCB2WfpPcTlhkfNn/5QVPiUv
cva8iLCMyGmxs6dFhc9JnBOTOCcpfFZcRvSC8tUn169pKF56I6uoKX5JS/SS
gfgVswtPPJXVom/optw1zL1rUHxPt+S6VfZdu2KtwC6nVJB93JhlUKt73EB8
wXRa4UxexWR9B6RrCNncu97Yv143AK3thhT3IQva1hMrFoMzRz3iBuxj+9xS
QJ7Z80GlG85Z84YRA2oedZrudbah3X5pE4m5K/btZDXH8qviJkr/+1BW8qHU
PYMLb/3v6eSomNbcUQ9TefIKEvoIcBcC/IQAOyEgWghIFnqfqPnuRfAfL/rv
+ay4Jnfru8Ypu7dJeIHsYouAFecTj5krBMxFRae2CCmFqnp2GgYPmsSPNIFJ
9I+bu99Iq2v9XPrSB+rqh9XRT6tD74nDnM0u1vaQwLwcQvhMNvnogHv8hYHD
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
uYuSp6SlzohJ/H5K+s/TEr/9JnnmD1nhM4oSYgoSUvJiogqikjISsuJnfxc/
IywnKat88d6tWy8vKr1WuKR28ZqhuKK68GVD2fvON9XD7ummXdfNvKNb9Fi/
+pZD1mXjRDWfBvuUGefMRaf4CbvwPtfIXv+orrjM4aYuWO8ksaFzuapjsXFw
paYLlN8EKe1ZLWqFJJTPeCV0WEe020T3OqVOeeZAbNJA+uFDrzybVVyq9X07
rKIGHWNAdknl0ZXgmxop8nf9lK4ZC5TV70ISLzWzVc177fRDsMGqQLgokK/u
4uQnFMUXygMAR6ETnpQ8s77+QFKnTsFtRd11RNeqySgCquo/qK76FgAFA5U3
gFIloPMOUCokdIet4wy7a5wWUN2ztHkysXGXD7xnb7EpPShEFQ25dCTY+uag
tPEeOnRlG7e5CJ5lM0lbm/hZUNv8cgeFObMGG0GjQCjEPBqDYNBoBAINDkNh
iFQijboCX5odQ3e0Dm5AYIvz8xOjMyODICJ1s6q5rXWou7Szo6RtunGANrwE
pBRhrTxq772NuK+ibeUTlZBdV9M5ODyz3NrXW1hZ0N7X3NBYUl2d2dycNznS
NDvZNtJbM9xTtTraMrICbh8ZmV1bQ1NoCBwKioIjUBs8PoOMQ5LxSCRkmUlE
boBnqSioAAVkDOQIt89BMcgQFB25zkQuM4jzbNoMeqMTsdaI2Wjlsqa32Utc
6sIBa2OHss4nrm8yMVwahkVGcMhoHg3Lp2KYBAQVI3A6cBZpA49ZYVDxq5Cl
isr/zBreXZ1HDHdPTY/M4pEYPovNpTEoJMwGDHK0x//+8/PuLo9KJ+7s8pZX
5hcWwXDy5OZH8ipxGc3agDPgRC6JQMeuo1d3DtlbO3Q+j3TApxxsktl0LI+B
+/B+a2d/7vMXxPbOysHHVTptksuB0agoBGSWglugIFbZMBRpYbi/Ur8oVqij
UAg+LkMfu7zSJPYerQ1su/3Y8j1kBeM3/NPyXvtFqWfXpcdX1BkE5j6yyTZK
GNWJGdAM63yWsmSYteGcg3dPxryx6Lz+NvetU42uf03ZhIDCnz/9BL59/qu3
67dP//9WLHsfWB8/8VaWJgeb2zpKa9pKCvsaMkaGUmYXUyDIWAwqcI/tejLB
k/z6mP8bsH0Z+KIFfDMBtlWAgyfAV03gg9Uh056P0XvPMfp0ENrcG+qXm+9V
33o/yuypbouuw7T8o+5LBvAHEdyXGfAbjoGLoMSffbIn2YR2KXqB0//K6ypH
L+hljwQmpjunIfWDJ147tD6yrnhqXqnm2GIW1O+YMBpQtOgnECQ5U+6Zwx5Z
I95Zk77ZMz7Zk8ElawH5y945yw4Z82aJc8bJs8apqzqJ88/9h176dr/x69D1
rn9rmflc2+/OA0s5pXeKf0jJC8tL/Xle9qy83BkpmTOi0qeFZc6dEzv1b1nh
swriItJnz4n/dkb01J8Sp0Wlz0pInvpd9PQpKVGJS4rXblx5rij/RFb+5eU7
RvK39KWvGp+/bX/5pd/NN1E3tFIf6xU/0CmTN4586FJ8xShVP6THJnHSOXnG
PnLENWLYxr8pKn2svAlS2wKtbgbV90Jax9br+qcrB9Zr+mENQ6iksknv2C6v
xD7r8C6L0D6r2GHj2GGz2HGDiEFt3w4V1wZtzxbj4OHI5MqsVqx1ylJA+YZL
TOOdV5ZC/3P98mWdB3e0793VkLyl88gg5p567BvP/n+6Y4UExt1VCIgU+pjy
1PDxG1Hjst99RwwTxhytMn2cBtS98WL6/T5eocCU48n01XIxoPO8hdvc3fuR
ko8jngdVpQ7PUj6e5BWOjn7x9qH774e/foADux/ZY6ia2JTCuIC6rICSytLu
roae7pqq8oyRsfY1GKhvqH5gvBO0AFpBwaZX1oemF/Iqm3PLGnLKG0pbehoq
hqoqmwcGOobH2iqqKmore+bnOEX5k/UtS0X1Q/k1EyXNazmVkMwKqLFtitw1
Y2U19UbQImH3E4q7Szvc3/5x/P2vYvSvJ5fIBG79+5cvgg1895fAsn/7Chz/
/Abs/98/9bev3zk7W6gdLnyPj+SQIZs06CYVtkne2KbityiYTTKWS0EfUqlH
TMoBncAhwGi4VR4Nus2DH+0iafiZbTZ0l7dGI85j4dOkjVkmYZlNglKxqywS
clsg1VhkHhXLo2IEVGESNmZGOoty4gpzk7LSYodGuoZH+wWfAIeG4jAQ0sYa
Hr6CWVuBrYLRiDUKAUcjYfkCm8IiIwVMnelfgozPLPStrIGI6IGj90g6Y3WT
B6ezUEwujoiHQlcmd5kEMhxMErAOB2ZgwMQN0BpkeGKoYQMxhEFNwOEDJNLY
ymrd4krnzGTbcHf9cFf9RO/I6tjK2uBYc55rmOvvhXH/Cwe92Ri7M15/YQ/r
8G0r4dteKZdcNTqcHhLuqG/vEJjW4Jk+ruLYes2oVi90XiN0xDBq4F7skGr8
tHnMskPkirHr6BODMuPAtrx+JO3bf7pCC/7GRyffxqcTpPy/Rydft+mcdRID
urjU311XV5OcUhodvNSbgQInohABCKInle5yuOMEfHYCDq2Aj25f+QZftl/8
2rnxZVcJ+H4HALSOjyw/7riTYRqUNVPcek5WfoeJf7deYpayl8Lf1Jv0HQeD
XDYeG5GuRAF3YuFlFQlA5+0TWVL0OzAQEmfno+VWrZMHdmpcDChpNAiceWpb
f8+s9JVzs6Zbh5p9vVFwl3/Oom/WtG/OpL9gFYD88qf9Cmf9C6e9cyY9c5e9
clac0+bNYsb1QkcNk2b1k5fUwqefevY8cWl9al/+2CzjporP1TsmiooqEpLP
ZM+Kip2SEv5NVGBlpMVk5USlZEXEZITPifzxh7SwiJyoiAAvMmckZM6IyQnL
yp87L3rud0nhs1Ii0gpySpcVbktL3ZeQeXjluu6Fa3rSV/Wlb1gqPnG/qRpx
VyP5rlb2HbW8S6bxz90qL+glPrYr1fRud0gUeMwp+6B+XccSl7CWjNKp0qbF
okZQZetcXf9yTe9U4yCycXCjdnAjs3I6MGMwIGnUNqrTNm7AMmbING7UKm3G
LH5GM7D3uUOlmkezUfBIas5wUDFUN7zXJbPfJbnjtm3Ov+77/imr+k+hf/9T
VFnoZYaQw+Y/nLffWTTmmRpV2b0FvIW2oyQigvOu2PWJO9bc9sl85RRsYBH/
SLXwpitZLvKDgn72aqEDUK0M5MsCtdeB9Rqt288vGXb8qd+lHl6aW1VOoHG2
fgDrbBoa089ZqwNo8E0ko7+jr64gpj7ewMPTw8Xe0trCxN7KNCUptqio2NPf
z9rdPT4zPzQtyyU8ztg98NITjfN3X8nde3tFxeSW8hvFqzduPVa6ef+8lJSo
0sWHlsYJV5QcLl4yFZF6dVb28YWb2hKKr24+MHqpZqtvElTd2YPn7u18Boj8
bTyXQdtm7h3ymVy8YLM+2KftcAkU3CoJtbZFxn3aYgO773dow4fM6X06iIvr
J8PaqfBOPmn0mL/ExY1xcFN0AohJmGeRV7kkBIsCY1AxLOQkFz/PJi0ysbMk
5NxfByYIHgO9ujhKxoI3mWguA8kirXFpcA4NziSt8rm4bSaaSYQzcAjWyaEr
fp9DFQiGjPhQOwtdCxMNayudopKcts6mE4eI7cGhe/BowVtNU7FgImoVDQUj
lsDwxRUUZBmNgG3AFuam+3u7yhcXOyDQPh6k7wd/7Ziz9mUHf7xDOuZTtklY
2gYY+Hz0kUd5L7A5VBRsZWR8pL6vt6i+NqGxqWloeLC1o7qls6AgP7ChMamn
p6ixIXO4u6mhtDIlJCfeLzEj1DvY5Wlc0J22Gtuxlic1RdfQqy64jUA0Im1m
IictK8YjONHENds/bdE9iazjsfbUYc4iEW0QO26W1P4gblA9Ycw0btbEb9o6
YMoqeCClGsYTaI//wzXwiQsc7uzQ6d8+/hI87bN3cVgMmYmYmuvr7K2rLypp
ysycrEhH9sbT4UFYuNkGXodAVefQNH/tmwAfTX7s1Xzc8T0+en38QeHbRwkA
uHMMvGXumGI39OZ7n0y1Gk31dEZFY95aQl+7Fd1zuyHkMKXvNVQYT3QI3r+R
8Oue3wRvKA2o+W+gUAgYN24pqtZ26nZMXgstX7LM6FVL6dX06L6lX6Csm6Pu
1GoWMWIS2G8d1ueWMhZSuBxUAAosmQsonPErBAUVz3kXzPsUTDulzzulzJvH
T2kHD2gGDRslLpomQDSCp9T8hl64tT8yz1N6HSB64Z2o+AMR0Wun/7gsIyos
dlbs3J/CYuckpSVk5KSkpMQl5EQkRf84I3VWRFpEVPasxHkBRkRlBQJG5g9p
ceHTMuISijJyF2SvKyreExe9JSJ577ziG8XrBrI3DMQvGUrdsLqpFnZXI075
VdSt53FXzWNfe5Re00+9qJ34xLbCKXHGLW3F1K/D2L3WKbglNms8q2w8q3I8
r26srG2usgPUPAxr6IW2jeDLOmCpZTNheRPO0X1WMf02CeMWiRPW6bN26cuG
kSNv3VtU3Jo1PLst4ob0wlp0/Ertk5o8sgZNIsdVPSb/oRwlfM3u0m3zK5rR
QroDf7PDq72LBcIlADchwFRoxtVI1gMvFLB3zbXezN5XzcDrmmmxuGHD7cD5
iwHT1z3b7K2DgOF0oOHBSevpdjFGU/RlleZ/ai79+TQmOrega3JsnHQ4R/6E
hIBZI63sheGZ2YX6obGR3mZSW0ZWTk5okJ+vp3t4aFRWen5GZolPcLJbSLpT
SNIba79Hes4PjFx+v/rszOXnl54bPzEPcvEMNbN3t3extbTVf6elaW7iGh1e
oqnm8fSZjdxFVWGZ2xIKd//+m+LVq699fRPmp9e2eLuHu1+3tw9pFCqFgKUR
YEwyHLU6ySIt8MiQLRKEhZ3joWd3cCv7JPghHraHXD5EQw+xK7u4pW304jZh
/gMDeryJ3mNCeYwVFgVMpy4RSYt4ChhFWdmgwgSQ2aTMbNOW2TQwVwAZOoJP
w/CYRA6FuMOmb3NO8jpkLISIBhPRC4SNWTx6mU5eo2KgTBJsi0E42mLscgkk
FDjI00pf67G5sYa7m0VDU9nYyKAg2Bi0CSSsd321G49a2GKT97gsOpYMX4ax
iCwahsyn0w/5HDpxva+zELLYMTtbSwOPfmCuH/HQeyzE+03cEZ+2TcNtUQnf
Dvf2uUwelbjJIW0ysRMzPdm5ERHxzhXFjfnZZYkJCfkFqdFxfulZgeVlMXl5
0anxoSnxqa42Abb6zh527rbmmiYGd7y9NFycJT1cz0/NeMzOB43OxVS1JHgG
h/tHNxq6dDhEE6xC+ZqeLFUvrHMOXS9xSDuuUiV+WDN21DJpXtW+VdupNSJn
uXNpCzi5v/dToFh//OB9P6ACR1tHgt3m8ESk0NZ2FmeQBAazvrOhprG+vrSy
LSdnuTYN1uVBAOltQB/CEFdnFiShK+cPaS8AztOdzcxPHz0BQOP7N/nDvdNH
X87v/nxI2jccn9VuKXvTkGpfmdvt6Yu7owlR1m946uzxPI7mkMKKyf3hl/f1
edBCbGoD0OxzMhwqXQgYsHrrnqpTeeyQxwxJG9Xza7zgM6vqWPXWteGth0DS
D9hEjDgmTbomTjomDEdWLoeWzPsVTHtmj3lkjrpnT3kUzPkWLLnkQKyTZ43C
x3XDhnUEMImY1gsFqXoPq/n2vbavu6ObJnHT6g/xF2dFbktIKIuevnpeVlxc
XEJYWExSWFJORlpWRlpaTEJcRFTi9FnJM2LiZ0SkT0ueF5YWaBLZ09KS/xIV
sOeCrKKy0t2rV+5dufhMUvzWWbHbYrKPFZS1Za7pnJXREr5kcEc18I5G7MWn
YdceRV4yjH7mWHjXLPOCduIDi2KbhHnPtGUzv1732BG7oDbf2M6kvPGUkpGM
qpGiZlBl72JV12JVx0rnOLZ1hFjRiUwoWbSP6TQL6fLMnLdNmrRKnHbMgtil
zmsEdL1yrld1anjo2W0SN2gT3x5cBIrMGQtLngrLpj11hyrbDuibxtq/effg
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
IKrxGw+CRh7F92t7Tal6DhuEjmj7tLxxyg7Ma1/A0z4An3c+0X78YJ7YnV87
wNHOp61d4CvwYfP7B9RnIoSHwHOTGzviahvTa8saq9LBfSHgVg3cwA086Ap3
4wkNepu+cg3gvgaO1A+Y2kc8eeD4H8DxuZPmrp9smR+cQDSf5tni2pqFlPgV
/9Qph3rwjcS+/9IqkTOddY5rfxi2+TITiCja+NJpDBQJATlCQL9ndEDcxXfR
enFd3iUgj5JZjyaUTsS0WSRS0636iXXpM6ty/YB+1+R5j5Rlp7gxu5ih4ILl
oGJwcAk4uGI9pGI9oBTpX4L2LceZpi4ZRU4Yhk0aRUwYh01Zh81Yh8+YBkzb
h0wbOLc80oyXVDI+J/pIVvqmgoyyyFkZYbG/SYuflZYUFhPA5M/fpc+KKIiJ
yYtISv15RuaMmPSf4gKqiJ8TV5BUlJWSkxYRl5RQvnbt0TXl55Iyd8SlbslI
PZaRfy538a3cVW3JC+oiF1SlrupdfGCv/MhN+VnAjUe+1/QTrmvFabvXPTIt
EMDkjVurS/JiSMm6R9KkpW+zbVBTRP54Zu1CbuN8dvNCRtNiTftsfS+ka5RU
3YkoqIWklkEC0ybdU0etIvrNIodsUud8S9D2aUvPXRseWZW/cm8yc60JKsW/
9hm1y4E7pM+p+5cbR5U6xpUGJrc6R49ctWoTepotdNFJ4m2YslP3P4M+Gj/V
AIL/ARgIASlCVx1ThGK+SJsNm6v6GOhHXnRsvODRLv4yXMOl2zAQKv8q/q1P
PzAgCvTJABlCwKBlW3S80vMg07iBLjhHsCEhPx0O84jdmOXBqfHZ/hUClo1g
MvFrtJOT/a8AhcJp6h4rrBnuAjE7F78U9HzwTCc+tGy7pVN2WSXawDHDJSwn
MK08JMTfzd3P1cE1zMstN86lKs9pqDskO93C1vyxjbWmiaWKvsl9U4t75UUh
c6Mt9LU1LhuGgk2yKOtbPASLvkqngMn4xd0tLJ0KJuPAFAKYToGxyUg2Fckg
bNBwSBJ2goqf4THA+xzEJhvOIEJZJOgWE3fAp+ww8btkzBYZwyfCdvGILcz6
HhrMJMFpGAFzBL+2ysSvUnALZMw8FbfIZ8A4FAiDuMoggmlYCIMAZ5HgPDKW
iFoR+BoiAkxALLOwqE0y/ssOHwkG+Tpbm2ipRAe7Z2fGdnW0DHa3C2CCReOp
RCKDAidhZ1DrPVh4J5XQzaH0MsitdFonVfCCCsJuTCNXZ/tam6AzS+z59UM4
EjjifuEigC804Jj4Y48AAO9/vmcDn/ZPMrBfvx/ub21v8Y+ODn8Cn/c3dyuL
6tzswiP96qzeJeq/9XJ1CPX1iHCw9g3wiXXzCdbWt3mqbvnGPNQ6INk6LN4/
qdgqOMg9NtA5PMAjOts5uNs1Yt3Uf+Wle/9T/56rXjV3QodU0yFW9bTnSePK
0U2GIbO26XCdkIlnzlUmUR2lI0jGX3PGP//kf/xEAT6Rvx/Rga8fgC/fgY8A
bhW/UDvcW9neM7GQNzxWOD9VNdLW1Jy01OVa4//3xeL/AZUJQdr+hZlSWO0S
xQ+d+7l25Sc34ANL6ct7IWBPCCDf/sFyYm6HzXHiEmuCs/P7osMmzQM7VTL7
RUPL/2laqBKHt69u0Ck/eJgCxFdSPvfoAXVCJ6vR+LZa4KMYpnU2xiu2IiC/
Wi22+lVQ9wPjWg2HAj3fFouIUeOIKYvwOY9kSGDWml/mfHD+YkDxok8ByDN3
1ikL5JYFccuGu2Zs2OXC7fOgNonzRsEDuh69JgFjZn6TOvbdOrYdL01KrryM
OC1v/NuZO1Kity7LXZcSUZAV+x856TMXpEUkhc9InPpT7swZBVHxS6LSCmeF
z58VkT51Svz306J/npEUFZUWFTv9xylR0QvXlZ/cuv5MXv6ujOyD8xeenb/w
+vwFVXllbTGFN2JKGrK3zM5ft7nwwP3my8A7DwPlNWIuqkUb+nc+Ni+5a16k
6tLsnDTnmz3vET9k5F1p7Vvhl9AZl9+fUjaRXT+fXr/U0jHXPLg+OMNu6CMU
1sNTq8BeiaN2cX128aOGYYPGcVPexRseBUiB9HpmX/XItvyRZ45dareqf7NJ
Ht6kjv1SQOOiQfOoZtOYxXeBOCWzZaFbDUJKtUIq9fJa0QYGoeq36oAIHcBD
6FuK0N3guL9FbT+xX1R7lqBkWvY3v7pznqFazr56FnUvfDal7GBCuiNAw19f
UKUM0GzPbuvUtUi671qlGdujHVymHRamG2FgGWNq6xduZ5XnaJOsaWhu+849
xDPWwcnXxMxWTd9SzcLHOLBUzbVF6mWJ9Mvm03fLld426bn0lncSltFH7A8A
n80mURgEFIyGnuKRerbI9cDPZQZ9hEWH46kQPHOWvN2DwBbxOQO75JWvLP4m
dYOCXN5jCQwF4f0mZpslcDGTm6zVHd46h75EI07TSVNsyiKPvsSlL/I5EB4S
wkCtMNHrDBycgkNgkWtoLAxPRZGZuJNmIAwkgQUncKEk9gqRDSbylvlsyCYD
zKEtb9LWeZQ1JnaZgJwhohaJyHkycoVNXBcIj30OcZuGF6wdBhEFBe1zKCjI
DB4O2SRiDtk04GhPoFvC/VzsTXVS48JyM1Na66v7OjoFQXdIoHzb+rzPA+j0
Lzj+NnGfSjhCU98jyQzMFmuThaZt4pkcPH6fR6fiNwhYBAW6hl8n7tJ/fOYD
X46BH8D+h+/wnwBs83Bm79P6N4D/69fRzj5/7+D481fg03eAxgCm5oGw6N60
lDET41xH6/rchJnuDvTU7NIaDlzcWa3tHaKg6/ncq+JNUr9+2aJpEkgnelQj
bNw4cdksc0E/YfhtTJdKbNeL8Nb7AS2P/Qdehy4aJ5Mc0/d1AziqvpuuPls2
vnhT91HXsPrarkkih/5X45Uf23sbH74SvgO8gyPi/ib919GXfdIRpA+RWgtJ
KmjNrShvaWnsbh1srmqtLMnsH0yJT9VPTDXJSdMpzrraXX5qJFtoLkPoqPMq
wJAF+KIA/R+/mCKft9U4e+7zaNeadrcw71hv20VXt+NHDpjLwV1C9omnA4Zf
VwEqwz+0ozvT7S2AZk8gWxEokwDGLOJCQ3WiMaYpgG800z98Ujd28mLYiozz
/HWrwYueaK1olFfybHBUi19stWNah03+tEc12L9gPj5zJSQaHJyMc8ogGWSt
a5VMPC1pDAoZdclYeZECvhY8+cRtQM9nwjhq5olPl5JO4vX7zjcknsqcu/i7
lNzflS//+/a13xQvXVY8Ly0tJiJ2VkLsD3HxU8Ii/5IQOyMjISkjrigtclns
rJLwqcsiv186d+aC8Gl5kdPiZ4RvXrj0QvnGWwV5FUmZ1+cvqitc0ZVV0JJU
0JBSeCsp90ZaXk3+ktalq4YPblo/u24hoeFyRdf3gUX8JfWwO+a5T23qBVQ0
iVq0TYaaRs6YhAzq+TeE5c9FFY6l102kVo3Ud6LyqhbGlokdY9Da7rnc6smE
PFBg2oJXwpx5SJdJZLtPyVRQ5aJZTP9b1y4Nt1GjkLG3HmP6vqCIHExE5LCZ
ZYOa78oVP/ybKHCMrSUQeQqwPCmhT7n2TyFzrlAuMPJWCAgXAoKEfhoI5RoF
P/HcV/b79Fqv1FPLw1w787Y9/Jo//o1vjYNPuJlvrYLLvq7Bs/nZPmD4r0Py
AiGgTf3cW6t/R2NuuoFNTJqv3wl6aB9+w+6htsMlG1vj+08CX7986Wxo467l
4qznpfLA7IbU2zNC14T/+ewPOf0ntqnOka1e0bWpHfNzW18YAEA7Ao4/Ybe3
0bxNwsEOeVcgHnBTB8wZ4BizRwUDBwc/t4GPnJOGf4fbfAZzcXN3jC0QDMRl
Lg26zULwGasMwgIJOU3Dzm5S1zcZArWwSkQtkZGrXEF4cqgMGo5HWOIRVzZJ
kB0adJ+OPGKhdpiIHQZ8hwHbY2C3aagdInwbj9klC1QKfhOL5pJRnJMK+ZVN
GmyHA+fS1zi0k0QwjbTOpqN5DDyPTmKySCwWkc3CcrgEDh5xvM/ZZdN+fT38
cXz05cMe8P3z+uJ0sJezg5lBalRwU2VxW0vd4FC3ACbI5Q4Kcp5Bw0M3IBAi
GMachTMHkfRBOKb/aJ90yCPySKts0vLnAxKTCobCJ5Bz7RjILHoFt8sB6IRD
FpvL3UJxdmbRpG4stQ+J75ueaWttr+7sHuwfhPZ2wYrL0VkFk+lZvWXVIGvz
JEuzrKa6jY9/3bfb+vQ+v7lJxyXypWOWUdSQXuKUeuqYVdywUVSvafSwXcaC
TfqSduTQi5CWl4Gt+tnTZiULFsWr2onLurHrOjHYtz7IdzE7buEkQ/cFa9++
qgHsKnn74NfJpZv33zf3P5B+AFwA4O/v4JEwMA6KQsziZ5sWs0umC0s7Kmva
SyubysoETK2rbcjqGkosrjQtq7SpKrcsSb6XEyJUGCg0kSJ0OHD9mCz3k/Qn
QBAC2Od/cXUIWOfaXnPvOEtrr3QtJ5BGOPthKOJh0MB11zqVhEXt4oM/C7+c
00qlNSQBZZdP0sFN12CdMUaeGcG5+JDkDf/gEZuQNtXw9jte3bdce1+6TNwN
WzOOW/dMmvaNbveKaXFI7LZKmXDMnvHKmA3OnPWOBXmkblilY96lrehljqil
NtmGDGhHTF33m7jjBXrhOGxq12Hm0qxmVaH0Jl7ulqOo6LNz5xRFJWXF5S9K
K14TllY+Ly0iInzq1Ol/C5/9p6jI72Jn/yUpekZWXEJG7Lz0OUXJcxfF/rxw
9rSiuLCirMTlS/IXz8s/lpd/KK/4SFrhhez5VzIKr6XkVWXk30rIv5GQU5OS
V5eSfyN7UfvCVWPlW9b3bjmceWx9yyTyoqq/gkrwXYOslw7NDyyrNH0GreMX
bGJBtpHDlmGdEXnTUXmDqeVjafWj+RWz8dn9Df1rTf3g9jFE0yA6rw4RU7IW
UrBmEztqFtbpkjHqmjdlFtmv7tmj6Tmq496m7tVtHjMbXQUPiul4Z5Su4dSm
Fkt8EI12imoYDtUC4v8OxAjt6QqF31NQepNxUv6aKPU+RqnB8ZWJcfQty6EX
vksafs1WnmXGzq1annMqfkuqgZ0mIQ1mYYNa/oRTRsVB1hZA95OTyw5V//1l
Jigqq1BBI1XNc15Ro/SxTaaykalttHtUdmhAUExSRI+Wj2VxTWVFaWVkQqq1
d6iKtonqcyM1bUct59CkjukJOGtsDj8FQcM3d9kHH/j0Azp1jcfE77HYH3nb
R/TNPRJhC7PBxUB2qZDPfNIWFYZDTDPxK3TKEp0C2ttd+LhD3mSsMwjLAutB
w81SsbMs4iKPusKnw7Y5GwKeULFgOgG8ycLucPEsBo6LW+EQIHwKTPBWOzTE
Dg3Opa1zKFAWHrZJQW7T0RwSnEOGbxHRgrVNwrBIMCYexiStcQWyhLTMICzS
CEscGoxJWKPgYEQ0DLm2CJ6bWJwanp0dXFwaWx7vw6zNr85OENCrRDSchIZt
sigTfW0h3i7eTtZZ8RF1ZQUtzTXd3V2CuMvJNSwudO0dLMqpTC5ty67qz6oc
Sajti+kby6bTZhlEEAzctr7UcLC1wqLPLIJ7F6by1pb6QENTu6xf8GU6BLIO
WZ2amCmfna1o70zIy/MMi7S3tzc20DPV1nDUeOvy+KXvk1dWTl6xngHJN+4a
Pnnm0tC4+p8SEDid45ec/8QkWMunySoZapWDNMzasI4R7GsTFjFzjhkwswTo
G//h5z7tKuHt79L6LSpAliWTOokDJpnLhrErzx0mNQIpNh7DaiYNJu7VGOb/
VakJvBsF9uGY85dE+crlEUYHelqr2/tqx/sqJivqZmprJ5ubQOXlA8UlXRXN
bXl1sdmNnrUjEblVvnn5flmxJkleF8rD/7VSJfF+7uE31uuvNOVfNElg8wXA
9VqfD00tCdDxClIPHZD1mpaPRd2MX3lo261h1eGSg3xbSv6779pjp2Rgwvsk
7ZgmBAzoR5c2v0mGZTdu5qeNugbUPA1qvR/Yft8p/419lZ772IuIBeOEWbek
Md/4Tt/kIc/0eYe0eefMJc+0ad+sWfeseZecNccCvFk6xCZ92iqiXS9u4HXg
uLLTzAN3iJY7yMqp2c2i1FQzTeme/78UrITOPTwronzl3PnbEjLXRK+IiSjL
yJwTlxQTP3taXOyMpPDv0mJnpcXPyEnJyUnInxcRuJ9LEqcvnDutICV6QVHh
2vUrd5RuqEhK3xITuy0t90T+kqqknJqEjKqUorqYjJrA5khf0pRQ0JK6qCV3
Ue+ysvnNqzYiT+1e2qaevWMn8zLgrmG2hle7zMv4O6ZV9klLrqmLtrETBj61
zvEd7vHNkYWDpb2Q4oqV9KLR+j5I0wC4cwLXMowrbSdm1BCSqrEe6SCzqHaL
+B7nzHHrxHFj/yEdt1HLwNbXTvWqQb32GaDQnEkn/1JNi3z1wJk3aXTTMpxv
SAQi4/mJFEkSAhyEBO4GcBP6GXrd389PyaVSyaZC3TbHJLjodWjdk7hRDf8R
B68B54BOveCuV9FD2tETFr6jQlHA80c2QM5NoO03oEvqU9NrYCTFU9VO9mWV
mP/a7ZCGkLzMmo7OzkliRs5gXU5f4XwrdosJQW3U9Ta3zgyNgobgMAgGsza0
PEI4Ih3+2GZzcBQ6gr1JpRMQ6IkZKnyFg0FtYXE8OG4XTv1I2PmI292DMckL
4G08gomZJiJ6mYR+NmGUgR3h4EBHW2Q+Hc6hgLeY6/s8tECfcMirTBKER1/f
YsP5TASDuEQWAIS2vsnCcJhINgrGxSM3iWg+FbFNQwqkyBZlg0mAUdEQNhHG
JSO4FASLuH6ySAJGQfkENJ+M2CKvM4jLFMwCGTXHwC3yafAtgRQ5KbxfGOlu
qSrISokLi4/0TYoJ9HEwD/JycLEyCfZ1jg71L8hM7myuS40OcbU28XGyTo8N
LcvL6Ghv6O09OYCtb/WsaAmeAg+0DnUOzM1OouYXcLMLmIkNyvKnY/7RPo3H
XOUzl/+qAjv69Wvvx3vi0Rb1x4eT6vSj/YMdPpm7vU6jToJXu6vLMpNiwpLj
I/z8PN+81bx589GLp6+k5IyFhET/6zcZof8S/tsfl3WNgkfn2H+1NwMGVpCm
ISnX9SM0Art1IxYM09d1clC2MWCT8EXDaIhNMtEwGvbSd0otaNwoZ/51ZIta
XP2j8GKtxJbQdqRnCeq+detty0EDixw9+wJLj2zK9v9bePwDOGYwiScFasBX
wdPmJr2js6Mot665fLi/brm5dbqubqa9EdxWt9rUOFPZ2hZdFRVe750zmuqd
ERARHxsXFZ3kY1WVqLbaobK7pvt+y/+Y7XJMM/1GduRiYkfH89LLGyyiuvRS
YeJ+U38ETd8InrunU2to0uFbtXO58ZeJod5ETzHQrnKy09UIwYv17LPGdYv3
UpvZsel9OoHNV4JGrwWOPnMoU7fJNXXr1EsYtU+ecE8e8kru886Y9s5a8cmC
BxUivdNBAbkgpxyQef6KTSnGKHHRLXnBPWTAPKFbN2jsgcP4M89ljdBlq9Ah
Z/sivecRN654/0vWXEhcRVji/n3RS4/+kL14VvFP4ctXFM9fkJWWkRCWFj0n
LeCJACZiIjIS0nKScudFL0icURQRiJOzF8SFL8vLXr1y6ZbSFRURmRtnRW5I
y71UVNKSv6gupaAuq6QjJqcmpqQhcVVT5oKOlIKuzGWji9fNlK9aX1L3fmmd
In7PUVEl9IlFkUFAn8KbVEXVrJMccRLEPm7inU+TdWiTdXC1Z1JrZstsdSu8
sm29ewzfOY6s7lrJrgally9n1mAz67B+GQvmkR2WsV0eGRPeWUsW4VM6rv0W
ga0PLUtv2LSoBIJ8i7FhOfMatpkvbEpeBvaqR45oeOZ52Vh0OSp/DRABIv4O
pAgBRr+X22iIO5cK+cxf8h4wdcu09U+95VMo69Px0LXb2bkx0LPUKqhSLbxR
N7TZxr1EKRJ45TJiofLmeCIAaPurlX39pf3aXCnN/N9CNxS9Sz0ikmPjGuJz
wU7+NZ4uYSVN1a31jW2ltUFenqmp0T31ZevjzQuj5VPgSiilnUDpxsE7OeyF
Lz+ZwBHviELggBe5CCh7bYK82M9dHvmCQ3+nbH3BvydPMw5JBx/ZWwcsyvE2
4XgLv0tD8ElQInKRjFpk4CDbdNgWZ4NNhZLQ8xjY5CYDts3e2GIhWOR1NnmN
Q4fz2dhNLoaHQ/IIJ4tPwmxTMLs0wg4dyaMiBRjhUZAnsoQE51E2BI8CtjAJ
UB4OwReoFMFP8Ksc7Codv8gkrm5SUDQ0FLs2Pz/c31xWmBQV7Oti52Jt6GZr
YqTx0spQ3dJAKyLINzc9saWuYmygOzc5OjrIOzcltq44p6mqZGiwq7f3xOZE
ZVn4RzskFeX5xxeH57Qkl3el1rSkllR4BEQkxKfHhIREhfmH+tonRfnFRQdn
pqWnxnh5uVjWlRbnZ6ZGRToHBOt5eau6umsU5SaH+kX6ukQlRKSG+Ie9ffvy
yfObBgb3nz4LMjSJq2wApRe2JRR2dk+QBUbyAABw74GkhuFX9nGXjaLVQ/rf
hE1qJUNVUiDWyWCDqJV34cvvopE64TDVgEXNBIhjOV4ndfJ1TMeT4HLT1N6E
PqxnwexT65IXjq2hsWWlzTN5ld28gw+/Tqbyffz+/fjnr69/Fb/+ev/pA4ZI
aGztKS2sb66bGOmCl7f25+V31BbPd9XAW+oXsqua4mrySudbA+pydfy9LXwS
3f4frt4CKq4t3Rql/759u293nz4x3F2SICGBAAmQIMHd3d3d3d3d3V2DuxZQ
7l5F4RAi55zI2X9xzn3jvfFqrFHsKnbtzWDUmmvO9X3f/HwybQ1c3Cy1S7O0
Z8YsN3YykYfl0K2crfW0wamUso665Io5l7QVrZgpYf9uQZfh587z72wGfdO2
nXp/Y2p2rDMLsGQHdD7+UcsFrPulhrj6lqxpxu941KIs0wZf+zfIBYy8CFpR
cB3Qcmu2CWj1yh7zy58Iyp/yybprH+yavemZDYoqOfRKnXXPHLfOm9TLmTcv
3tKPmPaIW/H2nXSMb3GPHtbxHFDwGH4WOfQuts/Io1hFzvGZkA07p+HPHG9F
hbSfsslI/VuA/T7Pf3ELifMJCvDwcLM+Yn/wkIPtPzz3HnDfe8gcfGwi3Pf5
2X/i52AV42aX4OV9IsD7RFBEmktQgUdQgUvgBb/YGz5JbUEJY35JQy5JPTYh
PS5RA14JYy4xfQ4xQz4xU7HHDk+fOAqpez3RCpbWj3lmmK5gnqfq3Kjo0Cht
Wqrk0GAZO+eeMe+b/d4nfcw5odUhui4ot7+oaqWmc6ttHNo7Aa3u3swun04p
Xchs3M9uhkQWr9vGDtjE9fhkL4aWbHmmb9iEzqp6NL906VXxnFH1XHZOR/gW
gvUCK9/5Zjqn1jolttuH9WhZV70xLJRTC5BUtXv8SsPSwEvZNZ0rsJk/bOyF
a4+JQ5VlSKOSf52oe+Nr5043r87IoHrf8Cy7iCz7yGIb33w/vwbVZDyL47ZD
bB0wY3HXZ6eIBXgfmlzR8i+jLIPEWSu/jvUDAE0DduC3O7hLIgwOmtz4BXkC
nt3YmZ//hEX8IB5dwCfxhP6rr+sfv24yqJMYwnskZQ+JPyQicF8g0Bvo9iV8
9hY19Bk9+gGz9AEBOwPR0MtU6t4tdf8GvUPEHiJIiKNjGJgC2SKgj3AIppDZ
JaH3mQSDiN6k4HbvArhM9KCAT6mQUwqYecCkKBdU1CUDdU0gXBKwZ3jMCQZ6
hkec4+AXOOQpCXZORtCxR39YB4BOCdBzEuyUAKFhQQwmjUFBaPBDOmr/BLNH
xe0d3+3EMpGH+dsjEuwQsrWyPjP2fqhverBtbqR7oK2mLDPNx8nazsLYwkjH
0crUz8NOV11JU+W5i41pqLdzZlJ0T1tLT08Xc8aV92YnVeTF5DZE5I67xfa4
Rzd7RVdZ+ybpGbt7ekaFh8ZmpsYF+Tk6O+maGmp5uLpYmsi9U5OuKs9NjA+P
jfH19zexsHxpbqIWGxmSl5xTmVNXX1xdUVSQl5mYl5dYVZW5vHm1sIYHwWkz
G4cwxhfaN2ASfOkYX2MZW6Xunv7cNedVYJd25IJ61IpOJlg3B2OftWaUuKgZ
NasduaIZvaoetW6YcuRQQbQqRlnn71hmrTlkz7tkjWp7F2q7ZgUVTa5s7l5+
/oEmkb7e2e///uPH56/f/yQ+AOPi0z4MO72wVtXQU1LV2doxP9ALKh7oyS3r
qq9c7K7ZqK4YyylqTGns6EfgPcq6lJyjlQxDtQzCXyq5vFI3tfOyjsq1yW7N
ahvuHRwcb+prTeuoCivt80ja0A6cEXctlfOo0HAY1LVeto7eCRqlvi3GsHgA
d021eh8CTX/7bcCguaXOPHXGPheqFjGtn7uuHN+j6lZgYF9m4D6u5LmmETjq
GNcQmj4clDPlnT3imDHtkLfqmL3jmbsXUwnxSpnxzBy3zZ/RSZ40L97UCR3z
Tlz1DZj3SGj0TR4yCWx/7lH12LtKJaRGwynpqeSbxxxPRR7I8LO+FBd8w8/1
/ME9vv884vobr7AQBwc/Jy8XGzvPvUfc93/mfcjGz8bNe5+L55EA233uh/f4
ebmeiIgoCoooCAu/EBZ9xi2kJCyhLv70Hb+EppCUvqCUMY+ECbuYHqeEATcT
VSQM2MQM2QR1OUSN+SRtJMRt7j+15JSx03EoUrLIlHmX+lgv3yJ0/I1np7Rp
mX7gsEvyfHDhhk/OpHd6v1N8iz1zic8ZKWpaKWta6X2P7p9C1HTt5FStZVZv
FreiEirWnBP7LSM7XVMmgwt3/bN2fJO2nnkNqvtPGXlP6TiNWoeueOZtmiV2
GoTnmATFm3ukaFkWvrSe4Lbc+Jc/nsUPxhIJZfHdu+/dJ+9VoOOZ+9amVtVp
wjBkQcWlScuj1tCzwTVsICCmKTQiMygkNiCy0C2kNS8i/lXGIXs98JfXGYQK
X6CO+w+nCO7fV0JcLS2E3pRIOG/3HwAI3NUhArOK/3Z2QdtYWr3Bn9KxZAoG
D9xeAwzMGWIRS509+bJ6+8smjbKMIC6CyYd4Ou784voTGnIN3TuDrF8jN27R
uyeQXerRIeUQdYI/PsNfMpjXwREpWNQxFnZCRpzg4Aw8gkG4GzQsjII5pGCO
6HjYGQVDQOyQkPt0POSEBGcQ4AzyEYN8eEwBXZEp5yTCBQ5+ymQmWChTxdx1
qsIcUbG7ePg66miRAGMSDzCDDKHiQGQcU1hByciDO5iCb9Mwh8dY8DH2kAQH
UdFHDCzqjIBiYDF0DIyJKswPkpEgJGhtfXpiaqj7/XAPU+C01ldV5KZ7OlhG
BbmXZsVX5KU315RODA10dLYxZ1zVYGdBc7dvYktG5YFd6KCVd71tUJmRU5yq
hktMXFFvz8jq2uxgX11VaXJ6UnBJQVZ6qn56hvvqwvjE6MjY8HBfV3tDdWFV
adFgZ+v69Pz+ytL28nvI4QIWvYdCHqIRiNu7Orvv34E/PSaBEwAoGtkS1fFj
f+0jZ1tqFrfkVIR7Fw3RiERoJhJ1sz/YZk/pJ09rxIxqx0y+S1owSN4xyoSa
5RB1E/C22afuJXSr+A1N9yo1x1i/jIrRffTXHx/+twbnzkCfeZPvn28/XZz8
gsCcLq1B+ieX6/tHC+raiuq66rtmm9qW88a6C9tGGpsW26qmGyu6S8t7kkon
MjqQNkmTLxzSlcwi35jFaJimajvm6wVmm8TmudTmxpcPphetpFWvhdbOOmbM
G4QciDnNc7g0KgfU2fmM2QaCzCqvDDtI0i7l3lFIYEYKqPs/d6YZ3SYmIdUG
zcDryEOD0FH1hImnsaOv3KrsLEucXIYM/bYtoqaCEipC08YCMybd0qdtc+bs
i7ftS/Y9C3ejao680iZd0yc9Cpe0k6eti/a0Imbck7c8QhZskvps0kbehDY8
c64UN8p+bpSorGUvyi8kdP8e/39YBdiFBYWfs/M+vsfK94BVmItVXICDl49D
gP8RB89DDj42bmEuPiEuHiE2Ac77PKw/87M9EBQRkHssqSwu/kpMUlns8WsB
KXVJaV2pF0Zi8sYSshYisjaCsub8MlYCMla8Ty04JU3ZRQ0eCL1jFTTgFDPm
E7d6KG7GKmahaZWvaJj6VDNZQjvNLHRC06f3hXWtqnOrSeRwQOGaU9KQX+6M
d8agQ3JnZPpAbuVCWsVUzxRydIHQOQyraNrNa9iq7ISlVK57pA3ZRne7JYwF
Zq6HZO1F5uzpxW+ZRMxoOjS8s6428+twTGUC7LheeK11Qq11SPlL0yxp65b/
6Nbxes3xBM8Lx689jEbwunYpWSRY2RZo27eqey4bxu/o+jbZhNTZRjS4Z4wF
58yFxrWFRzcHR3Z6h0y5huS6Vi7Ixk1JezVoG3idzVQD3a+Y+hQY5/vcGs4q
E/Z3q1WzgvX2/u6puall3I8fwIfzL2QiGUI+wZDO0J+uSR9JRxTwIo2xSTpd
I+Km8eAZNGYVyQQTIuycRr9GHDFgh7QjBOOIRofRqVAiGY6hk2FEwhYaM4+m
LBFo2yTiHha7RUTvYFGbWPAhEQ4mIv4YcAgRDsJB9jCQLTzzALZFQh2cEsFn
ZCidCQuofQpm45SAYeIP7S5GA2NSESbTICG3iYhtPGyTKZfwsHUSfI+OARFQ
IAJyDwffIiEhlDs3eDARyXxnh4jeozKvgzy4pKKvqcQbGuGaRr0kYy8peCa3
OSMhf3w8vaAgGQTUJRVHwiDQd2poY6K/a7SrYWWq//1I7+L0yML0ZGvbnZ+J
e2yVR3T7a/PS0HSwtk2XmmWVuXetllWKoppfaeUUkXynFz6c00kEMGhv7egA
tA9qQ8Lm6HQUCY/CoeB0Gvr0mPDL5fkt7erLyZcryukv1yd/bF0wNcflL7+e
U6+WAeD8O8D4Anz+APwYR6Dc85oeKbmxaSTIOHbpBINssk5e+h5pJTD0Um61
U343yRnQTh5Qi+l5Gz9gkD5tnn9olocxTjl+5YMxir3xyvliHX2g6VRr6Z9T
1deH+3jzR/uND3cBnB/0P5pq/f7x429gMGVy/qBzcLWqa6K0Yzi/taO4daCq
Z7KibTpxuDG3d7ChZayuvKWnob+3dz06Z87Md1nNbUrZudY4pNAyqMTIt1In
cEAtckwtcd6kpt4he9QjfiEsDxVYjLGLP1APAD+wWecLXH3h32oX3elajNHr
Ap4kQTQV3wHjbUCnGlB8D2jiApfa2iSNmNYBr91nzD2rNKJGxOJ2hEM2XnlP
WPot2YWteEcMRcVVxeZshGYtOWcu2WZuuJceuJXsuuevBJZu2CUM2SYNOWQv
v4uesczfVQ0csU1btAqbfBPT/ypx6HFAt5hVs6BKnpRUsKyI/qP/cLGyPfzp
HvsDHkl2EdkHQsKsHFwC9/if/E2ch5uPl5NP4BEv98+cvA+4hdgFRLmEhNh4
OX7mZP0PLzebCJOWiEuqiogqi0ipSTxVF5PXl5Q3fKxoKfvS6Ymy3WNlVyll
j6cqngIKTsJy1kw8YRPRfyCkwyakyy5qwi9szClhxSph8kwjTEItSEozSV4v
S9e7S96mRtq4RNaq2iC4N6Ri1yVlIrh4wTNzxDC8NTCqPblsNjZ7qG0E2jeB
aR0AV3XuNfTDytsOUqrW/NLHneMH3OMmvdOWgrL2wvKO/FJXnKJGXtsVvHUt
U/Ws1A3t9yrYtE+cVnUq1PAsUfTMf+yQwWccpWKRYOeSGeiUZumaq22So2la
Z+w//9pz4pV/v332vHv6qFVIhUdCfVDRWGTZXnDWoX/SQXDCml/klGXaaGJ1
p0dCpkZq+8OAAfu4OmAk6G4tyGABFkPjE3P+j0qMsEOec1KZS0hU9dAGAOAA
4Ndj2MYV6eAYt0/cmr7ZWbnaXr0hQq7JsBvcwQf43UYojgyBILfwh1unpP0T
IvKMSL0kXVxSrq4YDAb9CEdfIJ7OQ8njcNJ7PHUHSzzEYQ/IlKMTCoiBw1LR
MCLsiAgDM3BMeYI+xaOYVISCBpHRh6cE8AcG8sMJ+poMPsXun2HXcXAQAbFP
xu0e40B03A7zT6JgN/GIFQpqm4bdPqdArmnoEyqShDzEQXfwEBCdSXuIaAYJ
QUDtIyGreCgToHapODAWvIODMi91QEHAGVj4OQFzQUFdUtBfLqhnRPglnfj1
5uzDBeXzzcnvn6/PyMiPp8Qv52QGHklAHG0uLzY133X0swvtf21SI6KQ7xEB
sfZZ0TBvsHRrtPWqMbTKqqkBffijzOXzLYCD4T7ffPl4/e3jFfn7r3cluTgs
CAqb/vEd/7+V/X80A7wm/CAjqHDwBo2y88tXKIYwPb9dsQ7u7l2srh+ui6oo
eGnnLWoUIm1TGFhG0g3f0wyHGCeSdWJIxsl048zzNzFnBul9Osnj6jHd1iUr
eqmTdqUw22KSSRJVwHDJNOLKJfXGPhJi4FSfXjpEu7m9/MpEjy+/A+dYytbJ
OeIPMAGOKRdNLZMJKY1ppd0ZtT1l3cO141NVQ2MlXcNF7YNJPe1pLe2VTR3N
1Q01pWV11aOhyYvi6h38Gn2mMYsW8S22cdVumdPmqVu6mTDtQrpp/Zp63OTr
wHnjQJBJEEjZe0LAYeS+7YZq0ql1+mpw4/jrrOW3zYCA8eJSfADQywHUiwM1
r09HYiPjYgNrQBYpB7rOfQb29ZoebYrJR5wxcLFEtFYq1DR83it5LTBvLyB7
PTB3J6AY4l0Gdy8AeeWte+bNBZUvWacMWafOaERNqgdPWWTtaQSP64eNmsRO
qAQMKcdMcVs1/V0h72fJwp8fhnDxOP7zvhwLm9i/hBVZ2GQfPX79kI+b4+f/
PPknt9o/5Dg4ubnYeIXZmBjClDwCTDzhvsf+6N8cfI+EhfilRUWkxYRfCAgp
cvIq8Qi9FpXSEJTRk3xuKv3SSuqlraSis4Sii5iS51O1AHFlFx45WyYtYRXW
ZxPUZxMx5BM15hcz5JSweKkR/E9Og0eSDipm2RqOlSIaKXKmRS/tGl461spZ
lVhEjQRXMbnWpk/2tHlCr09EQ3T+ZF7NRk3HUX3X4cAMvqJ5o7Z7t65rP79p
M6Z4wTtx1CFq2CdpMTB73yd9Oyyy38a30Tx8lCn0njq2qbqPOMUuO4UNKxpk
SJkkyXnkyYcUPXVIUzCJtzfNCzMvC7Wyc7LKN3Bc0AiBqUa+N07vDaqcDsya
8Evoj8wbSKmeTmlER5Xf+qTRveJXghO7bBIaIzLLgwvaXpfu/Cd67bVrITLd
EWhXAWp5gHpZAFv+VuGpmHqMtGefmEmIhrv9anMx8PEjcWQUIGN+RR0ev58B
sEQARvwIQ9OPYKf78M8o4gWFsA9f29xfQME2yLi10+OD82M4jQDCEddgqBEI
fhh7PIE5fo86BtFOiKdXt6eMSyoZf0KGnJ/unxMxlyQ0gwin4A9oBPAxCUbD
g86oCCpmh4TaIKE3T0m7V8egj4y9C/LmOWEZh93GwVYxkGUyZpOK36Vi1kmo
VQpmjUHcPyUenBDvtl5p6CMCfI+ChlBRCCwOTCHdtQdDI/aJxIMrBuaSgaIS
IHQCHI/ax0NBZBT4GM+8HRwH3UUcbDA1EXRnCbKzhD7aQx/u0LGIj2fkj2cU
gDn1fr3+5ZJyc0oFbW3U1N55wOo5lOja1cmrF782rFN6V6hmmGLplWfulGpu
lZKZPbk8f76zSd9YBo8Mz8EO4Yd7CCoOT8OTL88YcPjm/sEoFjdNJ6xD9ram
e1eR22frY5C16ZVTKvL0AvTlB/T26+Z34BqG23IK8kooLH9h5sn31lNEP+a1
d497Cd4oHqIRDNJP2LctQlkXwTVTV5Ui5l5FdKvHjWjGjduV7Rukr9rkQ81S
EJqhh+o+ULeMc69smk3ArJZlXkph5/nHX/80OgKAm9tPuK8/GHcNcIDf0Zjz
qvqx1Oz22r61tumtgq6+xJr61NbW/L6B7O6ehJbm5Or6qoaOxrq66oqSkppO
n6RpCYMOIcMRtYCZl77174KqnXOW7Quw1kUnFpWXJgVElTSIbAxYPRyjFbql
GNQt4t/C5zjlnH5Z0H7jUrX4ugykkHJrZjAADEff0eM0psBxLu2YNq0CmeSu
m2Xt3NPvlrAY0LAs9PDNsAguNEjus8lbNUyc1cvCKRcBwRW7AaWQoBK8XyEi
KAcUmLUUkDsdXLZkkNyrmzn/Kn5eMWTaIHldxafzTdigfvKEjv+gsk2ZrFo0
75NAFlZfFtZAlr8bsnO9Zfkvtr/8xMPyV56/c8tx8D4Rfsgj/m9uqf/i4+Lk
5efk52MOdhEBVkEBVgFBVgGeh7zCvBKigjJiYi+EhZUEJVV5RVS5hdR4RLVE
ZIyF5MwlXjDBxFn0hZvgc1cRBbfHr3zFFD0EFBy5pUw5JPS4JYz4xIwEJIxE
n5iIyLk+U/H5iUuHQ8pBzTxH27lWWj9TUjdH3a1F3qbymVWpacxgaPmeZ/58
UMmSb9l6WFqff2JXVu1GUx+qsRfeP4Kqa11v7N2p7dsqaFyPL13xT5uyCe93
jZ0OyNoLyjtKyZ70iBh65zGg6jH7ymbQ1GsiMHbW1rXxqVqkiH78Y+uCp67V
4uZVUgZ1Ciadagbjau6xr+1qVMyGVZ3GFbzrtROrA8pnglIXwmPHknNGchuW
SzqoOXXXkVlov4ROr8Qw/+QKw4ACnbgJjWLSmwyIhnVGiqXDbXsE0PUGaPsn
0MP161iy0ssQYav5Bwa5cp6eXaXtwBmAX4Qyv2tfT05I62s/QLivB9iTfTz+
kMzYo35AXH44/Yg7pSLIYAINTqdvU2jbGNwyCjODJ00TSZMYwhCW9P4IPnOE
WkcgIQgUFofAYFGHFOTuCW6bgNoj4Q/x6D0ccpeIBhGw20ztQ8Jvo5HLGNgC
GvYej5w/JqzQCIt0zAwdPUEgHpGxm0TMBhG7SsFtENCLNOzqCWmPgFwmoNZw
sA0m98BDd0nQQwICTIIiUUgQBrGHhG5j0dtkIvj8FMFgQAnEAwruiIQ+JGGg
dCKSTkRR8RAS4oCI2ruiogmwfToGzGRHZNQhUx8dk6B45N4pEcFkLEx5dUyE
b64sVNVUMaeivK6NkrGPoo63mKK9urm/bUB4QHJ8QEyUkZ1TfkEjGEq5OP9C
JGF29hYvT/EXp8QzOpJKhOPgdwl4zAMyAULBQsCbO2e4i3P8zd786iFo6ctn
HBy3cHGDuv2VevPr7ztgtJ1XUnLZjKJ50huXGtP4Bc2QGc3wLf24g9dBC+oh
Y7al6zbFs2px7SpR9WpRC9rJa2Y5ey6laNOUffMsqH7Cnl74pknErk3ChnXY
rLFHtalzRk3r2J/brN+A42/A5bfvl1+/n337dnNxcXVwSKxrmihrXOifh/Yv
ggp7xtIamrK6ugoG+tM7O3Pre3Jrexpbelrae8rrKlMKmm3jeoQtWuW8F1Rj
thR8B9X8+s0TNmwyUHYlRPtqkkPRmWreqUzmlUoC/l3o4ouQxsdRNfK+bTFZ
pOjcE7uW26dZ+8Ja2cSWIaD97Z0DUgHLTUeATfaUbt25ZgZYNm6H5d2wqNtY
lEvAe3vZOXeJ/ijjyuTAsJhkneQlwZwvPuWgwLKjoGJUYA42LPUgLGk2JH0i
qHTuXeLwm+xVleTtFzEL7xJXX/n2miSNWt2lmsya6Ab5yLyQ+LMTCQsnC8v/
uffHD1YWFmdjHRaWf/3jgfi9f/MLc4kLPOLi5ODm5xTlfyTIeY+b6yGvCKuY
IJcEP5sIH7ugCN9jESE5AVEFEfE3AuJa3KI6PGJ6QnJmIjKWIvK2Ygpu4s9c
hF64Cz93E3npI/LCRVjWjkfKlEfCiEdMh1dUT0hUX0RMj0/CUl7BW+KFi5Cc
+wuduMeaybJGuc8tSl47N8tZlis71hgED3gXLptE9PiXbicPkFKL31v4VWdU
MgEE0TKI6ByANnRuNw3sNvTvFLdtpdash2XNWwcP2wSPeSUvheQeJZbt+2fu
qjt2abp2GTk1uwU2xyb16VhnS75LFNUvkTRrkLFskjOtlbeoV7DpeW7ezxLa
x+ParWbSamRR8dYlWyuu1rNiKyR1MyxmNiZ7PLtppbgbVdFMy8rfCErIdUuy
sAjv0A4aMEncNg1bcU9c1Q0cFTfMjo2JARZdgfY/bDYXQnpTm7llkx+Z1vL7
dYQ1zG9QgM5ZDIVJzr/9uo+BIY9AmCMoGkXEoE5oRyeX0LML8hXmmIYiQWgY
KJOZkLHrVMLmMWX/jAq7pOPpJBQJD8XgjwjEXTxpDYudRSEmcMg5KmyDDt87
ZsAYp0j6MYxOh56fo0+OkccM6PkV7pQGIZM3SMR1Gm6NSpwnYaco6EkKapRI
OSBit9FoJtQsw8EzCPAEATZHx6+RMWs05DrxaA0H3SKjDo4xaAYGR0NiMeg9
FGwbDl3DoDaopEM6FUIk7CMQWxQsmIKBMPUOFY8kou6KfglYEIGp2o4JNMzR
GQl+yZzvTG6DO2KeiTlcxRyukeDbJPguA4fY3VhtrL7rNWwbYWXua28bGOga
GlLf19U/09E7UzMw0+juZ11aW4KjMBXi16tb7Mb2CA63jCOs4LDrzLtsrr2n
4HB4FIaGQVJwKBQIDPwALkg02OEyFDxDoK5iCDtM8XP9y+emzilHn0QpRSdZ
zURB9QQF+zrPAuQr7+nXgWvGqVDzDJBO6rRJ7qRRzoBOase79J63MSDdBJBN
NsYyHaEft2+ZAnVKO/IsgHvmbNtE91qE1HlElSWXtm/uY/4M2Xz+9fK3Hx+Z
oPLb94vLy2MYDLWyeljf/D6/aqKkdaayb6aocyS7oyOrtSOjpTWro6Wyfb6h
c6p/aLGjazy9qMYruUovrF7MuUYpcvVdJlIjbp+JXSZJYJP4fct0kFPhIfNZ
PhErFE1+GQ3XD5lUDGySie3UThz2STuwTrl8kgGIRoOCveyAMVOg8t93NX2j
9n3ZflpBPZo5p/r5ZFGXLhWf4pyEaGia5m0k74cg7i9RYr9EsqND+dpinWMz
iq0Ldr3zl/zywP6Z8MCkPf+E2aDkMY+CmTfRQ/Kpc0+TVqUjFlQj3r/0aDSK
GDCMn3lqnx9hYQs0eAJp8seR0tUm4s1mj4nWrHeZnyD3oXBpJr78h/s5j5jW
T/d42Li42B5xsrMJ8LDysd7j5bzHx8/kJ+zCnI/4fvonJxeHKI/gE0GBF8JS
mnxSuvxShsKSZoLPbASlbUXlHMWee4i88BF7ESD4wlNUwV3ouQu/jDX3YzNe
MR1u4bs8WF7Bt8LCbx/x6Dx+7qyiFSqt7COmEsDx1POZSe4rh0o5yxJZi0J1
vzaNAKaUGH9uW+iWPZfST0mreK/rXJRRvlXTCqvtgHb0QzsH9tsGVpv61+p6
90ra9iLzlq1Dh61DJ9zj5/1SVkPyj8JrEa+8G96FVesGZzlGpgdlVb2xi1d2
rZV36pO26JA1Kn9pnqntXKjjW6bhWcoS0SXk2alj3+rgUmPmWWKW2OFVeeCW
deCWtuydNxxRO5LXtlXTCMstXIzLqAvJ89cM2DaOXPVK33H27fYIe6+Xinnk
Ov3YJny32gGYUADK/w5kcwGrOZ6GttyaNZzhgEb+WPQQ1ja/p5fI2Ph+A/92
jKFC8UxJcoY/Pz//RKbdwAgXOCyVAqXi9y4RGyfHhxfHB7enqOtj4ikKR4VT
qdArMvqEgsWe0sGMi9XT0+mr88WvN1Dgwwlw9uny8/H17dnpKYV8Qji+oNDO
yIwr8ufPF9cfT86vsOdnmOMzKJ0OIhJWKNi1Y8Ii9RRPI0Nw+E0UfB1+NIc+
WsQiF6nY9WMy6AS9y8CATjAHDBLijEQ4wRPOcSQyGUJgCi7sDpm0d8KAXjKg
p/TDEzITQw5pJCgVByWiD/DIfTRslwDfZR58oMCIcBCVKeiIMAJyn4xmngyh
Y47w8DUqCsRkLBdkxMHudnPdXa/hhtGi6r7S/pmJ8YVV+sX1ySUVRtqEYjbL
awuqmqo3t9avr2nHZ+jFlQHI4QIItICH7jPw2J2tRSR87+hoGQ1ZJmD2kfsg
MgzHQNNwh7DN1SksfvfmF8an33+FYjEh6UV/f/TkP3w6P4m6imlny9k1WGfv
aEZt6iceGscjrPKxJtnrqlG9b2L79FIWtGKnbYrINkV4z2qGRRrcMAZkHLFh
HLHglLFgl9in6ZZtHZqTVts1swa++VPifAe+/Prxx10oB7i6ZmAxiOnZ+c7u
2dzi3sT09oLq4eq+hcbxuYqeoaLW3uK2nsq+4Somqe5fax1cy6se8oiq1PXO
V/IqF3MsV46e0clC6GYSLXJoToVEm+wjh5xdm/QN9aAWbueBn6zGJFxG1dx7
Xnp0KsfMGxfv2NQRHidd3gv8+MKz5Wza524VK2MOgYqFZZeI1HeBA88jsBqx
KAcbf3TSMyCSBYhm2Q5VGoryRISoAR4sgDvLnVtpMIt17mZ49lBozrJfDsQt
/dA9YdkjcdIpfe5d/PsXiSvSiRtyYfNvImdV3Bp0A1tVvPoEHONSLdSByP+5
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
51PEBxrsDL9zits4J2yeE3ZpyE0aYoOG2CccrREOtqiw/XMs84S7LNkz3D4O
vkZDH51RECQUCI/apOD3cZDlu4oh9AYRvnZChO5urtSUlzKnJPZ44OwGdnAA
I8B/oPZ+uabcBXnp+PPU5Oy62rp9yDbp5ACKeg+CTP74zri8pFHvTGjBn69P
EODd82PsxSkKC99GgkFXJzQ6GU0h7eEo60T65iEK8kzRSkHWS1orVFTe39J/
8p3rvFkISMVj3CB52zBlVzflwDwXoZu6opM+blkyaZg9rZu0Y5v3ybl6zyJv
w6MarBs76l2wEli05ZE+l1gNsw4ceGNZllG79Uc/5D9j0XQAwF+dANfnX4Hf
genx/u62xuaahp720cqasZFxWFHtdFZ5f2nbRF3/dF5VZ05pV1PZYEz3dun7
/ZiGAXXnPGWjVhuPPcegXW2HNouwMec8lH0RQT8H/CZ1Rjd3Xi9x+7HVxH2d
o3dB8/oJ7fwxXQ8SN7Qy8eGZWLeCc45AMIuEw0SONzBqBuTLAr1OtPf2XTEs
/7LDvHTutfCre2UQFmjjhovR/lPUfA3gqfTydc5HqFYBqgW3KWk9OC9hJj/p
iKjsCE2Oiit+lz0qXbwtXwR9nbZlEr9hHQPTCTrUCNlhEm+t4E4l1wLt4FZ2
7y4Tlkdpr6SBIdeIv7IMKrJki7OYs/25E8vDwmLF8lPBTw+DRX6Wkv6ZRewh
Cz/nT1z8Qg9YOR494ubnkxIVkOflfMLxSJT9gcDzZ69knigKiTxj53suIq79
5LmdqKwTr4SdwBN3MTlPmZeBj1+GSb0IF3oWJPIi+LFKqOBTZ/6nNvziJnzC
muycr9gfPufnUH7Mo8TOZyIhZ8fKYyD4xF5AzlVYNZjzpS+bYjDrq5AnFrky
dkzd0aTs0fDMoeqNb5NGaK+xe0FRByw8dToycTY1e7qycqGjZ2lqYbttbKm0
Y66447C0mxJfjndKXLONWXCJWXqVXe1RteAb+744E5fkt+1g3i0rH63nUhpR
NGsV3qNgWCOjXK1hNGZkPmxiVO/gUCXk2C1oWaXgWGUdOm4XsGbtN8+UkAml
42FJTalRU7UpqNFq6kgLqKS+P7S80r+qKjhpySVmyjfvwCBu2Ci+3jelyda7
xj8Vqhu29sa3wNbuObDlADTxAdUSQIMm0K/O4kxg0a3Vih3isIjSTy+dIjAn
DHCIOdzAbUOPwXQq5JYMvj5HkT7g0BQIEbONo69BwSsoOJqG+Ijav0DuUva2
t8ZnWpr603JqAv2SXZyiAt2js72iKzwjGryjm9x8+pw82gysSjUNczT18tS0
MjX18s0d6o3Ny20dKsPCBtMzZrIyJjPTxkoLZ+prwO/Hh5ffLx3t7GHhMDoe
dXFM/ECDX9PgF4R9OnqVAl0kQ1cYmL0T/NEpAXGCw1DhK8fYHRpqAw9epiFX
r8mgM9weGbp+ht0/xYCOUftk8B4NDrrAw88JR1TELvOzKMgKGb1NIzGRZIMJ
JnTyLhNGqLhtMnqdgt48p8BBe4v1lXcy5/rs5oROm3s/QkDv35XZfjv79uX4
5gLR2pwxO1l/ewEFflAvzqF02t7JCfj0HH5zvEKjMFnKJmx/Dvh+8+P24gRx
eIk4AE6IXygwBhp6uHuAIl5O7xGkdd0ldG2fOgbqRNTZZeyqBS/I+g7Khw++
DJl1rKDYlILfJY68je8xydgxSqWrRVDVY4mGpXT7tEOfKqJfNVY/fMI+d8Y9
d8wxtcEru9o+Ik34hXJUdgGGdHwncH6/S2758vni8pZ+iDokX5z3jk03d0/U
to92tE91NI3MjM4NNfaNdk2Nd81VlvamZrcVVE82dy2VTtOSmveDCpbVPVoF
jQuUA0d0k/bexu68jNh8kwwyK8CY5yHsykgGWRDDDNAT7zZB1eHHbl2KGYNs
zi3StoNJBbCIugPtqtP/BOFf6qcDM25A9d1uyfdqveZ+knISQyniJso9K8bR
S8pz+q9Bp36x3d8iBAH/v9XFJCvn/Kpd8jEnv6QjSXk2+SUjXJapU371vzce
YOSYuvSq6BfTPLxN2oxJyrRK0opG0opt5KhTQLe+15iM5+oTr/lXHmUKrnGv
WaS8Xnsxlnb/RBBBFhb9f7Kw/6Fu7h7/5vsfIel/swo/uC91/57Of9934eT6
FycHLz+XFC+nEA83Fy8PG/sj1p/+zfVYSk3m2WsBqWe8oq+ePHcRlvZhroOP
FR2FFAP5n3kJP/cWUPThfe7Br+AtqRIgpeor8NxRUM5KVNqUT1KLjeclO6cM
L/8TPj7JhzyvuUQ1+cS1eR/riym4Sar6SL4OEVOLFFSPljfNV7GufGlXoeXV
KmNaoOfdqe7eZuPTGZO/mdl06JU6FJQzVtoLqRmCdUxh67pAjT2HTX3Q8s7d
xNIlj6QB6+gBx/hJ28hOz7SJiMplv5Jp17xhLZ8KId2Y186VNjETljGzCpY1
kib5ctZlUpaFyu7Nig6NT11Kpe2KFR1qjEP6LEIGbYMGArOW4kt2vZLG/fJH
I2tn8/t264bAJeVrOUkD5cntFqVEx+CFxOhVv6hR04xBneR25+RG+5iaV2nr
/5Pyg8XnysmzClh1vGvFyBQ7Y8/SC5ak+DQNDBNMPNMtorMHjs6YGpt6+QuF
OkeFN5Lhg2T46qdLKP104+IT7PO3a+AjcE1ifL/98PWXq4tz+snp2SH8ZGqW
XlWNysknRMZhQ6LRMSn4qExcSNJRQNy2fzTaOxzi4L2pbzeubtyjbtT2xrJH
x7Zdz77LLmTUJ2k6sXCvqAlW0nBY3Y0anvu2DiUhaN9oN8DJDXD98fvHD1+u
Tk9PsPgLLPm3Y8YNlngKRxPWdi7hiEsY8jOGyMBOQDZ7UAeDF+QFBmWRjJ2h
kpZJ+CUybpuEu3OWxiL3cVAm62BqGTAFA6Ujt49RO8dIpggCUf4Yx0gQHXnA
BBnmARUNvqSgt9cWq/5oXP7p4w0GDT+/pF+eHH/79TPw/cvt5enW+nRlWebQ
YN3JMQQAzn79RKBQj1DoTSx+n05ePqMxn3cPt6e+f7oAfrn6cowHTsnAJ8Y5
5uCciD1lHJNPPjYOL0u8cXim46Iakm4a2+WQDHoTvKwcMKkSNqESu2hbTHCr
wuqnv9eM6X0XN60VC9OJJ5nkMpxaP3lXoD1LETYZmxapM47Z7y2TO4zDytMa
ZzPqhu184yrah+B40v/GhAHgx4/bI/D+9NIsGI5s7Oiua+mvbxzs6hhrbx0c
G5wbaB7uah5oqhsqKmqtqBupH1xr6Z3P6ICGFi96ZU/rh3S/dG16Gzj2NmpF
J2brbey2US7CqghnkgOxLyda58PNciFyfsMihoPKoXPGuVtPA9pkvAdMs0kO
jYBMNJzjXd5UazPQpQO0/g0oYAGGvWNSW1RSTyyyFr3Dutw8mlUch4WdJuzC
aidinfZ8FGuCPLSS1/mrAJ0KRmVs5pmPyN0erCFLT0ZibkKpcRZEq5Bhmbnt
ljVtlb1gkLmiHtil79el7T+i4DEtbdej4lSq7JrJ4VUm+w/+ekMZoF15TogF
6NYkV9tuBz8DRhyB3JeZav+5w5N/PeIRl+JhvffwEcc/7ktxcN3n5OTj4RDn
5hDj5ODg5HjI8Yjr3r/4JUVVnz59JSgmzy+mKinvKCbjyy/lKqnoIqIYICDr
LvQySEwlQEjBR1Q58MnrkMdq/nxy9vwylkKPTfgktdl5lDk4n/HwPOXjkWQX
UhcW1xaQMuSXNpN45SalHiipFi76JkZcI1HWNE/BskzRsUo3sFvepkzPt1PD
u8PcvckrcTypaiuy4H1c8fvSjv3agcOeGVRj335j30FjH7Si+yi5ctsrdcI2
btAhYdImpsspaSi8csO/aNYjY1jfr54pc9ScKvV8O/QDeuTNSyQMC2TNS6Ut
S1+7t75ybpFzq3jmVK7q1mIcPGAaMGgfOR6csxJeuOGTNBqUMxpbOVfcudc4
ACmvW85KGyjN7PYpQzlFTIalLDjGjRmkDulHtTuENjoGVb0OHhCMOpCIw8q/
9QdlGAIDT4HGB0AL58lElKepvbTVFKfLkkXaeEFL99XHu0qRz1dEOnkHj4ch
yaSvwM333zA3Z2Qa7jMVf3twgMdizxDY07VtzMgsuKx6LiK1z9Gv08lvyMZ3
2inovVvMhmfsilPUvFPkjG3wqKn/gJZTB1ODy5uUKZjVvrZteevcLW9Sqe3S
axc67RGznFQMC0nfjM0H5bdctQ3NNQ6s1vevtA2+H59ZXV7bgoGhdBL5w/Hp
ryfXn+iML9QTMhR8hsNd4LGfaGenpDUCbJkIW76iH324hF6d7p9Q9oiYFQp2
l4zdIyB2UeBtHGSHjLxr4UfFHNBR23TUDhkFoqD2/xwk1D4dCWJgdunIfSr6
6JKCYoJJ9R9gAoWCBwb7/oiM/I5DYyF7+6CdjeH2jndqip4O5hUFaVNTnSvL
w4uzI+NDnUtzkyfUDeD346sT1O7KBA0PuaRhTrFMaof+xiDQkGDg251nIvr4
k1N4/j0pA255CwnHZCXvhmdu/TIuU0/dR2QDh7WSdk2z4RZ5hyZZc3qJw0ww
MYyHWKUzrPMoNhWUoEqsddb+24A+04RRx7Rhq9hG97SWJdQH7OX3RSgOQztj
3Hz6/NsfzozAj9++XmNwqK3t9UM4ormtp7SyuaCooaigIS2lqLywsaqkpbqi
tbC4sbisp2t0tWt8u6i2yy1v3iSkzjC0ySiyXy90QjN0Qi14Ti9lXy/50KoE
Z1mIfZe8Y1GE1kna0ohbl3DplfXoNU5HhLZ88KjcsSrbUii9Fc8A/qne66yj
Baw6Mb9dd72cek3RzZG+KR0K+Z9VvTPU/HveuL5/YdotYlD+wrPJKqEjNLw0
Pr1NNR/BXQXoFtLmAlzvNmCZw4JFq+JaLweqmovTSD+yT5p1T+q3TRkyiu7S
9q5+59Op6jOl4jGobl6obuAnbhjMYlz0j78/qlH/y11zwCAWoO11dYDOeIg+
0KYKlP8PUMI97ix0hyf/xfK3v7AoSrM+vM/CwcHOzc7P9UiSi12Y/RHzFRvz
JTebrJToa6knqgISioKibx/LuYvKBQhKuz154SP+Mpj3uY+IUqC4Soi4SqiU
WqicRuTTN+GCTx24H5vySRgIiWqxcimxsT/h5pbm5BTnFHjLL6LNL6HD98RQ
UtHtqbqvpGqoqHqYhG6SlF6GtHG2km2lgX+XmlOttneblm+nqUutuU9jRN5S
UvV2QuV8ZuNqadtO8xC4vhtU37NX1wOpaD9KrFj3yZhyTRx2S5mySxhyiB2O
Kt/wz5nzypiyjeqRNklTdah4bV+m49WsaF323LxUTDfviVGxkl29sk2DlEOx
nGP5a9e6d14dhl69TlGTgZmL/unvneMHAjKG48qY8AVqGoBWNK7l545XFo1m
lUHdogY986ZN00dNkseNgnvs/Doc/Vt0vGs1YqZFvUef2DS8UjT6MJkNtMrc
edTM/J00msRqPHQv8AubSUdqfnNzadn/46NzVx5G/wZ8AH4gjg5GOlarC2Dh
Kd3OfhWuflU2vhWGdqU6DlWvLIpVTCql9Uqe6pU/1it+bFgirl8qZVIsY1Gm
ZF8r41wp71L9wrVK1qlW2r72iU2VlEWtlGUdh2aBhHmtnG37Y6OGly697Cq5
HErpQjo1aoaxstoB0m98Xun5mjjHeoVmFZR1Do+tEMnX5xe//vZH0POX2++3
l78wqDc319++3JAvGRQ88ghyuEJEbB4TQATMGhq+fEzYpeL3CYg9FHgNc7hK
hG9T/yhbZtKS/x+YkFH7NOT+8R2Y7FHRh/9fMCnIzxUVEnexc3C2cdVj0jdt
fVN9QxMtbVtTfW9nGz9XG383u2APxyB/F2d7y0A/r9bazKPtqd722jB/N08H
syA3p1g/j7Rwfy87yzBv18nRiUMYubhpQlDJUfC1n4pl6ru0QfOslbch628i
D7WTwTqpu9YlGNNcuGHSmlnqklnytEHMtHks2DqNbJmFNUg5kLNrMk5a8q04
8C5a9Mwesowqze6Y+A34fx/fgN9vb+/S5j/cnlxdUq+uz8kEwvnl2cbO0fL6
3uIKeGlpb7h/bqB3cmRgZqT/fVvHQEvP1MTSQdvUWmJ+mbpP43PbTDX3Mt3Q
Hv3oKc2Iec3IDccyvE7CvlkB2jQPpZW8o5e498S9/7nXmLzXhGHSsFEaxrHi
Y3QXza8bLZN/w2JGuv8yn9biCQz+9c4+tFyZMtQcF1FilDAh7L8m7VZhED5m
H7OuHfj+pffku/Ql5/ojl45To07gTSPgWwBdC9e9a8fgyAL4/fM0QIu/ElDJ
R+lkIfWyQIaJ05bxfebhdQY+VXpBrbqeLaaubRb2tZo6Sc9e+vHJubBI2rPc
f24pwQlg8urE/xQ2fCws9yVZWIDMv92FjVr4g7hY/s6Ek3ucAhwPZH9iYeXi
5uYU4GaT5GIVZ3vIxcnKzc8nKSKkJCGuKfZEQ+SxmpCUgbicp4R0qOCzUPEX
vkIvQwTk/YVfBIkrhUuphj19GyOrHvVYOZBXyob7sQmvuIGAiNZDbvlHrI85
OaV42SQecChx8r3i4n3FKfROUMZK/KWnqIqviFKI+Nt4kTdx4topLyzLtTxb
VR1rVZ3rNL3bDVzrtJ2qPZKm40qXowtnEivmsxsWy1pWi5pXyltWqzsPy9sP
Muu2QnPmPNJG3dMn3VPn7GMHw0o2fLOmvdInmZLntVOhsn2hgkWBlkfdW/cG
JbtKwTfJ4u8yZIzynxsVCZinipnlKTlUKdrVqTvU2EZPeCfNuMSPOER2u6X0
hudP5LeuNfTuVzVuFpVOVldPVZdveSd0OZdOW+e+d8iYswobcAofsAsfcoub
feNcqxk6KhawIOQ0ERSWD0z53Elapt5ZMqsorGdRKXlg9l7JoSPQv5LJzffQ
QM/Gl6ZZUl37Wn31vLtLjcqbDEmZNH5Zv39wO90T9r4vEv6zSCKrbDbXiyIh
jYYXtoPyNu1PrRvEzauETQsEjQrEzPKfOZQJ2rUL2jQKWtWL2NTz2zRxm9ew
GpXf1yv+6e3/ZeutgxrbtrXvvGffc+4523q30LglBAkuwd01OAQP7k7Q4O4e
ILi7N+7u7gSCO03TNO3de71J733fP77vVs2CtVbWSlUK5i/PM8ccY0RT62B5
bKp5bSu0QvqF7UpEnSpl/VqUUU3SeqV8ainsiqFQCS96uC2bhL2Mpq+WRZS9
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
D2cQ8oUK+zCL+nFIh3DJhnPKBvPIh3FL+ULhThQsehRQDRqIMj1YmpxWgIqK
m56Gk4YaSk3JD6EVpaYh4kUIwqrOzKnLLGTJJOTALOnGJhfEj4gW0Irj0oiV
MMOyKoWx68QpW5eLm2bJWeO03MvdEnpC8qdDsIMJBdMZhdPZ5TOlzZuVrdvY
2rW44glMRr9/Rqt30qJ77BjCvswyqA0V1uWePBxaugTXj6EUcSLOPg2nAjlr
7K/MZkwSvoxifvyycSzIWIhmqJQNjkMrEW6YoevfrulWq2pfqu6KM0AXWGHK
vRObE/MGMotHswuHSiunsWXTQWnt4TljfuGdXmEttiElmlElcN8WRa8lW781
N0yvuHmKdGCXhE8ft1aKedgsUPsbSZkUPwV67IKdfH/VwoJMC9hdK1UNCrSl
61VUunj0qznsC8iVXCGSrtwy/nIqXnBZTzYhDypWp5csXgzwWCbRZB6tPH6t
XE5EGi8igUc7VkA7WlgzUUQnWU4vTUA/RtAgUdQ4SdYqR8m2TNq8kF8zk1ku
CSadTsETxSCYqoxsE1Su0rcZ17EcUlav5DSZErWcEUUNsxk0c5k08VvWC9jU
i9hW8ZgUcBljuZEZ8nYlcKNUQd1ENnkMm0qMskGynk12YNKr+s6t4Zn95bUd
/M763tbsEX7+eG/2aHvmYHPyeHuKSJLj3YX9DeLpBIknG/PEK4c7f8Pkam/l
f4UJysnAxcs2PSvZ3dvRD+Nj52Lt4GZja2/i5mnp5GKhghBV05LQ1lGIjQ9E
o509PW3qG5sXV5cTExLioqJFhYQSYmL+32rG8vallV8qh5wzu0aUmk8PH6pR
wr6XFz0khJ40xz0YpV/JBS1rRCwrYaa0QiY0Q0dU/Ya0fMbNibIkZhsVsWwe
M2GXtmYW1Khon4MKqUWnNgwvE/7K5ru5OQaAzx/fnQIfrj7fnb2+OPr2+fHj
x8ebm5v7252b2/3T062by+PLi4uHhw/nF2+GJlZTc6rS89twDeMZ1f0WgdnC
hl4ixl4qtl7stiVw53Il/zatyAlz7JZRMl7Ca1A9bNEUe0SEiZj7oIRXP8ys
BmJYZpS8aZ28AY/6rBrQKWkcRaFdB1KcolNIBMbDSQl9RPtco11Z04rwbNJ0
a1KzKlBzquG1qrKyTLSL7DWL7FVxy1H3qpaNOJQOPcO4p5x5UAI+oCkPOgO7
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
1DcUVFfkVxJHeXF9Q1lzU01LW31rT255fUpmYUX9K1sXHzArFzO3oIQ8QtXY
1jMmxwKTq+6SBtOK4Tcr0AgYEXMelnCeUIhYNU3b14nb0IsmZQEbxm5qhY2K
uTSYJizpRq7qYNZtYglGIXPG4UOOaWOaga2W3li36BpMeiP++vvfiuf7+w/3
V3++u/l8c35/sf/5/g3w/cvD69dnx5dv3nx6/3F/Fz9xcb1zf3/6Hfi2ublf
2dSdmF1fWDuVUj3tmdKl7objN4oRsEiScc6Xd8jgdmmUQL/SjB1XwoxJ+Awb
JG7Z5J6rRm6Iek8wG1e/UMkh18gXcOpxxN14VTzqx2yL2ec/0er+l/YStWqB
uprOp4lYoE4KKPwZaKQdjtbXdHgl4PVANEeGTqGadvHC9sOaXgOu6BLP4Gq+
CDwNej/MNZCEETMQqVeUCQgwAAE6P5oy2INIK7GqoLoITRmXKJDftrRbJuAN
ApRJ8WLAGRSSXiEavajm3uSEirQzCODnMyXjsgG9sLYgcqPTG/CiNQaBnvxd
hQCUpMgERFGTZEmlOAIEegZ68u9f4S9/h8CpyMhpn0MhrMyMvBB6AQ52EQ4u
STCzAh2dOjmtOgOnAVjIiAZuScvtTiuEoRcKIuOxA4tg2GQiBbWTxRCpcOUY
UY1YIkxYRFyfMai/oFFiZFakY5SkoOKhoeOmpWGho4Uy08HpyLlpyNgZwWKs
rErMbGrMXHoQThNSxrGoK6d8EFw7Dq4TTyQJj2YSt14yt34Gh3aqsEmOmkeF
tk+dY1xfdNmKW0xrJHYot2Ixr2oxuaCvum8PWz8bmd8TV9YcnbvvGz+q51Du
HDVgHzZo5NvkkzWPCm9HBlbJ26RLW8SKIiMgwo6/g/UYuW0FpYIgakFsKoFg
WX8u7QRpmxJJy0J5pxIVlwpZmzxlR6y+Z4FtSKlvYktSXg+2arqkebW8aayg
ajyxsN8n75Vj+ivryGlz71lzh1emnkUmwdUGwQMaroNKNjVyLtlC3rnU6CYF
VGOQTyAwak2qxpYOAuoUEqO8/6OU+JNOj1zMqk1qnW1y6qutu0sAuPgObF2e
4g+/zGxdbZy+Of8ILByf9K2udC6uFrUP+WfUOwWVWvsUW3pV6ljka5vmaBim
yyqFU4oEveT1/oPN+Qmrw68Qx3/TW4HIjUEv9J9zOv0OsXsBc+JTieNWipLW
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
pfsH6KcfpzAqrp9/5gaBwPTsSr89Z+Bh4WV8TvaMOPNZxAT5tDg4EFBmGaJJ
YWTW4uBz4RDyhgraM4qgWCVdmST9mETDITIhTEpodqUkbuUoPo0EXpVoTjkM
l0IopySaBW5LAdaioFeCsClR04tSUnFBwDwQRg4omI2ZkQdMy0VHxcFAywsG
S9JB5MFMqgxQXTqYKQ0nCizkzCbpz6EYwa0ez6ebIWqYzWeWw66bCkXE8Bml
CJmkq9gXO0Z3Ooa3+CZ2JeRNZhROEr+p8psWCl7NZNYMpDV1FTYQovNn7YJa
XCMGrQN6tVybbUJGbKIHQos2PZP7DXxK5EzCBZQ9YEL2TDATCIspDb8du6wv
VNqHTSmEVzeV0zBT0KJAxCxfygIrYpgsrBshaxhp4JrtE90UXzCSVbES2d6c
2DCJrdoqKJvLyG0NjKmzC+w0wswYBsyb+s2ZeA0aeLZoBRboYrJUvBJlbGL0
7atEbGfodfpNHRKBKWtSk51CENCCyksoe66Q9lS/9Ll8NL24b3BUz2DP7Mcz
whvC4drI8NnmyiV+4Xx95Hy772q75+vt/IfT2fcni49nK19vdoD7M+Dj5Zdr
/PXG9M7R2PXt1ucvpwBw96NS+j3w/e7bn8R/+b2zM8Li6mL/UPfoxMjS8tI+
Ye/g5OyYsHt0sH90uHt0snN6snV0vn5ysXt8uXt+e3hycXp8cXp+e3FxdU68
8fzq4t2Hz1+Aj7e35ycnu5dXu68v9i6PFg93p4+2Zy62Z893Fo/WFo7X5o53
lq4PNo7wy7urMyRZsjn+I9yzcLA7f7K7eIxfPNtZOtyevNxZOPlx5/zUyF8w
qazrb2gfw5W8wpV1pWbXxWVV55Z1VbVP1nSOZld3xhdWJOTXpZY151Z0ZRS1
pOZWR+A6E4p7UiuH8xoWjD2zhHQCuLXDVH1qBRxKlDADSmETcgHjakGzNpmn
fhWfndMuRFxGpd17kPETygG9iNAxnYhp7dghK+yMUfKMQey6OnodGbpgGtrA
r2OdVFK5ef3u4eufZ3dvf8CEZHS+fPrw7s3Nt8+Pn1+//Xh79/jm7uHN66vr
i7vXr98+3FzeHR/fvTt/S2q/1d4xHBianJ7VklEyrueY+1LQldswT9ixScJr
EBG5qha2IBU4IRU0qRezgMo8QGUdGMRtaYavCTkOMiMbwUbV7KhWw6Qdq+xT
o8wDk6wDUY8xSs1iMLKFLvKrUUR3X5Y/0IACkhiAEhpgQDvUQvOlVB6Z5eG/
VIueiJgKITyljfM1Pdo1nfNE0CsCTg2irsUSwS1w/35u9xE6n+l/ow9BGADk
BzxxvyVzG/0F/QoUMP0f9B2Z84dfgwA/x9pS23ipoE//TANMIvAX9pz7Tlwo
7PJPWEApcSk9NMI6sPAXvw3lwoOiksy81AFlSyyI1gpEZg165gD6zR70Oxr0
IhD0M5KFRoH7Z2p5CBvZ7/T/+Q3KSMvLTslMS8/KwS4tyG3IxanFzKRCTitJ
S68FZiUqE0+IgAODEIpRxBks7E8tEkwvGcQg48GhEsOhHiuimy6qkwpXi+ZX
jeaRCYAJO1JAtF/SKTBC5cmoBSkp2VmZ4USYMNAygWk46ehYaSk56Gl56ejE
IWApCLMaPVSTilmHhtmUVsAeKurDIhPMphTJq5EsrJ/xF0yYETEChlliFnny
dvnGgS0onxrX8Lb4gsn08llc1VRWzUhJ1yKuaSijubO09TSncsMuoN7Uq94h
dMjYr9/Qr9c6YgiTv+KfPWqLqVM0iRJS9oQJWbPAkKwwYxo+aw5JDyZxb5ha
OL9B+g+Y5IujCmSssJKmaRIGscomSSbuOI/YhuiCiaSy2YT6gZSayazqhYzC
xYS8kaCkdpuIGmRQq3HQqInfrCG6z8CnDOVfYoYp1/Qol7QtMTTBsqNGyZ3X
2bW9J1I0gGYBIIsWqFS9H4h2sDWRMU9iVcqhZPNyd8uoqOvZvQa+Xe8RVuaI
k/RiY+Fma+n+cO3N7uTt9uT5Yu/ebMv2WOXqWM32TNPuStvWfOv8RNXmzOjJ
5sK7i70vt0ef3x5/e3fy5Z7w8GYHAC5+sOXhR7uYhx/HrwHg+vvbg+/vjj++
P/jyCf/t88G3b3tfPx3++eWA+Or379fvHgn394Sb253rm537+8OHd4f3t/jz
g1XC3uwJfubqaP7qYOF0f+Z4Y+p4c+54a+Zwde5wdYYIk6uDrZO9xZ3liQNS
mHj6cHfhCL94sr90vL90urd0jl8+3Zu92F/5UWlta27yb5jkFFRV1b8qLGuq
ahiISsnHRGbEYSsyKxoq2odKmrqy65pTy+uw5fW5VUSP2ZyWXxJTMpJeNRlV
0FczfIQKqWBRRL8Q9YCb5/M51MoEDimGLqiErcr6TWlgVpzSLoxDlpQCNsU9
ug1ixhX82/WiZlEpW/rxE8isYRnfBuNEvGEkwSR8TdUhT9bcrryj/fLbd6Li
u/v0+BH49vbDm7fvrm9vzu5vLv788kh0NW+u7z6//fDh/s3ru9vHj/dvP72+
vN0/uPl8ePF4dP7Q0DacV9CSntMaFNdM9Iyihjkyji08qDYe+w7pwCWZ4EVB
z1ER9IxWxLxxyo5V1qll1rluDF7QaZDFuJnVqFnGb9o0/cAy6xSZTtCKW2M2
bfxFKZsW1Ufjd6zvWXhX4Qhk/wso+CfwynCiuoRVJZQd1SHuPAhTSYEqBzBq
evOax8k7lCub1It6F4paxihYxKk6lMHdWlm8Ohj9umgDJmj9CKwuR1xOUzyO
VWyuuRDvBqjHCrPDnUjQnI1vpV9AnX70jkHcXkloDMGduzVAzbhggTn/q17a
aFxkgn1YBcR3SD5tNgxXHhK9pmVTxijiBqJAgBhMQOQGoN8QP1Hp0kD1yMj4
qJ7SP/+v/2Z58huMjJLxOYSFTpSJFc7BKs/GhmBm1GAAK1HTyFLQadOxOMJ4
0FBeR0a4FR3clk4YzSgRziQbBpbz4lCO5dZIkDXGSRtmC2vE8SgGs4t5MPHZ
vGTUekmryMAkT0slQkHBzgIVADNwMNIyU1PD6GjZaCg4aSh5aGmFGBmlGZnU
6Jl1KKG6VMzmdFy2EDE0s2wIq1IkNyJZUCeHzzyXzySHQz9ZzCJfzq5Ywa5Q
z7vawLPE1r86IrM/tXgyr2Eutby/uHMuq3Uk81VHSdNBbv2Gd2y3XXCXW8y4
VdiYaeCwefCAW8IYJm/WLbpNyzZFHOHHLWTDxIZkgerT89vDhF0YBF1hSmE8
emmsOqkCZjhxywJJs1xpixx582SEZZqRS7ZzeG0Ytj++dBabP51bOpRRORRb
PutfuInOn3dLrrP3z0P5VRphurUDGgx9imx9ap38OnVcuuD2LaJ6fvwmJSxG
NTKmeUYIm4v6LKDKGMh/CrRS4LOkXV1SWA2aX8gFG3kE19YOHR0DD9erJ4cb
Wysr2wvLByvb1zsHr3cJ2zNj787WrrYn9lbaDnd6b08n767nj44md09GN8df
Ha2OXOFnLnem9tfG9laHCKvju2vD+6sTp4T5+4ud86OVz+/OLs/XTg/XDw6W
j5YXTzaIUmHhfHeRlN67v3BKir8sEDamDzbnj7dWdtbmN5amdtfmtzdnVpam
DjeH9zcH8UsDe+uDFzsTl3vTp1uTR8tjRyuTROIdrMwcLE8fbi0SQXG+N4ff
GD/anTnEzx7tLZIwQlg+PVg+wS8SYXKwNUHqN7rxVzTn79Bwekp6SWFFbn5Z
Q0dXeHwaOjI+NCM/AluQ3dBW2N5d0t6b29CKrW3Nb2rLr2/GlhViikeKeneT
6kaLevH63rmiyGg2nWgpz1pexzp+t25h3ymNhAOVkDUFnxmruCNU4IpuzKmk
V59+4rSkR7N+1JIlURIkjBpkDIqi642TDvUwRybBa3oeRXGFVRPbO4+kfsaP
91/ffwe+fge+vP/89ubm7O3tJfDp68P1zbubN58fP3z+9O7h7evPn998/HZ3
82Zjeul8eml7YGisvKymtroNg8nRMghUMU6RNMHJOb4SdBgS8ZhEJJ4i4ggS
vguS/vOIkHkFv1FFv3GFgClxr0lOmx6YWQeXWbd+HME+79Y6+1IjelXUs/c5
Iv+ZbgU8/h1XMhBSffalyYe0dJ8IAjpt5bWifzYcg1m2ymqFKsoHixjlvtDC
MNsFydhnI+2WNAJsdK09LXWDHZDxOhbxMq4J6gGZKI+kQKeQUFtfD5sgK+sI
C7N4Z6t4Z4c4J+dYtyBrjaR6qfwD56yOIT/Fbw6gE49fS2OdbfK6VTNGjaLr
HMPyvJObdTE1yLReQ2y3ddoHe6ecWJSWIdt/hJj+CQf/pPAHSB0E4gWBKCAw
EEznKbciF9k/JP4Fgv3z39Q0Smysolwsikx0qhA6NQhYkZVZg5nFDMaOhsI8
mOGuTHAriJAzRDyEXSGdWyOJQz0IphQjoJkibpItbpDNpxgNkwpkhrsxclhT
MOpR0slDmVXoaQWpKLlYoUIQBm4IPTsFBRsFJYyagpeKEk5NIw4GKzFCdehZ
kBRQIyoWG0Z+dxaxEDa5KDb1BF7dLAG9fD7LQn7zYm7jHGmbSlm7UmlLrJZr
ob5LtjW6MDy1Pa1opLhlKbmkL691KrV5MKOrK7tmLbNuNSx31jdtxit52SFm
HhUyYuTXYRPSjske841/hXTKUNYJ4hexh7AYgCFaLPyuTAJO1HwuULkwLt1M
CCKVxxgnZVMlqJ8uZpyuYJ6mahqnaZdi418QkNwcmT9clbJeVjiSXd8d0LDo
Un+Pbrjyz2lHY+Ls/JPNQiq1Q8pN/Mu83dq93ad1nEf4HDvZLe1F9YIkpSLU
jV5xq9U52ycDvc6kvdBYEDCo4+JVC9KbBGmFs9sYYrOK8a3A+w/rnz/d3F1f
356+PcG/OV9/f4V/mB9euDs+OFob3VlsPthsvbwcxp/1Tm619i82Hq7VnO93
vDmfuD0dudwfuSLMXRwuXh2tHuM3Lvd2zvaPNpa2ro9v8IuEzaWjve3Lo8md
o4Xt46Xti7Wd8/X18/WNs9XV47VtwtLW0RL+bOvwcJ04+/fP8ceXpzd7O6c3
u8PX+ImLnfHTzf7LzfGb3amzjdHdmf7jlfkzIkyW5w+XZg83li73Vs/x83ub
Q0SYHOBnTgjLZwfLp4QlIkxO8UuX+JW9tZHDjZnD9bmz3eXZ/wkNJ1d0YKv7
QpMrS2omc3L7UhIr4yJxGQl5xXm4ElxWWRm2vLwgMye7tvlVTnFdY3N3bsls
ZuFAQs6oR3iHnFURt3a2hE2zCnpc0K5Vwr1bI3BaP2LBNH5NP2ZRI2hC2XdE
1ncEgZnQihhQCW7RiWlTDKgyz5yzzl2X8RtEhE8YR42pehVpe8SPrm59Bx4/
AwekqggfgO8/VkxuL15fHB4RufL98+PR/v67u9uPj0Sv8+6U1Hbx6+nd+9Xt
g465roScqt7J79EZByh0p6ZrkbpnlbhtMY9JoRy6RSGgQSOmXz9uUcJvQi5o
RiV+2TV72jT/SCL0QNwHL4EaUDCtV0f3sDlX6ubNaCb38djlMVu0wDy3f1Pv
UQjEqyR/Gdf/BWgIBFLEgTIqoJerJNf2Z70wOswcn1uukrWvqFEML6qWXbeQ
WyVE17JZSX9F1hor7VQm41Ipal8kYpUuap0t51Sg4FYs6lAg6lIq41ou61yl
4FCjbN+g6d5i4NalHzxvFTzjljDqnTTkkDZqhZ2yL132r17zxg1YRbeYxw6Z
RM1axm/oeIwbu49beK1ZBYxYh09quFRII8Nk9bzU9L0lFZ1pWTR//o33yR8Q
qhd0HOzcvz8j/9cTyl9/pYXQs/IKazKySVIzSTDC1Bk4jSnZTKl4rGmFnaCS
3rRiPvSSvmCFQDbFEJhaCIdaNI9GLEwnWdgonUUlRMIokVsjACxs/QymScev
/5xZnpZXDSqoRskEf0EHY+Hi4ubmZGCghzHSQ6jJqcle0lBSgRlY6Bk5IBB+
BiYxBjZZBg41MK8BK9yaXdKFQ9KLS9pPXCVSxDBRxCBMQD9IxjJK2DyGVz9V
1r5Jy3NU2bnbPLg/GDuZUj2RUz+UW96FKx8qqxmsq92ITXiFzVuoqDkNSV5y
DJlwilrVQvdrBfS55a85pU+aYBq0nHNE1H2Z+YxeUktSsBiyClsxidgySNhx
aAdxaoeyaITw6Efz6cZxqIYJaieK6aWoWuRqOBaZBTWHFGyhu8tiX/Wml84V
5VyU5d3nF53FF87YJ1TpBdaqBc6ohB3KJi7LRbRoRrYao8dUDBdElfeMXGNk
HIWpjVxpjdeVjIabQ32ASSSAowOyeYEe92w1AWZax6eyQ0Lo/ojOhjUCKavs
6DVwePZwerF+fNLx9XFooDPl5GJ1lYDvXJyfPNueJuxs7Zyu9J4SeoG1qRb8
0ujNwfr13vLh2uTp5vQtYenuYHF3vvdoe+xge3ifMHp2sbB+MDq33rl8PHSw
PkbYniBVYdqcIOxMH+zM7G8RdcjoDqkq4/DOei9hmwiEUcLWEGFz+GR/and1
irC18KOrxTJ+Y25rZXJ7bQq/OUPYmTvEzx/uTx3gJ3c3RrdWh3c3xnbXxw7X
5o7WZ092F4731072V4/wK0f7pM2x+PWpvY0pwubc1fHmD5hkEj9mQlFDVnl7
dEZ1UfVoNq4tObkyLrYwPCQ2MSEpOysttyAztyA7OSu7tLYtLbuqoLolpXA4
LvuVc1CVulWmhEmalEW5tHOThGO7rHefSuCYVsyqfuIGMnZVN3xejQgT71G1
oBlVzJh64KBBwoB1ziQyacAic0o/fto4fdU0aU0V3YlwL4svG7v9q/wsadEJ
ePjw+fXtw4fHj9eX5xcXx8Dnj49vXl+dHN7d3d7fv725Jv56vPnwaWP/oLN/
LL00ExObWdt56hE6hLDKU7BOVXfDKbvWyrk0aIf2a4b36CZMqETNifqMywbO
KEbOGxTN6mUSNCMvVF3m5a1aJBxqVROWlBMJ+mlH7KhaFuNCLudGsHmtuNeY
RtQJLBTYTxf+VKIFFLEBOEqg3szU3JLLvloscFw3sNnQp0LJrUjKo47HMI5H
Di2JzOXQqICbJoihsiSscoQtsoSM0wVRqRK22ZL2Bfxm6ULWOZK2eRJWOBnL
IjlUqbpTjaZLk1bAiEXwuGvyeHDWeFhWX3Bub3ThYFL9tE9el11cm2X0gEnU
mF3KGtJ/wix41ip80T5wwiZ42DakTVwXLSBlJCypp2/kbYoMYOdQgoLFyJ7T
Pnv28udffgNDYfxc4myM3LyCWmBWaXpmORZ2LXa4BZTPCszvABZxAQu6UcPd
aYU8GKX9WBSDudSjuNQj2dXDoGrxgvqpnIhoBVS2oBqGXsjmKZPaC2adl8wa
NOxqjNzKNCxi1PQ8HDA4L68oKysHjIaejoqa4gkZ5R9U5C8ZGel5IFAxVk5V
SiZ5ShY1CjYdOk4LJlFnsLA7RMSLWyqIUyuKVyeSQ9NPwiJWwjpD2CRTxrZG
3qpR3LTMwKPeO70/pXIUWzuQWdWXUdSFLerElczGJXdnFC4VNpxHZm25RS/Y
hk1ruXeoerc7JE86p4y6JvTah1VpmCfwS9jTQZRoWUwY+Mzp+a3oRe2hir4s
iFCoejhMi/jRIpnlA3lUI4W14mTN0tTtco18KjxSxmPLepOqJ5KLpnG4tdLi
Y2z1Xkh1v20qzi+2JCCg0xE9oYvplwupVgwrQwZ2WqIXUI7N2pYx0mYOAo5h
PPY1PGr5PqjI/QJ7oIeXtCm6m+222BfMYM5s0MtpmIXywRTVLF/cAuv4o23C
1ubB1jp+9epweaQp7+P50vXt5sTW9MDy7Nnbq9vLy+3Zjf3p84vdkTfHKw/n
W9eExfO1iZOV0fP18ePNyb3l4cPdScLOGKl539kKfm9iaX1sY2/mYG3qYGv6
cGf2cPuvMUfYIm0tI8703dXxvfXJ/Y3p/a2xnbUholfaXR/ZWhrDkx6ZJWzN
7q5O7qxM7KxObBNtzo/d8sRxsDm3T/RfG2P4jTHiwfHm/MnWPBEmR3srh7tL
BzuLhN3ZI1Ix2Nn9jcmj7YXLo41Zks0hwSS1oD61uCk+p76wtCcjpzk7ryE5
rdjDLSA0NCI3NzO/EJean52OK8yvqI/NLEsrqMZWziUWjBBdJ0zem087Rsm5
TsmzTdi6QTVwVCNq3jhl1ywNrxO7phwyrYQekfUYVQ2dR0QuakeOuxTuOuGW
kPEjSoEtog7Vrrhd74JDvYBXTnGdU7t/R+X/BO7/BIB3nz7ev31793B3fnl0
dXny/dO724uTL18ePzy+efvu7u4d0ep8e/cJmF/fL6tv8YoPCkrOr247tfFq
kdaJE9EPkbPJUHSv1wscVQseUMZ060RPqMXOK4Qu6iXuImI2eeK6eQMm9AMI
svpNUoZZcPcKhZwzZBmgG/6aQakEalzCaF9BZZaJylg0DJ1RSAC+94sC1dSk
jRwdusXeYcwahXDHbivMsGvgiKH/uApmQCO0Vko/UEDRWxSZADGIFjRIFTZN
FTVLEzZNg1tkiFhli1phxayx/CYpgqhMEklscDIWOEX7coRzo7Zbo7p7t3nY
kH/6bETeVFRef2ROe0JBZ1r1aGzFtHtmv2P6sE3ypGfetkPCknPSumcq3sRn
2ND9lVtMJ0zc7AWT6H+ewMREDR1tQo313cUFEaxMfGTPycmfU7Gx8kpJqnCx
iTAyKdFBpFnYNbj5jNh4LKC81kwC9hBBT4iYJ72gK7W4G0TBlwsRxqsdyakR
yaoUBFYM4zfO5NOJU7LKFVQPpuO1e8KoRc6s9QKs8ZJWkYJJnhosTUXJS0fN
AaVhp6fhpH/xlObps2e/kD3/48WLJ4xUVGwQJmE2LhXivKZkVCUDa1LCzJgF
ncBwN7CAF7OIN1Q1AqYaxqEeLGoaK22fJ2mVK2NTJaSXJ6CTq+pc5pncFV8x
kF49lFbemVHUnVbyKjNnNClvBFu6lFdDSMDtopPWrIPHdLw61D2aLGOGreJe
eSQNeCe2GdhnCcu6QGGaz+l0KJl0yDlNKYVs6CQ8YOphPIZJ7LoxrKqhULkA
bpVwIY1oebNUTfscHfdi++jOhPSV5IKFhMKe7ML+0pr1/NatuLoBdEpWeHRu
fGCdj1eneeCAWnCLnG+ZJrrOJXoGFZYlbY7jM8hVdsqUso8gV09hNWjz8sB+
a1IB6n702Rm1ywqN51QK5NaI5VYNtHEv7uhbyy/Kq++omtrdxN982du9mmyt
/XYy/+nt8ubWdMdIx+OHN2+Jc3Kud26q+2Jz+OFk+c3B/Mn68NnW6PHq2MHS
IJEqx5tjZzvzl7skW3F1tH68v7izO43fm91fmyQChCgV/tpURjz4UfZ5Fr82
SRwHW3NHO/NHOwv41andlUkiSfbWp4l4IV4k3kb8+ddTf53+GKSbiU8RNkit
LvY2pk93Fs92Fs8Jy4f4ZcL2/O76zN7W1OEm8akZEsS25m9OtmbG/oZJdkVb
Kq4xLac2PaclNbu2vLQHm1fp5OAdjAnJKyoor63Mys/PKqzMLG5NyKxPK2wo
bDnA1m6Yo0tgcv5w3TRl9yZ1zx553z5lzKRGxLJBCinbRTNyUQY9JuU9KeMz
LR86rRO3oR07515CMIwf08C0Kfo0afh3WMZPGIV0SVlmOoQ3LB19/6t02lfg
7ZuHx78qz3/5/un65uLigvDw7uby6uj165Ozs8MDwu7R5fnN4/uLx89Dk8sp
eSWYzKT0yp7Gvkdrnx4ZZIYgMlraMkvJo9EgdFrGu0vcrUE1clQzds0w7dQy
9xoRt8Hg3cZq22GBwfOpFLIZprH7NCnnXOllAgjPPTHDJk6r0ifmpVRuA7pp
6zZ+ZQU1BKCBEqj6idTGoi9IFpFIg5rjsmrxjmr08uvVQ6+oBc2ZBLdIqPqI
qmGErRPYXfwkjPNELbAi5lmiZuki1tkStrmSdjhxmxwBs1RRG6y0bYG8fZm0
dZmSQ7mWa5OeR4uyW4tp6JB/xlwkbjo44xUmvT46tzWpYgSTP2ib2G4W02UY
1meXsmQWOmkZPmcRMYsKnbeLnPJKHmcVtXwKlvzHfzPQ00k62ERaGvlAqQSe
/0z55MlLipf0z3+jgTELMdGzk5FJQcHKvELGvPxWEJgZFbMJHbstqyiaUy6A
RdafSdafVcmXUzOYXSuEVSMUrOgLUYvmR6YI6CbIW2B5lQOoeWxesupD+Sye
UKv/9lyanEoOAlFiYpSkpRSgfcZN8xs32S//IPv155e//PbyCTn5E0oKCiYI
PRzKIsUEU6WCKL2g16RmM2UWdoGK+DEIeLAK+TLJxXKrR7OrhsINE+RtcmTt
S6StK3k0MuHaWWpO5Z5JHXHFg+lVIxmlXZmlgzmVA/+XsbMOamTd3jXnnO2z
xwd3d3d3t+Auwd3dAwkEAgRCcHd3ZgZ3CxIsISGEoDPDuOuW3A5zzvnduvf+
catWdTVNV6Ao+un3XWt96yuqnq9qxda07qPqD/JqiUklBK+MRceESavEIff0
+/YJHT7QPv+MDnuvPHXDUEk5p5/vGd7msOKU8uBVC+ZSDxY2y1B0RkhZw0VN
IAL6ydImmYpWMEPPcpvQeuuYBq+c++lFmwVVy3n13dld/SVDG629Jx3V2Ny0
toi0cmdoByj1oVv6jnfarlnwmI5ft1vakkV8n7D/iIBnn54L0sAiiseljD5h
Vy7i4UhWKHVS/6onVpS6mhxkrn9dyPWW22IKYmR+61VhWWNzd98a+eIDlfr4
5bfjbdz7fexHMvZ4e2p9aejDG/LTCwx+o2N9vnJxoPJgpZe4OHiwPPDmaP3j
Bf792Q71zfEzwvrlwfYz0tZTMv4FZf/5Ie6ctHNxsEsG5AFp4/wQewWNDeCc
tojmYIOMA+wMjS0XZFr9BbjhSktgvjPk0dH29+vADcA5EN9h8v1DgDtPCOtX
Imft4mDzEQl7Afyqh1vE3eX9HcAELZ9c8eeUuHZ2gH129j8wqe4aLUR3FpZ3
wfMbkcWtba3j1XXdUWGxgcHhRejS6ubmstrG4poueEVXceNoY9ds2cAZrHHH
JqxO2hKm59NkHvPAOGbCPHXeNG3VPANrn48H5eEM0zdUYhdVYla0Ejd1MzaM
YVsGyQsexbsWqVOWqfc9cxdSGwmJlVj7yBZNO0h4ZuvqzsvvyuTrl/fP37/8
3vv6F/XP1+8unl4ev39/cfnk6NXbs8vn58/fPnv/F61m/I5KxRDPmrrupzU0
lvStVfY984geV3OuVPVAavrVmEYO20AxBgnTGjEPTNLmTbO2bAuOPcqe6Gdu
GGdtGcQseOQfsNvUMXi0KiSvOle9s4BcmoRhNF0qJR0K6aw7/xF+LpK8WwLP
/joQTVuG00BPHTJpSQgUsStl9hrTimwJTW+KQIzbJW44x297xcxJqCWJmWZI
gDNFQ8M0PerUPMqV3VBy7igFj2IAIwBPVL1L5d1RAEx0A+o0feo0wfX64BZj
/w4gTCIH3VPGY5CLaaULCYUj8bltWWVDBe1z6VXT/rn33bIeOqaOeCM2XFLn
XNIXHeInwZDdpJqLiLwlAfVQegH9WywqzEyK8WFIH49ETkbJ3+lu/vbD7Ts3
2X//mZ6TVZKHS5KTy0RC2FZeyUdWwY9fxItTCMwtG8inEiWgGcdvkCRoFA8E
j2E8n2migFkij1E0n3GGvFOxgl2hoU+ppEESh6QHi6CDiLwPK7f1XWY9emZt
EX5zSSFTWUEjWV4tWQ5j+ht0zDevMd64yX6HmeEuM9M9fh4OWQEBDUERU05+
Y2ZuCw5hF2HVcFG1WD7FaEGlWF69XCnzAnHTHAVbhJoLSsWtWtu7RdquTM6u
2CyoOSx/NKdpDt2xWNwyh26YKW6cLKqbr+vCVXcQCmt34FWE9JJtv4xp58QH
DglDDkkDdgkt/lkDgakd9t4IfVCcsqbPL7f0WHgdBRX8hbUjOVWDRY0S5Kxz
RE0zxYwzBA1SAPWlYJGj7VkCCmsBRTWBs8eSK1fgdVOZra1ZgwPIBxvd7Rdj
RcdVKfMBOX0mRff1Mibd0nYjUo+swhcNfB46p246BeLlfcckvFvU7PK19BKV
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
pUaV/zWK9KH23KGZ32o26kRkmKeRfMKwcNKZfsiqg3ejS0ybS960Xc6cI3Qq
tHg+OG/SNaJN37VE0DTrlmkav2GGmFWelH2emHW2CIg2DkjWqVDGsUDCNkfW
EanqXqnj26zlVasCblD3bdUI6LSN7HZOoM0QC4LdD88eCIV2pyEfVHbuFLZu
ZVbNxaNnolBLEcgV77xpn9yZgKIV+8wVs/iH4OzZEMRCVN5YdNaAk3smHd31
X//JTP8rF/c9YVNNe0+3iCxoWXgC1Nk7QELc/S6j+u+3VLiEHCRUAgWVgnkU
QgS0Ejg0Izm04ngMk0UssqQdi4C/oZh9IQ8IKQbKUgajpK0zlCyS+BS8WITM
bjAqiMuCmBjlxQRUuRnEue/xqomqsN+8K87AInab+dZ1uus/ATChY/idju3e
b/S//sRxl+HuzbscTIL8gqrMnBoMbOoiMm70vCBGYSc+GTcO2Ww2+VQ+tSwp
U5S6Y72aZ4Omb4t+YJOyZ7lOYK1ZaK1TdHNQRg+kcrGya7dhAF/es13atVnZ
g6sbIFUPHJR2k6E1m9HIqWD4qHf6gHtSp1NkXUT2ELxiMTiuycIpVds8y9wp
n+5XVWYhBxY+Fy5Jb3G1KEmdGB7lUD7VGAHDRFnrXCXnIjU3lI5/jWFYhwdk
IjRjLCi6tah0Glk9WtW10tqPq6jDJxethzVtRnWuFpeNL6aOEpInOkKaC0KL
6Zq2xdvfacIJPrlzdmCkhl6hllG3gVurXnyzWMoYo/eaW3gHdSaE2k5Hy7YN
CBVVz6oaein7VAh61Mk7wHKLul88e/P+w9ctIm5xeYKyN3+yM//p+fGr54+/
ffjw+vzs8ZuPH66arN5++nxy/mRxdfXghHR4RCaRiefnJ+cU0ilp7/J4/9Up
8cXx/lvS/uUpDuDGCR5zcUCzOcCDf4yjlWDOCOvAxeO9laPdNfLO6jFu/So2
aANJrhb/fofJf4/f5cr54ebpwRZlH/A1m0CckrYpe8uAtgG48V2W0ErDB2sn
NGe0dn64AcDkCfChy7Pl5TSYZORUZBfUw/LK84pqS6s7CtGN8KLK0ppeREUn
tKQ7KqfVJ6MFeEkJm6YrOpeIGmeL+fYoBfdqRgzqRE4Ypyw55uw7FpJcCskm
mat6iXPqiTO6aQt6GWsmsG2bQqIN/MQUtWaF3nFCrdvmzlqm9SfVLswcfNl/
SX38/mrnG1o9+K/vhyev3j958/nt5fm715enlIPXLy+on99R//787OL4iLR3
enJ6cv5iZ/9xz4P13MrxSGiHY0CpqW2WeHCuhHslo06ZUcyWeSrGPnfJPHPW
CXlomLZnlk2yLTwyzNhSilzgduxnBDUIebfbwIlu1U91M9e8ComBhec6cThu
j27l0DpZ3yatfKpWJdUjaZXa7UtbwAUYnMF7iPwtS5cUw8Qe1bhloyiMXUIr
GFrmX9zsCHlgn7kWVI4LLl3ySRs3cmllV4dc0wwSNskWs4CKg7JFLaCiljBp
W4SMXb6kFVzKGi5pn6/kUq7iXaXsVaMGbtD2a9cK6TENb7eL7fdIGwmGjUbn
PIjOGcgqna7s3kd37+XWY1LK55KqVmPKV0KLFwPz50LLln1RezYpo07QKXDW
aGDOWCxiNCC+ipFZlp1Nlp1emP4Wn4qMka6GjZWtnxEIrGFtFRSEtndIUdUP
kFf3FZH345L04VLy51WLFTVJFTBO49JN4tBN4jGBCtMW2FaI2dcoOudpeaKl
bTKlTeK5ZOxZhIzvMcsLiOjcpRe+cY3t3g0mPSWN5orqemR+TQEs3tOZi+XH
mz/Tsd7+geHaP5hv/PPutR/Yb19nZWTiYuQT4pHm4Jbn4NXiF7dh4LNkE7Xn
EbfmkoVyyycJa2ZJmKJUHWpV3Go1feoNAlvVvEq1/Cr1/SpNAqrBqd3QysXy
XnzjIKmqb6e6f7d6YLd55Khh9LSyhwitWk4qno0tmQ/NG/VI7bYJqQ1M681E
zYbEN9t6Iqw8Sux9y/91XZuRx45dyFlIwU9cPUpMPYxXOYhXM1JYN1HMHCpr
j1B1LdL0qdMPbNFNa3RN63GKKYut6U1qHKhsWXrYRG6uwZe1YHpq7+8G5OMF
ndrp2FvoOGfpOF7T3fBwQbukrOrXfVJC4N0jeuIcGu3N6llsKm/GDPNGLIaD
cfnC/u892KnDjNTOW1Q0F3UuLMrHlk4PTqfZLGZbHBWQMDc2ufXo08bpX/gd
3GfC9FPC7M7T1w8PP43O4SdLqxMLqkrqO+7Pbkyv4jEE0i7l5PmXz+dvXm3u
buCIuwTi5jll7/njgyfkrcfEjRdHu49O9s7JW8fE9TMy9t8pVsCAHGxQCJhj
IhDYY+Lm0f46hbBBBtzK/sbh3jKgTIAjcXvh+wkgRYC4wsj66cH2GWn7hIi9
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
1ygUpe6J1nHv1AE0WPSBeeozvewL5aw9Meimdv6xNuLIGHFojtg2yVg1SVnU
S1nQh6xpZ66ZFhDtKk4cS3esYQ+jGuZiyoYCCps7m4cvX9CaSb79/ebTH2eA
d6H+9fb72+1P6rfzZ5Tj57hnX4/OvxFIL9YpH9aevPn46tPnF++oq5jz/hFc
axMuNWPMzas+LmsuJnvNNriPWzdHwB6lF3dfK3EUlL/kXPzECr5vX4C3hG1Y
ZW9bZG5rhE7J+Qwq+A+wW5SJubU65e0G1VwEVF1YZWGlwD3XnZtEfUelbKv0
bTOdMgdNO6hcZVRO4yJqdww166ocPKxW39r8m0m5dCpZKh7vAB90go745Ix6
w8d8YFM+2dM+sLnA3GUfxIIT5IFTygMwfMY9/WEEctXMu1ZYNZ6ZO5CB25db
MoxTOpBV0k1YLUREM1zWIFZUN0raMF3aMlfGIl/SvEDBvlzZtVbZuVo9qM0g
ot84ctggrMc0vMchssc7ZSQcOgorW0LVLefXLSIbpsr6VhHtc0nVD1MbRhLK
FpKq5yMKZ+0T+xwTHvrmbvnlHnhl79umr0o4Vt1QivwXv/0dKW8uRX8+2QBJ
zUhxfYikYZqkYYqodhyrtN8dUTdWhQAezXAJa4hRYIVDfCsoslnbo1jeJF1U
I0JMLULPptjQukTNOEtINoSe1eLWXS12bhN5eW9+EVseAZCglL2sElhM2pmR
SfnmHWkxSZCWtJEkrwrzPQH6Wzx373ExMHCyMjGzszBw3LopwcnK+MvPPCws
pnpmjIy8rHxSghJKLNI+14Xs74jbSqn46+rEyusnCllnibqXiIJKZKxKJZ0q
lD0bLQI6vMOH3eNHTVPGbAPQIRm9xd0bXbOkmqHl/NrB/Lr+io6ploGN6s5d
ePVmdM6CM6AEwkZcUpe8cw8SsobiMh8gSudMQUls7Dr36BVFRMw5ObUYOfR4
xR25pMBsUmB+tWhJc5i8DULFJp8u9IEwuF0bVOIV1w6G90XAh+BFiw1d5/Cu
DXjfBPr+XH0fpbbiCBta+d9qTr0URLWHylzyBO2Z95RHYJiObtAsKtQLZeqW
omXhqmngp6uTZ2TebOdVoxGPCjYKGBoZfjbjSWuzr6SjVljfE4qkMyfeinlh
HXeg44mXjaeyxj+Xjp4z8Zu0MicFQpDYR49fUy/+phK/fcQ+xi7ghwY+bc/9
cdxPXs892EA/Olgi7l0sLDxawFys7b0+Jo+T9qcP8FPHhLlzMuaCsnZOXD7B
rVB2Fs8JmAvC2hFumUKYPz1YPDlcOSLOEwhbh4e7R+Q9Ci3jijs52D0h7T4i
4Y7xWPLuOmV3/XB7hbyFvdjbfoTbebKPPyNizmm9bVsUEkASwOlgT2iLgFYo
xOUz8urx/soFeedqnkkF8ER7+HtY2tvYgH3dYiG+mUgvSLl5NFzbN9vIv9wi
dNgmat0iBqcXj9eI29XM3tNBHernHhoWHBnDCfppKzrJi2aQNbvcXcDjmObs
AlrFBI41TBu1yhyJrV2KKRsOQw0NDK98T7i+//Pt17+Bs89//vnx44d3B/uH
Z6cnz18++Up9/oX65uwVYf/J5rNvB49evnv35Rvl8tUihtTYtoCumktK6XPz
rw9NGPFKHtED13HpZko6oPXjR80zFzwr92zySHaIfaucHYeCfVA2wLc1xdCH
ou6d0j79kt69WtHTdrl7zgVE+zy8bty8gGOLsGf7bf0i9bAZrfgZz9onppVv
RcIWYpOqqV1BtGU4QAyZevkGqcbPS4ROuUAAYow4QR6Csye9c2d8sme9YBMA
TwIRC9650+7Qh44ZDz2gEy4p9yMLVy39Gnk1Uxl4vO/ye3JJh3JIBjFLefAq
B4loRkjpx4roJEoZZ0iBcqUsEVJWSDmHcnmXKnmnCiXfBr3QbsPQPsPQTvPw
bofwTp/koeicsUzUbEHlLKJ2obBhAdWzmtu+kFA9llA3nNG4DW3ZikItOKY8
dEgY94Suu6Vv2CTOAiJNE1zLp5d0U9yDWRrMIefDIOYgqAAW002R0kuSM0qV
M0mX1E3kVQ69J+75L147KWuIQVC5Q2IvABMNtyIJ3SRhjWgR3Tg183wztwpt
00xWQdcb9PpMrPoc3Pos7DqKyq4GhqHKGh7M3Gq37sqw8arxC2nzCutrKBhL
CmlwcEiyskowsfCyMPMw0rOz3WW59/t1ASbOe7/d5WLgVlYw5uFVYOZW4BZU
Y5Dw/F3I/q6Uk4xqiKZ2nIxBoogtXMa3StCsUBqElnGpUvNqNvdv940c8U4Z
s4NOuYSW+qe1Q8qnKno3qvoWytoni5sfFDWONw9u13QTCppwycgNz8QHtiED
DrHjHplb4ZC+0IxhaPEcyBXBI2pBz6DKyWPEwqHDwGrAKeTILuHCKuvLoxot
YpwlBYIrWsMkHHuVfVoVHQs8I7oiUycC8iZiKx929S621w+XP1hJXsTcn177
K7CA8h+SPGJzgXvW6A++soLPdclYHv3w+wQDd5V/XmBEg51fsaVjvKltkq05
0tW4xNWzyCiu0Nm+JsXdhzrhQa2jo/Zcpz5wRUMh/5KNYQnF/W49r5fyhMd9
1KyEaFi0ymNXLGVZ6Z7SsPaCNub11d+Xx48Im7Mrq/0Tr3f3zjADxLnai/Wh
Lyfk18TLw6VD3MomGYs9wM8Q9+bI+4sUEi0venqwRiFuHO3Rdqa4IG2dkbeP
CZu0MvHBGm32Ea2vdef0YPfsaOfieA+wLSfkbcC/nJG2yLg1Mn6NuLN8uIUB
8HCC3zwlYE/2sRTc2jGO5oCODgBLtQXYqGPS6jFxlUKg8YSCX3lM2Vun7ZtD
szmW9lYgZxdbv1DveIRXRrlLUqlxSL6aB0zHp8oyYsg+AWMZt6MZua6RsKmL
IBpUnOhD9gwBqqRilMLHNWKmgNe9XR7RJhunFDljBMPqJEyrR/QZR7f55w54
JFd5ZdWtLJE+Xmm2j9Svf1Df/039QKV+ff7k6T7u4OunL4A8efPm6eUL0uOX
x09fHT97T/qenMWRzlY3z2o7louqFmPT+8w9y2xCWi1C2nV9msVtSlUDOw0T
x1XDetWjRqxy8I6FRL2kRbeSI4AkWnGzyhFjSkEPBJ1bjVJW3IrJzoUHdrk4
K9i2bvy8csgot3nJD7IJrO5dNt1UgwaqfvKOh0Pks44Maoc2teY6dVJtFGIs
C0pUglB0oiZjMpocMyecMye8cmb84VO+OVM+V+GbM+mTN+Wfv+gFn/HIHHdP
uR+DXrePHRIxgDELeTMIeXNIAbLEh1nMnUvJn181REQnTlA7Xkw/XdIUJmGZ
K2VTBGBEwa1GEXh2AltomiRyyCyyFxTRYxPV6Z8yHAUbyyqZK6hcyq9fLGpZ
rujfLOnDQFvmk+sepjduptVvhBUtuCaNOCROeGVjPKFr1nGjbhnz5iEd/PpJ
t8VcGeU8RdSDOWQ8hTUCOWSDmcS9mSW8BVQi5AxT5E3ShPRj2VVD+PSi5e3z
jINqHeM73ZL7QEF1avZFiuZ5qiCojg1cVCnoGrPeDQYtJnZjNg4jJmZNCQUX
VW1/dcNAOXWwhLytoASIT9xUTMJaUEyXR0CbjUeRiUPuDrPYb3d4fvmN7bef
bl//lenODda7P7Iw3OThYVMSkwOxcWlxCurc5LP/jc+CXsJFTDFQUTVSXCde
0Aom6YkSsETI25cqutcpejeY+rSCQ/vBACIgY8FpXQFp7ZHZ/bnVk1W9S3XD
mKrOOVTTRGXbcnHDZm7tbmrxmlfyuHVol1PcA9+8ndSCsXDIEKRgwsW3RFTa
9eZthbuMKhzcesysekyCVhwiDhyyAQJqkYI6yYLGacBfwMa0WSeoTswF6u7b
lRK57gNb9qro7Bnom60bKB1Yi94/WZ6epNL94ztJXrLQZaWumVSuKfRt54Sn
kujontHRDRu6emcOGqQ+sPJvsHZBW7ghHUEIX+0kV4sEnUCovg/JQdbtIMmQ
2qv1pY2FOipCHQcl2pqJuI4ypVFFEo9Ug2t0MptEs3p/coxksHeOKZ45uZoW
TXn1Ak84xEytbo8vPcViL1cmLpYG3uOx1Ccvv5GeP1rBP8LOvyPO7u7MEfFL
h7QqzBZlf+sIQMcubb+bU8LuOREPuJKri+snxK1j8u4xrRADwGTn/JBWRL6g
+RTA79DGF1D2MYe7y4e7S0BQcCvH+5sUPK3EQ9nFUPYwZDyGTFynHGApRFrx
6JiwQNqbAXhyuLN0Qd7DLMxUVNLGNla3NLZ0DuaUtcQXNNtEoTS8c6RskvnN
E7V9KgyCuiyiFoxjN8yScZa5h8YFFB3koVEaVjd9TTdpUSd23jB5yTYTa5Wz
Z5G5ZZq15Yom+1cf+ZSuuucMZ7fMIrumKwaXsFvk/ww++vb+69t3H5/TuuJf
fnz97NP3QQOPzo4olP3PX59/+ePd27dnAHne/0FtHZ7pG9soqpuFoGfAcV0K
FnkSFgVSVigp51o57zbj1Gl7+KZO4oxmzEO7fKIT8kA++L535blm7IywRydw
bgJZF/PpdSk8CKp96phPME1fU4uYUAi6rxM7y2vfJeRQyuJSYzdKlayiCprW
zyf7U9vFaP0AzfwvxtNs7Lzk/TrlolZtIPMBsVX2Wfeds8e84ZO+2YDHmfTJ
mfSCjQMSxQM6GVS45A2fdsq475AyFJm/Dk6bEDLN5RD1ZxAEs8v4sUiCmcTd
ueT9+JWDRTVjRDSShHUSRY2zZSyR0rbFAEYUXGvkXKs0QzqMIvot4votoges
InqsIzrcE/oB+5+FmsmvWERWz6OaltE9WFQvNrd9Gdo8mVi9klyxGFow7Z4+
4pI25Z+75p2z7pA045u9bBU/IKiX/DO/0z1pd1mTBF7FAAHVYAmdRB6FYHZp
Px75IDHdWGmzVGkTiJBJKodmFJ9pioxTrklQo0fafTDkoUtUj21Ej71PkaJp
8k02ox9ua97m1LvDonmXVUdQwg4chrJ0h1l7ZHtFloMjKyxdoVbumWGJje4x
ha4RBS7hBQ4heXb+2ebuyeZOMSCbKHPTAD09Zx11ZzkJcyZ6JWV1dwZmzbt3
VRj4bG4IgOjFbQUkPOTlgyS0ovit0/ndkMIgpIxduQK4VsmrwcCr0davzS1q
wCRlMKVgNAw6GAzpTSweLGqZrhtabx7cqOnBFDbP5ldhoNVrKUXL3mmjtmGd
Hskz4SX7BXVbkdmjibkTPlH1skpev9+Q+f2arLCoKTOrJjOXAauwNa+ij7Bm
FI9GjJB+upxDtrF5s25Io4g9xMq9KiR6zittzgsx2NozNt+zlFi1FDp9cbj3
pOmKJICdoVa0SHRThdoOtFGttXryTwGY3LleFQDTy11UiZ2zdm2zc64DeTU6
OxT66IY7GkVpekM9Ayjh7r2Rxj7EgYy/JqVp+mToR2pHqLJ+sWjiF7E4glHG
gGBIMUdkDWtghlJMODz/4fkr6vnTTyurq9vLq+TVlTfE7c+HG28PZp7j7n+k
7H178vjp/tkBBkvaWXx6sbi7ugDYk1OAFQA0cDunuK0zHP50b+98f/9in3C+
v3uOx/4vns4CKtV0bf+e853vOzFn5nxTu9Pu7u4OFBAUBAXF7sYAAQkBW7fd
3d0KBoKCWNi5t+7unj1zZvjjzPn+rkfWenGB6xWf33tdz3s/172/ITgSrZxs
8U+2BEdbC8dbHMk42Vo83V86OxI8OOSfHQpOD/in+8sne0sSROztcQ8Plvf3
FvcOOMfrEu+zfLC+fLAj0TwrRxLfdBHstri3wT7antvbYJ0drfJmZ0r/qIAl
knKKKjFxNN/YEnMYRQ9CMoAVmoWU20e0uCWMANI5gMx1IPnIu+ChR/6JDWPL
g7Rhm86xTVnwIK760LYhxE0v4rq3xLNT1l1xc1DqIpw0AsXW1I5vCk5frT58
fXL/ye/MEP/073dvPr96/fbJ79UjPz85f3N++uzp4xfv3r/96fPbTx/fvnn5
5O2zB5unj4W7J9mFdXk1I/HkjrCsHkB0ky60UMOnVAlUpexbo4VqcU6b9ys8
AlG3wdQtb+YOmL6lHz4cWHEuMThXPco1gnoleLFJnUeVn6FKTh2wi7ohg9fc
yy+7lOhi+pzo5wDqsjuNY1P2WY0oVrNliIexF9lH+VLiKXACnqrs36sfOQFI
7kNkDninDfpkD/mTRgNprFD6XAh9FkObQWezAnNmwdg+JHXGGzfkEdsNTOpD
E2bgqaPyDpRb6sgfFH0uq/pfU/G7rAS/ox0oo4WRN4lSME2SN8/QcCRreuSq
exVre5dqw4p0YCX6qArL4AbriFan8HbJ39wFU+sd1RKKH0hjjGfmT9JKJmkV
0zlVLEbTIrFpNrNqhFS3nNW0lFQ8hyFOBuCnMVS+P4kDTBoLZgrQFJYxtOia
Ucw/VWAqNnFXdQNv6QRq2GPV7VO0nNK0nbCazlnajngVl0wFhxQV5ywt7xzJ
0PSm6UMZ1v6lXpHNwQR2WFq1nXfW99Lu/7hqKqMOuanodl3eWdcmBOhP80Ay
HHxJ+q5pZsAsO1iOEzLHE8GwDqbaYmh2wXRbFNUORbb2IdpBcfbgNFRoHgqd
4+9PdXaJvSvt6OSScvma83ffWtxShl5VBv6gDJZT89XWlbAuUR5IuAulKAMZ
2pAiff8anYAaS/8qL1SjZ0SbbXxbDHkwhNgfgm8PJ7Yk5/UwG6ereldqB4Vl
nUtFzSuMBiGpgh9JmYcldMPTxkNzljNKlyOzRlPpM0mkPhcg7vI1i7/+XVlR
xenqdfPLN81vyLgp6CEVzCNuG0fdsUrWBmUbgFttQrsVACRL/3yf1DZY5mRo
xkRZJY9SMFDOeZE08lK4JjaXkkqW+pOblAav6eP/joodi9aZwamdl/62+v2f
5jy9Y6PL3NO54LApf782f/9m38iOgIBKtAceCsS7BDES3BvRocvagMak+BQx
C3qxYUdipYcRDYkkVdMCo5QjmbBFo+QZY0yNmluyaSCjlDa0Lvw4My5qrGjt
qWua7mh+IuIdLw+ebfXub3Y/2J84PVkW8jmsuSne6pzoaO1oae50jftwW3C6
wT9fXX60vv50a/P5ztbjjfVH6xuPNoRnwuUj4eLxyvzp+uyDzYVD4cyBYGpn
depgnXWyNX++x3t4zJeMB8dLD46Wjg55R0ecg/35vf2F/YOF7YOZI8Hq4erK
/jpvf5N/uCM43F463Js7FLF31qYPNln7G7NnR+u8hfE/YBKfiSMUVAIDCT5x
lXaoCtOAOvOgBrvEXtf0IQhh0Zcu8s7edMvadCZu21M2bGnbQILQKnHWOnnO
m7wJp+164oRg4iYy9zSw8AyQyQHjxlC00eSigZ3nFxWu78XiX75cGJd3X169
/enV+0/P3398cxHOKGHv8asn52/fvvnw84f3n9+++vDqxdnR0RqHNc5bZfE2
afc6SOUD0IQy28Bii6Aay5B2hzSWceSQUcyIfvSobToXnncEpIg8CKsOmVzH
DK5h5Khv/r5u2NA1QIVEmQRXP7ZLXwQzttyzhUYxE+r+XZedS+8Aa20TZ30q
nqKbnoFKTqwy9zSAHfmkSvEo9CKAok7qy0Cwrl/5zcT7jln80Iy6mJwxL8Zx
IGUUTZ0Mos+EMFkhORcwCabNYhiznqm9cOI0EDvkktANTh0EpvT7po0qODOu
q/j8KAe9pAi5pOR7SQ56U9Xvpqq/jE6YnEG8nEmqsj1R2zVX3T1H0Y2q5ElX
BeVpwIqNAqosQhotQ5vtw5ocgqu841oi8P2p1IlU2iC1aJpSziKUjlJrWdTG
xcx7Y+SGZWrzamo5NzRnJogyiaEvYCjL8Cy2T8Y0mrooQZyJX8HXqoF3LROu
6WPumkTKmCao26bpOuPVHTPV7dI0nTK0ARRNT7I29AIjql4UFbdsXVCOjleO
PijPyq8OGZYPCctVNwu4JOOkagw3cQrXtw0z9UjUd0tx9Mt3QBboAYjGQLIt
osAERFW3wRqgGcYopklgrllAgWlAnhWiwDGgwB7BcAASXMDZPn50L1+ysXEk
DM6UUYRdueEhLQe6qgj8QdHjrixIUyNA1TTmtmvqFY9MGReCmle+BrxYF1lj
iahyD6h3j2yxSmz1SW5EpXcHE3oCM1rDsuoIpQNl7UtNo9tlnbyCxpXcxhVG
vSi1hBuIG/VJGoRgBwNxw37JvUm5bGbdSlBcpbYO9G//UJG9a3P5ktaPl4x+
uGl5WxWiaBRyRy/0mmm0smualVevCWrglhfVKIgGTimFZPUg00aYjJn65rmg
pjHk1G73+KF44Ug8sSkeP69ufvj9tLgoY+i1Kkgg9VWdkQU+pcQvpDk1Yiop
eDAivNk/qjEkqi08pBkNr/SFlUKQhSl2GQB07w3vTn3L4IlEL/GY/0XZSdUt
8WR4OhjxT6uG/0GcmMSuevvkO1lkqhs2RGYOVbbukwunsOk1WelF+bTSTcHK
wlgPd6qNw6paW23dEw0t83oWWP1LnBkhf+n+0tiZcPbh+tzpyuwZn/NYuPJC
tP56R/RIKHi0xjsTSJ5nnfJnjpbG7q+MPVqfPFqdPxBMbyyNbQkmT0QLZ0fL
Z4fL5xf58xJlwtmTYGR3fn+Xvb07s703LTocP1pZ2xcs7wg5u+u/bxzenNvf
nt1fZ+1vTR5tSajCenAoWOZMlZWXXhSt4WgplEo95ygnTIUDptU+bNg0vMsy
fsCNMAMm8+BMkTdtyx6/YpGyZJXONyeuu2AXbFPmXLA8X/IWlLINxAs9cauw
nEMIaSWALvQjjEcwRmvGN/7ox/fuYrHk1y8/f/rw8fWHn169eff89fs37978
9OzJ59cvf73QK7+KXz5+8OTh0S+f3j3Y2emqqqhoGWzomShoGMQVDjiH5Cu6
EZSA+TqhHcaxo9rRY1ZYrhWW50hY8S95CKEdeGWuGyVOmyaxjOOnLRNZKv4d
sj6NlkmssLpnpnGTTjiedcqcTtigIrJNxrdRN3wYzNxD09l+Tb9aFojNY7iB
oDjxWJa46oa4+b/EQxZ1yWhDeKda8n0IYw2Dq0rMm/HPO0dR+9GUKQxtOpg+
jaGxgqiz6GyJ05mFZo3DCZNuqb3AtAE/3Lh7bKdf+pgaqPSOitf/3nX/Xs79
BwXPyzLuN1V8bij53NEKvKsVJmMQr+5A0XDNVXPLkXMhK3rS1cAFOshyE1SN
VWizdXirfWijI6YeEttxUYKVPYilDuVUz9Gr2IR7k7S6xfx2Aal2hlixQKjl
ZFQuRuZOhJBZoZT5YLrEbXE8kwYQRLYffsI1tv1bnRB5u/S7FnESLyPBiJYT
TtUOq2iRKmeRJG+HVXPGK7tnqwEpCsBsWQBBG0K3QJebIovVnEjXLXDO0KSg
1Bo3GP6akoeiAcLWK8XSK9XUK8POj2ntn2fkw9QG0bSBFF1wjgGEYQ4rUoAT
1BB0LQRd25ehDc03gheb+hWZ+TAdkIUeqEJoUDEUXeLsRYGiShXUAy7d9Lx5
1+OaPPBHecBtaQ8lWZi8ccgt5/hrrinSLjhliZmFlWr6l1kE1AMDm72i2izj
msBxDQH43jDqIIbUEYpvlZidotbF2oGNwkYes4FDq+fRqoW4Sn4UdQaS0OsS
2eQS2gCO64ynswsaN2MyOkxsQv/2N5UbNwyu/ah99YrO1asmt1Q8lIwxd00j
7phHyjumgTxadP2b/wWk2ATmwGJKvHFdwOxOXGZ1R01/BmvVZnaVyxWM/25z
mqWkRmZZN9fELDRTLHXrJymZXCDZkzAZEN2Xi2ggBrUiE1qQyRUxkeXxIS2o
wD5f/0aEDy1JghR0uUVAsZ0X1cc4+llDm7gLfHFnZ+AfT2p8f9RDS4Fn5f3G
Ib41GFSXs+ukdnClY2yXbUglNLEqmlxHL+s6f/yTYEU0OTrFmupbXRo42O7f
5LeszzWtzw1szkxuc9sPV0aOV0cPlseOVqbPtziPdyVChXO6xpYcHgkmTlbH
D4TD+6u9RxuDZ7t9x6LlvVW2hCQ7gqmDrbkHB7yzA97pEe/kYPFEokZE7K2t
ya2t6d2dyZ2dia3d4ftr20erwoP1JYnNOdjmHlysz8wfbLKP91jH2wtHW7Pn
R8IlCUx+7zWMpdfGUhtkDUNMoBWWAX324dPGESOWcaPuWWxXAhuYswph7HhQ
N2wylq2xPEsc3z55FpCxBKFsIxkHPtRdEGHDPVMIJgg8Emfiyg+DqGMhpM5h
/tn/rZOIf37/5uXrx19+ef/Tl7fPX54/efLi0cMXL5/+/NNn8ds3P716+fTJ
k/sf3zwV//r5/sFeS1klqaAxv6y9vHOWUDUGTanT9GFKQ4u0w7t0E8Z0Yqes
s5YtsAv2OKFf0QMfyo5LyrItnmuXybVNX1Tw77jqVSkNazaPm0IUHZnHTztK
nsfOawT13PCqvAooVwvqtcRysYUD8Baxa4dYEdi1lJck7la8UJ4DOmezNTZO
8VbwbvcMgWPqsD993I8wFETiIskDCPIgKnv8d4aMB5AmkVlTyKwJX8I0OHPc
LbHPK23UjzznEN4Ewg5rQSplVNy/k3a9Iu91RdH9mgLohjLomjxEViPojjJK
XidWx5Zk4JWn4cpUdKKqgPL0/CoMMeUmEpsT1mIb0WYTXG+DqgJES+zGYBRu
MJkyklvNy6vnUUonGbVzhW3r5NoFfNlkdvVCRtl8LH0ymDiCzp4IyJ6BZ03B
8TO+mZOQ9GHPhN7vNcNU3QnSVklXjWNU7dKVbNMUrVOVbFJVHLM0AWRdME3D
i6ECoKqCGCpAug4kzxCWL0GEolPWHRsiAJKCpfT4R9+7reYtrQHVsA7RsAzV
cU4086E5YirsQ6q0fXKVPUiqnhQVAEXdM1vRl6gGY2jDCtR8cnV8iwzgpYa+
pQbgfEtIvo1vgbkn2RnOdIZTvZC5MmrIr2+4yd72uKkCuaUKlVYEq8lDVIzC
ZTzTbgHxcq4EyRtqIIp00TVWgdWA4BaPiBaLmFZgbFMgcSicMRVKHAghtGHz
h5h1cyVtnPqB7XutK/l1AnLtMrGCH5s/C03pdMBUuYW1QWO6MYQJUvkKJq5O
3xz9l/9RvHZN7/Z1ozvXDW/cNFVQBaibhSqYR8rZJKo5pFv758oGl3wLwnuh
CiJC6qC4PgCtMxLL6K0ZCWniuU49erq89/l3mOxISS301alsiVmeEb+vx2rf
8++xxi1HpI3gPHPSQ+sgqZ3Q9JrYmJyksBpMxAQS04H2ofsgqwHgJFRwNjiw
y9KqE2WeKJ5OEVdJXSyeLNo0U5Bfq4G/BvbLh6zbRCxA/OqMoirV0HQVnxRQ
OiOxuJzZ0vzg/fvxWe40a57NnllbnzvaHd0Utq8sNghnm3lj7UtLTWvCzq2N
IdH6wPbm6NHu3PHe7ME2a3ttYnNtaFPYvyEa3NjqEW137x50H93veXS4eSia
3xJOilbGLwry95Ye7C8f7nCPdpeO9hZ2NtnbG9N7oqn9Lfbh/tT+/ujZ9taD
nbXT7dX/rL7u8o4PFiUYOdlnXxTT7sw/OlkTcP9TTp+a3xaQXnnLJEbBiW7o
12MTNW8TyzFPmHHGc10oXCBzDUjfcctes8kQWKTNGyez7ZPnbVIWAvKPvUjr
UNq2R+aqZ8YKmLjkTxV6Y4cxlKHMsuGOCeEf+4I//fbl329e/PbrH+Hz/372
5P7h8f3zs+fPnn788ln88cP7Fy8f7e6tfP7pIrbx+aPnixOswobhmpYJ4r3e
mtFdfMOaeXj9TU+GVeqkWTpHP5WtHj2mFTNikcIFErckKIPiRcD8PXjJqW06
745P049u5Qr+nfY4flDtM3e80A0v1AsdkfNtvQ2s+8Y677pHtU0KN6yIG9gg
1kl/6xkkMTgxF7f+JR6WE+YRgDMO59thpnyiW71TOpwyB70yBqJJAxc7+4j9
COIoOnsyiMoOpnH8SdMw0gwse8E3i+2VOuaRMuCdOeYa1QVMHlAEl99Ucvz+
ju1Vebcrih7XFD1kVSDSihBZdX9ZzUA53RgVc6ymY7aOV54KgKYCZuj5l5qG
1RijyyTKxD6m0zG82QpT5RnbhsocjCGNxJD7qJULpc3rxHvT5R0bzKYlZqMw
p3aBXLWYUTIdkT3kn9WNJvT7U8bR9Fm/rElv7BgoZdg0oPZb/WhZ67Rb5qlX
DaMUbNL0PGl6XjkyFkm3LVN1ADRdaL4akKoMpCm4ZysDKAb+9yxQVUa+eaqu
JAlMQDB8YFyVpz9DyQB9U9n7rp6folm4pn2ihhdeA0zQgjC1IQwNX6aWX4Eh
Is8QWaALo+ojfg9sAedqg4v04WWm8ApT+D0dMMMhpNzQi2TkmWnohjMHZd3Q
QHwlDVCVBV+R87ws76WmAjPUDlQzCZF2SZKF4m87pWt60bURpXqoMit0tTu6
0SWy2TKhzS2mCZU1HFMwH8eckXwcCTlD9Nq5snZBaZugtJVHr+JkFbNx9xYT
c9nojGFIchsoadAtsiUoc4RUJUQnNmmYov78V6Vv/qF6/coFT65e15dRcdO3
ClexjpM2iVO3ybgal34niHHXmQSAFEVGNQZmjACS22OIbTVt3JT2vej2d4LG
7VwpqQ0pqTgpqa3pddjIm2YH920pqY/KtlWx/W5ZXLegsggIITOpDxrbA4uv
SEikxCfmI6Pa/ILa0OA8T/Q9qD8WEpDphByAIJcCnQnNgSZiIUjcdUVc/7V4
1IiMsZKyKZfCfFEkv4CmFIATmvR9s2zR6Sg8kVLNLGxhHL9eXRRNzXLHWJxJ
9uLwsnBiZWOYv9LF43cscbp52z1Lm10C0eD63sj2EWvjcHr7hL17f050yNo8
nlzbHxbs9Au2e1Z2utZPurYedUmsyvH28vHORZ+diwWQnaX9be7J9kVh/EV7
C9HC7gbrSDR7f2/udGfuwf7U+e722c7G+cHm+cn6+cmGxNQ8OFl+dLx8IJo9
2V2Q2Jzzo5WlBYkyuYBJGK0Tltak4JxtCGu2DJm2ipgzimJbpcw5Z/Pd6HwA
cx3AELkQVhwylyQT1grLsU9mWyez4YxtL/KqX96hH3XLm8j3SmWhSHNOEbX+
KY3E8sGxpZ2LGEax+Msf8uTL599++fjbz+/evnv95uX7t28+v3n5+dXr90+e
Pnr34fGnz49++u3d01cvJybnB3uGmweFZa0zsYT6KFofIKFJwZt5F1rkRhOa
ps7qJEyqhA+rhw9aYxeg9C0E89iPvOdAFLiQVvUix+5AG1XQPTZpiyDmLrrq
sUXKvEXqgi5mUAPVq40Z1AoaMI4cB+CXDIrEqKp/24HzZqoKxG3av/c6+ZpD
d9WEFEpHPTCNF6KT2lCpLd4Zoz6kiej8ET/KqB9lEk2ZRtOmgmnsYOpcAIkN
J8xBs2ZAWRKbM+SRNARMH7GJaPVI6FMEVyhrOV6Rc7ym6HRLwfmOvIuMqruc
gqeCmp+CGkJZO1zVLEnTLkvNlaLsRFB2o+nCSvT9S/Xg5aaBtbaRbebBjWao
ao/ojmD8eDRxKJLUTy3l5DUIMgsmSlrWGE0CRv0as2qeJtEnJTMR9J5gYk9g
9mAwZRIjEflpY97YUXDqkElA1Xc6cXcd8DLW2MsGMZJHTQBVxytH2TlL2Y6o
48nUgxZqeDKUADR5L5oSmKkBzTWUKAooUx+SqwstNbIIVjcJltVCqhhgrEF4
UHC+R1CpPbpAC0BScsbdtMXedEpXgzJNg8vsIyssQkrVPXAGUIaJX6ExPN8I
WmAGLzdHVJr4lpghipwiK0xgdHMkzcyPZOtLuWWA+FHTR1MVfl0F/L28h5yM
l4a8j6pe4C3HuLuuWDlHnIoLQR1SpIkoMUWUO6OrXCOazZPbnCIaYPjhiNz5
6IKZqJzR5LwxWuV8fsNSXc9aRddqURufUsuj1iynlCwEZg3CEjpAyb2QxL5I
2gyldi0ma9AWkPn3/9X+299Vb1zRv3FF78olrdsy9mrGQcrGwXdMYg3tCP9M
TFVA3lO3KnCFFPkmlwbgumBhgyFpE/Q+fnLLKL37sKHpvnD06LGAzxmd7xx9
3I1jVWqYdn4jNQZ0zkgqd07vcoouxQQVJEf1hQT1o8LqwpOZaCzRLynPL7QS
A260heFcEMnuaBI4oAmN6EN5ZcejEH2Ffl/a3MRV34gnbvzWDbrimCAV/Ozv
KQ90kyp8Qibc0P2QmPa8Wk5OdVMmNWXzaGaCXT0918Ce71pYHBKsTPD5E0vL
o7y5HgGrdWZlYJ7fv7A2yN0YWRaNCbcn147ZotOFtcMp4f7Uyv4of7d/eWeA
vzsgPBhZOe3aFwl2tha3RHO7F2knF31wTi+CC1ZPLhJiV05Fy0dbnHMR52yH
c7Y9e7Yt8TLLJ1vckz3e0Q7391Jb3vG+RM9wD7cu7uYcbc2fH68vcSb/gAk0
vcUprkHHt8wuatoubsk0Yt4weto6neuRI3LPEbiSV92oa/a4VQfcsmQ4kpZd
CQK7NDaAuuqG5/jnbQUXbyMoXM+UXv+sIa+48gRye/eU6OTZxZLJ5/9Elvz0
4tHZ+fHem+dPxD9/+e3X33756dc3b96/ev3m9OHRi08PfhG/+yz+JNjeKSnv
yWM2l/cIanqFwZn16m7p1y3itJCVxpFd9vgFkxSWEXbWOHXegSTwZu75Fx6D
CEKHqHmjhBndiNE7kEYJTKxSF+DFJ5C8fUc8Xz9qXA3TrxLUqx0x4pyx5Mvc
R+TvexOX/14s1gpbrI6LFrfZi1u+ufA4c7AELydDeItK6p4tQeSfNRGR1huC
H4NTJpHFgwHUGX/aJIY2jaHPhjAWQ+g8VPY8krTgjZsEZkw4x/c7JfW5Jw1b
hja6xHTJg8rvypp8d8v8yl276/J2t2Xt5ZVc5ZRc1VTB8mpwBc0AJeMoJfMk
VTu8jC1Ozo2g7ZunCSvQ8b1njKq2CG4wDawxD6hzjWtHZY2EEIaiCIP4kgVm
5XIac4TZuMJsWMlrWi9oXCpsWKJWc5PzhyOy+0OpoyH0icCcGRhhzJ84i6Zy
XeP6ZGzJ+tBSTQ+aRJzcME1WcCCou9PUXMka7gxVd4aaJ1MekKPgkaPklafs
zVTwJKu4U3S9c0yhhRZBDSbWkd9dc/vqqr2xQwIytjIys9s/sdkt9J5bRK0x
LF/WPUMJgDfwy7MKKdX3o9x1SdRzTTOFUKxgebY+JeYwyaiwQNwzQRbr+uaZ
ogv04FSrIKYthmmNpCo6Rig5RRmbRd7RgH0n7XbluqvcTQ8FbX8Z67gbznEy
NklqEpiActSghQa+pY4Blc6RTWZJbVaoe57J3cFUViR9Opo2lZI/SS6bo1ay
qjpXarrW7rUtFzet0Bv5mcVzQbg+aGKTS0STd3JPWPYkvno9hc6GhpdeVXD/
5gf929fN7t4wvvKD3tVbFoo6fjL6ITJGMZp2JAV0hi6wWtmk3hxe6ZnB9CHV
+YT2YxKn0mv6MvrLwxvLYluXKaMfi6Y/1iy9iWDdFzvga7+RLjdVKUpGB5Hz
rDNrALim4MTauPDqKFRrREgrJrEcmpbuk5QWiCmLAw2awZKtfGMgATEYH3y4
Txk0sNkhJM8vEPlzZ6K41UicIiVehcwO5yvC6cbUfVnCup57n65ndwz1fl7j
S3IRp7Ru4s3ntwvzHVMTJdzJirXp9q2ZoT3W5P7IwP5wx+lA0wSrb3amZ2G6
h83uY7M6WdOds/M9vKVhPn98WTC4LBjir4ysrI4J14ZX1gb5q32iDc76Gmtz
Y2F7Z/Hkoqh148Hu2vH2yvne2v2d1fu7q492Vx7u8h9sLT7YmD/fWNgXTR1v
SRTI3OEu53B3/nCbt3/R2Gv2aJt7vMM52lw8P9y4qDP5fc3EKrbaKqrZMnLA
KZljm8wzjeZYxs/bZyyBcrddc9acsjddiesupA1X4qp7ziqEvg7OFbrgF72p
y3bJU3D6ckiRMJDGAiU0hlL60hg9HRObD/8vYODNp08SnHx58vLBztbBruj9
q2fiX38V//Lb29dvz88evnn99NVPT978/OLJp4cHzx6OLq5lF/cnZjZmlrFz
6ngB2BbJf9ct2wzHpGGPrAU73KIZlm1FXAYU7CArzwNrnyALju1T5nVQQwqY
bllk21VQtYJfO4Cyial56kpaVQ3slfNruwmuk7ge4/gZAE0U1fououmVc/aa
VIr4umuBeCD+oq+WxLeOmXYWYW2hTNekGS/8FDBrBIAbRaSzIkmLwTlj7tRW
P/IMkjyBpMxgKHMSkmBoXGT2AozI8U6bBmAnHGIH7KK6neP6zDH1EpjIActv
3TX89orRD7csrt22vH3HXFHBTkneUUXDQ1kZpKLpr6QTLGccoWiVIm2NlXci
akCZOvAKPb9yY1SVRXCLGabJOLDGMbwFmtQdkNYXmtGLK+HSalbiaUOMupWC
5s3Cnv2KjtV7Het5LfyMwumY3KGogpGInIkg+hScOBlMX4ou3kRkLZj6VbvH
DpjDK6StUq+bp0vbEhScyWqAAlWPPBVXhoILTc6VruiaqwrOVwMz5Z2y5ZwJ
Wh7Z+uA8U0SZvlHwX762/OqyjblLimdgESy8ApnUBIqq94xt9Epsd45tsA6u
0PWlaYPwqoA0edckCw+iBZBiCc4xATFNQPmmPkUmMIm0KNFDFulj8nX8aBbB
TMfocksUVdcr1RxJdXHF3dD0+/qm27UbLop3ILKqcGmbCBnHBFmrJBUbnKpn
jjKEYQArdEBWWIfW6ybU6EElCqfeJ3MEnTUcShxLok/ii6bJBVN5dXOlLQsF
Tdz8Zm5e80pGKQeV0QuJbfKObYUldvqn9ScVzCfnzYWl9agaYu4qeugbQNWV
nS9dM7l0xUxWy0dRP/SOUbSKFd4UkGjgVqZoXm+OaAIlV8GymoHR7WHYgaKG
nrzRKmh1Nm1WRL63UZi/ltnEc999JZY1bZP67w5P/3wKA8EsdMZWwTO6Q5Lq
MbFFmLCyyNjeqIQuWEIGODo6EMNMhky4hxbZQYJ9YJAgjwC0K8MraNwoqc/G
P2U+O0bc5ycu+bt47Jr4IKy9PDOCPuvbJEblslSBOYHkhdz28z72h/7h+/tb
z1ZY40sT9WusisOZltOp3tOhvv3ujr3WipNm5nhn12RnO7uvfa6va7K7ebSt
arqrZna0jcfq5rF6lti9gtmhDd74Ond0a35ikz22vDSwujwpWp2+SJneWj4S
8Y+310831x5sb57sCM42Vh5s8R6IuA8u2ggunG4sHGyPnexOHm5PH+1yj/YW
j3aWDrY4EowcbHCPt3lHoqXzw7Wl+Zk/YKITWmsS3euSOe+YvGgRx7FNXXLA
8x0Iy4BckQtV6EjadCLvupF3vWhbUMaaX8k2hC70ovNhuav2qUM+1JnQosVw
5gQ4rhxX2NczvfPgxf+PdBU/fvL8zYf3v7569/bxww/Pnv7686dff3r//vXL
R+dPjg4Pnrx68kX88e1vb9fPd3rmuQWNU1j6WBx+MiCrwzOiyjG43AxV5hI3
6EnguhAWgbk7Dtmr7rQNj4Jt78IDEHPHjSS0SF20jJ2VQbbKB3QoorqME2dg
905R5Q/Nk2YlGFFEdt7yrtcIHrDL4HnSRCH1L9A1L9RTdv5sXRKZUSKeRF80
m5Z4nEG0U2CeTuYDx7T5SFx1CP6eR3qfG46Poq1ictkIepsfecqPMoPMZiMo
c0HkRRhxFprJAqezPbCTronjNhFdlmGtdpGdRgGVdmEtdzxKFOVMf7xqcfWW
+dXbxrduGsrLW8nLW6gpOymquiqrAmXVEbIGQfImMTfME2WdMvV88nT8KnRg
JQbIGtPQJsvgZlNMs21wi0toIzihwz+1M4XJJpZx4qij1FohvWEjv/2wukVQ
3bt1r22dVDOLK5nBlk7GFs9G5k3BM4dQFE54vtCfyLELbvfNnHYNb1F1psi5
0RXc6apuTE2vfE3PQiVXhqJTjqJHnoJXrgo4Tw3MUHSlqLlk64Hp+gCKphtD
TRf29x+tLkkDDOzi9SwjtW3j7XyolhCyR0QNAj8UQp0EJnboAEmyNrHKrqmW
/tkWHjQTd4KRG8HAlWzsmWcBLjSEFmpDGdqIAjVYtgIkUw1GNA3MU/fIVHRM
NvKlgWB5P2r4/fcNB2lFH1VZ31syoNum4bcdYuWM41Vt0yUKSl3ioXyK7BHl
ZugqtbBSfUSpZWgDIKEDktwbgO2OIY9l5rEoxdPEvMGc0lF6+RizZiG/bZ1c
w4vIGoEnd0YypoLwo76JneHUmaRibhRl3MwDa+IUHYCm2TkE37hu/c23OndU
fRUNQ+WMY5Vtsgy8wvW8qdK2BZbeTYiIziBsFyiy0j+5jlTYn8Foj6X1EfJG
GypYDQWDlLpF9elX4ssXQWpTEHIZsS2UWA+JqgqJ6/ONKHeNxwFTGGEpXYmx
A2gMHYaKx2AKcQHskOhqF1CIFwSJBEVDnbNdfKvNIiWfcoGPOfBdcZCYbSh+
Yv5mwEr16tdSUv8jJWUlJSVlHoCiNVTNClfmuGvsad4Wd3uPN78137m/WH9f
0Hg437E92iboqON1lC61EKfbhmbbOnldnavDA9y+jrn2hrnuesFwx+ZU/8ZE
7+ZU7zZr8HBx6nCBtcOaWR8bn59uF3IH9zYu8pH213m7a4v7q/wT0apkHG+s
7q1x99eW9tdnDzdnj/9oLbrXe7IzfrQ3dnTAPt6TYGTpYHv5eIt3IFo62bnY
yPNQApT5uT8qYI2i+8wSB72oG5YJ8xbxC644gQdlw4G0aE9atkzjmqXybTM3
XbP33bLXgJQVEIPvReP45i4Fl28DcMNI5nTcvXnsvemA5NLGPs7pi/90+fz8
7svr12/Ozh+/ffte/OH1lzevxJ/eiT++e/X88UvJk8+ePX3y9PNFh8/Pokdb
A0tzpT3jCcz+wPRRVMycvg9TwSnDGFFhhmkE4ueg9BVXAs+dtgrK3QXmbQPy
99yp6xbp8zpRk9qho1qhUxqh/cYJ03a4JS/GNjh/zwbHU0C0/69jkcSUmSaw
nAkrXjlbEq3iTl63wG1IIfcQ2pcejjLFHcYXK+p9uo0JYLO4cQ3iW+u02QRS
NZ7ZFMAYdSHzQRRBIH0mhjrgQ2MhqFNwyhSSxIETZn3wbED8uEvcuGPMqESW
mAW3mATWW4Q0S4BghWm47px/66buVz9of3dJ5/ur2lcua8pLGyhJG2qpOCrJ
2sgruUkred/S9LupG3zNKPKWLVbTm6ICLlLzzteDVxiga0yCmiRnbR7SYB/W
4hHVDIltjaFPSK65EfhBcqWQWrNOb9ovrVuublu/17GRU8sl1bAJNYsplZz4
Ug4cPwLPmIYT2LD0acfwzjAyD5LUb+JTrOiSq+KWq+zKUPXIVXFnKrnkKznn
KAHylCR+x6tIIk5UPRm6wFxjcK6mK0nOhqikAfnXNYc7ar5mTkma5iEKBgEa
tglK1rF67kQDKNMGVeoWXg+NbwJH1tij8y2hWabuJGMXko5jlpEz2cIrzxSU
p+WZo+aZLQ/OvumRcc01WdozxSCAIe+WouaSauWfC0KXXdZA/eWOm7I6Qlna
+8pt4FXdwBvGoXf1I1WMk5Rd8GoghhGkwAp2T9//nnxwgSm60jq0wT22xTO2
Ax7fFZ09ml08l1vFS6N24Jk9hKKBnKqZ8o7tguaNlHxORNZYFG0sJGsIGNWC
SO2Ly+emFS2Cg8uRkRWUvEEkiixz1/Fv/9S6Ke2paBylbJWma0uW84lShGVd
d8IZg+th6O7QyDb3AJpbbCG2dDkxc6WQdJSXMV98byj7XlNCzZzjtFj8jVSv
1J+mUBW12VOEzO7Y8LroyEZgaIl9NMEjmRaa2JYUOxiELEYgceFhZSmxE+GI
Ug/PZE8UwQ9dCIPk+sCyHYOYzuFdjm55DB+oWNyaoiH1+5e7lFTVXy/iIXX+
OD56xF7iVTRVE862eN2VJStTrRucul1h/Ra/bXWhY3m2kzvVwWPX70xxN6am
D+ZnT5dm9zgTwrFO3lirkNWxxelbZXcIJjrXWH2i2fHN2fGlsaHZ/p6l4QbR
bN/B6vT9DYnwWD7kLx6t8e9vCPbXlveEy9v8OdHKws4aa3d95mhr/mCDd7Lb
cbTTf7w3ebA7dbDDOtziXmQdbC4dSl67uXKwvvxQwpeF2T9gYpY5qRc35JYj
Mk1gW6TOOxEEHrQVe8KiRfqcUQLLMJZrk7HjTNp1zFpxxnEdsthedI5f0Upo
/a57Zh+SNpxez83pWEzLbZlbOfj3/2mSNy9ffHr9+tXLVz//+7dPzx9/eP70
p9fPPzx/9OrswZtnj35+/+Hz5ze//CaRJa9m1lhN4yN5neyUXJZfwpyl98ht
xzQ5R6JddLe+X71D/JgvddMdz7dK5UAK9ryLDkFFh670TYOkOfngfhm/7huQ
VsO4CYesZVjJsX/FuRtlQyGg63uPsu9dSmFFxx7kDXjRCfLeRRGaUeLsnTCu
FPC5OExKPGQrbrgprlV7MZDhZAOHkLjWGSuueDaGOZNYPB1cMOTF6PWkjaBo
0/Gked+cKV/aDCJ7FkGcg2fNQLCzngnTrvFjthED9pHDJkFtJkEtFiFNEphY
YuqvOObeva73zb80v/le89t/qf7wg7LMdU2Fu3qaShZycmbyCs435Z1vK0Nu
aKO/0w27YR6vBCCogAolCkEPUaXvX6fnX2MYUGcV3OYU1QaIawEltERcpMLO
BGZ0ZZZxCVUCUoOosHqxqm29qns7t3GRXL9AauKlV8/FFM2jKNM+2El4BhuZ
NQtMHk0oWIenTlkiym47U+Xc6YpOEkRLSJKr4pKn7FmkBsxXBuSpehVIfrUW
KEcPStfyoijb4GXM0368Zfrf3+vdVAbbAtKsAMkGjgkG7qkmAOIPGoh/KiC/
Vws0BjMiqVOEMn4EYdATU2DilmPgTNV2IBk6080ATG3PfC1Ajio4V9WXdhec
JQ0iyvsQrWOq9KBUE1iBR2iTu3/Bd3rorxVAsqoBcte9r9/wuqGHuaYbeEcn
QtkoUckBJ+9B0QflWvqWGqKK5EPyLTFVtuH1rjFt7lFNPjFdEcRBciG3sI5P
KhjMLhykFA7n17Cre3dKO/fwJbxo0nRIZmdIVr9nVA04pjWCysqsXkcktEdl
dNyr50VFlskrufz1HzrXb3soGEYoGydpWeGUXHDyENpXLjgZOMMjuCwovBiA
yHKJKAqkzKETp2JixvIKV5gtK9QmVkzJgGvvtvjPUn3/utGa3FhRsFBAGMwK
r4yMqPSNrvSKrESElSREtcdFdKIDan38C/wiKgKx9QhYo493Pjqo0h9T44XK
BYdgwYEkOHrC0bIrNbDaQU9Gwo0//Vev1J8v7jZ//Xfx11Lib/+yLSWl+I//
/VdbZzaZ7FdfShlqbJjpaViaqdsWNO8KOzf5vSL+2I5wbn+NfbgqOFjh3N/k
nB0s74lYAm4nb7F+dbVtbbVtabGRM1+/ONe+wu9f5gzMzvSMDXUv91Ssj3Xt
L4yfCznna0vnq0tHAu7RKn9nhbe3sry9whGtsXbWWSIRa3OLvb7JPd5rPN7v
PtgeOdwbP9yZu1gz2eIfbvD31/iHm+sH6ysPdneXF9h/wMSWOqMd3eVIFRgl
TlljOZILugtp3jpz0iJj1jBh3jRRYJ915Eo6c8relhDGCjcPKxbAykWoul2z
lD5n4lBMNY/es06uGJ4THv0HJb/8++d373/59PnT+w8XKuXFk88vn356cf7u
8enbs5Of374Sf/nw65dXL18ciMXvRKeC9pnRkq6p9NJ5TNqKsfOwjm+BgjsV
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
0fHfI/NHoIQfKFb8NgYCRg2B6VxgpxTYoT7uMK+gk8LxofoQmIwql2GQ/vei
EhcQaPO3378nYEHHIBCF9ZKwiRoPFMqlYCvEoruajhya2hxaCvyaMGEtS2Fl
e25pNKekPq80VEIiTAjso6ASKiLrKSBjd1cEqWHqp4BwF9VzZoOQOaQ8L/M4
XxdxucJN+IndAHQVLizFgyeb0dOIcbnIIKYY2fcqjSnY2GO5ts/cPig4ut+7
ub64Ob+6Pbe/s7B+vLyxvzG9tzFxsDV6tNe3v912sNO1vzV4sD5+f3Xm4ebM
werMyfbczERvbl72RasLWr9B2JBh5BgqchwePm4cPo2iz2EiVkyj1gmMHcek
A4+UPe/kFSfGiGNYr6Vvhyc9Lr20bWLl6Ht7T+CvLx+ePT8FgLd/f3357PnB
m3ePXr46f/Xyxee3756ePv749OOXLxe9QB+/urj6t/rgvKBlMjSvwyI0H+5R
DvMYUCHOyNiMQN37YSFj8KAZRNCyfvg0IpIltdZMmRv69CV5z35h2zYBqyZ+
fC0PrkbIvFaC2G4avepZ+ALHWFFxboNgOwQd++4QaxTcalC+fcbRu1oxK1oB
jRqUak6rVZDpa079nL96KEA96MJEouJPZkYBnBSjE7OrSjuwDZ3wju21imiw
SJuxiJuxi5m0iVs3ZW5i45atGEOW4T3WtE5jvz5Dnw49t2ZNjzpd7yYD31Yt
rzo191p5Yr6CTbYcPhmCihXXDgVrBUprh6oYMPiMw4VQEXyGwUJwf7BREMSE
rmQaJY9mQM3ilZCRfBDnW7x4Dn6z2/eMbt+BSUtYcmq7cEIpEkbBqrZJsuZJ
UrhYVZs8Q88GLfsKuGMtxqsd69WCdq8nBLXZhXfj/Fvto5qCc8YT6tYT61cT
qxaSK5biSmdjCqfCskaCMsedGD3EqD7HxEn7uAnTyE5sRDc6albTp1XFo5o1
f2WnEgW7bGVyrjqlSN46U46QqkBIg9rna9rkK1umqNpk6DuWaljEKeOZUPN4
fYtkdWyMPIqhiGRKo5ni8Cgh/Wg+7XAB1SAR1UBBBTcOYbvb7JbX2aTucEHv
cetyC+lwC+mJiSM1tRxw+EADY18MPgRjEQFDBynqeXJJWFznRd3mNuGUpUA0
A+S1giRVPcDSDjxgM3Ye1C0e1B0+1G1x7F3JC/N8Qe1gSVS8BDJDBl0qa5Ws
SS5Sdy1UIGWqkHN0vIpwEU2OyX1u2f3+6X3hxcMJ5cOMkq6QrLqowprs6mqv
VsCz5qV11iY+lsVvuw2COixjhqyjO6zoTS6xXcEpI25hzYIyDnd5zAQliMpq
AWBMqhAmlR+dz2tSeRNeJkDs0w49ErDuF8E3qlhVGFinWtjRmKExheG+fWWx
3Z2lQD4MKLMFOryBVmugWgtIYQOybgApP11sVVnfqw7yQUDNJaBbCxh0Brp8
a6e9klO9Mbqut24RQD9qgi7LgQRhP6iQL2n5qvsWK3lmYcKrQD//t3Dtv88P
lyi+NM+gGC+fREtCGDUoB4Gl2DgEERwjcU5RWCcqnGijY4XXJNhrEPysDcNM
db0otkxrvJ+tlR8SSfALiXJw8pNTxSlDnfCWaVhUsoVFFs6UAYNRdbRDzR3B
NKZRcikqs1wpqQhMjbjGTOHp7MNvHyacHNc+eDhzvLm5u3iyv3C6t7y/u7i9
vzZ3uDFzwMKTna6D7Z6Dne7Drb79jbHnR2vvzw7ODlYe7C3PTHaVlhWyFrgh
fQwZNYVhzmFiZw3pM4ahcyZRSzjGqlXslh1jyzFxyydlwyNx1pHe4UhrMveq
TcrJbxtZPvxvQy0WmLx98mTvosPbuwenDzdevzt9+fLs1ZvzD2/ePz07//zu
7+/X/b5unS6wfvUvboTn9VASm7SckpVJuTC/OQ3KljxpTjNgBkGf1KdNGQQu
6oTNwiIWjGJWUMxNnZAZOddBYdsWYasGYZtGdqNiiEOrrv+kOWOdELutRGpV
sK7nJjfLeY+IWtaY+C7gaNvaIavi9E6RkPJbdoVc5rM3pGsbktqAZsLFv7jq
N6Dzxh3KkLZ/Cy58Fuc3buXb7R7fT0wYRNG7LZhTtnHr1nE7OOYKljmBi+43
D+01D+qBUfu0vVqhLg1Ql0Yt90Ydr1Y1lxoopULDqUzaMkcEFSugGyKkESiu
ESwBpUlpBIONI0WMIoXhIQL6wWDDcEnjaAlMlDgyQgOfCcUl8Cv4sIvaCEKI
N+4Z37ijBxE149F05FRyEEdSNW2TZAhxouhoJascHacKJZtCTYdytFsLxrsR
5dGED2i3COpAezbbhNV7pQ7HlC/HVizHls3Fs6J0jlk0GZEzEpY54RLTbR/Z
RWYO2zAGceED5owBDHNKL7hHJ6AFHtCu6VEDdSqGkgu0XQuVWKoKHy9vlqBi
laVASJXAJElhU5RtCuQxMRBktCw2QRmfLI2OkUHHKJglKpilKJtnKhNylcyy
WQMoLl3NOFHVMEpOK0ZcHs4moPWfq6L/vix6k0OFX1Cbg1Pl378LgUUQegbu
FjbRBGsGyowJ1Q+CKLgIShPZZYiCciQBiD2fhBVEjiQia80hYHyTw4BDBMMv
YckubcMh5cClHigCT4QYFyhiy/kckqTdc2RdCiHkTAWnXH2PUouQVrfEQd+4
gYD47ujcsaSyydji4cDsxvCi9qT6ptCGZ+F1Rx6Z4y5J3XbhjeYBJQ4htcSg
GhK10SW4mxo/5xO3JKKR9IdI6HXJWB71WkGUD7deOIdBKBs8+ldFbzbdSDX7
bE5lkh7GPdDNpzHJf7/IC2h3A/I1gFIFIFf2ewL/KlB2GUj9fh0jHQTUCwN5
8kC5EdBkAbSQgRbXhSLf7HB3RxTMXFgQxK0BYkf9hzf8ikg3SLgPdCsGdAUD
ugEFiRL/Y5AtbNnJo5NNCqq0pvpJUxS0s3TqqzIO9zdePf7r9RnwZO/5l5dv
xrrr35ycPtt7/nL/2/P9t2eHG3sHXftH/XtHW/u7n44WFlanJ892t3YWpjZW
xyfHm58831pcGIuJjC8r7Nhe+2tj7u39jb825u9P9UyMdm30TeEmF1x7RpCd
wwr9o4pFVXz5JWJ9oxbrG8zDw+rTw8ndtc2dxZPji7bD+/vL23tri4eb8web
Ywdb/Yc7PXtbnUfb/fubw4dLI6cbM2tzPfNj7e2t5fnfbRuRcasmSZuo2FU9
+oxB9LxxzIpJ7KZ18q5V3AYhYsolcdknacaV0W0fVK6GDrDyK+jpGd2//793
+QDg04c3X94/Bb69efps/9Xb0/Pnh2fnB38DH959eHV0eNFMiEVg1g+3uqaa
T94/DS+ogpFiNOyZ/NhAEcscVbcpfe/7mr5H6Ohdq4xN0/hleMg8PHLRPPUY
EbWm5jci5zLIa17Db9WCCF2XowzJOnYjg5epdZ+8it/I2Lfc0UkTxRQLBw/e
w2ar2jVTCwHXIgCfdigbWHnFsxRk0/47tgMhTwLaGECJFFDAC/RjJ3x/+JH2
Xps2bBvQ7BLQS6T1EcL6zCJaTSPbCDGz5jFbFjGrLFQxjR4yofehgntNAvp1
fHrV3dpVKA2K5Hp5Uo2qc626Y6WMZb46uRqCS+fTDuNWC+BWCeCV9+SEuHKK
u7Cre0sYRSmYJUsgY8DwYDHDKDFEFNggTMsqU4OQqW6SKAOjgRWd2YUwNzjg
bNwwLnVHMR1neZNQBTOGNDpa2DhKgZAFd6uTwKSqWhfqU2oM3ZuQXk3Gvg0Y
/1aUTwcusMQ+qt0vazIsbyYqf5YFI4mFM4mFs5F5Y8GpPa6MNtvQevOwdqvo
AcuYUXz0iGXaCiZ6XI/apulep+5WCWVxEpsMGctEOXyirHmilFm8tHkyBJsC
NowGG8YKm6ZKmMbKmCZJ4+IkTZiy+EQV63Q12xwFq2wV2yIlm3wp0zRRRBwE
GQ81z4RZ5umZFxha+mpgfAQVzK5zqv54RfK3P6Qv/wn544r0jz8J/XZZQkAI
pQ/3dHXPjGC0hke2eboXqhnT+KStb/Ia3OCDC0jgRWXwHHywK7dV2cFIAYiF
kLKTgLK3kFa4vEmePK5cGpnPRaoVdaiVcWyE2BUrWhQaOpSSAlqo9G5//4bo
qO70rMmc0vnk/Omg5HZqWkdC9Uh603Fs2UJm1WpU5rBbYKW5Y4YZKY0S0GDv
22Tn1+2XvBVY8ByMqgZJxoB4Y0FcOWzCkB/vgn+6ynHn7j0YFJIdbnvQHP5X
nx8w6QF0mAANKkAxL5B1Fci4BKT+G8i8cpH6KPwOI4WXgEqOr5WqD2rsp8tT
u8t6yMRENaNoGctyYZdOYcc2TlS8qLYHSMrld0Gfn3+j3LzD4JDJkrGsISZN
YehtvMasd8eBQEogkOKPv1gJCIfckrX6TV8drhkfHtKbkNiVnVZVWVEwMVj7
dG/1ZG7pn+On/+zfB463gPuLwKNl4HwfeP/meznG1t+flr98Xv0H2P4KbD94
MgwA71e3RgKCfYvzqt4/uzgdefvk7dMHm59er756vP34id3MNKyhha+i7nJH
x93OXnBdjWh9tebsrM/yUtbaQuf85NT6zMHh8sPD1cOjzc3DzeW9lbm99dHD
nf6jvV4WM9nf6D3cHjvbmbu/Nrq3Pt5aW5AeG9bZ1syailHEAoKxapq4ywoD
+pJW4BhLZVilrNNb3gXkbnskTgSkjRf3HKw+AkZWXiw8Bl69ePfP93YUn/8C
njx58fjs5O3zs69/PXv99uTz38/evX94eLzy/O35+08fDk4enj1+Or39MLe2
wtge7xYThaKEQu0YmuQMRZc8OccqNa8lDa8DNZ8tWPg6In5GN2pKkzou7zmi
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
kzrqn9jqxWiPzJuKyJ92iqjGkGJMHcIiGEntFQXHgzkfB4KAJhRQJwo0374o
/GDhRgknkHkdyOcAysWASmmgRgtowQK9bkA/7aTYpyLY1pdkS7B2gxEj4B7F
SN8SaAWALgPwqV/c8j6F1H3xqf3kWQe4lgOmzD10WL9xaIOub6WkVZ6oeY4G
OYcY3u5UU8Osr0zLjigsode0pswslL57UXN2knD8KGtmr35lvW9/o219Lr28
yoXkomFoKPeLGhgEVgLxuYLE8kFSVT/od9whLvxpMykasAahToq59YMtukVx
YzouC9ZRc3bJyynp/skZcWX1ldVtraPzK8fnH3bO/sJY0w2R9MKC+0fHwNLC
l4PDk0cPJ1f30oaXgkbL1MuSRYqS7zaW3RtoFmupEqgtEhvuhR/seD8/z335
unNrtWNyoGuyb3Bjfunp3tHOyszGwsTGYv/ees/BTtfuVtfx9uiLk5Wd+ZGV
8a7xrpr4CM8ERlBvR+0FmFCnCXEbxKxTXOKGim+HvHuTWeJ4YNV2YPGME6MK
ZR/iH5U5Mr3y+su3J89enL/98PntOxY5+fb3t0/vP394//rNq1fPXz598/bF
s/OTJ09PvgD/vPnn886D853H745eXnTvW3gFMMuG1S0jDChpek45quRcTY82
eNCMhvekqu+Usu+4KnVaL2xBkz6rQR+HJcygY3b1Qufl3IfAxBYeszpO0yoZ
lyFT5gELT3SDlg1DV7GxB2reo3f0crkRpXpew+ii957N731ypp2YPdLktpv2
h9eJD3hhCQl+RsC4JtByBcjhBQaiI1BWCNcOjrgPVJ9CUnArNmISFrNhyFi1
iOx1pNXbh7YQYi7KbAih7Q60Glt6FyZyRD1kRMG/B+7bpu5RB3Wq1HAqN/Ss
swhoNnGp1MEn3BWy4BCx5hC1FZJ3FNfwFFVzAys5cys7Csk5Sqi6S2n7Sqq5
iEBdxHU9hLU8wRpufCouolr+sjCaDDxYUteXXdrmhhD6jiiGQ5TAAbERgrpB
jEJEDMJ49UKkcel6bg1Qh3JtSgPMoxHm3qTv2WjIYib+rXrUFqx7gQWt0Tdp
KCx/Ia5kIaF8IbNmvrBhNaF4ML5iPDitixhSZU1rosSOkWPmrIOnDKP7sBEj
GPqgUWC/gUcb1KlByjxTGJEojk2UJaTJWaeI42JEjBmi6CRRbJoQJkXSKFUI
mQhGxQlhmKLYCzARJ6RKW6SJmLDwhCmCSpEmpEPwGYLIi79SsUgWdm2XprSK
kcrAZtl3tMOvQFwvC1hfFSTcFUDf4tC7dVv1zp/ity8J89wQleSRl2aHyKgg
fPyZdnb+qpp4frDmj7/yXbkqefW6wtUbStx8cDEpO3FlZwmdEHlUgpJFroxZ
Ibs6CWxElSNmKnvUiTm2CJF7lMPWTLPfqtO24eGbpmELRMZ8ZOF2avUGI380
IGEgL8qyMIHUX+g7X+J+Xu0E9LkBXVZAFxrIFQYqxIC8u0A06KJ2kaV8075n
P4YMgQkMsOILrCe/6slsS8/084hHWCVdU/D7UTbqB6XEm+gqsNOQrNeENm3O
iLao3f3FpumdZ84xM2cjJX8tImPbN+WhY+orXPS+YfCAAa0GTq3T8W7Sc6nF
eFaRE3tj0jurivqr4srK0nPLauuGx9serTdtjsatrmTNLrQvT4zvTXXODMen
ZtrgCTBVaSN2qOivAhK/CmJ+EXMHibn9rBPMZZXLZ1cnbNmq6jqE8R8w9Wg1
ssvDEjM9AmpDYntryuqqS7tbGoYb24Y7+ubmtx9NLNw3d4gjOuRXVz59cAqc
HgN/vQeePVmfnM1o7ad1FeoXM2VzmYJlGfxVOSJ5SfwpCYI1lVrzi+5Pnmd9
eN+1t9O9ODO4Nbe4v7q5v7CyuTi2Pj+yutCxudq0u9lxtN//YH/8xdHq4er4
4er0+lRXaqx/IpPWVFfKAhNsxLxV0io+dtkoasokfs4sYdo2dZSSMeia1OLK
KHYOjC+rbd0/efD5768PHp48efzo4iYf8Pc//3x6+/rZ8+cvzp8/enr+6PXr
5w8f3X/0/OwL8O0jALz9esFbXgDAyRsgd+gAG1Ash42DuVZpOJXpuNYZBYzo
Bsxr+y1rBk9r0ca0wsb1GGs6EStakbMGiaM6gQvK3sMQSq8ouV3MvkvOdUgv
dJWQeKLkNqrsMW5AW8XG7Cq5jlzWSGFHFiNDVs3LX1vlnJKSZxxjBhQduq/b
7/5uvahs6PS1CQlU/wsov/SxyaUtq9QYG2dEG5RPWQgKaCWH9uCjJ43j5s3i
Ju3og46RXbbhHVaMYbO4MWzMED68xzakxSa0HRHULR/Ub+TfpONWpuZUCnMp
MfOtt/evM3HM1kCF84pagqWshaVtxJXJEmpOgkoOvNJWXHKWwtIkYWWSlKab
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
SQjqLm4QqIhLEsckyBPylFjMxK5EkViiRi7TcK6GOlehXbNNPUodqC3+jKHQ
mOGImKGkxNHM7IWyqq2imq3cqs34/CV6zkpw9qpn+iIpZtQ+YtQmrN88bNA4
vA8RMYSJX9aPnlT265Owbxa1rRe2a5BxbJcmtcqw4qLBWbcFIRVvlYezLkLb
lcMdWvQcWdDdqUBu1PVqhXtXwpxzdUlpCPdiJLUT6tUjYNMNNgxTxCXok3KQ
Thnq5uEQuKeooY8whipunsyHTbtjVnQNV3WPNCzqs/YbYQRkOKKOjuVTCAD9
JAUC/cDCD34QiCJ7tcNL41ODMzAfDEw6Ai1wYBAJdKkDBfxAgdDFAW7e9wsv
pSCg7jLQIQwMGwMbUQdt8R25WTGBmZ5uRWT/JteECY/ibc+mo+yM0fzCxeSi
9eDkOb+MzYDSR275R0b0ceuUddvUVbhPtyyh2DZkKizrgVfYprB0AojD/Loi
9bo87bZyCAtPuLTjb2vE6fgNcWFyf1eP/1M/lRdfJmRZwmeSy3pFltSGDm7T
cGxQc+/QipxDpa16pG4ymUtRzAl8YDU6vN3QvVHPthnpPYli7unTF5TdxtTJ
FUbebfLoeJgZMzC0qLVpaGVjt7yqoK2ncnqqbW9t5Ghj4vxw5e2z3Tfnh/cf
7D7fHvv4aPn16fLZ2uiL7bnPD3c/Hm2/3lp9uDy5Nz640tu2NzMBvPm/EvQv
f/Xl51skZ8m1D6oOL4pV9f2SXAPqXhEp6RNPqlJpHgq4/2Lw4dO59a3/h6iv
AI4ia6PtVdwh7u7u7q7E3d114u5G3N0TkkCMuLvruGfiECD4suz2m7D/e6/q
1tTtmztdk5nu0+d8Ore0NjEx3Y/bH0HsjGLhk0eEWQx8GLrdi4a9enO6fEKc
PyauEFCLePgaHr6O2V1Fbq1D19dx+3PgZ8LF2SIS1nlEGvl4sf/mEDnxsr+x
tCwvJTohwvnJfaAgO3R9bZL8YUKejVtGNLrF1vsn1/XOI6CH71EnZ6ev377/
8uXy/fuvnz9+/nT59uLNx49nf/118fe/7z5+wZ+eoD5dfrhCyK+fkET00eXZ
f/8X9hzMaphVd0qVt0tT9qmXdGhSdH6hGLcuEzqvl7anFL+lmLKj/QyrlYXS
Ttgxy0RYZ8CeJqzJ+QyxmNZTGNZy+4zIJ21YpRPsUmFPI+eUg2dkQveEA6B8
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
8uLK9PjYgty0ipLMvIK03ILUmspn7e313T1d6Nnao7We891Xn1FTP0grX/Gz
4OEG+OXgH+La2fboyc4U+IEA/vPmPW4DvjSOWd7EYCvGxqLqW1VqOqiLW4C2
SWCFeLN3C4CUAPEVtwdXrE4+PSddTBCOFoikra39WcTaHGZ3hYjcxMPWEFsr
sM3FQ+zu+2PCayKKCN9GbC5BN2cR22R+skJCbx5j9zH709i9yb+/Id6+mVuc
rl6e6/j8Hj/5srf6Wd54bycWNhkbYRfkazY62kkGjYis2uZXS7j3//7/+iR/
/fP168cff3//dvn2r8/vvn/+cPHu+O3FwbsPxx8/kj59Jb69PL38/jcZQC7+
BmFn7+b28cMbB5H5g+oOhXTyQbx6iQZhLzVCB6S8BswSoMa5F0/zX5sUnpsU
v1VIQqimIhTitlRj13mcXnDbdjCZ1rJbtsj6TxpmonTTkRJRKzohOzpR83JB
z9mc6p5Y9jCajUm6zZjGzjxNH9fO29AsOtbJOdZM3FYNGJLzeq7g2yvtVHpH
o4LKqDs8ognsdr4iw7XAl+fmTpBKvfQDq7hFx8DygPQBy4J1udhR6wQ00zqH
6L6JwGtDalCQ4rMI95abfEW1auQL49g5VedleYt9bo8e9kG/J6c8fKCmHBgu
/F3yerYGIOMpaFAtoJLi5dylrlRCb+KpgA+xAd2LwWzHQec7omI3mVUY2Uy5
qE3u08reo5a9RyX3hFqBkk6egk6RllGBhlGJkl6Ghl6Gml6Sil6Ugk6MhlaQ
jl6Eno6Lkl6Jll2Dlc+ARciUht+UWsCGQyVY1CSTTz9TzKxM1rVR1qVNxrle
2q1Bxq1G1qNGxrNX0btXO3TIImnUKWPQJaMrqKgnoaavoHuivHe69MVEWn1/
UsVgevVkYsVM5LORiJjBsOg+96he++gxk5gxo9Qlw9RVxdg5yZAREZ8XEt4d
8t5NMp7Vav7VukG12iFlSoHPNcN6dKJ61KI6dKMajeKazOPaDGO7FUNeykBm
JaJ2RWNQEnFo+RioTPCSVPCCpFc7pfYzQCD0d/6Qm9wBf9DY32d05uR1c7JJ
KYkpIPR3gktV4Eo4OKZ+Ze6o+PXK4UL+jVoBsP4mWE8FPpcEB8mixh5ciQCJ
DeBI5lS0daKJoZyABOVjXn5OGUCh8q5JH7X7JrXnEYXnW1qfdzTeB4/s1x7b
TVLbDfB7j2nFXAWCBuSvBWW88kyoTy/AZVQS4yrgoYVb4RW70c1415JNjbA+
86wNtzJMaNOJXcq6Yfgrk8hXQfkrdvGDdLIhV95hSgOA3ppKLJBVOf62cKBO
aB+3UQGVegalTi69wTMuiype22YmnSIG9QI6+3wak3wupxqJkJdKEa9soocy
clfrGzGFjYiy3pOavo/FPV9iGi8tc1CyYbOSwUva/sPK3t3SLvVa/jXuya1t
I9tI/MXG4vrL9sa+ruqO7ormzqK65ry6psKuruqB/p7JnqKepuyW4viu6vTB
1vzhloKlgWbs1ujO5Iul0XbkxsT3y7MfH86Pr+wqiO9X7tOj1wcjna0O5TW8
ZbW3X0492T0T7ph6kNl4u7Jbam4vBnvaA8MM7CHH0LhlGGwetjJNgG8fYfcP
EDt42M4xFn2GJZ5g8CQE+gAFP0DukZA7JPQuAbGO2p/b3xw9J26tzT4/O158
/3oJBusjIKfAv1+3VBRbG2n7Opn3tZcOv6xuqUubHLuymVR09OHffvx/Euzz
14/fvlwdXpyTLo4Ovn56D4Lffvz4+OnjxbtL0odL0snnk+O3r/8zBi2j30QV
1pkGJNjF1pj41irZVUtYV6j5dtjmLplnrMsFzBomwozz35nknmunEo0KzqVi
diQj10WCp8mDzb6V6UqNtkn4DhokrD/Nxqgm7IgGTIp7LQv49NI4PHtkXcji
OCjlv6ods2mZs2aaPW9eRDAqutBKxmiGDst4VIq45Ei6l//hPU1jVqJvFnDU
3wBWKIGND8EWiokqO9nQAr2GI7PIkVCf5+ERG6a5UOGSKpOuWgAE6MDfJT/I
UoP0/1W3+u3rdbY2N5nIAVG3JYrILFaYyV0QoAIBAVDc8101eQM7+Jh50fQP
BRNZkRRBXh9AW0Dvi7cuaHPjOR1gCmSBrQ5gNOAMABISukAVk6AePZc+FbMu
LYs2DYsGLaMqNcMVM6FhlKVhkKS7ghEhSmo+CgpuCgo2aioWMtowcSrziBhw
ipnS8xg/4TPnVg4UN8rk084QMStTdGxQcG2XdqqTcKqRdq2WcKvSdu7Wcntu
HtzvEDdin9jvmNbr86w/sGIgpX0i6+Vizou11MbFlNqNgjZcTgM+qQwelzEQ
nvjSK/aVY/SIWdyCacaefjpcLWlfLHxaNHRUMmxYLrhX2qdDJahdP7RTy7/J
0qfKLLDKJLTZOKzFKLTJEtJoB2m3hfRp+I+LB+1xQ845Y74zhV/Qe+3y+c3L
Re8/tfASkTXnIX96FfnacEdcSxQ4lwuuJYCjzuCwKfhS9cpeWn4HLPv1ijE2
/go2/6wg9PIuuGYO7saBS2ULNTlJXoFSAqoAcP+nIYUWAMSBRzaAaDLAHgmo
JNN6tMvn7kkVYnlSYDwRWzzBi4KeM/zuE5wOvbxOvbJhMzY5W0GlO5CihZCc
4aT8wYzyycSycUj+SHjRWFjFqkXsoJBFpU7k1NOUHe+aM5dy3NPUScXQRvuC
EbeqUU2nKuChNoOE/zVmizu8zgwKEHrZEE2f5oeyYZSK8fQ6WRRqadRaOexG
Zcz6hVxahTTWhfTGeYymhQKuTbLerbpebX6xrword/IaoM86cM/aDtMqCeHV
JM9SokHapmLMql7YkFbEsHJAu7JvlWloVXnHwsHR13//+vevs7MPb4lHZ/sY
4to+bnYPNru1Pry5ND4329XTUV5alFRUkNhQndVQmVtdktZYl9PWVNTbUz82
1rewMDE1OzuzNL+5DcOcfPx2sjn6Mr+6xKquWrGijrW6nbp/hmtoViYh/0lh
rerIQiqSOEw4WsXiN/DYdRhsFbM7R0StHCB3yTyEiICREBg8FIba3kHv7GF2
9snrZJA5QG3gkcuovWnY9tg/l4fbi/2o/REs4tUBYfLt+f7nt/joUF8WynsU
t37RVuTLzwh+NVg/PHiVm3Py/go6Lj9/+/j1x9fPn759/fThzenFycHl69O3
J4TLi6Nvf7179+7o9Jx0cn54/o6EPiUgT45wb/+FHf3I75jTdI5lVXJgVPIX
syhU8X5pGD6tEzFumrZkmQvTS4PbFL3TST9SioJxuZEp3zaXzzS37xSLUx+l
eQOLQwuHfZOIX59u3IJuyhZZ9Yj5jIn4jgsFbvEGjzF6VVG5VvEEDMlAVnWS
tu0K9vXTt4wziXrxBI3gRY2wdqXgQkH3dFbHDCDoh0RQa02IPDimDTazgzXi
ly+CsnOS9Yuei+UOPc2djIzcifPFWadOCfcFS55Zk8Hh8V+AfJUvQ54z8OaP
//BEDGkmbTsu4wQFSo0YwAf/K6EXTL6urf+bs4N8gB2vInstB1vQ3Qn+m+Cf
kqASIP1ITDuIZVwDAH+9Bj4CbCRygC/sipYcYnaM3JY0XMZMnMZ0LLrUzOr0
LEoMrEr0zDIMDBK09IJ0dAJ09PyMtJwMVEwPqeXYONV4xQx4xIwZeAyo+S3Y
ZbyENOK5dZIETUoUHBvlXZukHOvEnaqlXKvF3GqsbGqNnRtt/DpdIL3O0QMu
8S+9yWInfzKmeiWtZTOjDZ5at5dRjyjqPMtvPMkoIniUTrlnjbuQaUzCmF3M
iEvSokPi7NPYcd2oQe2YYZ2YIfXIYZWQfvWAQV3/CU33QU3PSe3AZZWwDbnQ
TdnQTbXgJf3AaUOfCQPPUTm7EWH7CQmXGSGrZgnDZGuPlNjsRli558fBRHAj
HZxxBQfFwM77V3BR+zPitAoAm8jzB1epuBNW4IQLuBYGrqd/qXOcSzSNt9Hk
ouUG/uQB7msBN40Bei+AwReg8wA4IwHVUkC9HJAqAZQraaSD6DUjmc1iqcwj
6KwjhN1z9SEv7OIXTILmFJ0nxBxHpHzGdBMWHAu3A8q2Q6v20ooHk0pG0msn
0hunkqpnfbOGjENa5JwbtQPHDGJXvcoOvSrIYDIt4V1qldsd2D0VkDL6gN9B
27nkiaDjNXrzxwIuLEoQVdeKu+I+VMqRrLpp96UhN0VDqFVT2XQKeQ1K6M1K
aAzzKXVzmY0KxeyrpGzLDDwagrImUyv34io2k8u30hqJ2d2vw2uPzFM2NGMX
Vdxfqnn3KXp3SHtWavmWJZeMrq+fvid++HB0+vYITSRswbDz2MPNtx9x396R
3h2iCAc7hIM9LGJtd2diY214cqLjRU9Fd3tVV09DU0NFSmqkh497WGRYZV1V
88ueZ7UdHWXJaRCb6lLHijK1+LgHUYlAfMafJQ1cNW0qpS3m3f3xG9BXeMIu
GruHgG6ioDskzAwONo+FLWH21/CwbdweFLcPxezsorZ2UbsbqJ111N4KFj5/
gF4+O9h4dwb9doHDIZaI6Nml+dat9S7Y7uj++oS5gebDa8AtAKC6CyhLs1ZX
ZUyMXDGTb/+An7/9ODs5//v7X+fnxx8uTr9evvlwcfb+NenNIfb4FPvmzTHx
hLCH3t5B7aFI+0d//3P+NzgPu/RMahQzgEjbJSq5Fyh5V/MYlhhGLlom76uG
jOskLdgWos0LD42zjjRScYoxUE6PacW4PeGAWQ73V49NGx+bVDHZ1suED2kl
zBln7RikbKvELiiGL/F79NE5T1I7dDJ5dYhHjuum7ZhkYwyzthWjZySDp1SC
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
bt48fMY7cyexhmgV+lLZrMAN0lf3CjsFBRsGSXQiNn9Sqdyg0fiDRl3DLlXG
KFpAP5xdI+Q6jx2lhL+E+TMuzSQm6XABnSo+wwou1Rxe1UzRp4VCdpX8/s3S
0X3OmfP+BYuBxfNh1Zspz5H5XQdZTUe+WZsGkGlDyLhT5pZx+JCOX4N5QG1k
QtvKPP6vd/+8OzhErs/BtyfgOxP7a2Po9QnixuK7sz0ymGChE4fQ6YP9SeLe
+Fv8Jvj96A1x6zVhHbM/87Kjoq4sKy0p3MZC085OP9WncG8KfYE/OYLuvsYt
XR4uHSCHpoYaLs5QZHbw4f0HDApJwsEPSZt45OwBbuqQ2HuA78MhR7DwCSxs
DgdbPUBtH+P2j7E7R7gNDHQOtjmG2ps+xK4d41cPcWv7G/NE5DZ0fWp+qm9j
aRC+M7OxPDTxqmVjbgAPXSSfIT8rMj05qq/nKjfn4vL0r78+v744wWIR4F9f
v75/+/3j+0/v3ry9OP7w6fL7VdW3K8/v6ferFOCD92Db1sfkps2nwd0iVtXS
Xm268eMSfl1sNm2qMXsygRtPs3Au1efGGbvaqWu6qTvSwWsqodP8Hr0s1l0M
Zq0Mpq38ri9lQmaNs3aN83bIe+RjRlXi5kWDRpismpit2lls2xUjZrSjt21S
Dqzi8Vq+K/IBc7KQVemoVcmAURnXFhXf57xubRwB4zTOAxyOUwxO/3yrpQGb
xMBKdrBaG1uTHhua6xXf7542Z5c+6VwxEJk/mhH4OtwWFI4a/w18QgYBnjWn
W7u6FOd2PJ9N+Y4FeZYlxSJTIKpgoDD4i4PKfxxDHOQDJJUkhBvExIcBflkB
kI28qAdyCD6I4KEqp32tTj5kesMpwpCv8mQSyGP7n43FWyKaCZR3ypR3KFS0
KlSwzpc2yxTWiGCR9KTmN3/EbPCYVesBg+pjGkUqOiUKejkqWoUn1PKU1NLM
LKqsnBpMPDrUnFqUXNoMwraCGgFs8sHcmrFiJvmilsXCFuVkfiLlWkdWOqLu
L6T8BtUCe7WC+4wh3RZhbXZRLb6pbXGlr5Iqp1KbFhKaVjM6CckvziJaSOH1
RJ9MjGvqpkPqolPOgm3ugl7KmHzckGzSnHDwALdTo6BFtpZDZCwkdqgsEd+f
fDyeD/bTgu1PrtRK+f+lH2TxWHcPrKMEW7nBARlw3ASccQMHQ3AtUctVwZnR
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
ggaTLLF60S/u/MSE30Dgxslj+tqAP5JdgUuq/5rPS5ab21PN3mb3ugleGVcF
QHngiYIOTa0OSwkg4MYIGl35gED6m1QB6sD+bcOA2/9wsYGiQOKfgAmrB9hp
APoA/sBdVXs7+TMBu2xx6yIx20IJ63w5+yJF52JNl2J1pwIVy2z5p+nSmlFi
qmF80n4sfPY0HFZULFa01HL09OoMzBq0bNpM3Lq03NqsYlZCGv6CehF8enES
pjkS1iWS1qViVhUitpWCdhVahrUaVo1Gzs/N/AYsQgb0PLu0vduNwzscEwYD
s8ZiK2ayG5cr2tbLWjfLGtYqmtbDSjajC2eSCnori2teVWUiGoJ/dDiBXfpg
Hc9VebGqB2Dx72AWABb8CpZfA+v/+NbvBQ7Yg6/cwGEf8IU3odSpKdQsyM5K
XsuGWy/+sUHNn5ZjgCMB8PwB+IFAMMjkuM8VeAoINwNM2QBnCiCacEMi7J6Q
zwN+m7vcRg/4LB6L2t0Wcr0u6vunFAQQDvppE8sF5AsB6VJAMAvgTbstkntX
KPNP7uh7oom3xWNuiEN+EQv9RSYGUI4B1KJuiZc9Ua5g1a1i0S+g181jNCpk
tWkRcB5kNu/nNR0TMxqW0OuRM2zRsWmzD+/zSBwNK+mPr51Pq1tOq17MqdtI
r9pIKN1OacKmPT+ObMKbJozqQPrs0qbiGqFOCa/0AprdomoKW3dqelC1L5EG
tinXH0vfeCIJ/M4upOakax8vYwx5zGd6n92Mgs/+AZv1I1brx9IhTBoRj8Q8
7tGa0HK6Uqol3TDNv/G0iEY1X8qoStKyUMy9RDu41T9zMbXlKLHj0r1i1Tl3
Lv3FeWYXKbR4Sc+rUNoyNDSn8uXMJAy5ht2d/kDaOtwaeo2ZO7gq/z6FRqyi
4esI6BJ6b52E2T0joo5wKAx0e2ygZ3t59hAFPSNhiGgoYmcJj9i+PDs/f9uN
RjXjUC37u9XQrXIMtA2zNby7PIPdQ6C38ZjNYyL08BRLOkTv4NEzV4k5mNED
zPwhZu2YsENePEBtkFDbV2CCmCKgZgio8QPsLAmzRKYcBNguZm97d2UOvbV9
iEGdEQhHOOTe+vT+1vw5aQcDnT4mbJ7gyH/aWZweram96jX84cfp608k3AHs
8sP5l78+fv/26etf775+uvIXv7n83DU07+CXyi/vxSEdwKcaJyifIuXeKOnY
ogFZ0ouH6aSi1FMRMtGr4jGbCnFI5TiMUSZOLX6Jz71J0q9LLXJCKnCCQS9b
yKHF9RnSOGbZOh3h9IykDlmW9B5VjFqVCZ+mtm56+LSSzq5TJmzWquDIvuS1
ZTVBIXqZ32dQImRQLvg5v+8LertBKp0OLpMKKZtMdtfiJ4FL93yhSr7Nz1Od
wS7jK+djMzvYHVwWEuGZOaqSPWJTuOAcseAav2FRNGVS0OkSMRniADWIbKD7
LkDGBK6PbI+6hS0TXtmpH9KmJf5HReTPpZ/eb+W4mcH+09bKRgYTCiMV2noJ
3jhAwpD3J4d5AlL+wmPifAsvRltwLUBG7MLKFawOALvlpoNv6WmzS8Ro2Yze
U8oXsSoQsMrjM83jNUrnN06XsMhVtC/TdalUs89XNsmS1IuV1IgUkgti5XOl
ZLW9z+xAR6PAxKhLx6jBwEpWOnq0PLrMoqbcip6S+hAR/Sgx4wxxyzwJyxJR
izIR6wpB60oli0I1uxp1ry6doAmt0GUpj1EpjxH1oBGrmOHg7IG88q722qbp
xtLVupSNssDdugSwWRdstwG77MEWc7BJB2xSAqs4wOL7YMkfP/u8/AHWPQZf
SIMjtuB4IDjpUts8X1zS7Q6pVbAqY9arZTJoYnnazmLSweE0Ru86d89z46Y/
8m7w0ePQU/qwU/pQkozXtm7C4TXpcoAtBuCOvC+V+FgKcpPf65GYzw0e52sC
bg+lAu9LhtyVjXygGnNfIeaaXC4gmX5doeCGfDkgkg0I5VyTzP5NKPYab8gD
0fCHEqE3hLyviQTeko+9p5R4XTbmhnzrA6VqWvUiZp0MJp0Mev18ZosWHpcx
eouXgg4vpFyeS9uVSVs+k3OsUPNvV4NMWEd3eqaOhhaspFRCc6rh6XUw8iSs
bNWnYDmyBeVbteFRtuycM+ubOe+RMuMWPR6Q2uKX2OkSVlfasfbULvG3+yKU
nBp36RRElJzVrSKE1LxvsRs+4ragFrJ/wm1HzWX9K6cTo3oEl3akgJSvnFqi
oFXZXdsyQCePRatS375bz6dL2rtSyDZfzanRNWnN8RnKtWzHIG48sAQZVoJy
T5hVc69UdsnNbJ+aQRAQeOzG7BhqZmjxeRN6YQi5NXdM2MVB5w6Qi0TECmp7
Eb45g99aPoJunSJ3CDubuK118o3/7gh7gNjE7K4eo7aOkTt43DIOvULEzBwR
Jw5QL4iIvjPs5CFuEbG1jNzeR+9iDhB4EgZNQm/jELNE+AQOOXeAWj7Gbx9h
YSTkPhG5fYDcJGFWcMhZPHIMjxzHIsZx8HkcbBMPg+L3YCcY7Gs8kXyGQyz2
zeHhCQFJZk2ovZm99aG1+T7E5vQZAbWxtFj2s9XFxx+np5+wKMLam49EAmmf
dIw4P8F/ujy+iqj/5/viyl50YqmGcbiKQbyq4TNVvSJJ5xo9/0HrBKQWBCoW
sC4RtS4avS6bDFfOONF99tay5FwtaZHfq0kysEUmqJ/NvpHTKJffqti7BG2d
tuWcgzFPgSqGLqlHbagmrQkFjtw3r6aybWL37hUOnDTKwjiWvzWpwinn7Qkn
LvBAWnkCq4SD+/m9l5iMhzh0c4RNE2kdym5FYoHgc1HP9oNXcWAHHdhNpuKs
m8mQMvfG6PA2h+Jmk6qXunlzxsk7ZnlLRgVD9rGbXq5YnbBi9k/UZExw3y1i
TNANsl/skgRN5dG3wSvHrhLIq/EoUxJIFyXDyFXEmiBAZSjAXEsh5gaoUSmQ
D69CTQCAm9H30WIYxSs5URfA4slVIEoyAHhSawpXBNK8UZBbAMIixKzyxexL
xRyKeEzz+J5miprlqFgV6jhWGNkUaZpmKeukSKvHCsqFs/F7U7A4PWLwYKXR
YmHUo6PVY2DSoefSpubWohHQZ5W1FdMJFtQKE9FLkTDLk7GskLColrRtELZu
lnauEHdr5/eZEQhDM4ad/e5+9Ivz8R3vE9H4N9YFBzkNGwOdvfDOjLNGp2/V
qmC97v+qFBb/fCWPsl+vjCEVPyUM+asbug4+pzorYe2PFU1wFvUx5ZA0LhCx
bqV13QO8/wX8QSAUvBkMUvtfsoVh2UN26YJWKIMWmIOHJfy79P1LTf1SjT2G
zUNmrnEGAcz+N/nirouk/ime9Ytk7h8yxYBQGiCc8rtc9g25pGvSEbckQm5K
+rGJelMIOlNKhD1STPlNKuUXhZzflfMB8ZTfFJJ+Fw+/KRnyWCaaWj7ukVTC
XYmkh5Kpv6gVX1NOpNaKYjOK4DaOo9fLZDBpZHQeYnQZYHWr53fLEHANE/eO
lQqukYga443cswkf88neSKom5LYc51ZjMmrg6Q2woMKF0MbtyDakbd6kc/6s
d8Gqd9pMdOZOaPxGZG6rZ1S1Q0Bh9xTWM6TkzwdilGw691hUZQwg2i45nKp+
N1ie3uKxvsltd5fdhprTGRB0eaAR+kja8y6VMSOrB71u/g3bxmsmzRKmfRaO
g9quHSLuZfLupS4xY+nt77PGwaShf1wLkBEVpzFl5z6p2+pODSIm6ZDiwe6Z
rbUt2O7YzIftHezE+OnGFnJ9E7a7d4Kax+9NoFeGCVvjp9Dl18itU9j28d4O
YX3lcHvzAg19g9xCLIyf7C3+e4F4i1nYX7s4QL0mQJFE5Cputx+x1XqCGzrE
Th6gNwloJB6BwcHRGPg+Brp2gJg/xM7iEIsHmI1jHOIIDSchkATY3iF6+4Sw
cYCdJ+EmDvGTB9gp4lW63xYeisDtoI+QxHeks2PMCWobjYOhD/HYQ+LeAXoJ
uTe2szpEhC+fERBr87N19VVkxPj0+ezy4+uL06PLk7M3+LNT/PnnT+Dbb1e1
oDc/gkXTFyaZM0LeL/m8yDRjU8Jrgzt2TiplTTZ1RSJqUhoyqhI1rRW3qpuw
Ypm2Y5S0bpK4ZRS/oxy0wG39gvlpK6dlB9XTAWGPGY2IfeNEtGE0VDtsQzds
VytkyzgSqeq/z2c9yaDzkt9qTCty0yIVbRaPki1bNY9acLeZsbIfkvdu5QnN
Y/XOYnZoYTJ/QaubL++eIWufKW+enx2WB/a6XVXkI4+xSPOI54K5H+Uy4Y6F
Q56ZXU4JQ26Jo+aRFd4pvXGRMC/nTfnMIuCCiYwJthsj9/yDnWy+5fGA6nKr
vD+piBRoL8UyQwXU05+L/vTmPJAQ8LUHll0AAqCopQ9eBZ/88ZYL4Aw25zmX
URy+Zpn3p/6grPiRg9iytkoqrRnkjm0Zm0mzum4hlWsDp3O9rEuDkl2plHmG
oFUau3MOk3c5nX8bg0cHg1UDh04Zp0ImmziEmtvtIbsrMwsDIysXAxM7C4sA
H48sJ7cGK58ZnZgni042m1nrI4vn181fXncY+sV+ACAPj5mbtqk3TeOZTcO0
zVyjXc0HI/Q/FKqCFZxgE+WVe6Xmp8Wj4ueoAsDGn60q8/9DDwawUf9zZ/JO
z4uOzp3gErxi1MUdh4+A5V+AxT+AA3jdC3zsBTIGnfOGksTDYGJhqxLBixKB
MxL+CxKByxIBW6LeawIu09z2g/xuw4Le46IBozzB/RoeW+r+67fFiwAmCMAR
/lA87ZZQzC2BiHsScdcFILdFYx9Lpt4XjXskHEsnHEMlGHmTL/6RWAqFRNJj
ocQnQvFUQnHUQvGUgnEP+OMeCMXcF4y7LRL1QDzukUTMA8mo++IQSrEIGqkE
Cvmsu4o5D1QrKPVrGC0a2KybuK2beKwb+a07pRxfynsMa/lN6AfPaQVMGUUN
B1VgwxqOgioPEnre5Q18Se98G1mLzH2Oz+nAJdZuGfnV2cV0OSUNOudM+VSs
eqbD/TLgdjGTbTPf3SCdwB1hALj+hJpHVU3XytrZzMSRn1uBhU5egNdIhNuZ
g86cXliTlkf9CZ/2YzEzCkU7OhVvVs0wNv1YMa8Gcd8ODudObutW2YAx22f7
kM63ua8+pfSD3lVnPtWHwQ0ku9x1rfB2fotE35wXTYvIoS3kCgYNO4CtbI7A
d8dJ26/e7A3jEGtY2DJydw69v4CDk7UMeSxiyVQBsXCIXcXC5qGbE0TUytnB
7ilx54SwSYAu4fcXcbvLmL1FzN4aDrqKh62SUGsE+DwJOXuEJo9FEmqBCFsj
7K9hd1YPEFcxLiTU6hF69YiwfkzYOMSuH+E2SehNsmA5QG0RkBt4xAoWvkBm
Msi98fOTrWPCEhY6i9qdxMKWjpGbB9D1q0zAXbIcWyMTm5Mj9NL8dHn5VXvQ
1xdHb94dnh6RPn98//88xZ/+BrcOfzSOYfxLRk3jB5SD+iS9B5QCFrRDdiST
F2QTl+Si50VDx2UjpjQSlvWTd3RStuQCJ0S9BpWDZ0xSoRoRy0wmTTR61QIO
XWK+KzJhy1qxe1eF5ZPhJrFQ1eBFWfdpOf9VUbdpPpshTodRtfAt03SccdKe
ot+cZPSSYeyqdfCCodcor2MbhU0eo2OWqGsht3k5q10/jd2YiFuvjonv2WAR
2Kp4dZu8kJhLNjD2LpSJ3zXOWLZKaHOKb7NLHHZKm7BJ6nRK7w2J2fZwW9VM
KqNBK/7sM/8r0MkkYJAdbIFjSbT9T+Ywf5KWY23mAxpvtMsC/1lTo4FfKS2Z
gOdAB0AB3v6TvIK8DfBbqbKNyUo/E/SKp3+arqTWY6ZVoWwSQG8R9siinNW0
SdGiiM+0nd+0mc+0gvdpIb9pPr9FnoBtrpBjnrBdhqR1vLxZnLJRpJpepLxy
KKeoLwOvP5uCI52o7QMWs7t0NvfpHe/QOjxi86ARCqWUCX4k4/1I2YtW159O
y+eagOkvHAb3xfzC3a3KkiKWO4o/jReAAwFgiwZYxw7WUly1har86YIpvwM2
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
2z0/ZMUpHQoWSSBoQFS5I8lvcYcXOgUFweTLKeXb5cEZHXeI2TwmslYtOKdh
mTSIXfjvP5/g0Ttv21g255c//+e//Tt4/OWvvXMYp8hSQV0vmHOGTUybY2qv
dcyAVeyIS+aaawHOtfjQq/zMtejEJG/PshBnU0Q0ytyBxyxC9FCPWjBK3LTJ
xdnkYDUiFyCYKAaMuZQcBDZeelfSdVP2tOJRiqGLskET0gHjsgGTssFTMqGT
sJhV7UyM42u6Y/mhSfa2WvikcmC3anA/LGZGMaBXwqWezbz+lUO3YMCYQmif
fmi/gm+fmPfMC+2U8bdV4Kw7+P4JOCgODgk+d9vWiBm0zJ2xSRpzixj0TxwK
zp/1zJ30zpnwr1q3L19zLN6MLMMjk2bdI4cSEyg/nutqMr0Nv5vz/IeeBJgg
PVvAo+Iv+RzJy+3PKx0hKR8JcEpw5RmbgQl2YIIFiLT4qxdbBuwHAU2O51Gq
Jm3cVsUPDaJ59bKVDFrktBrF9cvFrIpknAoU7bI0zMMtjDyU7RFy1qHSDsni
zoUidlVCpvUCJu+ETLo4jfp/Mhr8wXT4nu3QA+eu+2ZFgKI/wGth9EjEWEgh
ykp/pjr473sF4FEhSI4B0bdTbgfNwW5VsE2UtdBHw20+pBsAR03BBVtwKwTc
zD+frPv0pioiqcI0oEzcoVQh8INJ6mJgPSXrw3VeG7Ogltz4hpQ5e50zepY3
dJHy6Syp6zzp03VM52f/xjOzTLRVIcm6mGKZT9JP3jVMxBjG7qkHTwshN4QD
V0SCFiXD1iTC1iWCZsWQy+LBKwpxu/IRKAnkqoD3FL/PsEjAlFTktHjClmlA
q57/W0AyEOCy+1HMjU3J/ycx52eS7uzKiBfKQS+Vgl4q+3KoBbHDA9jgAVxw
bw6NYE5NpIBGBL9mKJ96uKB6HJ9aHJdyDLdiPAc8mUsllVcjnV8zl18jm0cz
i1ctg9som8eokNMg55Vh/kv9Ig7LSj67Wn77OnbzclGXZkmPFgGHWkGnt/JB
gxqxy+pxK9qhQ4p+n9QCBrRCxyyT1mIbTtLaryKrcI6J4+7Jk4F5MwF5c6n1
mLqRz1mth/75a76xH+0C3khqRjoHlvcM755++dvP3//4y+8vD8ib6L0JEm6W
RprHbs9QMKtHBPzu0vzo2MTU+OTIyFB358fXdY3p2bnRSWkRiZmIkASvkEQr
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
jt2ahWDyt++XR7it9y1VTpZ69la6rwvTy0sy+3o+DN4qE/u8fb34VdtSklfz
Z/1sgmr6vkXZsUPthWsF3SR5Qz10Shs5ZBY94Zi+5pm/75qz45kz75mz7JK+
4JQx6ZG3GFixDUlHvzKUW86cS+aCU+aCXfKEXmS/Vmifecq0dzkWUUnwq8QF
15K9KrH2OSiL1A2D+FmVkDHlsEndpFWNqAWV4EE240pAPJJNPU3WvARwK2M3
yVG0KJa3qxIM6Acs3wIy2VmhReBSJqveFbpUVxJlTdM4vHCaoTOhcZmWcavO
UQvuYdPOSUPOhSMhlTMxhXthBTSnPIp75Z5/1VxE+aJ/+apLyaZnwQoye9q+
fDckbS4teiUwnmiQTTFpxWjn1/4oICErqiPNqy0irPxKTAbglwHY5O/dl3kI
8LPxPPAwgU2XR/9jqRY8LAdPXUA0O2tRIOiT9D1lpUzbbsdt22XBYStwyhtE
wUCSC8jMAFfj0I1eVUF6uoLPb0ue2IFHlgB/OiDVBkh/AmQ7AbUPgF4Ha9q+
ctMD1epnmkW8mrlCujnSuukS6kmyally8HwJzSJ+nRJ2veLHJgU/mGUDNpl8
phUCVpVSzs1yrm/k3doUXTsUPHoV3HtU3IfUA6Z1I2f0oydN4if14wYMkwas
8ofdSza8iqhBFV9DXx+H1+yFVM8ltpDKh/49u+fXkDd4m+JR45xZvSy0dsqB
WvKeYt5GQP6ae86iUVS/jnedlleZsVeBpVeag1+2hWusrUu0lWOolS3SJygp
Nr4YGZ7q4hmqZ+bDJ6x67wH/vYe8j5/ycnHIiYjB+UTUOPnV7z+R/4kNxi5i
IKPu8ZJXl1vEGK7jyyZu9ZjXQNUkTFTFjV/OgU/Wjl/OTpCFHUcIOHwKDoJy
roIwdyEV1sYfvPIufMp+fHBffpg/r0oAPzyYWzWEXyNMUDOaFxbCpRLGAYvg
044TMMvlNS3ktigUdWwQ82vgd3st7F4v5NGqHNSjFTWpHTVpmb1qkDhtFDtu
l7XolrsUULEb10RO7WBGNRCi3xzHNTOTW0798nasY4aMfVok9ZKSSife9u2u
407mVrfW11fW1iePaNCteXZnvedwZ4qJXz3CLu0vjm7MDWPX546wKxfUTSJ2
HLfTv7fVhdsdwKGHKMS5A/wyjTBPplIoVALxAEMi7GL3NnE7m6TdVTpum4Jd
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
wvev56dUQkVhmpezeTDCtau1YWlmYnyAtdWFScaGWfKcS8qUcUCzT+wHRPxH
r7guh9gu89CG4NxPqTWj6aWd4Wm1YSk1oWm1kVlvYrPfRae3RuU2+sXmeMVm
+seVuESUIOKbApLexBR9iC1+H5Rc7RNXGp3VllY8nFM0FFTZ45zcaBFa7Jpc
7ZtV55BcbxvZ6hg9G5BJcIzfc0okS1mMSBgN3JfMEzYoEbRJk9a73XKW9aXi
4X30COyRAKmC4NdqJb1sQG8XiCQAkTVP7VI5DDLULQPtrM2z4j3eFAThu6L/
Ph0GziPASWfWekHv9cFudbBNDGy4f7tW4W3hR/9tKnUlDpwP/sdyAW2280PX
VEr1vJF3MXBf/u5OeftNfgQ85WPjEwcecv30Su6JwH15fTUhmLqElj6XnIqY
ur6MoZ2guqG4npawtrSQloKQpqGiReR9EXPjiEz1MH9zhzI+BU82SWfghTbw
QuMhn4m4mp+wJlJIDSGgFiQIC+ZSCXwp4/NCGsEtFyqoEiWgFsGvEsapHPJK
KfCFUiA7PIJDNZxDPYZbJZpHNUEAniygliGklsYJS+WGZ/CopnOZFPGYFnGZ
ZfPaZHFbF/M6lfM6vRFw+yji1Sfu80k2cAAWPaISPqgYMKiCHNeMWNMN37CM
R9lmL9tkzFonzjmno4JL6HENjLA6dHLbQfbgTfrHP0W0frfMwNuXUG1rD4Lz
Vg2Q7UaBldltY4Mb2B0KmXlOZxztbix3Ufa6z44+XTE6qejX1P26/dUK0mbT
BbPviNR9yRj6cjFzcjjMoI0wqCME7OD+dtfcbGvnu4K6hvSaquQ3TblREZ4I
b3MvP1cjM224hpypqb69o4WJiaGKsoKMtLSsnIKUlJywqJSgoBgnj+RLDiFu
fhkhWeVX3CqvuBXZeRTZ+JRecMo9YpN4JijPJarKLqr2VBD+TFiDXcKQQ8qU
S9pCUN5BBO4ipOcnYODNre/3xMj/J9Pw31lGA9bxj70KnrkV8wVUKyd1KYS9
lfevNUv66Jw15pY/7p4/nNSBR5SuJrfSinq/5H24LP742TtpBpk2Zev12tWv
qLZ5CEekra7O76Dm19cXT7Z7SGv9pPXhI8z8KaseDLrv79Apu0wy5oSBPzum
UA82DolLNPIqk7Z2erz2y/kpxIdLOubqCOIGpC4IV6ytftFXx5jblCnm5zPc
N9bKzPgbJtS5e3GIOztAX9JxX5ikb+cH0PHzMfH6CM8gbF0zCGcH+0d41C+X
tBPyLtQJuRgybv6QuHp9irlk7lFwK4ekddY2wVTUIWn1DHJJp9iL433WHBzI
0Ryhz4+3zum4Mxr6EL9B3lsmoJcouLVDwgaJtI7FLlEwy2TsMhG9SGVlXAmX
DMIxZZ9B3iLtLTCoexAPDymYnc0FBg1Po+Le1pci3ByCvJ07W+pnRocGBvsh
mJhmr5mlzTqnTJoialzCW9yjml2iWxxiWmyi60KLu3Mah7Jft8fmV0enlUXm
VIWl16bm12dXtibll/vEpriFxrmGp7iGZPnFvA5LbUwufZ9U0hKcXBCaXpxb
+X/peguwuJK1W7jHMx4XHAKBBHeH4O7u7u4SEgghhElISAIJFtwJLt3QNC20
u3s3jUt8MnPmnJlzzsfd5Hz3/vc+9/77eSlqF/vZ7O5dtWqtqrfeaq991HPr
9jO/stHggoGQ/JGY0oWwPIh73KxXPDggB5Z6GxtVteiXO24e+kLOqPana6V6
3rdB3yiDQPYgkPm332SDvngJAtUCLbxWHvRhvvgnrSCQcj3IOF/X2SmnOGO8
b0g2+fBoKeVoMvho0uVo8Oyxj3rLpw0aOkFHL04cvVA6enHlaNDwaN7jaDXm
aDn9731pbx9GFN2+ExER6e6fbh3bLB86fTJ0FWT+DARyBf7p8c4vP5qDvlYD
ffb9F2fkflAxAsmbgH46cUbpyik5vTNqtqBTWt8pW16zjbD2zrL2T7ENjDLw
CLriGGfu2wD62dMp+ZFmSBboe3PQD5bq5omaVsmXTaMvafte0PX7UdXxzDW/
C7pBAD85qRV8UiP0lGbEOZ0YeaNkRcNMeb20C7rJ5w1TzhunnjNLlzMGYCTj
rGHmRYNMJYCcmOfLWxbLW5bLmRUrWhR/53Dr5PWqU47FP7uUnnavOu9df97v
8UX/DoXgHqWQPs2EPr2Ml7opIwCYGKcsWWYhrdPQnoUYvzK4a9GCZ/Z8QBku
uV6Q/ViU1kjNaqaUdIkLOnazmg9ci7D+NST/Rnp6Pdo3Z8gi8k5KTWvLGARG
oQm3thEICAExxaXOyjiTG/Q+Ee25mNLBwXSKSYM4aDMW/ISM7mIS+li4IRFr
Yp0zx6HPSPmQLSny1Q7pwzv64Tb5Hx8FYglGIFgVC8hkwjJ85SURDxHysAT0
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
GHjJGwQApmQYpGgWqWoUo2wUpWAQevFqlLw2YNFKxolK5skq5ilqFqlKponK
ZkmXrVPVrZKVrFIVrJIumKeet0g6ZRz1k0n+Sevsi055cu65Ch4Fcl4V8p73
Lnk/Ugl4phr4XDuqwzCh71p0u2pgi3Zov3HUhF4s2Dx50Spr1j5j1jFnxqsQ
FlKxFly5mnofn9yIz2mh5bXy8js3I+8Qkx4zY59S46sQsTeWbePuuybdr3w2
sUre4grer8BpLKpQSufSMMuk1fFtBkKEW9kirkmQaDp8XoiDifFwNgZCXpkm
QIZJiEk2bkFIg9HRs0z0HNCDo1dGJCwEg7KIw0xwVofJ8EHEbCsS3E4nvSQj
Xy7PtS+D22GLPdPTLQP9D9qe3W57eqP5QeWje8VPH5bczM3PiYsJ8rB3NNfT
vnzxwg+ff/XZf3OU/+34FgQ69fUJlW9Paf10Quvkz1qnf9A/+bOB/HkH+TOO
mud9jFQiNM746clFOZoWGmgmySsE2zpXxWR3ppd022eMeOQMW8W2BRfPFDRT
bnQJyptJYYX9HkmP3cNuhGXUPOp6iWNyoGtwJBq2sLrCIgySMS+JhEkmY17E
RYi4cB5/lc1B8JkwQHHQyBAWeVnMRALEY4eL3easbQkYe2LmjpAh5WAAk/GO
YxYB0mbn2McDtynErfMRG0L0rhS9u47ekSD3jydfiNsi/K6EdCCj7AO2TjmQ
UQFIAS4GwIRHhe5JSQC3ETJWgW91Q0JeFxLEPCLAH3jMNRGXtLvBeXsoebUn
3JTQBYA8EVJ2Nth7WzzAXu0KtqX83XWehEsloJaXZkbHR7s72h4+afzlbk1V
RXFeSV5mVWnBrfKiqrLCB/W3eztbYcvTsKUZGHR2emIAsTIn4tE+fjjksXD3
6itzkiOLMpPanj6cn5r8D5hoJ/aaxLd6FnR5pNSn3WzOqW3KqG5MrmlIq7+X
VludcSsvpTApKNbbO9DF08/T0Sc4tzj27oOKlOxgnzCrxEzftNKovBuphdVZ
KfnJifmRqXkhKfmBGcXB+UVRRcUJlaWJMTfzg7MSPBMifBOT/dIzQ3KygvMT
wopSo4puBqdUuIanaNmZXrEzP3s5GATyuKo4/x8k+epHIP3r6//EWPweyFtS
MkBH+E9TtwOfH82YHIGtj8hJR/R66dIwvLu1qrzJIfyJVsCAeujEtbglnQSw
aTrqSiJcLgGjWCBUK99SKRapF1F1b1BNM5BmafP2hYv6aRPKsT1XUztiq15M
LS49rrv16O6dqtKbSVHp0V4RnkZOVtouCcHlaWVNFm4poBOGx4v7QNqgsy4K
BmlJlRAQSPdngzCzsDrbyC772CWQfIlbwbJN+byGUQjoB6PPLlidV3fStgrR
tQwwsPK7rOekbuqpbup7xTzsskWkikmoskmwir6/gm6AknaQsk6Qmn6okkmo
vHGookWkkkWksmWkxvUUdfvEy5ZJyuYxcuYx8uYxZ60jT5kHnTVMv2iWIm+T
rGCfKu+QqehUpOBUoehcq+bZqOnTpB3ebBD7TDu06bJPs5Z/u1H40JWoUZ3Y
l6YpLy3SJ20zXtqmTbhkznoUTEXdQUbfQ6Y0EXKbmWUDm6nPmJntjIhGVHI1
I6EW41cw5Br/JOeX0ReTlKFF6uwCQSja3NwSAk2GihzY40C42DERcZYPH2Wh
J0XkBQFhlg4fXZvtBA8/hc+0cDBjbPwkfrmXRhgVMueomKFDGVImgvE4C9vU
xdcC+DYHss4Cf9glvNnDb63D3x8S3r+hvzskvz2kvTmkfHzN/f0d77f3nD/e
C/Z4lC02jo0GL4x2Pr9fVZIdHxbo5ONkbqinpqutpnlZQUlJQUVRWVFZVUVZ
U0XlirOFlYetjbWFuYG2vpaajtwFAIC0tNTN5C7oK140MdZ1k5Mz+uxLOc1r
Dp4BKaEhicru1dfcKq+5lhkH1IZkv4itHIrI74guaHUKLnEJzQtJLKp71IYl
UqGoFdjaysLyEhryAg7tR8KGULAhInqCTlnkMpb5TCggeThMGIu0zKIsMQlQ
JgnKxS1zsJDN40kT0raYfOwuwsUAyuUQIBIbzC0RGcCKww3qvpSyv0F6u8t8
u8d8swuwkWMPVQHj2N8VEDVvd7jvdnlvd7nH8UlYa4ebTC51dU9Kk/HxHPLK
Ogezv83bljJ2ZcxXO9wPrzYOtwW7MvabHcmOlCNg4FnkNT4D0FYUqYC8KaEB
akjKZQtZNAoGCVuYnpsam345/KL1aeO928V5Gclx4cF+Pt7ebt5uzh5ODkG+
3onR0fnZCZmpMTmZCYV5qdV1FS/anqJQ87OTfbfKsgqz4yoL0pof312YnfgP
mBikDlhldgWX9QVn38+tbcq580vqzeq4qlK/vPiokpSMm0nFt5IyckODY1z9
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
SdB9AWGdgdykLL8W43bYcAEFvMlFcmlLBPQIizxDB2CKOEPBTpJxk1TMLAk9
RUNO0BATBPw0Dj2OQ09SsGAKZpmEgdLQUBYBQcNCeQSIiAaVsOakzBkhbYhD
bucQm9CICSJxikGZZtDBDDaUSFhg0KHb20wBjyAUULa3+AIhdQ0HQwNdP5sI
Iy3B4IiNLZlEJsbg0EvQ5YGx3hedrROTQ5OTQygUmEnBcpl4Bh6Gh83ikWAu
DUVfmqYszRAWJmVExCYdI6SubHOxHBxknY7cEGBfbbIAbrANwIiAsiVk7Uj4
61wEoGXe7wl2JADBIL/a4L/bkRzIuGI6BbAtPhswICOkktZZDCGVKmZhAMTY
AniLjA0QGAkLD+AGET4vpKOPqQ4Z+XqTtyOik5CLLDxsh0cTitbYTJRURHz3
Wri3wxsebEmICY4O9ynOT669VdjafK+n89Hjxpq2lobB3mfguaGx4e7+nmdD
/a1LkAkKeoVJRJHRK1g4mIxZ4dJwUh5tnU+TCRg7Es6GjCdb5wEPjMMsc1k4
AYdMIcNQiCnC2lRPZ/1Q14OXg00jPY+eP74zNTwwNjYEgEncI1jYzSH/rLrQ
zJKE4vzQtJDUsjivJLfE6uCESne/WB1nr1Nh0Rr55dezC91CYo2KS6Nu3o4O
itKwvP65V/jP/lGng+POxWZpJGRqhCXIp2VfuVXrVFXrnppkExlgFulrl5xu
nVvodrMmMDHfPqnQKTTdPDBF3y1CR9/mspmVubmNvdJlRZVrl/UtXT/tf/TZ
/4KR45HY04DG2QSBfEGgk2rOWT+43/nK/NZpqxunHe997dCk6N5r499/OYZy
LWrBJLzPMa7VN+t5UEm/b8XC9XK0SQHBMJ+im4PXzYZfS5lXT1vUykMZ3hAY
FTwwKXzsUv7CKOOxWcazwBv9T/vn//n7q7dScl/H47r7D8obmuoet1FF78cR
Uv/cloCqiZQm5HPUPx4s/fEE/mdcM/FqVG/cA04L5ijuIdY2u880fsgpF68X
PuFRDfV5jii705tQ0p5UcN/HL0Fb00Dh59P/9xzn/3lc/Byk8ONPmqfOaZ+S
Nz57yfycnNXP50yMzCJ0DKPs7DPt3Qq0jeMVr4WrGySqmsRr6qXrmmfqWKao
GYYrGIYrGyQqmmac0cs6p5d/0jD3pGnOSbuCn6wLTtnfPOtyX8G9Wd6/RSN8
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
7G9SX28zDjeIW0LMlgj7dochZALMBPJ6i/p2l8HAzzGJC78ecv/rD9nv79h8
xgIJ249Ddk+/rG1/ljnQnT83WS3mzP31O2NdsDA5UvusKbP1SfbYQDVktnGo
u/LJg9T7dXH9L8o6n+XfLA18WJ8wMXiDgJ1uba58OdIo4MCEXNjizIu6W+kZ
yYEl+TE9HfXjQ09eDj8d6m3s7WzoeHZ7cuQJGjW3CnuJg88wyat8xqqIidri
YfbXKVscFJcIocPHKLBREXF2hw2TkBeAGrs80kLHTOOW+5noMSlzcZ21iIG1
iEgj/c35dcVB2XFOVUUJ85MvpiePB2Cd8jqv+eUbOAdbOTm5uJp4+Oq6BF5z
jtS2CDxr6vudf/y5mMwLPkEgS0eQhRvI3BVk4Q7yCPvWI/zrkOSzkelKgTHK
QRHaoVHm/v5G7m4ark6XfP2VwkKvJETpp8cZZETrJ5V6l9Yl1zRVp9+MLWkK
zfvFIyrP29jquoddlLOJt4m6mp7yWaXTP/7wzU8Xz8p/f+qU9Tc2TlerLmo+
BGmWnrP0840JulFQFOqX6+Cfbh7tYxig5+Dp7GSepnEhR0mzUPF63vfWBRfs
K/Qd6q+7NPt4j7r6LVgEr6kF49SSBFcSpbqpAsM0nEHcS/20VvPi56YNnb5J
6bYhEfaR0Wn3mmqnV54uU/oXV0cHR1fmMDn53bbBbUZenZEl8Pr2PeOgLsvQ
cdOnfI8Xh6p5JIMavnnj+tUbRPV8vEfTtlE5zL56OfoJNaiB7VvOD2/YCKlH
BrYuN7aOLmCFCDKNjIIKcDOb2OH3jIktfD9vtYuyMoBaGoJDh9EAjUdPMTDz
PPQkg7PK56HEsjXpFoa7gWRLYJI97Me/cYWi5Q0Jcg3RB55vW8OODI3ez6+I
SMp2TYtPLSvKKilOSE7yjU/wzk2PTYuPiw6Os7N2NNYzVVXTULmsrnVV/4qW
ieZVB0vTkEuWpqf1LU5pussbhV8yCfz6svkXV60Ur8ddssk5aZinYF+t4Vtt
mdLgnN1mEPLQNLBFOxPuf1/oU0fze8C1KsEYpkPNMlZ9yvF5bez741QIif/+
r39x6OQ9Hn8dz95C8vl8ApuOoZEQTMoah4Hj0FFMKoJFRXDoa9xPcptKWGZR
V2lEKBG9SCeu0BlzFPwEBT1OwU1wsJMy8sImDSIjzG5SljZI0E0yVEqErhOX
pFTUPo+4L6G/Z6Pec3Hv+OgDBniLMb/PX9jlL+5y52Vs8LZg7VBC2Rfz9wT8
baZsnSaTUXZ4YpZAyqPS0Rwa/rWM917KOyQRDkjobSjkAAV/jcFtE7GbNLyI
TuCySRw+d587c8CHHUiRr2SoAyF6WwDfFaC3JBiAMu0KCSI2UsJd25fR9qTU
4432WGgyBy7aYEikdDQOLBDgtnZYTAbyw6Fkd4cmE+IlfMzuOv5gk7Inw21L
MK93qBt8/MxI6+LLThpmYaT74YM7ObNjLSLuCosyhVjpXAE/XpxtbG/OqqsJ
efY4cWqsoqetkkkemxy9m5F03ctVzctFLSPZ4d7t+EcNabfKwxtqExenHw12
V2WlONZWhaGgj98e8l/tsn97L37/mvtqn72GGC3IjnJx0CvKi29/Vj8x2gYF
jwz1Pe3ueNDWfHdxpndpaWp+bgQy349cncSvLQIviE1YAXiXlInmYufX5rtQ
s9005DCPME1Y6YeMNc33Plub6lqd6SatDC+OPIDPNoMH65AzD++WBOTG2ER4
mqdG+UCmBsDzx2tzgoL9omLDMwvzje1s5LQum7ia2/mYhGXYuUVctnL91t7j
B6+QSx4+ZyysvjI3Blkbf2VnL+/lqREQppZbah2ZoukZo+QWp+aZoGEbctE6
+KyBy+c2AV97Rl1ILjRML7CurHN72lR9v76yuLKu6OZAUu5E0S1c5o35rPK2
4to7YTEubu5aV1RBSuePe9WfPjvzA0jx7PnPVNSP48Brayhdt7bMSs1MCI/w
d7AMt7OIuW4X7ejg4+hgYWmrbmambuWgdd3XUD9CzzBcyyzK0LnIKviufUKz
bdILk8hnplHPbdN7zRJaTRJar2f0OqR3mcW3W2S+jI+pM7fP9PDNq6h41NHS
tTy/iFrDDc7Mj0HJEQUNqo4ZZgnPXYphfndFJml4vXCEyfMD0wc85TyIeTXK
qGLBqnLFsRIVUMfxLqPF3tlMqeeFVUNj7/RmPHxW0PMwZ+TJzIshEhq3xaWz
1qYZSx0iVKcM2ypEN7PRzVx8r4AwTEUNUJf76bAB9uqAGDkipYyKcYMizAAX
PUxE9BBXe7jE8X0paleEeSMh7fLwr4SUP/eE21wyFjoBnx6BQkeZVLSQiSeu
LhJhEA4BTl+FrIwMNVdX1uXn5UaGJ3h7xTh7RHt6Rrg4htpamOqaXlO8rHbp
krrSRbnz5y6cOndBTuGinJKcmuY55WsK1yy0LYJsvTNt/YutvAqNneJswzo8
ErozqmEhucOeKa3XY++bBpYm1nXWdU/eedE3tQaXvFrHkJfZrFU+G8ohTjGw
kxz8LI84zyctACkbNwtQZQ5+nomZ5hEXhGQIGzcHFApIYBF1WUxZpuMhbBKU
TYYC2oFGBNMJUDYVLuQAjAUv5ODWReTN4+Vs7E0hTcanbAgYIj5SwEcfDymI
MW+26X/fY/5xQPlth3Aoxe1JEBIuVMSHCdfRwm0MbxPL2Ebt8ei7Asbep8X7
WxLGhoixIaFKjm/L4DGxEjFuS4AXMRBbLMwrIXmHjdkVCEQ06oFY9Mf+/mux
SMb7tK6fzdiRcDck9Dd7vJ0d+s4e7dVr7t4e+fUBQ7CL//Vf60w+lMGB8bjw
V/scLmPl7+8lH3Y5Ei5SSIZusOHvNolSBvTXfdLR7+LDA8TwwE3sWt/kywed
LaWl+WGPbue87GmAzbYvjDYS4W04zPOSIpvUxCuVtyzvP3QqLDJ9cN+9vs41
NPicm8v3EWEXjQ1B9+971Ndfr6wwLS8zHhtNGhpJLiw2b34aRaM9OfaHOuL8
9Q88kPnbRxwJM3CjLMDG+GxKtF3Xs9KFl43Tw/emhu+O99VODN8a7i2bHnk4
+KJmsOMWePohFdnHQA6SkT1SypSQNElYap0fqFubfcRAdDOQPdiFlvHWstHh
yp6OHDTs8djInY7nJbW3gwYGCvo6yvNSvSNDNMOjTkXFnF1YaJ0aWQTAxDMo
JLustKH5qY2n0xUjXQ1TDSMHjZDU637xetZuP5oChMQJZGH7mZkFyMH2hJvT
aXPbEx5e54OjVIuqreKztPziFL2iFL3i1W38z9kEnDX1+NzG52ufqLOFt6xu
3fV63Bb8qLn87i8FuaX5ZfXNuTV9ZQ9m8u8MVjQ87+jruHk7PSRE39H2koXe
uU+zGl/J/az63QnQ6VPfAqdKigr6+vpebl6udnYuViZmlxWsr6p5mJn5XHey
d3TWMXOS13W4aO6qYxqjZRKtZ5Vm5l5sF37fOb7dJqHVIqbDOnXQMXvMMqnb
NqnLKavfIOwX+etFF92qbR2TXL3yQmPLbt5p7u2bnH45NTk719o9MAZGZFQ9
0/fO1fWvdcieDqyhm6agtAPn5PPh1vV823qKWyNJJ2v8SmK3TcFC9ANu8E1K
UqMk+7Eg9S4msW4i+2Fved9Q5cwkdGaRRidLOVQqfBoHbudC29jQFspsoxg/
IKZOckhTdMw4CTnMQU+I8VNbpHkhcUqImxSTpjnUSQpuDI/oJyBHKNhxDgUM
tE0uESymI/eEhA0enk1Z4VBWhECz2qRuSAkCJppHAZQCZQNohmTM4kjP2POn
Tbdv3SrILk5OyY+NTQwLivR21dMzVlVUvnTmrMIlJRUFDQWVK0qXr15S0fnm
lOLXp9VOXNI+q+6gahRw1S7RyDnFxCVJ06He0KchKHvEM7PXNa3VMqbBOLA0
rra7tLn3TlvPDAIlkPHWsBAeFSZkwTiEWQZ2moWf5RDmuaQFLnGBhZtl4eeA
QoAbs4FCoAQ/CxQCF/BIiwDOMIgQNnmZS4WyKcsc6pKADmgi7I6YJGHjRCyM
gIGScDASLkbKJmzyKQfr3HUhSipA7wgI+1Li2y3i71u0j5vEX2X4t5u4AzFW
ykOKeCipCC/cwHOlBKYEA8D4gYz3bk/6alO4ziPy6RgJh7QlJb854B1uMPdl
jJ11+g6PdCgmvV6n7vHXpHTKDpfxt92Nt7sSIQMvZuAPNvhvt8RiPmlTzHy3
J5KtU/kclFSC31zH7e/TRZvo/zraE4jWWDwUhw3f3gTe9uKWmLzJJ/JoKxIa
/EBK/uuD6ECK+fMN/+hvu9ubsBetpVhk79J8c8fTipqKhCf1mbeKQl+0FM2P
1wvoQwTM84Jcy/hY9cJis6qb1qlpV/19zhXkmRbmWRTlW8ZFa4SHK96pdX7c
FHy7+npZsWlXR2x3V3JJsfWTJ+FIeMPe9srhHnxLtnB0tHl0JOGyp2sqI3U1
vo8Ls25+kAfgRn9n9Wjv3bHBWsjs4+W5x4M9td1tlX1d1bCFdj5xhkkYp6KG
hfSFdeosYalrdrAWNd9MR/WzMENUeCd0vKGrtbChJrK3u7TzWeFof83zpxnt
z9NLczyj/C1jQnSTk5XiYpUX5zshkLXjGLAhoeklJXWPmyxcbU2cLK4YqujZ
qnmEG5h7XtK3+ULXAmRgAzKy+czC8ktrux/szL7XtQLZu3/nG3GhpMYsLvuy
d/QFr2iVkJSr7uFK7uFydn4nXIO+is1Vae4Nfdzq/+yFR0tf7d3nhRlVqVk1
NyPySn2TC72TMovv1TQ8rWztKC4rdslJtygtcLE0Pu/lamxjrONgY2B4VfHE
VyB9XU0zY10THQ0N1bNW11RMLp+x1b4UaG+YGOYTFRJm5+KrZuSoYGSvYxZ+
xTRQ2ypM3yXdNqD8eli9bdRDy9D7NnFPHJJbTfzvGgTUXI9v0HUrUrFOMAu/
l5JSdrex79btx/cfNff1dDc/fdz8+GFV9a3x+ZWIzCp1qwhV+9yYW0vZTete
BXjT4BnVtGnve3TfBkJoI8a1YsL35kTec8KDid38J9T6no3HI9v3elm3WqE3
m1/W9002Li7RCEsSCXtnnckjzvEwoxvEsQ3SuAg7RocN0pETFMQUDj6Gg45T
4EMs+DB3dZCLm+CTpnikaR5lmkWdZBBn0PBB2GIHFNwOn+lCgXvRS31o8BAe
OcGkQjh0KBY5jEeNrq0OIiG9CEj3GmyEtDpKRk7TMLOYxWHwWNt41/3+p/e6
m+vaHt58fCe/KCs9KSI81M8jyM8nPCwgPCLI09Pb2srWzOa6oaWjho7FOXWj
kyqGZ5UsFfXctC08VG1ylMwSTDyLrYJvOkfXO8XVuiXcqHo+fKd9sGVkaBG9
wmLjMahFNg0upcPY6Hk6dp5DXOJTVrikZSAjoMJ4pGUGFgCWZSAvpK0CqYAC
Ay4Q0Vb55GMMAZBEwFgVMuFCOnKdi9mVkA83jle3bQpInzaKQvFpcDYBwSOj
RHT8OndNysXscAm7YsKhmPJmnfR2g/pWRn27TTuU4jeFeKkIJxJgJFKyVELi
iPEbPNzuOvVwm7W/wdgQkiQc5LaE+GqL8XqH+WaXtbNO3hYSdiXHceO3pfgD
MUbGZW4CTEbCXudRJGz6joj3akMi4ZIBdrQjZYnF5CXwYPvz2o622rHhpyvg
Ya54+ejoV7EIIZasiUWYg23aNoAkQtoWH1A01Nfr9N/2uEe/7bzdYv7jteDo
4x4JPxAdYVxZGvzsadbjX9IeN6a9eJKbGKmbnWz+qCFi+X9wdRbQUSzrvu8t
Zzsb2xt312CBQBKIuxF3d3f3kAQIEgIBQpAYFkgIEeI27u49PT0+E0XOlmP3
XV5Ncu55b921vtWrp6Za0pnvV/9/dXVXb9XYSEVFuX1utklu1tnsHOOY2L0H
D0ERobtLimwuVTlFRR5suOV7+6p3y5OohgaPq1fsuzpTegfy66561tf7dnVn
dT6vnBy/hcM++OM38t9+YzII7Zcrwr3djsVGWNXXJT28l3+vIavpds6je9mv
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
o7vD2qIsy8iII6FBO/28Nnl5bwgN2eUXuDUkDFiYkwV5FvEJB0JCt4UE78nM
NEtPORIRsa2m3Kk42ykz+XRw8E9unl++7b8+ODwELtCew19bOuxMzLC3dtp5
1vpXa9ftdm577F32O108aGyybtf+7zash3bshNZvhPbs+GrDGujHNV+v3/K9
tdPusFij0ksXYlO2evl84+wMhYavcXX7zuL8VwF+O5LiHQoKEl3s3IM9o3w8
orwcAlJiUmMjIpMiw1ruXZ3ob5scuDf0up6Ha2Vi7gnIDzCjlwff5rS3RPX3
Zg+8Lm17kBzgs93NekVZ/oW3z1MlzIY5uEVMvc2aukobv8ydvs3Dgua1hTbW
Rh9voXGmWMx3TMYAjzsGC0bEhofCBmDukJjbx6F3MzDPADfouKc0TAdlqpUy
3SJlTYhpfWJav4DcJaa+QThDNFxX98v64f7Hrzqb3vU+nxjrHel7SRh+y54a
mu5+/bi1eqDnLn6yjYztoE895hPbYOozlNaj443yMd2sidcS0ijKmuAzh3ic
brGoR8EiomwswpwEP0IRGyvkTIl4BJiPB5ZcIqDBUgrMJwvZ0zAXq5GQ9BI8
EOfo0ivNxTyMjE9BxCAYwK3DbLKCQ5VzaWoeQ84xDCZBuCTDe7okHLWYgwoZ
Ej5FxKfLESYqY8tlXAShITKGTEqWCLASLtagBDgYOY8gYvbyDIriHcCIhDXG
Iw+JKeNAvQvo4zAHg3BxMA+DiKYREUbEGWLRe/SGMRg0JQ8nIA0JyMMwY1zO
ntBKpnViLMIdlPOH59TU97MiYBxUKFeJ8JfIANKfrZGB9Deszyg5egV7OebU
vAWtYFEnWtQBUPBnVTwAkyUvY4AJ0CeAJ3oFEzDE0H8iZ4BcVkmBDwImyCBy
ZEIcKpgwzPAixCISnJiD5fMJYhGJz8dzqBMs6iiHPgxQLKGNqtjDGvHwvHRk
jstdFHJmRfTfUenvSuknFfqvOd2CXKwRsmZhnkzA+DQj//znexmPThzr08Gi
v/+V+V5P/vx3AAGtHgVqavrPj/DnP1RsfA/CHpMwRxjYnrHuu1oRRifGkUfb
ujquTA8+bL1TNt7zWAkTdDJm1/OGq1XJJ43WWphvK8xzb2nPJdPud3Znh0Tu
2rQd2r4TumC12s5qtbXFGif7rRFhxo72W2ysN/r6HHSyW29rs8L03BcH9kA2
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
Ub96eXwRFrIuL8u4ouRUdOjqhIh9j29GdbXFlebttbGEWppzsCOGp4ZPHIPO
GH+5fSu0bQt0pdbvTVfR40dJnc8K3/VeFvJejg3fCAs6uncP5Oq8ydb2p5Cg
g77+K4ND1mVm7y8sPZKZuysrf1dM/Prk1P0+nmsjQ/Y9ehDPojyZ0fULOE3t
bRFPO4LbH2VnppkG+e/29NoQFXXAzWW9yemvzUy/378HOmv8g6XJCjvzVWG+
m70cvgvx+d7XGfJ2WeXnttLyPHTmOBTk88vVS3avXyTyGY24yatTw3WT7xqo
mCdiRr+QMsilD0m4hrGXAtaoYdQE2zDBq4yPk3IxMHsK5vw7ZHyDhQGpDVJg
QSP8NMdf0HIM/lpKBt5BLQGgoICklgvxqACrEJGVYgrIYg3C0MnAj5ZleMRs
eUXGBJBRigAEKCDRUIGhG0RtIM+/A7gPsFyqzDbMnyJnAy4BJmgRxqzC8Bph
sNQu7RYEOARYBzsES7AOSgBqdIZY/oquBedgCMZSgAosHcIEYXhQxRAscEog
QLM+o1gONghw3AU1HxzLEGrenJJj6HIBAgkG23IAT/QIVw8YIufrUHA+glmF
UK/iaBUsAAew1Ku5syh7FuXowYYoS43QZQhVKiFJRUS1gqmUM9SANuBPU7D1
SkASruFpX6VQJ+MCDaYHCFKwNChz+eYO2HZp/AkLUAUV4RBwbZf6V+fUzHkN
sEKgnATMoBalzKpYMyrWspJRSkl6GW1Rw1lUG0af6lCaXkxelLPmELpKgFUi
pKXuVopOTgT/uzkVQ6egy8QkOVhXAxslWdDKtFLSDMqQ8bAzKFMpBHqM+fkP
cA3AT10rZA4ATXL3Ztr928ltj3JmNcN8VntZvn9Blvu9W+kkbIcOxX/+L+Uf
iwJUNDEx1DY10t7beedSRbzN+Z1paV65OYH+fiZmpltsrPaGhVimpbpEx9i4
uByxsd6zciXk7nEgIPC0p88uK7ufbZ1Xevius3X+7pQ5tGPj6lUrofXroV/X
Q0bGkI07FBS73S/kkIvXDg+ftdbOkLUD5OmzxdJ87bEjkPHpb92cVlhafH3m
DOTnuzUy4kBE+L5nz5IbbviWl9qV5F8oLrgQF36gusC6vsb9cqFdSsThjCij
hzeCrpXb3Ky2rcozri48UZC5Ny5idWH2jtz0nXmZO27X2eSl77tZY1FXaX2p
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
FRmhl5qKDQnWDArSKCpwDAlWT4jFuDjs19IElsbbdgGQEG6cm4aPC9Ine2uR
vTUjvVQIJgBvDgJJIDFMPCNO4kC2Ul2VYc0hg6IszTSyfEWhSUmGSUKIQixZ
IStdLzNVKzlJLilKIsxvd2yYSFm+/okqx9ONnnkZJh5EYTx2W0SgUkiIorfX
fm9PyYJcs1iyakqycWqiXlmRWVqy0vEal7OHgxpq3RobbI4fsb5ysfDVc6QH
rD1B3slJmURUtsWKwVcbK9HIUIv7tyu+/3u66+PVmoMRCVG4pBh8sL9OSYF7
dXlwWKAGxgz4eclWlrleuRRz9XLMhaaIs2eijteFk8OtyaGWgd6GthhZY509
itJARhw42sqmJOAc7WQC/LRJbipYjICvt3r90ahjtVF37xS1vzk+1NW0yLjz
dbn59sWQ+FDJMF/FxAhNbzexqlLnomzbZLJxzUHPtpb6k3Wxp48l3LpU3vPh
FmOkbbTjRcfb5wNtH+DMtcjzcC5ND0EkWZlBkAG+hTuXpgf4MuTngMR7GKrp
jbnxL3B2noOYMLaBhDngJE7dKkxQDgCtj+cVGeKLCDhQt8af1+TZNZzu4Vjj
gQw8hTvVj/pD4Ft4DOqHQd+iBAO1ffRqfJXEpzT8sZWl8OECRRIUmrYSGN7p
EzzwhLA5vLkAyRLz2wokTmPLHAiSEFoHl6cpC0woLiBtgKpkbBnJN+OpEkha
Fic3VxkLzF7ORAeb1gmn/n/8be77v9eR8b+b//Pvtf/5+9LXdfrczMDsVA+S
Gjc7usIZWmKPIp4cXpO0JfYwZAurHMoia3gT3jC8PoRiCF9c6hfI3yBF4Qwv
sCmL02PzrNElztjKLKR58IbHZqeGl2eoa3P0jUXGGmdyiTU2zxhdm6H9vjz3
dYMyRf0wRf20wOxkjr2jj7yZneqYY3atzPbPsTqWZvs3VyC/oiLZO7yVsODU
QKd8Yo5/Gup+9O7l+UtNObGRVp5EpfwcfDzZxN9X0Ra7zdQQXDwXVVdLCg+V
TiZ71JbHleaHcGivR3of3LlS/vFNU8uz40V5/qEBZlGhNrlZPpkpXiam4m6u
RlkZ/rFkF0uMrLOjvrGhZHCodUKiqwVG3A4njyfIY6wkdXWEFBSBhpqYO9Ei
KpLk6Y6zwkqqq+9WVxXQNtyNJ4pGJerlFHhLygAHZ73gCAu/SPWAYGWSp0Jp
eVBekXtgpLqfl5oNVig2xjw5yToy0jg+3jI5xdbNWTY60tjDRc7OSszJWkJR
EqTF2hRlEVMTbMkko1CiSqiHEgkv5G6/LdhLKCdFMT5CpChbqb7K5HCpcX66
WnGO3qk6tyNljjnxOj5eIgmxysnxaokxsmkpiglxsklJ8uWFJieq7Y/WOKcn
GvoSJXw89pPDVcN8lV2d99nY7QoNUIyL0c7JtirMtCotNS0tNjx11O10dUB9
pWN9nfGRo9aXz+e3vkQK/XA4MXcXBR8PdVvsXqKzAhYj6O+rfaQ6uvvTpeb7
tedO5ZWXhOdneeVne5yuS7jUmJ2WYoOzFvT1VD5S69V0MuLGlaSb19OfPT54
93pRkK+BE07RzlJGT1VAT2OHoc4eK1OJYB/DlBh7U6M94cFmMZFYHy91Lw/1
vAynYD+9QwUe92/ntLUeGe08wRy/fP10eHUJtjDN+lAeISZC/fypyKMVvsdr
gu7fyOp4c/Lp/epnd2vfPD892PZkavjDRM/7gfY31L62xen+5Rk478MZeWCe
2Q8JBrQd+LrGhbPwOGr1qOlBG4RWhnpIUDbCIySjEHk2F8a/rbC+LP4gDHzn
Bmq8KCKhNvvDs4rM+1RoIz+conCuh8fMjy/PjUE74osOvueW71Hhu0e2cgk+
zeBzDP6n/yFq/sOdAo9Br4beG7x5CCbQoJagTkHqZIchTm5CGYIkqyAEDD6W
1RmoUPq5zJ99z37iCerf+LJMX2T2cWndnKnub6v0//nr4v/+a/X7f699/+fq
939v/PvvS982kQW4F9gDkGN8WaAi662w+nnxF4TIIbiBPJbxdd6NIT+BS0Wf
PBKcYo0vM6GkGl6CZ0HqyB6Er1AlLc0OTtM7EK44O4SM6QHIKnnEcgDi0vpS
12j/49Gh+7Oc9xPDzUM99yZHm6eoLxZm2+bprYusT98Whr7M9c5NfGROtM2z
keR8xtinno+P7l6rOXM8tbYiIiUBExtlmJJknJxgEBWhGkNWI0eplh3A5WRj
Dh60KcuLKsj2SiDjLpxJP3cyvTCb2FAXc/1CbkiQvquTjBdJneiiZm8njcXu
J5F0yWRbcpQrAa9DdDLVVpewsFDF2WkRHJQzsjzsHVX19UXUNXarKgsryO8y
NBLH4VXNTBWxNsI4ZD1bVRdPJQeSmLOXRFC46c7dAGuj5e6lZ+e638xiu5u7
enYOKSXVMSBUw8VZDU+QS0snJsRYx5GtC/I8EuLscFYSDjgZPFYcbyNuZyNm
rrcrNgyTSLaJDTX3x+uQrGT9XFV9nSV9nffFhsk2nXBNT5TKSZUtKFDLSFVO
iJXKzTA4VGybl4qJCVZzd9sXG6edHq+XEKOclaKRl6mVk6FZlmN8qBCTl2UW
H60e7C0XHqgWGazmR5IjWO7E4UQdHAXiEwwLc+0zs6ziyAr5OZoHCywqcuyz
ErVjonalpCmcaUjv6OxD+pl4KMbHmiTEmRFwwkTX/Y6Oov5eygXZblfPFVy7
WPzkQf3TW7XXmorO1qddacp6eP1Q/dHg8FD9hFjzS+dSrl5Ofv1LZVfHiaW5
lxMj9xLItmryYO8OZM05VRmgp7rbzlyW6KQO4R1nIxXoZxQebBrgo+dBUokO
NdJUBwkRhmdPkm9fTmt9UjJHv/X4TmpdqXNtqfPZ+pDaCve2t1UvHhS1v62j
Dd2Cg0ltnhptpvY9He18xhj5NDveCYX51wX2Kpwi5+DkjugaaEeQ2MOxMT+J
/nlDU4V/0t9WGH+ss3/aGpI/CWHkCxIvGIPAAlEI7v+2AidxBl99oDyBLy62
OlFROoFsz09CAFmdH19fnEQ6GM8jfsu5qQHIVVBTQiM18FK/Ql3DM3b4FcjV
ECcnFbU4vmbhDz4PQb8IlS2oUPrzyBk4tjIuCu+CkJlAZENwFT4NSNUgjEAM
QTXg8vTwOheSBKhHkFYh8+x+ntaj8AK4I6i/dHWeusweZfEy239bZ3z/+wpC
S/61/D//WOK5Tdb/9vsspAGrcxQk/WwRIufIHKNnZWYIPnDkhmfHUY7Ee9R/
uox4MD6wyBxb59BX5odWEKUJtRLS0XF1DnKkfjrlPcQBJOgz1clFmsR+5tA+
sagfWOMf5+a6Oj/e6fv8mDn5brDrYdvb60j5dsfdZXYnk9LCGf+4Ot0zR+uY
6G0d6XvFGutemu6ZZbY9f9iYnkh0c1Ly91GGYFJajEtJ1g30l4gjq2Vn65NI
uwL9JY8edi0rNY+LtsrNciBH6OJt9lqZb3Mg7AnyVyzKx2Itt5kaAwszsE8U
CAoALE7Ay1vVzV0Wj5OztJRwsNdUUdiNrodmT9A+cTzby8t4/36wawdQVBAS
EvyxsKuYGDC2A0FRppkFpLh0K2vH3XLqwNhiH/zUxs6Y4KSvZbhdTAKQSHrB
wdaeHvpOrrK6OnssrSQzszyDQiwjQywKc32iwrFmRoJWFmJ6attUZIHADiAv
Clxs5aICTeE0baEtra+yW08J6KsBYy0QHij94HZMSZFxapJSWpJSVJh4oLdo
RIRiaKiSq7MIFgPU1ICzk5irkxAOv93LfW9EgGR48P6IUKnUWJXYIOUQf4Uw
f/lksn4i2SjMX5lI2BcabERyl8nJsi3Ic4iP0nG0BRH+QpHBUiEkWW+HnXg7
4Bewo7IsrKUV8Zl4ecvg8NsOVTgnxGjnZVvn59jlZdmXFLmWFHqdb0hlUZ4z
Kb9cOpX/4FpV8+2aVw8bLzcl56XiC9Jxl5vim5uLhofOz7Ke0sZvf3x3LCbC
goCVsjQRITlplBSEHigMKSkIVlXgLUZeTvZwgXiuGuBrkJ7oWHXQv6zUs6bM
Kzpcl0gQOZCJ25hrbn9dde1szMXGsOtNUZUH3F48LHp8O//J3YLhrvMb8+9n
Ga9maG84E29nJ9uX2b3r06PLM8hsDsn86uw4j98iKgY1Rvg3jGoKVClsUQ2T
PB1EQfEHmalnEd8C/xi+LfPFCN9a+cbOm3B5rH6WAq1v9WfFPRq5WJuBkmcC
Dh7zR1yUXxZof6yx/1hjbcJv51C49D7ORPfMZA8SWWYNrSI4gIRZ4eAphZEF
5iCX3s/LMBlanh5Fac/aLA89OJRN5OJU3pjg7Ue+hUeQxlamh9ZmRzehaluc
/LIAL0hF1d8S5ADMfggsa4ijFd4zZW1+jJfozveLIuW9EJyZE53rM+Mb8OlB
srEw/q8/5v/x28wf31jfv2/8469zf/nG/udvM3Dq59C7flufWluY/LbE+O/f
F+FN/vPbHPwtvy5N/b7KhK/wt0xTu+Ad/m2TA1GONdYBfxG8/3nE2TLMa01A
WZwZYNM+QwCB38Vldi8izZR6WZOfWdT22an2BXb3KndgjTs00NPa39368fXd
zx8e93160vX+0djA26mB9wv03t8WJyf7P/R/aP7+z1+///3rX9a5iywql/Xh
+78XRvvvVR8KDfXXiw7TO90YeOZUQGMj6fQpr+PH3S5fCj1UbksmK7m57YyN
lTl/KqUk3wXqdD8fKaKzSHCAbFmp3cXzYYmJOtHRalGRyoFB8kaGwMpml5uH
TGKKRW6BHTnOwM9P19lBU1gY+duGrxiMgq7ufhFhBEB2bkPWyZaUALY2qj7e
dj6hgk5E4ZQMbECwki0BaOoAqIPgPztLMx8PWwdHJXMLMVsbZSIJ6xNoZeOk
qK+9NzAAU3Eo5uBBck6Gd9mBiNRkF4zxPpy1rLWZhKH2HhV5oKII5MUAHiNn
prdXVggYqQvt3wvg0NYEYaGqH95XXL0aHhku6UTcYWsHUQuYGAELU2TAc/fs
Qu7NwmS3nZWAo8OesCDZYB9xN+fdJPsd3s57yf7KiWT9FLJJWKCWneUuO8y2
oECzglzX4iLnmAjjIG9Fe1tgZQyhDOBMgZsd8HIGhibg+JGENl6hX3qaoQO8
jpeYq+uenBzLg2UOh4pcKorcy/JJFxozRnputjY3HMwP7Wu73vq08e2zsw11
EWH+WuEBGhdOx3x8faT9zeGBgaaFmeef3h2Nj8LgsKJ2FuJ4Oxkvoq6MBNBQ
3m5lJqUgDUIDzPHW8lYYMROdXQHeWheb0q42JVxsii0vIJJDNNMTzca6Lrx9
WvnibvHFhphzRyMqS92vX0iCAufmhfR3Lw7PUF8wxh9PDjfTh1+wKR/m6B1L
zN4FRNfAOXECaQE6PcqnAaiTE83o4Psnf8IFnPEhVxnh8ZY/IYhPA7aKiK1v
/0ODQPPnFctQtrox0bHMRQIc8HVxdnRpdnRxZgSSFiRlfYW+tjDBc1Ei/kku
awBucNmDvJgsNPDxnz5MxI2JDtSZCa0P9WQisRLOMBrGhQNxe8J7+DHGFzgD
SBtVztDPBoljm8uTX9fovy4izor1Wcr64vgar+cqr853GGm4itCSMWjaX5Zp
v22wfl1j/GgasMpYX6B9W6Mj6uafK//7X4vfv3/5r18531ZpcEzTuhjjbWvz
kxBF4ZGQjLFo3V9Xp2YYffD3LiDR3hG4wZnqgz8B/mR4nzOMfniT60uTCzPD
s/ShBTZlYwGyx6l5FpJ1D387lzUIkWSW0TNN75oe74QIs8DuR9q6wv+CleEF
bvdo77P+zie9bbe7Pt2Zpr6eZ36i9D1mU1+Pdj3ufX9zntOzzO3ZmEeAenzo
/u+bfT2frzXUkRNjTTJSzc+djThWRzp92ruxwe1wrf2J427FRab+fmJOjiA6
WiorjRAZpltT6Uly3e/mLBwSoJSRZnryREBVJTEv1zorwyIx0cTZaZ+Ds6Sx
CdDTB8qaAGMD0tIJsbE4HR2hffuApuaeAH8rdfW9air7DPQU1ZSk0XVaIS3R
1hLEuwEXD4HMfExknLoVHqjpAgxW3MxEI9DP28pSR0kJmJlJu7tgbAgGFpYa
xhhpS0uFyFCH0pLY7Bz/mAiHgpyAA/lB4UHYqDAodiS1VIGhlqCepoCsKDDT
FbIxEdXXkHUjmFgYSiopAmlJYGoCzp8Lr6lxISeoevoIOzrtdHTag7HdhbMX
scQKqmqA3buA7H5gbiqIs9nn5iQZHaIZHaQMISXIQ8zLWdiDsNfVQTDIUz7E
W8URJ2hjui08DJOdgc/ItIkMM4BW700ScrABdqYgnKQQ4iUa7APwNuB0Q1p7
Ry8Ek6I8s+hweV9P4dgoxZpKfF21y8njfo/u5p44Etx4JO5Ta1P723NnjiRw
aa9anxwbbLt15XwCOczAjyR/6XTiUO/5tje1vzwuGR25cPdGTna6DTnMlBxt
nhBjV1zgGxZgcbQ6OSnWwdFOSUd9Bx4r7+6qYWEg6GIv23QmrulY5Im6kIc3
Mt+8KL95Oe3d04pLJxJuNKWdOx5+8UTk9fPpD67ndn848+Z53dtnx9ljzcNd
N4e7H4z1PkKWlh77sEDrQ4g6L2KCekTRQAbfLbn8M+uMDwU8xwIdYggPEKgo
BPE9q6iIgG9RZyn6dmvc5E8wgWRg/k8qsjSD5Fcsz4zCPYs8zwMKMuh+5JVL
QakL+hbFhHn20I/afF5uxtaxvOUi8BheksbAPNJ7BIm0IoP7ZzoHWtrPAwek
I+LiDwmDoMraPEQJ6pcVGsQQyEagNoGDhyRDy7NILhly7s+2ZutQ9C0iXeIX
IL1ZQMp+V+dH//nH3Pd/rv0PBJN/rf7zDy6El/UFKmQmrIn2OXhjnOHf1pnw
3Gl6N4SjJaTlEcQNpN8IvDK84VlGP+9nwvsZXoNkb5G2ODPMZYyjoZwF1jiL
OsCeGGZR+8b72yaHusaHPlAGPlB6kFV9qcg6F++pPR8ZzCcjI3eePTp880b+
netFz55UjPRcGR+8/vldI6X/6izjGZv6cGz4Zu/nS12fzl+7Ulh7KODZg/I7
13PLi92ITsJ4u23pKXoZadoFeYZFBWbFxUZwlBRZBAWIhgZLVVXaHq70y820
OX0inOQm5uIk5O8rFxWueeJoQGaGJTlKmxylk5RqTI7Syyl0CovUc3GT8g4U
tSVs8w/QItipyMhsExcD8oqASNTV0xfS0RaxsdF2srcwNpLX0dtJdJdLSrct
P6qXfUC/rMYho8DIM3iPkQnQ1Qb7hEGor4+Li4W2rrCunqijvZmnK84JEhBz
BR1NcZyNtq+PlQcJ40E0iolyiAqzscPKeznrGGkJKssAZ7yai40S1kgcYyBi
rrtbS2W/raW6noagnCQQEQF6euDY8fDKCvcwsqabpzjBSRBPEMO77HN2V7DF
Satrg717EcwxMZEi4GWILnLBXgq+nvsDvaRDvaUD3Pb7EyU9CPv8SAoRAZpO
dsKQhHh7GPr5aPqQFAk4CWe8mJ+neKS/WJDr/kyySVKockyEoJsrONeU3clr
KJ2dpl9aaJmWqN14lHT2pG/NIcfGoz4fXle0NB+srwi6cjqz5Untszs1nMmn
Lx5UtTw5cu54fGKEsa+r4rWzSRvLr5dmm988L3/8uAgSxfQkq5AA1chw47rD
4Y/uVTx5WHv3elVVeai7i6qwADAzEvJ0Vye5qHi7Kx2pDak44Hb8SEDX+/rZ
qXuvn1e1Pqy4dS7v6qn0+vKAK42pb17WXz2XPtRxfaTrZsfb02NdDzs/XOt6
d62v7fZIxzPGyIdFeu8KVOhLtFUuNHNo7KOL08O8JNIfnlIUVVC3yU8P6iQv
T/v/eCT4YRTUxcELHw+jr/9xOj8ojPha5xCBgGZQQOtGVrSEmIDU9o5tLk6u
8fbzjZ0/fvgleKgCt/kpGXyU4G9s1U0/EObnThRG4FlzyGw+yMvogKcMo1iB
tmWeZ/ehDZlX50aQZo+s/llGL1IfhzQmgmAyxmsUwKNSc5R5JmWeNTrHHEEi
LNPjvGYFyJoR8Jj/+sb5/o+V7/9Y/t+/L0FI+csX5tcV2gp3ZI49PDPVO8cY
+brE+rLIXJud3FxgwPF1kcVl9nNoPevz1M0l2hJ8nmykinkZSst5+GTGkfR4
NmtxemJxepIzOcIcG5ihDcIbmJ4Yog59HOxq7W77ZbD9xWj3m8nBT+N9H6i9
beOjjzo+Xbl0Pv9cQ9b92+Vdb8+M99/t/gTnuJNtbxpHe69Rhm73tF8eo9wf
6r91+FASyUM8McE0LdUyOlrbwABoaYOISLnsPGP/QJHYeOX0TA1yrFJquraX
j0AkWfFIvcuVy+HVVfbXrkWGh8n4eAuHBO/3IO2pqSbk5lmkpemnpugkpxjG
xmhUHSEeKHfKLcKGRKhY2wkaGgga6ImLiiIMRFYeWGHFLK2FNLWBvr4wgaDi
6KyEcxAMjVEuqbS9eNfxaBOh9ig+r8TYiQRklZCmhcKCQF1Rgehk4exoYGoi
b2uj6+vp6hvgamKpqKEuYWWu4k2yDgpyiAx2SI5xjwlz8HLRdbBRMNUXUVOA
rECKgJH1czPAY6Q15MC+vUBVXkBaDIgLIWCirQ0qK7yLi139Q9WIHpLWtoJW
eAGCkzTRXRNHkNHSAYKiO+XldpqZ7HckyLu7yDg5iliaAQIWeDsLh3nLxoVq
ejuJuTmI+7nLEe3EXXAiVhhJWxsRV6f93i7y3i5yUf5y6bEaWXGGueFWqRGa
6XFS/n47rl8q+PQOyYAtysSU5dlGBsicO+F/70psQ61b9QH7s0eD715PP30s
4kJjwu1LWU/vlLS1HOtvO9v3ueHJ7bKSbLdIf+2Lp2Joo7dGBy4/f1T8/H7u
vTvpVRUeCWRjPx+10CCdsCDjKxcLj1QmZKU5+npqWpqJWZjslZMGuhrA31uz
qT6iqox4/VL8SO/JvvaGy2cTnt8ue3CptK40vCzL63xdYkvzkZIM7xd3a0c6
73W/u9zz/lrPx+vdb+92vb030P6U1v+WO9ELp1H417vOpa1yJtZmJnnRCpSB
UPkRGT7B4GHLnx4Svpbh54eg3hWkHIYX0kUlEl8lbU1GXedS15BlGn6AySKi
REYQhYLojjFebucPHoJCxxYKMYZ2EILHwNfln5yEDxToWVsHxJOtfYfgiSgK
zSElckMoXUHBZH0BHoPUykHQ4DJ7OfQu+MpjLJAh9HKZkMgN8PqfUHhgAr8d
6ouxVSSvnopEaWfGNxfpf2xw1udpm4uM39dn//Zt9m+/sv/xO/e//7r4t2/T
//Ub59fVKfgV39Yg1aFOTyDlSGvcibVF2sr8BJvet8ChrC7QZlkjrMkuKMrm
pofZtD7WVAeT1jE59okx2cFh9jBon9njg6zxATathz3ZOzMF4Y7y2zrr2xpr
ht47OdzW3/2MOtDKnepdnulfmu5b5vTN0EeHuj7cuXLm/tWT7W+bJ3vfd797
eL2p4ua56q439/4CBdoa7eMv14a7WxbZIy3PHiQmaYSFKQQHKZKjtNzcEZ6f
kKCRV2CWnKJeWmZVU2uflKweG6fo5r4nMGh/ZpZRQYFGbJxE7WHLuHiZ2Hip
yIj9jg4gJ0szJV0jK1e3oNAwI1c7Ok66oo5QcQR36IiVt7cG0U1NXmabgbaM
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
4TtgA/arQlUAP1ldgBNplW2fQz+UFwbhCVlVsXGhd2OxT1lR6VlTRul9H+77
zitUEKHCE5Vz+/9UN9+dT35cyniIIRWY/Bhj8a+QGsBVAJ7Ano0j8ITOAsCE
bgAUYKsCPaKKxVTZjIDvGdwBeCKfATACQKNHlc+r5CqD38sp32smKtWjOkdW
jfkAKFAGWrXPjn0e6n7Z2vzw4+s7H17ee/f8dtODyy/uX3/77JeRnk+/ry/8
+2+LawtD82NdM0NdcxPNq4udi5OdQ10vh7pfjw8297Y/a//4qKflycObx8pk
eVJB3JkGSmVZenlxfFFB/PHqxGJJaG1lbHVZjJjrQc3D5Gaa00hoIcelQOQt
E/twmQ7kXBSP4Voo8pNyfDJz9dhcDA0gBtmGybITCB35fIfkNK2I6L3ZeCMA
NTSmLYliSaZZk2kIEgWRlX2Iz7ctLnGi0swz04/ExKp5ev3k6roz2F/b1e0w
GqWOxmrhnPXMbdUNzXZb2+roWW+xwO5D4tSRDmpoBy2so6GHDyI2xiklyT0u
0j463M7Fcb+lKeSE2erputXbY7cTGqYlAf570XZQaNCBnAzj1DSdgIDtGdn6
Wbl6LLoth4UKCfs5wBtKTVQXsOyy8g6lpKuRSKY0mnU+A8Hl42gMu6wMs6gE
7ZiEI5Exmul5pkwhhsZFZuQZZuB10gnoxAwbT999Th677B0huAsuaA/ArpDA
I44O2wCOISwhOxsIYQFh0bt83UxIVGwOHiMrjiNRPBMTUaHRVpbIPb6B1nY4
TRPjnebmu+1s1K0s9zvYaQX7Inw9zL2dLPIywgAzOX9KerVRWipIMz0EJYWi
BHnhrKwgdlZwtTS3hJ2UHI1wst3pjtidiHfJJHqYW0BHdCFr25/t7dVsbHda
mUI2lruCAoyS49FpibjUBJy3u05SLJJM8r10glYiivdz0bQ0/wmh7HCzMoKM
jkC2FpCfmwY+Cc0n+kR5H0kMNubnuNdLk6/W5xwvSSrhhsjYriV8j0qJL/jr
tePU4yVRQrY5IeNAWOC+y2fK3r+DC7DdH+/3f3i0PPnpt+Xu/tZ7o58fTHY+
/fzs4v/eHJ3ufn62ipceiQtw0CmghwqZYUyqHzvLUUr15hLdzLUgJzso3H+/
iOsqEXvx2O7Xr3BeNdW2vD/X1317fOjp3NSr6YnH8inYf3h5tgdo9vnxj7Mj
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
8rL0WBQEJd9MwEXSKADEDNhMIxJBm0rVLihAHD3qVFfvVlFimxR/2NIcdkn1
dYdiI/fhcwwFNOSZusiT1aHFAicG1ZbPRjYcC7l0JqGxIaqkwKGy1KtE5s6h
YSi5qJgQTX+3XaEB6nBfhy3Mo3JyDktFDjGxGtZWkLUlZKAD/fhn+1Zo/x5o
zzZozy4Ibn6FoN37thgYqe3XgIxtD9k5GSKdDY0ND1lZHDY3249E7MMh9tsj
D6ZEoo9owK0g5oY7UdaaGIS2sf52/SOQi9ORuHAsn+lTW5FRWRZfUhRDz3MJ
9dXA2EB2FpCn8+74IN30GLOseEusFWR4GMqKsSgVhtYLIk6VJN1sIN29QG2s
TpXxvIqkAemJRghTaP9OyEwLKuIHMXMdGVnO1AR0Acn/8om0htLIE6VJFeI4
RrZzbqIxg2gkYjiWcAOqJH5lUqyE53D7SsWr57ChNGDgvy1PTw9/mh5qXZpo
H+t9C67U//vb/H/+VTE/9PHe5XopNTE7xi0n2iknDpsWiWVlODOS7d/fKz0m
iijj+NZLwrkkx5RQw5M1OV0dV5cW3qzLO37/dfi39cG/bI59XeubH+9eXRj4
bW3m9/WFryvTawujq/Ojq3MD6wp4tuWLYuzL8phyJ4KtOvllZQbsaxV6qIqu
33exqoryvXKi2uAby2Obf0ibP1LI/yybqE6Hh5TuJfAoMTxNDAsWOD4bvp3r
W5tVSqd5WOCsLPUpF4CvwUVlQztsXzY3vL44Cu7AqRBypfeR8pBFFS+l9D2D
zfBVva9/9NIrRhXyocUF5fDd3ABAJxipgMoDODYHOEw3nK4O6x24LAO30M92
z492Kab6AM6sAEk1N7q2APB8EkhC+fTQ0nQ/UJ2jXa+Ge15OD3+cGW6eH30/
NvRhevzzaM/rz+/uf2q+09f6aKj3yWjng08vLjQ9qG95fWFm+IV8vFk+9m55
4fPXtZ7fVzpnxl5NDD8fHXryvvlS88fLHd13Ozt+efzkxJ1bJXdvljU9rn/X
1PjqycmH9ytvXS99/FB8+QKtrDi+QBIik4bSKW65uXZcilOByEvCdhNwHCUs
nIznelTmWVXgebTAvUAQQMGj8OkWLDJOxvfmM5wYRAybhuHQUMQs47wsQ3q+
BZeOkIrQRVKsVGjH5xhJhBZSkbVEaCUTI4qKkUKBJZ1qhM/UIuQbsdkoidhJ
VuAmkToIRXZ8vg2HC25RYjGOzUZm5WpFx+2KiN0RFbU9PUs7L0cHn6EXFbGP
lGVYKnRhEmzyUoxYZISQgc7J1GPRkIUip5ws7YxUdQrRWMBHSMRILttSKkZL
RTZspjGXaUSnHI6L0ETbQDaWUHjIrsxEbXy6CZeOLZJ41R2NELAceUygHRwv
n0m5eCqp8VRsZbn/ubqoS6fiztVHXTyTWl0WXlsecr4xkZxnWVzgyOZYksn6
uQQjD3fI0Aie9TMygGwtd1qawr1h5oYQCrHPSBsQki22Vtr29sZW5hqWCC2M
k8kBdUhT76cjRtAeeP4InjI+ogUhLPaibPbbmu30dTM4vB/Os7Aw24NF6rjg
jDQ1IAuTnX5eZonRHumpxlUVccXCkEJ+MI3kmJZoEei7PznKMDJQMzpEJyHk
UFywtgMCcraDyNkoRr4jJwN753TuvUvUy/VZNYUh9cURZ44l49OMnW0ho8OQ
gw3UWJtUK4uqloVz8lxZuS4nKyJqCgIbSuOqZHHsHFdiurmYbVNb6HeqLOFM
XfSpWp/iQudblypfPoXBZG12+Le18ZHud+DS+U0xsjjVOj36Ybrn3e+K0b+s
Tgy1vrhSV8AjRNDTfYTkMDE9gp3uwc/x6XjWcFQYUcENqhdHi4muaVGmNeXp
z+9X9HXfXV5s+cuX0TU5PGyyuTSwNK3sIVke/ro8oer0XpkbhaujAApWBjZW
Br+swNnZ63IAKSNflme+LA+r0EMFIL+uT6rKJn+k+irX94jMNfnI/wSTL3CJ
ZgTO/QR8Bq519ComB1QOqGtzwyvTA+DO6vQQ7LGsnMJTzAFa0r0016lY6Fqe
/6Mysw4XYYaXwT+Rw9avqvdV9bcszfQsTHWtLg0B7jQ/2QmWStQsTQOQ6Zmb
6Zkc7xgf+zQ78XlmsnV29POi8rBYPt25ONk2P/F5bqQVdtqfage/Gflsx0R/
2+xI59xYF0DdhYluxUy/HKzpfsXs0MJYx2j36+7Pjzo/PuprezzU+Xik60lv
68uh3qaujw/fPL3w4vGp9jeXuz/daH9/6f7l0ud3Kjvenh/8fL313dmPr84N
dd5dGHu5NPdueujlxFhTV/e9Zy9PN706+7Hl+ruPV9+/v/zi2clnDxreAiRp
qn/ysPrWNenFS+Ir5/Oqy+NzMuySYk3YNM/CgmCRwEsq8RHz3LgsexYVKWE6
lsvcj5UEABVQIXEpKQxgUdF56ZaETCtSFoKYbU4j2oq5biKOEznXPB9vJmCj
iiVOZUVO5cXg1kUqMi8ptCsvwZYUIsqLkZVlOJnYlkE3ycxQIxP02QyEkIuS
ClGFMlRZiUN1hRMbNn9GiQvtxUIbNsssn6RHyten0AyFXFsh15rDsCZm6EoY
mFM14ZUyTxEZQyOaCxkoMt5CwMGUFHjgcw0y0g5zmBYJMXtycw6BVzhx3L+h
3p/PQ1DydIk5Gnl5dnGx2hHhB+n5NoCH5KSbschoYo4lh47jMuyrSkOKJD5l
Bd4Mml2xzKfuWHSF1K1S5l1b6td4Mqa+Juzcqegrl1PpFHP4yJtmQiIZ0xk2
GVn68XEa2dmGaemagT76UWGmibEWaan2keHWVuZbrS22x4WjXd2MEFb7kTbq
7t7GRmY/W6L2ox3VEI579u+HtLUgG8RBX3fjsECEm8OhYG8LC/2txjo/W5rt
t0OoI+009++G7NGaCTFuyXHe6Qm6Ur4fIRtDIWCYFGce3Skv3YqZj44IOhjq
vyc+UjMrxTg+SgufYlwi9BJznIX59i/vcu9fzq8rCmES0Vwy6miBPyHFOCpo
n7cTFBuy78rpjMbqhHPHEgtE/nyWR0NdRF1V1Mm6uIayVB7VnZRmLGYh60p8
jxWGnaoAWOom5GOuXyp60wTP5oBLNth6Q50vhjpeAi69Mt89M/phqPu1fKz9
//19+dvCwMPr9YWMNGamfxk3tVqWJcryq2AmdDw/UcuKqWKEVQsiZGSfrBjr
EyXZNy9IOj7eXJ5v/31zZGGmbaz33czIpw04gLJvc2Xki3x8fXECzqeAUyfG
NhQATAY3loe+rAytK/qV5GRsbWlU6Q82qqq+flub+P3LNAATBSASSoHzI6SA
7by6BDCqfxMsJZKoCibKsC2laQBgKbMjKzODq7NgDSijveG1Og0bLy/PwiaH
gHUo4KnewT+qHAq49guXdldGlxeG5ZPKk9kFmJCsKId/gYRZmupeAAAy2Tkz
2jYx+Glq+PPCZPfiTDs8ijjTMTXxeWSoeaDvzSTgEhMt4DcwN9Y2P93yZal3
da5LMQt03+e5sdapwQ/jgx8mht7PjnfOTXbOTrTPjLeBBaeWT3bNjrTJJ9un
Bj72d7zo+HC37d3NtuY7HZ9u9rTdHe5qGuh+1NV868Xd+qd3j717dOLjs1PN
z+rOn6Ddvy5rfn78/YuGhzeLHt4s/NjU0P/5Ysfna/3d9+dmXg8NPX/8/OQv
9489eXHq0aOGJ/eOt3241vbxytvnpy+eF1y/Ij5ZTy4pyTp9KrO0JDo1xSI+
zkQqCTx7Kuf0ifSG+sRjlVFlRQFinhOPiuAzUIVc+3KJe12RV0mhb4HQlUNH
MchoSp4NnWQtYOFKpF4yoTOdbEUlWRVJnOuq/GuPepcXO1ZXeBQWIEsKbYtl
yEKpZUmhTXkJpkBsyWLoUwh6TKoZm27OpplzGSYAKGQiuxKZDY1hymJb8PgI
sOgMs3yKIZ1iyGKayEQYkcBWykOScw0BepyvjaotDBBRMfg0o0Kem0zsAr4N
ARvNotkBpcNhWcdH783OOMJlWp45FXbxXHSxFAfeQsgB2sqeSkHm5ZoJBB48
hkNeljmL5pCdbJqRaEzF20m5nkKGG5uCJufZFIq9T9Qlnq2LqCryOXE07HR1
WHWl+7GjPjIhMj5ue0aSOpVmKhbhCos9JVInLg8tkTqyuRYMqjcxD00i2PM4
3nyOX2YaLirEIiUFFxlm7uyqYY/b5+F9xMICQtrvwTkftHffZYPUwtlrhYUj
8Fk+FKJfXJhNbDjCFXfYAX3IAaOJRWqiEOoaByB3Z73UeLeEWG8xy75I6J+f
jc7H2/IYLhKuOwDD3FSzsMBdseFq+XgrEdeFQUbQ8xE8FobFQFYIAu9eIZ2u
ja8QepFTzbLitPLTjZm5psQMvYw4bVquRePJuAuNaWdPJTXUxNVVxZxpSGyo
jWo8kXziaBqX5k3KMpOyLGuLfI6JA+uKAyslOC7L9vrFoubXcDv9ykw/4A/r
c319bU+mhprX4Am7NsVMz9pU9z//+e//sTn39FajkBSTFuHIyg7gkyJruMlX
qtmtj+oraJEyomcZE+BJNJ/sf7me+uSXisHuhyvzbZurgLR3TQy8WRh8+3UV
zm2BDcTkE5uKMXjJx2HnUoAkK0MbywMwM4FDGYByGVeuIZXMAbebq+OAmYA7
gAMAPPleOYGjW+CS7OAy3Oveu7EwoHR87V+d61mdg2PmvsJOjAMb86OAiqzP
DwMkWZ3tX58fX58bW11QrcHV+SEY0+SAosD1GQAmy3DOr7JlbmUMrtsomz3k
8sH5ud7pqY652Z7F+b7Fhb7Zme7Jibalhf7pqc7xsdbpqdbF+e5l+YB8sX9x
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
3kVsDxnbpYTtJiDZnSwNLOc4A+laW+jDY9kdrQnNyTXJI5oRmAhJgUcu0ZTD
d+NzQwBl5TLQ9VW+ALqrRMEVfN9iITY1QetUg/hdEzybo3TV6PltfVQ5vTv4
28bYv/02I4cz7nv/+Z+/bc73Pb5+MiPGcwcEeaKOWBtuDUQdjnbRywiyYqS7
SfMDWh5UfJt++teVD/ODD1fm3qwtta0sfFpdaoMdF9eG/7bSt7E8Al4WjneZ
HVyD+7tGNhZhZFAsdMNrHl4rS8pj2cWhdcXI5p/T99+9y34Mwtv80xD+j6UY
hid2l8BrDq8oD27k8PhMj2IKCDeVwBkEOk4xNbQ8DVBlcGVqUDE7qJgBMDKo
KpsszwM20gOoyIZi8IsCQE337EjLzMTndaC/VoGk6vv2derb5uT66rBiqVex
NLwGFNDaxOry6K9fwRdH5PLeFcCvNoa/bIzIlzpmZ1oAmEwON/V1PWxruf75
/dXWT9dH+u7PTr6aHXo81nO/v+Nq56eLg103x/vv9ndcb31/pulW5dMbpc2P
6zten219cart7YWhjl8GOq6tLbwd673T+/nqp9fHXz+pudJI/eWq4OJp2v2L
7MdXOVcbCKeq0y4BDdKYfeV0xqMbjAsnUysKA8tFftWy4PqyiAvHUxpr484f
j799hvn0uuDZL+LX90reNdW2vax787DqdGVujTjpcnX+m9vFb2/Jzldnvrwj
bXogfPNQ3PK2/vXjsju3uLdvcH+5JTh3Dn+iIeNyY86Ni+Q7N8gPbjHvXCOD
d2yoiqkrimgojTha4l0h8yoSuhTwHQGSlBV4VhX5VMg8AJ5IOPZCADJ0m9oy
3wIuDsBLVYlrdbFPXVlAWYEzkAkyABccm0IRSsJFitn2Yo4DYBoF4FPNcyji
O4uZaB4ZIaDhJEyHIq5bqdgFcCEZz1HGdywSOTNJSCEDI6DiBGSHIp53Y1n8
iZLocrafmO9aXRJSKgYXX2cJ37VQ5A0uteWl/uUlfsUyr7Ji3+qSwFKpd4nU
s6okpLosvKLcR1bgWgxeWeguE7kLuY70XIsCtiuPjGUz7AXgR+A4cOkYPtcB
IBIl34KWaRsTvDsrXpNM0mMydCkkDS5TJyoSys7UiIvc6+UKOThDCYkHxFIU
g62dmAo520P2WCjAF4qN2hYZ9lNaigadYkrJN+cwETSiJYVqxWajgPjicOzJ
+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
tMRCplyjNVWs8qXxPGr3c7sudgGY/F8Gvfmp
         "], {{0, 375}, {367, 0}}, {0, 
         255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{367, 375},
       PlotRange->{{0, 367}, {0, 375}}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"Trovare \[Alpha]\\n\"", FontColor -> RGBColor[1, 0, 0], 
         StripOnInput -> False],StyleBox[
        "\"Approssima il risultato per difetto alla prima cifra \
decimale\\n\\n\"", FontColor -> RGBColor[1, 0, 0], 10, StripOnInput -> False],
        StyleBox["\"\"", StripOnInput -> False],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`alpha2], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`alpha2, "2.5"], 
             StandardForm]]}, "RowDefault"], "\"sen(\[Alpha])\""],"\" = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`gamma3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma3, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`gamma2], String, FieldSize -> 1], 
           "\"\[Degree])\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma2, "60"], 
             StandardForm]]}, "RowDefault"]],"\" \[LongRightArrow] \"",
        "\"sen(\[Alpha]) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latob], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latob, "2.5"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latoc], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latoc, "3"], 
             StandardForm]]}, "RowDefault"]],"\" \[CenterDot] \"",FractionBox[
        
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num10], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num10, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den10], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den10, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`res10], String, FieldSize -> 2], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`res10, "0.7"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703942595144486*^9, 3.70394679834509*^9, 3.703948375679737*^9, 
   3.704003077539571*^9, 3.704168432306019*^9, 3.704182873744755*^9, 
   3.704190422024982*^9, 3.704190529546404*^9, {3.7041962721780014`*^9, 
   3.704196275251111*^9}, 3.7041964748939533`*^9, {3.7041966952389927`*^9, 
   3.7041966992525682`*^9}, {3.7041967594857993`*^9, 3.7041967622665634`*^9}},
 
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 ExpressionUUID -> "4a271409-7cc4-4f82-b54b-702a0e348304"]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 FontSize->14,
 FontWeight->"Regular",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0b0d8546-a0e6-4e8e-8c13-213784e15ec2"]
},
WindowSize->{1264, 637},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4510, 102, 77, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[7063, 176, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[8810, 216, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[11606, 298, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[16412, 418, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[28932, 734, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[50945, 1348, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[57603, 1518, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[73991, 1938, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[91173, 2353, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[97805, 2566, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[116423, 3020, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[133351, 3458, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[145408, 3740, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[170883, 4316, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[178404, 4516, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[187398, 4749, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[194264, 4930, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[202833, 5170, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[213880, 5451, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[224951, 5731, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[233636, 5969, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[250188, 6449, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[259550, 6683, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[268402, 6898, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[334810, 8034, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[827838, 16176, 191, 5, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 828374, 16194}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4510, 102, 77, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5093, 126, 357, 7, 103, "Title"],
Cell[CellGroupData[{
Cell[5475, 137, 267, 5, 50, "Code"],
Cell[5745, 144, 424, 8, 21, "Message"],
Cell[6172, 154, 409, 6, 30, "Output"]
}, Open  ]],
Cell[6596, 163, 430, 8, 87, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7063, 176, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[7257, 183, 1516, 28, 400, "Section"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8810, 216, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[9026, 225, 387, 8, 73, "Section"],
Cell[9416, 235, 711, 13, 123, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10164, 253, 377, 8, 73, "Section"],
Cell[10544, 263, 1013, 29, 571, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11606, 298, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[11822, 307, 1659, 40, 233, "Input"],
Cell[13484, 349, 611, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14132, 368, 608, 14, 117, "Section"],
Cell[14743, 384, 1620, 28, 459, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16412, 418, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16628, 427, 439, 9, 73, "Section"],
Cell[17070, 438, 1570, 48, 117, "Text"],
Cell[CellGroupData[{
Cell[18665, 490, 425, 9, 61, "Code"],
Cell[19093, 501, 6587, 145, 528, "Output"]
}, Open  ]],
Cell[25695, 649, 473, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[26193, 661, 376, 9, 22, "Code",
 CellOpen->False],
Cell[26572, 672, 1018, 21, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27627, 698, 272, 7, 22, "Code",
 CellOpen->False],
Cell[27902, 707, 969, 20, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28932, 734, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[29126, 741, 527, 10, 56, "Text"],
Cell[29656, 753, 2223, 75, 122, "Text"],
Cell[CellGroupData[{
Cell[31904, 832, 223, 6, 61, "Code"],
Cell[32130, 840, 7852, 172, 528, "Output"]
}, Open  ]],
Cell[39997, 1015, 2151, 61, 74, "Text"],
Cell[CellGroupData[{
Cell[42173, 1080, 228, 6, 61, "Code"],
Cell[42404, 1088, 3337, 74, 359, "Output"]
}, Open  ]],
Cell[45756, 1165, 4986, 173, 263, "Text"],
Cell[50745, 1340, 163, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50945, 1348, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[51161, 1357, 311, 8, 61, "Code"],
Cell[51475, 1367, 726, 15, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52238, 1387, 344, 8, 61, "Code"],
Cell[52585, 1397, 4969, 115, 539, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57603, 1518, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[57819, 1527, 335, 7, 73, "Section"],
Cell[CellGroupData[{
Cell[58179, 1538, 256, 6, 61, "Code"],
Cell[58438, 1546, 9298, 205, 528, "Output"]
}, Open  ]],
Cell[67751, 1754, 3408, 102, 411, "Text"],
Cell[71162, 1858, 1042, 28, 68, "Text"],
Cell[72207, 1888, 519, 11, 67, "Text"],
Cell[CellGroupData[{
Cell[72751, 1903, 270, 7, 22, "Code",
 CellOpen->False],
Cell[73024, 1912, 906, 19, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73991, 1938, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[74207, 1947, 376, 8, 73, "Section"],
Cell[74586, 1957, 461, 9, 73, "Text"],
Cell[CellGroupData[{
Cell[75072, 1970, 228, 6, 61, "Code"],
Cell[75303, 1978, 7287, 166, 588, "Output"]
}, Open  ]],
Cell[82605, 2147, 383, 8, 42, "Text"],
Cell[CellGroupData[{
Cell[83013, 2159, 228, 6, 61, "Code"],
Cell[83244, 2167, 7237, 165, 588, "Output"]
}, Open  ]],
Cell[90496, 2335, 628, 12, 73, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91173, 2353, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[91389, 2362, 394, 8, 73, "Section"],
Cell[91786, 2372, 5970, 188, 556, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97805, 2566, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[98021, 2575, 311, 8, 61, "Code"],
Cell[98335, 2585, 18039, 429, 1891, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116423, 3020, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[116639, 3029, 311, 8, 61, "Code"],
Cell[116953, 3039, 16349, 413, 1247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133351, 3458, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[133567, 3467, 335, 7, 73, "Section"],
Cell[CellGroupData[{
Cell[133927, 3478, 733, 20, 78, "Subsection"],
Cell[CellGroupData[{
Cell[134685, 3502, 228, 6, 61, "Code"],
Cell[134916, 3510, 10202, 215, 426, "Output"]
}, Open  ]],
Cell[145133, 3728, 214, 5, 73, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145408, 3740, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[145624, 3749, 333, 7, 54, "Subsubsection"],
Cell[CellGroupData[{
Cell[145982, 3760, 284, 7, 61, "Code"],
Cell[146269, 3769, 8896, 190, 528, "Output"]
}, Open  ]],
Cell[155180, 3962, 389, 8, 40, "Input"],
Cell[155572, 3972, 2850, 73, 668, "Text"],
Cell[CellGroupData[{
Cell[158447, 4049, 255, 6, 61, "Code"],
Cell[158705, 4057, 11246, 236, 528, "Output"]
}, Open  ]],
Cell[169966, 4296, 868, 14, 104, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170883, 4316, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[171099, 4325, 313, 8, 61, "Code"],
Cell[171415, 4335, 6416, 157, 787, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177868, 4497, 285, 7, 40, "Input"],
Cell[178156, 4506, 199, 4, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178404, 4516, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[178620, 4525, 315, 8, 61, "Code"],
Cell[178938, 4535, 8411, 208, 723, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187398, 4749, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[187614, 4758, 332, 7, 73, "Section"],
Cell[187949, 4767, 287, 6, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188273, 4778, 1390, 43, 81, "Section"],
Cell[CellGroupData[{
Cell[189688, 4825, 227, 6, 61, "Code"],
Cell[189918, 4833, 4285, 90, 426, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194264, 4930, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[194480, 4939, 448, 11, 88, "Subsection"],
Cell[CellGroupData[{
Cell[194953, 4954, 253, 6, 61, "Code"],
Cell[195209, 4962, 4254, 89, 426, "Output"]
}, Open  ]],
Cell[199478, 5054, 3306, 110, 409, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202833, 5170, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[203049, 5179, 312, 8, 61, "Code"],
Cell[203364, 5189, 10467, 256, 1199, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213880, 5451, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[214096, 5460, 313, 8, 61, "Code"],
Cell[214412, 5470, 10490, 255, 628, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224951, 5731, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[225167, 5740, 371, 8, 73, "Section"],
Cell[CellGroupData[{
Cell[225563, 5752, 1997, 60, 78, "Subsection"],
Cell[CellGroupData[{
Cell[227585, 5816, 229, 6, 61, "Code"],
Cell[227817, 5824, 4616, 102, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232470, 5931, 407, 13, 22, "Code",
 CellOpen->False],
Cell[232880, 5946, 683, 15, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233636, 5969, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[233852, 5978, 329, 7, 62, "Subsection"],
Cell[CellGroupData[{
Cell[234206, 5989, 232, 6, 61, "Code"],
Cell[234441, 5997, 5810, 124, 359, "Output"]
}, Open  ]],
Cell[240266, 6124, 9873, 319, 563, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250188, 6449, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[250404, 6458, 313, 8, 61, "Code"],
Cell[250720, 6468, 8781, 209, 826, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259550, 6683, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[259766, 6692, 311, 8, 61, "Code"],
Cell[260080, 6702, 8273, 190, 981, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268402, 6898, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[268618, 6907, 313, 8, 61, "Code"],
Cell[268934, 6917, 65827, 1111, 429, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334810, 8034, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[335026, 8043, 314, 8, 61, "Code"],
Cell[335343, 8053, 492468, 8119, 689, "Output"]
}, Open  ]]
}, Open  ]],
Cell[827838, 16176, 191, 5, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"]
}
]
*)

