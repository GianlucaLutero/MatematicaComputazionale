(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258316,       6570]
NotebookOptionsPosition[    246768,       6205]
NotebookOutlinePosition[    249676,       6279]
CellTagsIndexPosition[    249596,       6274]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.701758817043281*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "ff061b19-78df-4426-84ae-4a02cd5c333e"],

Cell["\<\
TRIGONOMETRIA
\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7017576485113573`*^9, 3.7017576639421873`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8fad6acd-86e2-4dc6-82e1-89f1a60f5c96"],

Cell["\<\
Calcolo numerico e software didattico-Matematica Computazionale
Adele Valerii - Sara Gattari - Gianluca Lutero - Filippo Soncini\
\>", "Subtitle",
 CellChangeTimes->{{3.7017576683852177`*^9, 3.7017577041746807`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "5b35e99e-8570-4658-af04-5f307a8d7bd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "27012d45-0ea1-4f58-8190-50e8b92ac9a0"],

Cell[TextData[{
 StyleBox["Obbiettivi",
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]],
 "\n",
 StyleBox["\n", "Text",
  FontColor->GrayLevel[0]],
 StyleBox["- Apprendere i principali teoremi della trigonometria con facilit\
\[AGrave] e divertimento:\n\n\t- Definizioni di Seno, Coseno e Tangente\n\t- \
Teorema della corda\n\t- Teorema dei seni\n\t- Teorema del coseno\n\t\n- \
Rendere i concetti facimente comprensibili agli alunni con disturbi specifici \
dell\[CloseCurlyQuote]apprendimento (DSA). \n\n- Infine, tramite gli esercizi \
guidati dare la possibilit\[AGrave] allo studente di mettersi alla prova.", 
  "Text",
  FontFamily->"OpenDyslexic",
  FontColor->GrayLevel[0]],
 StyleBox["\n", "Text",
  FontColor->GrayLevel[0]]
}], "Section",
 CellChangeTimes->{{3.7017577262703753`*^9, 3.701757728538085*^9}, {
  3.701757778833646*^9, 3.701757780764263*^9}, {3.701758122796708*^9, 
  3.7017581242681093`*^9}, {3.702187705035461*^9, 3.7021877678940477`*^9}, {
  3.702187834980485*^9, 3.702187936858981*^9}, {3.702188056149166*^9, 
  3.702188129207547*^9}, {3.7023575954637947`*^9, 3.7023576214336452`*^9}, {
  3.702957534935906*^9, 3.7029576008131323`*^9}, {3.702957670130249*^9, 
  3.702957718002822*^9}, {3.702957914559709*^9, 3.7029579664689417`*^9}, {
  3.7029580102657127`*^9, 3.702958086000264*^9}, {3.70295818071097*^9, 
  3.702958199843223*^9}, {3.703563402445723*^9, 3.70356340494981*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "28867ebd-4ddc-4d62-8d18-4803749c67c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "496f1601-951b-40b1-89e9-198113a781e6"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A chi \[EGrave] rivolto",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757786788609*^9, 3.7017577952106047`*^9}, {
  3.701758096365346*^9, 3.70175811028111*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1c64015d-75f2-4913-bd06-d48b6da81dcc"],

Cell[TextData[{
 "- Studenti del terzo anno della Scuola Secondaria di Secondo Grado.\n\n- \
Prima parte rivolta agli studenti del primo anno della Scuola Secondaria di \
Secondo Grado, in quanto ne hanno necessit\[AGrave] per \
l\[CloseCurlyQuote]applicazione alla fisica.\n\n- Caratteristiche specifiche \
del programma indicate per l\[CloseCurlyQuote]apprendimento dei ragazzi ",
 StyleBox["con disturbi specifici dell\[CloseCurlyQuote]apprendimento (DSA). \
", "Text",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{
  3.701757802564528*^9, {3.702188176195565*^9, 3.702188511755487*^9}, {
   3.702958231642229*^9, 3.702958262438171*^9}, {3.702958301256915*^9, 
   3.7029583388484077`*^9}, 3.702958755359706*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f9dc73bd-d5aa-4fe5-8812-54d33a5f8699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Prerequisiti",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757812179427*^9, 3.701757818585503*^9}, {
  3.7017581145044003`*^9, 3.701758117589946*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f0a85a5b-0874-4db0-975b-4e210f1ba1e9"],

Cell["\<\
- Nozioni algebriche che si acquisiscono durante il primo biennio della \
Scuola Secondaria di Secondo Grado.

- Il Teorema di Pitagora 

- Propriet\[AGrave] dei triangoli.

  
\
\>", "Text",
 CellChangeTimes->{{3.701757821007757*^9, 3.701757826242482*^9}, {
  3.702188561809354*^9, 3.7021887207319193`*^9}, {3.702189008946814*^9, 
  3.702189057732115*^9}, {3.702958793514718*^9, 3.702958859146895*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "65271cce-8aa2-4634-9541-8ab133eb2f2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d4a3994a-d88f-4f00-98b2-db18aef836ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\</Users/filippo/MatematicaComputazionale/Trigonometria.m\>\"", "]"}], 
  "\\\\", "Quiet"}]], "Input",
 CellChangeTimes->{
  3.703569631646016*^9, {3.703866257456611*^9, 3.70386626964732*^9}, {
   3.703940891185894*^9, 3.703940892633933*^9}, 3.7039466013663073`*^9, {
   3.704004335365964*^9, 3.7040043426327047`*^9}, {3.704168155668787*^9, 
   3.70416816832374*^9}},
 EmphasizeSyntaxErrors->True,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "efc61d3a-ddfc-4487-8f91-61dfec0839cd"],

Cell[CellGroupData[{

Cell[TextData[{
 "\n",
 StyleBox["Regole",
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]]
}], "Section",
 CellChangeTimes->{{3.701757998441074*^9, 3.701758093017961*^9}, {
  3.701758147471192*^9, 3.7017581510838003`*^9}, {3.70175826528433*^9, 
  3.701758273178944*^9}, {3.7029591428241158`*^9, 3.702959190381872*^9}, {
  3.7029595630691423`*^9, 3.7029595743307877`*^9}, {3.702959660841516*^9, 
  3.7029596671218147`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "eebc9a3e-1f4d-4185-98bf-2c9e5ec0cc68"],

Cell["\<\
Teoria

- Per andare avanti clicca sulla freccia in alto
- Quando vedi un pulsante clicca sopra per scoprire nuove cose
- Per vedere cosa accade prova a muovere i punti nei disegni( se premi il \
pulsante + puoi avviare le animazioni )

Esercizi

- Usa sempre le lettere maiuscole per indicare i lati
- Schiaccia invio per confermare ci\[OGrave] che hai inserito
- Il seno \[EGrave] indicato con: sen
- Negli esercizi guidati leggi i suggerimenti e completa di conseguenza all\
\[CloseCurlyQuote]inteno delle caselle
- Negli esercizi a risposta multipla clicca sul pallino della risposta che \
secondo te \[EGrave] corretta

Pulsante calcolatrice?
Se hai bisono puoi usare un foglio per fare i calcoli\
\>", "Text",
 CellChangeTimes->{{3.7029592909524612`*^9, 3.7029595200826263`*^9}, {
   3.702959843131048*^9, 3.702959851926807*^9}, 3.702960857833798*^9, {
   3.702961330801569*^9, 3.7029613704580307`*^9}, {3.702961659252536*^9, 
   3.702961686312952*^9}, 3.7040044149045*^9, {3.704004547202037*^9, 
   3.704004661355953*^9}, 3.704005021492406*^9, {3.704005175842289*^9, 
   3.7040052471763563`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "65f2a966-0f58-4ab5-91cc-3afc3391e721"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "662c697d-36a7-4e84-8fbd-936cc439c2e4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: SENO e COSENO",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703561953952704*^9, 3.7035620060291843`*^9}, {
  3.703563194375814*^9, 3.70356327112707*^9}, {3.703563334396192*^9, 
  3.703563365089061*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a3bc7838-fb0f-40bc-b142-ca1a36dc64e5"],

Cell[TextData[{
 StyleBox["sen(\[Theta]) ",
  FontSize->36,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["y", 
     RowBox[{"P", " "}]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->36,
  ExpressionUUID -> "d8f19e16-fddf-4039-8504-40f0665e549a"],
 StyleBox["\n",
  FontSize->36],
 StyleBox["cos(\[Theta])",
  FontSize->36,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->36,
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["= ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["x", "P"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->36,
  ExpressionUUID -> "624205bf-720a-47d3-b203-f2699dec58e4"]
}], "Text",
 CellChangeTimes->{3.7035699081514*^9, 3.703570728184163*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b42f20ef-8eb8-4505-b903-b1082c9ebae2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defsencos", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703569865758745*^9, 3.703569868602861*^9}, {
   3.703570157260002*^9, 3.7035703000474863`*^9}, {3.703570584882036*^9, 
   3.7035705883114557`*^9}, 3.703862618133802*^9, {3.703862688559525*^9, 
   3.703862728464252*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b88380e5-673a-4261-af01-e00664bfec47"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {475., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5280$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5280$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Red, Blue, 
               Darker[Green, 0.3]}, {"Sin", "Cos", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{526., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703570086673793*^9, 3.7035705582335*^9, 3.7035705894076567`*^9, {
   3.703862623630522*^9, 3.7038626484758387`*^9}, {3.703862701216816*^9, 
   3.703862730161173*^9}, {3.7039408961937213`*^9, 3.703940904892466*^9}, {
   3.703941771404128*^9, 3.7039417811581984`*^9}, 3.703946794330942*^9, 
   3.704003074354559*^9, 3.704168379883692*^9, 3.704169054186317*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "416cd269-f408-4409-98cb-938b68820a9c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Osserva che l\[CloseCurlyQuote]equazione della circonferenza \
\[EGrave]:",
  FontSize->18,
  FontColor->GrayLevel[0]],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["sen",
     FontSize->24,
     FontColor->RGBColor[1, 0, 0]], "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1, 0, 0],
  ExpressionUUID -> "62f4fd6c-8d56-4ec0-a13c-4193c0446bca"],
 StyleBox["(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" + ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox[
     StyleBox["cos",
      FontColor->RGBColor[0, 0, 1]], "2"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "fa76b765-2409-474a-aad9-28972e315b82"],
 StyleBox["(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = 1\n",
  FontSize->24],
 StyleBox["Questa \[EGrave] la",
  FontSize->18],
 StyleBox[" formula fondamentale",
  FontSize->18,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[" della trigonometria.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.7040058474588614`*^9, 3.7040058836280193`*^9}, {
  3.7040059146466913`*^9, 3.704005930423451*^9}, {3.704005979739992*^9, 
  3.704005997854095*^9}, {3.70400603316066*^9, 3.7040060505338573`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "cf213812-a977-42f6-8d34-514e88985674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonesen", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038661230170307`*^9, 3.7038661273565397`*^9}, {
  3.7038661706133275`*^9, 3.703866196608869*^9}, {3.7038662955113144`*^9, 
  3.7038662999021873`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a0933898-eae8-4ae9-baeb-b472fca09161"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Seno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`grafiseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663013408756`*^9, 3.703866338606423*^9, {3.7039408967412786`*^9, 
   3.703940908900725*^9}, {3.7039417718211765`*^9, 3.703941783828933*^9}, 
   3.703946794573558*^9, 3.7040030745419827`*^9, 3.704168383022398*^9, 
   3.7041690544363422`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "81226213-9cb1-4777-b359-350e3d9105b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonecos", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038663781597786`*^9, 3.7038663822816715`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "aa6610b1-50bb-4fe0-ad89-22d3ca02ed12"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Coseno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficocoseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663832968783`*^9, {3.703940896794318*^9, 3.703940926428261*^9}, {
   3.7039417718476787`*^9, 3.7039417868394766`*^9}, 3.703946794652046*^9, 
   3.7040030746039553`*^9, 3.704168385882049*^9, 3.704169054451968*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b13d9bf5-0a84-4dba-a9ec-0d3e351aae47"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "3329c87d-1a06-45ce-a2cd-fc587ad29a03"],

Cell[TextData[{
 StyleBox["sen(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "P"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "d982702b-ae3c-4725-a974-1b3780fba3a2"],
 StyleBox[" = PH = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["PH", "1"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "735a36e2-42f6-4fd2-840d-5c09348b7c53"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["PH", "OP"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "5febb2a7-b988-4ba8-aa27-76fb5326cc9b"],
 StyleBox["\n",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "P"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "d512eaa2-5208-4fe8-abd5-919c43092a3c"],
 StyleBox[" = OH = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["OH", "1"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "fe32aac9-26ad-4d32-931f-367e398bcdd9"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["OH", "OP"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "85cc343e-18fc-425c-ae1f-afd60a390336"]
}], "Text",
 CellChangeTimes->{{3.704002520045436*^9, 3.704002569110077*^9}, {
  3.704002609203266*^9, 3.704002706699196*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f641fa14-e015-4896-9bf4-3b3960a89684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rapporti", "[", "]"}]], "Code",
 CellChangeTimes->{3.70386277636623*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c19c712c-ace5-41eb-a29b-8672b266d7be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {460., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5327$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5327$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], Thick, 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}]}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{
               Darker[Green, 0.3]}, {"\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{511., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.703862777693576*^9, 3.703940896841196*^9, 
  3.7039417718626924`*^9, 3.7039419072994184`*^9, 3.703946794719541*^9, 
  3.704003074653544*^9, 3.704169054545762*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "61d128ec-a975-405c-af87-80593581fbe1"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\n\n",
  FontColor->RGBColor[1, 0, 0]],
 "\n\n\n\n\n",
 StyleBox["sen(\[Theta]) ",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "OPPOSTO", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "01e91f61-f4ec-42cd-90cb-6c39ffbb993d"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["AB", "AC"],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "f2889c35-92b8-4f64-a7c2-e0faa37099e4"],
 StyleBox["                 ",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "ADIACENTE", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "b944ddc3-8fff-4f34-9647-bc591f9aac5e"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["BC", "AC"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "e1c288c0-ddef-44c9-8a07-f502c20eddc8"]
}], "Text",
 CellChangeTimes->{{3.703562630593067*^9, 3.703562897231632*^9}, {
   3.703562928577821*^9, 3.7035629464673862`*^9}, {3.703563019580144*^9, 
   3.703563031947398*^9}, {3.70356551397563*^9, 3.703565517468425*^9}, {
   3.703565551194296*^9, 3.703565554128024*^9}, {3.703862759791403*^9, 
   3.7038627612753*^9}, {3.703866459730482*^9, 3.7038664961437783`*^9}, 
   3.7038665278697076`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c5741caa-323d-4976-ae87-5953bbe4f2a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangolorett", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.70386282246383*^9, {3.704168199933444*^9, 3.704168208937605*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "748000fa-f200-4166-9a9d-fe3b508ce699"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {2^Rational[-1, 2], 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {
            0.7071067811865475, 0}, {0.7071067811865475, 
            0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"B\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703862823428588*^9, 3.703940896894593*^9, 
  3.7039417718939495`*^9, 3.70394298377773*^9, 3.703946794869362*^9, 
  3.704003074786738*^9, 3.704168209625142*^9, 3.704169054858261*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "350b13f9-d476-4ebc-abf4-421614f99f94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "127890ed-ba16-42ab-81a5-d1a4c0887359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Calcolatrice", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942948273542*^9, 3.703942951729044*^9}, 
   3.703948397538411*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "33addc57-ad12-4f54-96f0-eae9c73c3a21"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["b7nny_shm", 3, 1]],29,
   "FrontEndObject[LinkObject[\"b7nny_shm\", 3, 1]]","29","29"},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{3.7039429525834045`*^9, 3.703946795693454*^9, 
  3.70394839860182*^9, 3.704003075054468*^9, 3.704168351449605*^9, 
  3.7041690550926604`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1c9131bf-2e55-4e50-b4bc-9f4803ca96d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EsercizioEsempio", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039420235445185`*^9, 3.7039420274694376`*^9}, {
  3.7039481991561823`*^9, 3.703948203560149*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f76284ba-c14e-4f2b-be14-65067bf316cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esempio 1:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esempio 1:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{LineBox[{{0, 0}, {0, 1}, {2, 0}, {0, 0}}], 
        LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}], 
        CircleBox[{2, 0}, 0.2, {2.5394540616517496`, 3.1852258848896513`}], 
        CircleBox[{0, 1}, 0.2, 
         NCache[{260 Degree, 340 Degree}, {4.537856055185257, 
          5.934119456780721}]], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Theta]\"\>",
          StripOnInput->False,
          FontSize->10], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          FontSize->10], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          FontSize->10], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 25 \\\\\\\\nC = 50\\\\\\\
\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\" \"\>", TextForm]], "InlineText"],
      Text[" "]], 
     StyleBox[
      PanelBox["\<\" Sin(\[Alpha]) = \\!\\(\\*FractionBox[\\(A\\), \
\\(B\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\\\ \\)\\(25\\)\\(\\\\ \\)\\), \
\\(\\(\\\\ \\)\\(50\\)\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(1\\)\\(\
\\\\ \\)\\), \\(2\\)]\\)\"\>"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxDividers->{"RowsIndexed" -> {3 -> RGBColor[1, 0, 0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{10}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7041691135856333`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "98a57774-de45-4b81-a33b-d9999ffbe613"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: TANGENTE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703563451333693*^9, 3.703563480763627*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "4a909eba-d39c-41e1-bc4f-4eef9e871f13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"definizionetangente", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862859615328*^9, 3.70400306888826*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "97f5c21a-9e14-4727-adf9-8df6050a1352"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {474., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5387$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5387$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{1, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {Black, 
              Disk[{1, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, Thick, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, {
              Opacity[0.2], Magenta, Thick, 
              EdgeForm[
               Directive[Magenta]], 
              Triangle[{{0, 0}, {1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], 
             If[
              Or[Trigonometria`th <= Pi/2, 
               And[Trigonometria`th > Pi, Trigonometria`th <= (3 Pi)/2]], {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}}]}}, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}}]}}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{1, -3}, {1, 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text["K", {1.1, 0.1}], 
             Text["T", {1.1, Tan[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Rotate[
              Text[
               Style["Tan(\[Theta])", Orange], {
               1.1, Tan[Trigonometria`th]/2}], 90 Degree], {Orange, Thick, 
              Line[{{1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Orange, 
               Darker[Green, 0.3]}, {"Tan", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{525., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703862860503118*^9, 3.703940896925843*^9, 3.703941771940825*^9, 
   3.703942052907565*^9, 3.7039467958689327`*^9, {3.704003075201689*^9, 
   3.704003077693231*^9}, 3.7041683449801693`*^9, 3.7041690552020464`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ee90527e-a735-4d27-bc3f-a42e22000a2d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\nI triangoli POH e TKO sono simili: \n\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TH", "PK"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "42d20d63-4052-4ce1-ae2c-708edb7ccb48"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["OK", "OH"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "d23a690c-1c98-4397-9ebd-ba7c081c5762"],
 StyleBox[" \[LongRightArrow] ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TK", 
    StyleBox[
     RowBox[{"sen", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "206edc82-878d-4611-b548-93ad2b009784"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["OK", 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "010bb446-724d-456e-be2b-fce48cdc14a3"],
 StyleBox["      \[LongRightArrow]     ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TK", 
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "912077cb-440f-4779-b01a-b1dd9454b380"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "23477084-a565-4174-86b3-7f62952ef5b9"],
 StyleBox[" \[LongRightArrow] TK = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "20e31f45-fdcf-43ac-b756-e885d48025ec"],
 StyleBox["\n\n",
  FontSize->18],
 StyleBox["tan(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "306e9167-d653-4bbf-8ecc-d256201c2fc0"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7035635034658527`*^9, 3.70356375446353*^9}, {
   3.703563792728937*^9, 3.703563825332163*^9}, {3.703565521175215*^9, 
   3.703565571882224*^9}, 3.704002981896831*^9, {3.7040030286269617`*^9, 
   3.704003044383288*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "836f6f18-d2f8-48fe-bffe-a214b300080f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tangente", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.703862894874756*^9, {3.704003064874708*^9, 3.704003096113665*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "7fb445e7-2014-497a-8dee-f5a6a6c8d36b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {474., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5433$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5433$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{1, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{0, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{1, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{1, 3}, {1, Tan[Trigonometria`th] - 3}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{-3, 
                 Tan[Trigonometria`th]}, {3, 
                 Tan[Trigonometria`th]}}]}, 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["T", {1.1, Tan[Trigonometria`th] + 0.1}], 
             Text["Xt", {1.1, 0.1}], 
             Text["Yt", {0.1, Tan[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Rotate[
              Text[
               Style["Tan(\[Theta])", Orange], {
               1.1, Tan[Trigonometria`th]/2}], 90 Degree], {Orange, Thick, 
              Line[{{1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, {Orange, 
              Thickness[0.008], 
              Dashing[Medium], 
              Line[{{0, 0}, {0, 
                 Tan[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {1, 
                  Tan[Trigonometria`ptctrl$$]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Orange}, {"Tan"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{525., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7040030974702883`*^9, 3.7041683419642305`*^9, 
  3.704169055561487*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b4ee865d-d2a9-4d8f-ab71-fe73af011e2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonetan", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038668881404796`*^9, 3.703866910984089*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9a2a6b6f-ab27-4436-ba1a-4478d7087c35"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Tangente\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficotangente[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.703866896716856*^9, 3.703866911801592*^9}, 
   3.7039408970104885`*^9, 3.7039417720788507`*^9, 3.7039420601349435`*^9, 
   3.703946796153141*^9, 3.704003075387569*^9, 3.7041690557958884`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8cc4d04d-8a0a-4251-8acc-b4807cff9c04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "cc4718d5-2b71-428d-a73c-de37ed219aa1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ANGOLI NOTI",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035641514009333`*^9, 3.703564164977171*^9}, {
  3.703564203834907*^9, 3.703564205135581*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a2480c7b-8e5d-4e6f-acaf-d308d914fe90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti30", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862957984501*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c501c8a0-49ec-4378-b83f-00cdd4e80b80"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, ""}, 0, 2 Pi, 
      Rational[1, 6] Pi}}, Typeset`size$$ = {560., {218., 246.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5475$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5475$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 Pi/2], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}, Null}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 6] Pi, ""}, 
         0, 2 Pi, Rational[1, 6] Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{611., {279., 286.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.70386295918711*^9, 3.7039408970417404`*^9, 
  3.7039417721257286`*^9, 3.7039421042354956`*^9, 3.703946796217732*^9, 
  3.7040030754545813`*^9, 3.70416833227575*^9, 3.704169055842738*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "4c0bee17-95c2-415b-89ff-49742a06a5d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti45", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862986160528*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ab55440f-ac1f-45fd-b75b-d96cddc0285f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 4] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 4] Pi, ""}, 0, 2 Pi, 
      Rational[1, 4] Pi}}, Typeset`size$$ = {560., {218., 246.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5532$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 4] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5532$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 Pi/2], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 4] Pi, ""}, 
         0, 2 Pi, Rational[1, 4] Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{611., {279., 286.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.703862987445499*^9, 3.703940897110343*^9, 
  3.703941772156979*^9, 3.7039421075433903`*^9, 3.703946796367025*^9, 
  3.704003075688933*^9, 3.7041683354948187`*^9, 3.704169056467805*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "54c8bdf4-d5a9-4faa-bf6a-96060f7aac25"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e8a7e8c2-b615-4317-9e1e-aa9eb67abda8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FORMULE INVERSE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703572668497764*^9, 3.7035726722315607`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "3f4b87f1-9332-4017-8ad3-9d4f2811442d"],

Cell[TextData[{
 StyleBox["Come trovo l\[CloseCurlyQuote]angolo \[Theta]?",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.5019607843137255]],
 StyleBox["\n",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontColor->GrayLevel[0]],
 StyleBox["sen(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->18,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2ddb49c2-89c3-4d4b-86bf-97508f37ef55"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arcsen",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", "2"], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "7955bac7-b5a9-4193-87a2-c4bae33d45ca"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "180ff14e-6834-490e-95c5-15a9e026cdeb"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "c3bf070b-403b-4ba2-bd9d-d40870b04094"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come",
  FontSize->18],
 StyleBox[" seno",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "61d3ad21-4945-4643-befd-45e8a74fac69"],
 StyleBox["\n\n\n\n",
  FontSize->18],
 StyleBox["cos(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2a1d0a2b-5b57-45a5-bb5f-da9ea245dde5"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arccos",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox[
     SqrtBox["3"], "2"], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "d95e3c5d-d5e5-4c3d-87f6-5fa29caf1368"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "6f8fd7c2-dbdb-430e-9f3d-0b7dc3c3be00"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SqrtBox["3"], "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2e42b775-f2ae-4bf9-8a17-e724df1c00af"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["coseno",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "049e7cc0-4d3c-4d99-a99b-f3c70eec82b1"],
 StyleBox["\n\n\n\n",
  FontSize->18],
 StyleBox["tan(\[Theta]) = ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["3"]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "838c8cd0-8425-4768-8e65-50d6c23511fc"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arctan",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", 
     SqrtBox["3"]], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "490cc33d-0dfd-4655-a9f2-99defae9bdea"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["tan", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "e08d5574-e543-4d0e-82ef-449def078b74"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["3"]], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "a7ac1c3c-4d6d-4702-bef1-a3fb6e1d6ba1"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["tangente ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "a4daa3a8-4877-4f96-bf12-0abe1ce24ed8"]
}], "Text",
 CellChangeTimes->{{3.703573152250655*^9, 3.7035734743492117`*^9}, {
  3.703573505001946*^9, 3.703573531372149*^9}, {3.703573568538046*^9, 
  3.703573604206109*^9}, {3.703573657966654*^9, 3.703573658944536*^9}, {
  3.7035737252961493`*^9, 3.703573797417841*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f3499736-a878-42fe-b2aa-286ec6d48717"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "eaf6e525-c36e-4362-8f56-a8581be1a2d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio1", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039421126114435`*^9, 3.703942120523225*^9}, 
   3.703948224644946*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "764634c7-7c1b-491d-b259-41bbb1e4184e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio guidato:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio guidato:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", 
     ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 40 \\\\\\\\nB = \
110\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha]),Cos(\[Alpha]),Tan(\[Alpha]) e l'angolo \[Alpha]\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 1: cerchiamo l'ipotenusa C.\\n Applico il Teorema \
di Pitagora:\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Passo 1: cerchiamo l'ipotenusa C.\n Applico il Teorema di Pitagora:", 
        Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        "\"Applico la formula \[LongRightArrow] \
\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) + \"",DynamicBox[
          ToBoxes[
           InputField[
            Dynamic[Trigonometria`catetoNome], String, FieldSize -> 1], 
           StandardForm]],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoNome, "B"], 
           StandardForm]],"\" = \"",InputFieldBox[
          Dynamic[Trigonometria`ipotenusaNome], String, FieldSize -> 1],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \\\\ \
\\)\\)]\\)\"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaNome, "C"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Sostituisco i valori \[LongRightArrow] \
\\!\\(\\*SuperscriptBox[\\(40\\), \\(2\\)]\\) + \"",InputFieldBox[
          Dynamic[Trigonometria`catetoValore], String, FieldSize -> 3],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoValore, "110"], 
           StandardForm]],
         "\" = \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\)\\n\"","\"\\n\"",
         "\"Ricavo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{"\"\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBNome], String, FieldSize -> 1], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\""}, "RowDefault"]], DisplayForm],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoBNome, "B"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Approssima il risultato per difetto\\n\\n\"",
         "\"Calcolo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{
             InputFieldBox[
              Dynamic[Trigonometria`catetoAValore], String, FieldSize -> 2], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoAValore, "40"], 
               StandardForm]], "\" + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBValore], String, FieldSize -> 3], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoBValore, "110"], 
               StandardForm]]}, "RowDefault"]], DisplayForm],"\" = \"",
         InputFieldBox[
          Dynamic[Trigonometria`ipotenusaValore], String, FieldSize -> 3],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaValore, "117"], 
           StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 2: cerchiamo sen(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 2: cerchiamo sen(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"sen(\[Alpha]) = \"",FractionBox["\"A\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"40\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 3: cerchiamo cos(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 3: cerchiamo cos(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"cos(\[Alpha]) = \"",FractionBox["\"B\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"110\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 4: cerchiamo tan(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 4: cerchiamo tan(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"tan(\[Alpha]) = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senNome], String, FieldSize -> 3], 
            "\"(\[Alpha])\""}, "RowDefault"], "\"cos(\[Alpha])\""],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`senNome, "sen"], 
           StandardForm]],"\" = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\"/\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum, "110"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\" =\\n \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum2, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen2, "117"], 
              StandardForm]]}, "RowDefault"]],"\"\[CenterDot]\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum2, "117"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen2, "110"], 
              StandardForm]]}, "RowDefault"]],"\" = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen, "110"], 
              StandardForm]]}, "RowDefault"]],"\" = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum2, "4"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen2, "11"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 5: cerchiamo \[Alpha].\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 5: cerchiamo \[Alpha].", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        "\"\[Alpha] = \\!\\(\\*SuperscriptBox[\\(sen\\), \\(-1\\)]\\)(\"",
         FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum3, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen3, "117"], 
              StandardForm]]}, "RowDefault"]],"\")\""},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{10}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039421219834275`*^9, 3.703948225993637*^9, 
  3.7040030758643627`*^9, 3.7041683262341776`*^9, 3.7041690567647424`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "19a965c6-e9bd-49ab-8d59-5e86104e44fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "97f35bd5-8e5b-47c6-b08c-2c23589bf25f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio2", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942141975054*^9, 3.7039421471372027`*^9}, 
   3.703948260963499*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "eaa3ea4a-3bcd-4de4-bc0c-7b345c1db612"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 2:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 2:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0.7, 0}, 0.2, {3.141592653589793, 2.0647376957144776`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0.7, 0}, 0.2, {3.141592653589793, 2.0647376957144776`}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1.3}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {0.5, 0.6}, ImageScaled[{0, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 1.}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.6, 0.08}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.15, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"B = 30 \\\\\\\\ntan(\[Beta]) \
= \\\\\\\\!\\\\\\\\(\\\\\\\\*FractionBox[\\\\\\\\(3\\\\\\\\), \
\\\\\\\\(5\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\n?A\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \
\\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! tan\[Beta] =\\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(cateto\\\\ opposto\\)\\), \\(cateto\\\\ adiacente\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! tan\[Beta] =\!\(\*FractionBox[\(\(\\ \)\(cateto\\ \
opposto\)\), \(cateto\\ adiacente\)]\)", Bold, 20]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto adiacente?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto adiacente?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catAd], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catAd, "A"], StandardForm],
       ImageSizeCache->{33., {0., 32.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto opposto?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto opposto?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catOp], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catOp, "B"], StandardForm],
       ImageSizeCache->{32., {0., 28.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"tan\[Beta] = \"", StripOnInput -> False], TextForm]], 
          "InlineText"], 
         Text[
          Style["tan\[Beta] = "]]],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catOp2], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catOp2, "B"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catAd2], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catAd2, "A"], 
             StandardForm]]}, "RowDefault"]],InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[LongRightArrow] Atan(\[Beta]) = B \[LongRightArrow] A = \
\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(B\\)\\), \\(tan \
\\((\[Beta])\\)\\)]\\)\"", StripOnInput -> False], TextForm]], "InlineText"], 
         Text[
          Style[
          "\[LongRightArrow] Atan(\[Beta]) = B \[LongRightArrow] A = \
\!\(\*FractionBox[\(\(\\ \)\(B\)\), \(tan \((\[Beta])\)\)]\)"]]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quanto vale A??\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quanto vale A??", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A], {"50"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"50\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A], {"18"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"18\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A], {"2"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"2\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`A], {"50", "18", "2"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`A, "50"], StandardForm],
       ImageSizeCache->{33., {0., 32.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039428724679375`*^9, 3.703946796565926*^9, 
  3.703948261791901*^9, 3.70400307597867*^9, 3.7041683212093177`*^9, 
  3.7041690570460215`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ea8cf8e0-fe67-45bd-b493-0f2c135339b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TPitagora", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7039428488521953`*^9, 3.7039428582253094`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "52d0cfcc-cd72-4c3d-abf5-cfbf5806518e"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["b7nny_shm", 3, 1]],30,
   "FrontEndObject[LinkObject[\"b7nny_shm\", 3, 1]]","30","30"},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{
  3.703942148643123*^9, {3.7039428601724863`*^9, 3.703942877039641*^9}, 
   3.7039467967531137`*^9, 3.7040030761935787`*^9, 3.7041690573741474`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c4e84b4e-5f21-412a-93eb-a882c94e3967"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c44748c8-a41f-40d2-bf07-d3ea0c0187a5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DELLA CORDA",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035739489576197`*^9, 3.703573973609384*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a33b1612-b74e-48f9-9c46-ec96819a1e28"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["AB = 2r sen(\[Theta])",
 FontSize->24,
 FontColor->RGBColor[1., 0., 0.5019607843137255]]], "Subsection",
 CellChangeTimes->{{3.703574010488777*^9, 3.703574028471489*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "948e0298-4cf3-4236-a7c8-678768c04e0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863021932871*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "869e5c9f-96e6-4903-8c35-700a9f6ba94c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-1.0275825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     TemplateBox[{"\"\[Theta]\"","\"Corda\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
        FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.4666666666666667, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0., 0.7, 0.]"], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0.7, 0.], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "40"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863026297469*^9, 3.7039408971415963`*^9, 3.703941772194463*^9, {
   3.7039467968618593`*^9, 3.703946798466337*^9}, 3.7040030762824917`*^9, 
   3.704003265236156*^9, 3.7041682306273317`*^9, 3.7041690574835663`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f483e0ad-8d32-46b8-8371-0e8ab3c1202a"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.704003267432983*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "aa506e30-f01b-4780-af5b-7f929886411b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "b98afe31-6ef7-4b77-a0fb-93070ade76b3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsubsection",
 CellChangeTimes->{{3.703574115201405*^9, 3.703574126467238*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6c5cc4b5-938b-4641-9638-b1ccbef0334c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda2", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.7038630957334414`*^9, {3.7038670598514757`*^9, 3.7038670713926587`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b16aeae3-4dc1-42e5-b134-d1de75b55fd5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 3.641592653589793, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 3.641592653589793, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {504., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5755$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = 3.641592653589793}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5755$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[{
                  Cos[0 - 0.2], 
                  Sin[0 - 0.2]}, 0.02]}, {Black, 
                Disk[{
                  Cos[Trigonometria`th], 
                  Sin[Trigonometria`th]}, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {
                 Cos[0], 
                 Sin[-0.3]}], 
               Text["   C", {Cos[Trigonometria`th] - 0.15, 
                 Sin[Trigonometria`th]}], 
               Text["r", {0.4, -0.15}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}]}], 
             PlotRange -> 1, ImageSize -> 400, BaseStyle -> {15}, Axes -> 
             False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[Trigonometria`pa, Trigonometria`pb, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red, Null}, {"\[Theta]", "Corda"}, 
               LegendMarkerSize -> 40, LabelStyle -> 15]}}, Spacings -> 0]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, 3.641592653589793, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{555., {247., 254.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.704169057530414*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 3.3175218421908217`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 3.641592653589793, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {504., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$23227$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = 3.641592653589793}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$23227$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[{
                  Cos[0 - 0.2], 
                  Sin[0 - 0.2]}, 0.02]}, {Black, 
                Disk[{
                  Cos[Trigonometria`th], 
                  Sin[Trigonometria`th]}, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {
                 Cos[0], 
                 Sin[-0.3]}], 
               Text["   C", {Cos[Trigonometria`th] - 0.15, 
                 Sin[Trigonometria`th]}], 
               Text["r", {0.4, -0.15}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}]}], 
             PlotRange -> 1, ImageSize -> 400, BaseStyle -> {15}, Axes -> 
             False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Grid[{{
             LocatorPane[
              Dynamic[
              Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                Trigonometria`pt = Normalize[#])& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                   Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
              Dynamic[
               Trigonometria`anglegraph$[Trigonometria`pa, Trigonometria`pb, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red, Null}, {"\[Theta]", "Corda"}, 
               LegendMarkerSize -> 40, LabelStyle -> 15]}}, Spacings -> 0]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, 3.641592653589793, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{555., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.704004674507036*^9, 3.704004674523614*^9}, {
  3.70400475101376*^9, 3.7040049191839933`*^9}, {3.7040049632508287`*^9, 
  3.704004986859641*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6b21ac7e-1579-441b-bd6b-3e374443d6b9"],

Cell[TextData[{
 StyleBox["AB = AC sen(\[Theta]) = 2r sen(\[Theta])\n\nMuovi C sulla \
circonferenza !\n\nCosa puoi notare ?\n\n\[Theta] ha sempre la stessa \
ampiezza !\n\nPerch\[EGrave] ?\n\nPerch\[EGrave] \[EGrave] un angolo alla \
circonferenza che insiste sull\[CloseCurlyQuote]arco AB.\n\n Quindi possiamo \
posizionare C in modo tale che il triangolo sia rettangolo ed epplicare le \
formule che abbiamo visto prima! \n \n 2r \[EGrave] \
l\[CloseCurlyQuote]ipotenusa e AB \[EGrave] il cateto opposto a \[Theta]. \n\n\
Quindi ",
  FontSize->16],
 StyleBox["AB = 2r sen(\[Theta])",
  FontSize->16,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[".\n\nE questa formula vale sempre perch\[EAcute] \[Theta] \
\[EGrave] sempre lo stesso! \n\nQuando C \[EGrave] \
nell\[CloseCurlyQuote]altro arco cosa succede?",
  FontSize->16],
 "\n"
}], "Text",
 CellChangeTimes->{{3.703574313395405*^9, 3.703574337691551*^9}, {
  3.70357437300624*^9, 3.703574505325901*^9}, {3.7038672782667184`*^9, 
  3.703867293700658*^9}, {3.704003393257348*^9, 3.704003400707918*^9}, {
  3.704003477407679*^9, 3.704003480868709*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "89c0288f-674d-490d-b69b-1ff57ab443c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda3", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867148332883*^9, 3.7038671863854427`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "fd50934b-7a52-4480-8d01-fe61c0223ebf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 0.4, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {502., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5799$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {Trigonometria`ptctrl$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5799$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`c, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Disk[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Darker[Green, 0.2], Thick, 
                Circle[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                
                Triangle[{
                 Trigonometria`a, Trigonometria`b, Trigonometria`c}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {
                Rotate[{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  Polygon[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 0.1},
                     Trigonometria`b}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {
                Rotate[{
                  Darker[Green, 0.3], 
                  Line[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 
                    0.1}}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[Trigonometria`b, 0.02]}, {Black, 
                Disk[Trigonometria`c, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {Part[Trigonometria`b, 1] + 0.1, 
                 Part[Trigonometria`b, 2]}], 
               Text["   C", {
                 Part[Trigonometria`c, 1], Part[Trigonometria`c, 2] - 0.1}], 
               Text["   D", {Cos[Trigonometria`th] + 0.1, 
                 Sin[Trigonometria`th]}], 
               Text[
                Style["\[Delta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] - 0.1, Sin[Trigonometria`th] - 0.1}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], Trigonometria`c + 0.1], 
               Text["r", {0.4, -0.15}]}], PlotRange -> 1, ImageSize -> 400, 
             BaseStyle -> {15}, Axes -> False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
               Trigonometria`pa2, Trigonometria`pb2, Trigonometria`pc2, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red}, {
                Row[{"\[Delta]"}], "Coda"}, LegendMarkerSize -> 40]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{Trigonometria`ptctrl$$, 0.4, "angle"}, 0, 2 Pi}},
       "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{553., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7038671880872765`*^9, 3.70394089721062*^9, 
  3.703941772310358*^9, 3.703942323558496*^9, 3.703946797031694*^9, 
  3.704003076477169*^9, 3.704168239722031*^9, 3.704169057780472*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1e5bd5fd-526d-40f4-8fef-b6dfa0b87f41"]
}, Open  ]],

Cell[TextData[StyleBox["ADBC \[EGrave] un poligono inscritto nella \
circonferenza quindi gli angoli opposti sono supplementari, cio\[EGrave]:   \
\[Delta]=\[Pi]-\[Theta]\nPer questo motivo i seni sono gli stessi. Quindi \
anche considerando l\[CloseCurlyQuote]arco ADB la formula resta la stessa!!!",
 FontSize->16]], "Text",
 CellChangeTimes->{
  3.703867310209563*^9, {3.703946844322687*^9, 3.703946849334548*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "0a8d95fe-8362-4a7a-a06b-68d0bbae9100"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "8198f957-0f2c-442d-bc21-b3ff3c00aa7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio3", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423340109363`*^9, 3.7039423376875615`*^9}, 
   3.703948279815196*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "003c7e99-2f7d-4eee-b667-e219ae97d5dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 3:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 3:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.8, 0.],
         FrontFaceColor->RGBColor[0., 0.8, 0.],
         BackFaceColor->RGBColor[0., 0.8, 0.],
         GraphicsColor->RGBColor[0., 0.8, 0.],
         FontColor->RGBColor[
          0., 0.8, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"2\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      StyleBox["\<\"?AB\"\>",
       StripOnInput->False,
       FontFamily->"sans sarif",
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      StripOnInput->False,
      Magnification->2 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"AB = 2\[CenterDot] \"", StripOnInput -> False], 
            TextForm]], "InlineText"], 
         Text[
          Style["AB = 2\[CenterDot] "]]],TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`raggio], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`raggio, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] sen(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`angolo], String, FieldSize -> 1], 
          "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`angolo, "60"], 
            StandardForm]]}, "RowDefault"],"\") = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`AB], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`AB, "4"], StandardForm]]},
          "RowDefault"],"\"\[CenterDot]\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`coef], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot]\"",TemplateBox[{
          TagBox[
           SqrtBox[
            InputFieldBox[
             Dynamic[Trigonometria`coef2], String, FieldSize -> 1]], 
           DisplayForm], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef2, "3"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703948479686776*^9, 3.704003076670199*^9, 
  3.704168244378769*^9, 3.70416905820236*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "20be116f-0508-43d5-b96b-a15037125e4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.8775825618903728`"}], " ", "}"}]], "Input",
 CellChangeTimes->{{3.703948466611709*^9, 3.7039484751513357`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8827ca64-945d-4275-8c6b-ced38b47898b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "79411d95-75b5-41f9-913f-49a0af07715d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio4", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423479597387`*^9, 3.7039423521548414`*^9}, 
   3.7039483319061213`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "bb8e7eba-a2ea-45da-92b6-976392ca2708"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 4:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 4:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"5\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      StyleBox["\<\"?AB\"\>",
       StripOnInput->False,
       FontFamily->"sans sarif",
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2], {"5"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"5\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2], {"30"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"30\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`AB2], {
        "\!\(\*FractionBox[\(5\), \(2\)]\)", 
         "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)", "5", 
         "30"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`AB2, "5"], StandardForm],
       ImageSizeCache->{32., {0., 28.}}],
      StripOnInput->False,
      Magnification->3 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703942353134987*^9, 3.703946797347062*^9, 
  3.70394833284067*^9, 3.704003076760845*^9, 3.7041682486760893`*^9, 
  3.7041690582648954`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f4ae7b14-6538-4da8-b474-37856733663f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e5ff2ab5-1c1b-45c2-87ef-ae5888966edf"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEI SENI",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7037525095800962`*^9, 3.703752516021167*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "27ab370e-739a-45e8-9525-f17fa8be66d2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["BC/sen\[Alpha] = AC/sen\[Beta] = AB/sen\[Gamma]",
 FontSize->24,
 FontColor->RGBColor[1., 0., 0.5019607843137255]]], "Subsection",
 CellChangeTimes->{3.7037529150196342`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "16f3095b-68ec-4752-9f11-56c8106feb7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863173930427*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c8db4ac1-8e83-47f7-9518-6293f0117750"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863174920074*^9, 3.7039408972796335`*^9, 
  3.703941772360749*^9, 3.7039423605461826`*^9, 3.7039467974020567`*^9, 
  3.704003076824266*^9, 3.70400351514786*^9, 3.7041682530203204`*^9, 
  3.7041690583273735`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6b19d6c8-47ce-422d-be5e-0907887dd40a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d900f154-99e5-4186-9c3f-acf46c69304a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE\n",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsection",
 CellChangeTimes->{{3.703752766267577*^9, 3.703752805006543*^9}, 
   3.7038673536104937`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f6dd1530-c906-48ab-8df0-dac3cf9e9a8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867359916173*^9, 3.7038673665860524`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c69a4915-9ce9-44d5-952a-7032f81beb0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7038673711823397`*^9, 3.703940897310891*^9, 
  3.703941772394822*^9, 3.7039423631528177`*^9, 3.703946797453463*^9, 
  3.704003076892997*^9, 3.704168257110552*^9, 3.7041690583429995`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "07c1646c-fd16-4df2-ba87-01572def88c3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Direttamente dal teorema della corda:\nBC = 2r sen\[Alpha] \
\[LongRightArrow] BC/sen\[Alpha] = 2r\nAC = 2r sen\[Beta] \[LongRightArrow] \
AC/sen\[Beta] = 2r\nAB = 2r sen\[Gamma]\[LongRightArrow] AB/sen\[Gamma] = 2r\n\
Quindi:\n",
  FontColor->GrayLevel[0]],
 StyleBox["BC/sen\[Alpha] = AC/sen\[Beta] = AB/sen\[Gamma]",
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Text",
 CellChangeTimes->{3.703752814660338*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ac658347-7d30-4ff0-99e3-98593d227af8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "a6df3a26-7079-41ed-8c66-4b9dc53eec51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio5", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423655741987`*^9, 3.7039423787640705`*^9}, 
   3.70394834205114*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "d7e410e7-863b-4609-a910-75d6ec17b29d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 5:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 5:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {-1, 1}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.6, 0.4}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.1, 0.6}, ImageScaled[{0.25, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {-0.8, 1.}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {0.1, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 6 \\\\\\\\n\[Alpha] = \\\
\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\\n\[Beta] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(105\\\\\\\\), \\\\\\\\(o\\\
\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\n?C\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"Calcolare l'ampiezza dell'angolo \
\[Gamma]:\\!\\(\\*SuperscriptBox[\\(180\\), \\(o\\)]\\)-(\"", StripOnInput -> 
             False], TextForm]], "InlineText"], 
         Text[
          Style[
          "Calcolare l'ampiezza dell'angolo \
\[Gamma]:\!\(\*SuperscriptBox[\(180\), \(o\)]\)-("]]],InputFieldBox[
         Dynamic[Trigonometria`ott], String, FieldSize -> 3],StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`ott, "105"], StandardForm]],
        StyleBox["\"+\"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`al], String, FieldSize -> 2],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`al, "30"], StandardForm]],
        StyleBox["\") = \"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`res2], String, FieldSize -> 2],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res2, "45"], StandardForm]],
        StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->1.5 Inherited], "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Utilizzare la relazione \
\\!\\(\\*FractionBox[\\(\\(A\\)\\(\\\\ \\)\\), \\(sen \\((\[Alpha])\\)\\)]\\) \
=\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(C\\)\\), \\(sen \
\\((\[Gamma])\\)\\)]\\)\"\>", TextForm]], "InlineText"],
       Text[
        Style[
        "Utilizzare la relazione \!\(\*FractionBox[\(\(A\)\(\\ \)\), \(sen \
\((\[Alpha])\)\)]\) =\!\(\*FractionBox[\(\(\\ \)\(C\)\), \(sen \((\[Gamma])\)\
\)]\)"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{FractionBox["\"6\"", 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`al2], String, FieldSize -> 2], 
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\))\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`al2, "30"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`c], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`c, "C"], StandardForm]]},
           "RowDefault"], 
         "\"sen(\\!\\(\\*SuperscriptBox[\\(45\\), \\(o\\)]\\))\""],
        "\" \[LongRightArrow] \"","\" 6 / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num3, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den3, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`num4], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`num4, "C"], 
            StandardForm]]}, "RowDefault"],
        "\" /\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\*SqrtBox[\\(2\\)]\\), \
\\(2\\)]\\)\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Ricavare:\"\>", TextForm]], "InlineText"],
       Text[
        Style["Ricavare:"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{"\"C = 6\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num5], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num5, "2"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den5], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den5, "2"], 
             StandardForm]]}, "RowDefault"]],"\" / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num6, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den6, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`res3], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res3, "6"], StandardForm]],
        TagBox[
         SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`res4], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`res4, "2"], 
              StandardForm]]}, "RowDefault"]], DisplayForm]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039423804651833`*^9, 3.703946797547654*^9, 
  3.7039483425793743`*^9, 3.704003076958263*^9, 3.70416826104844*^9, 
  3.7041690583899064`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "5a75221e-d83a-4d87-891d-37fd97da4cf6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "74e0ba1b-538d-45b1-8a09-0f50e5f2eb50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio6", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424332140646`*^9, 3.7039424400257196`*^9}, 
   3.703948350866846*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9bc6c068-7a23-4af2-ad10-50a1af786ef2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.6, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
FractionBox[\\\\\\\\(A\\\\\\\\), \\\\\\\\(sen \
\\\\\\\\((\[Alpha])\\\\\\\\)\\\\\\\\)]\\\\\\\\) \
=\\\\\\\\!\\\\\\\\(\\\\\\\\*FractionBox[\\\\\\\\(\\\\\\\\(B\\\\\\\\)\\\\\\\\(\
\\\\\\\\\\\\\\\\ \\\\\\\\)\\\\\\\\), \\\\\\\\(sen \\\\\\\\((\[Beta])\\\\\\\\)\
\\\\\\\\)]\\\\\\\\) \
=\\\\\\\\!\\\\\\\\(\\\\\\\\*FractionBox[\\\\\\\\(\\\\\\\\(\\\\\\\\\\\\\\\\ \\\
\\\\\\)\\\\\\\\(C\\\\\\\\)\\\\\\\\), \\\\\\\\(sen \
\\\\\\\\((\[Gamma])\\\\\\\\)\\\\\\\\)]\\\\\\\\)\\\\\\\\n\\\\\\\\nA = 12 \
\\\\\\\\n\[Alpha] = \\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\
\\\\), \\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\\nB = 9\\\\\\\"\\\", \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\n?sen(\[Alpha])\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"sen(\[Alpha])?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["sen(\[Alpha])?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \\(3\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \
\\(3\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`res4], {
        "\!\(\*FractionBox[\(3\), \(2\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)", 
         "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[
        Trigonometria`res4, "\!\(\*FractionBox[\(2\), \(3\)]\)"], 
        StandardForm],
       ImageSizeCache->{32., {0., 28.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039424412624683`*^9, 3.7039467976983147`*^9, 
  3.7039483527227783`*^9, 3.704003077060176*^9, 3.7041682657066903`*^9, 
  3.7041690584895296`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "15345588-2b35-4751-a8a9-a1de01fdff44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "41b2bb30-5cfd-49e3-962d-49993bc646a3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEL COSENO (o di CARNOT)",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{
  3.703753102306326*^9, {3.703753757882468*^9, 3.703753769382806*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "878e6daa-fd72-45fd-8bb5-2fe5df3102dc"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AB", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "42b69aee-2e2e-47aa-8977-4e2c41d37850"],
 StyleBox[" = ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "47d5c5ac-0fa1-4c2a-9d62-9a816bef7de4"],
 StyleBox["+",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["BC", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "6c92a1db-9f90-49b1-94dc-d5505927f6d8"],
 StyleBox["-2ACBCcos\[Gamma]",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Subsection",
 CellChangeTimes->{{3.703753125728129*^9, 3.703753180277624*^9}, {
  3.703947162107607*^9, 3.7039471963935423`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6d6b9555-e62c-4ed6-9dc3-4b7744ce43b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863204159693*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ba1b0424-5eb7-49f3-83ec-04763b5b49b0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863205287299*^9, 3.703940897342144*^9, 
  3.703941772441698*^9, 3.7039424523239822`*^9, 3.703946797752244*^9, 
  3.704003077133994*^9, 3.704168275856702*^9, 3.7041690585408926`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6bbab010-12eb-42b4-b58e-1e7a9c7e5162"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "bd142521-b6a4-4440-8eb7-a4085abbf0ed"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsection",
 CellChangeTimes->{{3.703753200599216*^9, 3.70375320242968*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "5fb87b21-48b6-4a1f-87af-a39e4d8ccfe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno2", "[", "]"}]], "Code",
 CellChangeTimes->{3.7038632420367403`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9ef48162-8491-4ae1-b73f-4cd34e9e1e64"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[NCache[{{2^Rational[-1, 2], 0}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0.7071067811865475, 0}, {
           0.7071067811865475, 0.7071067811865475}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"D\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox["\<\"h\"\>", 
        NCache[{0.6571067811865474, Rational[1, 2] 2^Rational[-1, 2]}, {
         0.6571067811865474, 0.35355339059327373`}]], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863328195582*^9, 3.703940897379905*^9, 
  3.703941772510723*^9, 3.703942455040086*^9, 3.703946797803369*^9, 
  3.704003077193606*^9, 3.7041682785600853`*^9, 3.704169058572177*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "776e4e81-12ff-4a19-875f-917f39fd52a5"]
}, Open  ]],

Cell[TextData[{
 "\n\nGuardando ADC:\n\n",
 StyleBox["CD = AC cos\[Gamma]\nAD = AC sen\[Gamma]\n\nPer costruzione: DB = \
CB-CD = CB-ACcos\[Gamma]\n\nApplichiamo il teorema di Pitagora al triangolo \
ADB:\n\n",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "5b7a26d0-a678-404d-ad9f-92d320aa797b"],
 StyleBox[" = ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["DB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "193aa7f4-7e7f-45d8-9159-38de980f5796"],
 StyleBox["+",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AD", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "f151b7ac-f0d6-4606-bc4d-38fd3548d914"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"CB", "-", "ACcos\[Gamma]"}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  ExpressionUUID -> "0d3ba991-73fb-4172-8a85-ff170df71889"],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"AC", " ", "sen\[Gamma]"}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  ExpressionUUID -> "8d922b08-7e9b-4cba-98b5-3841a22356aa"],
 "\n\nSviluppiamo il quadrato del binomio: ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "60d9c707-663c-4198-a510-a51c77f4894b"],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "1412b40d-f144-4807-82a1-964d8f68f721"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]],
  ExpressionUUID -> "64e63d01-5f2a-4afd-b7f9-f8079ff76e6b"],
 "\[Gamma]-2CBACcos\[Gamma]+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "0f281d91-0d06-4751-95ca-ffd04268073b"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", "2"], TraditionalForm]],
  ExpressionUUID -> "d9b148d4-805a-406b-b5a8-1d84d75d180f"],
 "\[Gamma] = \n \ne raccogliamo a fattor comune il termine ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "07d28dd1-f62c-4c73-a553-aaccd302806a"],
 ":  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "ee3cb177-1cf6-4451-8189-3cfd16ce8ee4"],
 "(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]],
  ExpressionUUID -> "8b688b73-dcdf-4fd1-bb62-e3ac88610fcd"],
 "\[Gamma]+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", "2"], TraditionalForm]],
  ExpressionUUID -> "e0c6acb1-ccae-4b0a-8982-5fb8afe8469b"],
 "\[Gamma])+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "acacf589-6223-4f8a-b4e2-234620b6092d"],
 "-2CBACcos\[Gamma] = = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "05946f70-e22a-469b-83e2-1548de121e5f"],
 StyleBox["+",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "396f109e-6ad4-4752-a0ff-9cda93bbb070"],
 StyleBox["-2CBACcos\[Gamma]",
  FontColor->GrayLevel[0]],
 "\n                                                                        "
}], "Text",
 CellChangeTimes->{{3.703753264726861*^9, 3.70375371938772*^9}, {
   3.703867496292187*^9, 3.703867498010098*^9}, {3.703868029554041*^9, 
   3.703868030100976*^9}, {3.703946980353115*^9, 3.703946981855782*^9}, {
   3.703947238305213*^9, 3.7039474804819927`*^9}, 3.7040035715827007`*^9, {
   3.7040038564875193`*^9, 3.7040038843328733`*^9}, {3.704004074662993*^9, 
   3.704004153666554*^9}, {3.7040041882806463`*^9, 3.70400421884643*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9e536f31-3215-4808-8224-af383e3b4fac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "33cfab2c-7ae8-42ef-80e9-26e97505bbe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio7", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424902213645`*^9, 3.703942519593337*^9}, 
   3.7039483587752533`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "550579ec-d37c-4f1f-bcd1-6c9407aa7f66"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio guidato:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio guidato:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", 
     ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 2 \\\\\\\\nB = \
3\\\\\\\\n\[Gamma] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(60\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\n?C\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \
\\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Si applica il teorema del coseno:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Si applica il teorema del coseno:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`A7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`A7, "A"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`B7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B7, "B"], StandardForm]],
        "\" - 2 \[CenterDot] A \[CenterDot] \"",InputFieldBox[
         Dynamic[Trigonometria`B8], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B8, "B"], StandardForm]],
        "\" \[CenterDot] cos(\"","",PopupMenuBox[
         Dynamic[Trigonometria`G7], {
         "\[Alpha]" -> "\"\[Alpha]\"", "\[Beta]" -> "\"\[Beta]\"", "\[Gamma]" -> 
          "\"\[Gamma]\""}],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`G7, "\[Gamma]"], 
          StandardForm]],"\")\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quindi:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quindi:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`Val7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val7, "2"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`Val8], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val8, "3"], StandardForm]],
        "\" - 12 \[CenterDot] \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val9], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val9, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val11], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val11, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`Val10], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val10, "7"], StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Da cui: \"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Da cui: ", Bold, 20]]], 
     StyleBox[
      TagBox[
       TemplateBox[{"\"C = \"",SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`Val12], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`Val12, "7"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       DisplayForm],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039425203416495`*^9, 3.703946797949709*^9, 
  3.703948359643725*^9, 3.704003077258898*^9, 3.7041682827167673`*^9, 
  3.7041690586190257`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c42639ce-d11f-40cf-989c-bc5379b7adb3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "7550307c-13c6-4e02-9ff1-913f87ebb124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio8", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942548966643*^9, 3.7039425547660713`*^9}, 
   3.703948365698081*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b416cb98-c1a4-42e0-9f72-6d8b42c45421"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 8:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 8:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
         DiskBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{-0.2, 0}, {-0.5, 1}, {1, 0}, {-0.2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.4, 0.4}], {{{1, 0}, {0, 1}}, Center}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.2, 0.6}, ImageScaled[{0.3, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.8, 0.08}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 24 \\\\\\\\nC = 12\\\\\\\
\\!\\\\\\\\(\\\\\\\\*SqrtBox[\\\\\\\\(3\\\\\\\\)]\\\\\\\\)\\\\\\\\nB = 12\\\\\
\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\n?cos(\[Gamma])\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricordati! \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) \
= \\!\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\) + \\!\\(\\*SuperscriptBox[\\(A\
\\), \\(2\\)]\\) - 2AB cos(\[Gamma])\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricordati! \!\(\*SuperscriptBox[\(C\), \(2\)]\) = \
\!\(\*SuperscriptBox[\(B\), \(2\)]\) + \!\(\*SuperscriptBox[\(A\), \(2\)]\) - \
2AB cos(\[Gamma])", Bold, 20]]], "", ""},
    {
     StyleBox[
      TemplateBox[{
       "\"cos(\[Gamma]) = \\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\\\  + \\\\ \
\\*SuperscriptBox[\\(A\\), \\(2\\)]\\\\  - \\\\ \\*SuperscriptBox[\\(C\\), \
\\(2\\)]\\)\\), \\(2  AB\\)]\\) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`val13], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}], 
           
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) + 576 - \
472\""}, "RowDefault"], 
         TemplateBox[{"\"2 \"", 
           InputFieldBox[
            Dynamic[Trigonometria`val14], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}]}, "RowDefault"]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         StyleBox[
          RowBox[{
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5], {
                "\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5], {
                "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5], {
                "-\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5], {
                "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3]}], "Deploy"], 
         RadioButtonBar[
          Dynamic[Trigonometria`res5], {
          "\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)", 
           "-\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}]],"\"         \"",
        DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[
          Trigonometria`res5, "\!\(\*FractionBox[\(1\), \(2\)]\)"], 
          StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039425556176467`*^9, 3.703946798062866*^9, 
  3.703948366469611*^9, 3.704003077340789*^9, 3.704168286258813*^9, 
  3.704169058665906*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "d7aacefd-68d6-40f6-887f-53ee3b454ab3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c9f68e56-5109-4e91-93f2-37ac61b83c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio9", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039425664315176`*^9, 3.703942574381358*^9}, 
   3.7039483708077374`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "381db649-3665-4d99-abf5-aae9acb787e5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 9:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 9:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Sia H l'altezza del campanile\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Sia H l'altezza del campanile", Bold, 20]]], ""},
    {
     StyleBox[
      RowBox[{"Sharpen", "[", "$Failed", "]"}],
      StripOnInput->False,
      Magnification->5 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"?H\\n\"", FontColor -> RGBColor[1, 0, 0], StripOnInput -> False],
        StyleBox[
        "\"Approssimare il risultato per difetto\\n\"", FontColor -> 
         RGBColor[1, 0, 0], 8, StripOnInput -> False],"\"tan(\"",InputFieldBox[
         Dynamic[Trigonometria`tang], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`tang, "42"], StandardForm]],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`altezza], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`altezza, "H"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`base], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`base, "80"], 
             StandardForm]]}, "RowDefault"]],"\" \\nH = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`base2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`base2, "80"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] tan(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza2, "42"], 
            StandardForm]]}, "RowDefault"],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza3], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza3, "72"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7039425754202757`*^9, 3.703946798178029*^9, 
  3.703948371281022*^9, 3.704003077425893*^9, 3.704168291853259*^9, 
  3.7041690587127895`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ecfd9ce5-e008-4343-8f02-7f6dd30dd736"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0f88e0b8-3ce3-4fa1-9a35-135d50c33eb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio10", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942584421835*^9, 3.7039425886934366`*^9}, 
   3.7039483747941933`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "df940de0-e5d9-4dd9-bf14-d9431f1b034d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 10:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 10:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Trovare l'angolo \[Alpha]\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Trovare l'angolo \[Alpha]", Bold, 20]]], ""},
    {
     StyleBox[
      RowBox[{"Sharpen", "[", "$Failed", "]"}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"?\[Alpha]\\n\"", FontColor -> RGBColor[1, 0, 0], StripOnInput -> 
         False],StyleBox[
        "\"Approssima il risultato per difetto alla prima cifra \
decimale\\n\\n\"", FontColor -> RGBColor[1, 0, 0], 10, StripOnInput -> False],
        StyleBox["\"\"", StripOnInput -> False],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`alpha2], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`alpha2, "2.5"], 
             StandardForm]]}, "RowDefault"], "\"sen(\[Alpha])\""],"\" = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`gamma3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma3, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`gamma2], String, FieldSize -> 1], 
           "\"\[Degree])\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma2, "60"], 
             StandardForm]]}, "RowDefault"]],"\" \[LongRightArrow] \"",
        "\"sen(\[Alpha]) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latob], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latob, "2.5"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latoc], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latoc, "3"], 
             StandardForm]]}, "RowDefault"]],"\" \[CenterDot] \"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num10], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num10, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den10], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den10, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`res10], String, FieldSize -> 2], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`res10, "0.7"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703942595144486*^9, 3.70394679834509*^9, 
  3.703948375679737*^9, 3.704003077539571*^9, 3.7041690610320225`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8146c390-93ee-4adf-a2dc-e8b535c5fb1f"]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0b0d8546-a0e6-4e8e-8c13-213784e15ec2"]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4444, 97, 77, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5603, 141, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[7310, 179, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[9558, 243, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12066, 312, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[23531, 621, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[38145, 1003, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[42611, 1122, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[61701, 1604, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[76618, 1962, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[82059, 2153, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[98725, 2564, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[115845, 3008, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[127022, 3262, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[157705, 3935, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[164371, 4110, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[172716, 4327, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[177785, 4451, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[183099, 4578, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[193751, 4849, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[204157, 5109, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[210432, 5273, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[220821, 5544, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[229807, 5768, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[238081, 5969, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[241978, 6075, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[246612, 6200, 152, 3, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 247110, 6216}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4444, 97, 77, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5027, 121, 222, 7, 198, "Title"],
Cell[5252, 130, 314, 6, 107, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5603, 141, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5758, 146, 1515, 28, 398, "Section"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7310, 179, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[7487, 186, 337, 6, 80, "Section"],
Cell[7827, 194, 814, 15, 151, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8678, 214, 327, 6, 80, "Section"],
Cell[9008, 222, 501, 15, 235, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9558, 243, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[9713, 248, 544, 13, 38, "Input"],
Cell[CellGroupData[{
Cell[10282, 265, 531, 11, 131, "Section"],
Cell[10816, 278, 1201, 28, 459, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12066, 312, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12243, 319, 389, 7, 80, "Section"],
Cell[12635, 328, 933, 35, 143, "Text"],
Cell[CellGroupData[{
Cell[13593, 367, 386, 7, 57, "Code"],
Cell[13982, 376, 6235, 138, 526, "Output"]
}, Open  ]],
Cell[20232, 517, 1422, 47, 91, "Text"],
Cell[CellGroupData[{
Cell[21679, 568, 319, 6, 57, "Code"],
Cell[22001, 576, 618, 14, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22656, 595, 215, 4, 57, "Code"],
Cell[22874, 601, 596, 13, 41, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23531, 621, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[23686, 626, 1548, 56, 101, "Text"],
Cell[CellGroupData[{
Cell[25259, 686, 184, 4, 57, "Code"],
Cell[25446, 692, 7505, 165, 526, "Output"]
}, Open  ]],
Cell[32966, 860, 1841, 59, 280, "Text"],
Cell[CellGroupData[{
Cell[34832, 923, 238, 5, 57, "Code"],
Cell[35073, 930, 3023, 67, 359, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38145, 1003, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[38322, 1010, 272, 6, 57, "Code"],
Cell[38597, 1018, 435, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39069, 1032, 305, 6, 57, "Code"],
Cell[39377, 1040, 3185, 76, 734, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42611, 1122, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[42788, 1129, 285, 5, 80, "Section"],
Cell[CellGroupData[{
Cell[43098, 1138, 217, 4, 57, "Code"],
Cell[43318, 1144, 8991, 198, 526, "Output"]
}, Open  ]],
Cell[52324, 1345, 2894, 99, 266, "Text"],
Cell[CellGroupData[{
Cell[55243, 1448, 234, 5, 57, "Code"],
Cell[55480, 1455, 5334, 119, 526, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60851, 1579, 213, 4, 57, "Code"],
Cell[61067, 1585, 573, 12, 41, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61701, 1604, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[61878, 1611, 326, 6, 80, "Section"],
Cell[CellGroupData[{
Cell[62229, 1621, 189, 4, 57, "Code"],
Cell[62421, 1627, 6974, 159, 582, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69432, 1791, 189, 4, 57, "Code"],
Cell[69624, 1797, 6933, 158, 582, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76618, 1962, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[76795, 1969, 281, 5, 80, "Section"],
Cell[77079, 1976, 4931, 171, 529, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82059, 2153, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[82236, 2160, 272, 6, 57, "Code"],
Cell[82511, 2168, 16165, 390, 2909, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98725, 2564, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[98902, 2571, 272, 6, 57, "Code"],
Cell[99177, 2579, 15922, 403, 1157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115136, 2987, 214, 4, 57, "Code"],
Cell[115353, 2993, 443, 9, 49, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115845, 3008, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[116022, 3015, 285, 5, 80, "Section"],
Cell[CellGroupData[{
Cell[116332, 3024, 306, 6, 62, "Subsection"],
Cell[CellGroupData[{
Cell[116663, 3034, 189, 4, 57, "Code"],
Cell[116855, 3040, 9916, 209, 426, "Output"]
}, Open  ]],
Cell[126786, 3252, 175, 3, 50, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127022, 3262, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[127199, 3269, 283, 5, 45, "Subsubsection"],
Cell[CellGroupData[{
Cell[127507, 3278, 245, 5, 57, "Code"],
Cell[127755, 3285, 8470, 181, 518, "Output"]
}, Open  ]],
Cell[136240, 3469, 8440, 181, 518, "Input"],
Cell[144683, 3652, 1234, 25, 690, "Text"],
Cell[CellGroupData[{
Cell[145942, 3681, 216, 4, 57, "Code"],
Cell[146161, 3687, 10951, 230, 526, "Output"]
}, Open  ]],
Cell[157127, 3920, 529, 9, 53, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157705, 3935, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[157882, 3942, 274, 6, 57, "Code"],
Cell[158159, 3950, 5914, 147, 762, "Output"]
}, Open  ]],
Cell[164088, 4100, 246, 5, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164371, 4110, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[164548, 4117, 276, 6, 57, "Code"],
Cell[164827, 4125, 7840, 196, 702, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172716, 4327, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[172893, 4334, 282, 5, 70, "Section"],
Cell[CellGroupData[{
Cell[173200, 4343, 310, 6, 62, "Subsection"],
Cell[CellGroupData[{
Cell[173535, 4353, 188, 4, 57, "Code"],
Cell[173726, 4359, 3986, 84, 426, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177785, 4451, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[177962, 4458, 310, 6, 91, "Subsection"],
Cell[CellGroupData[{
Cell[178297, 4468, 214, 4, 57, "Code"],
Cell[178514, 4474, 3958, 83, 426, "Output"]
}, Open  ]],
Cell[182487, 4560, 563, 12, 125, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183099, 4578, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[183276, 4585, 273, 6, 57, "Code"],
Cell[183552, 4593, 10150, 250, 1136, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193751, 4849, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[193928, 4856, 274, 6, 57, "Code"],
Cell[194205, 4864, 9903, 239, 542, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204157, 5109, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[204334, 5116, 321, 6, 70, "Section"],
Cell[CellGroupData[{
Cell[204680, 5126, 1137, 33, 62, "Subsection"],
Cell[CellGroupData[{
Cell[205842, 5163, 190, 4, 57, "Code"],
Cell[206035, 5169, 4324, 96, 359, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210432, 5273, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[210609, 5280, 279, 5, 55, "Subsection"],
Cell[CellGroupData[{
Cell[210913, 5289, 193, 4, 57, "Code"],
Cell[211109, 5295, 5518, 118, 359, "Output"]
}, Open  ]],
Cell[216642, 5416, 4130, 122, 340, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220821, 5544, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[220998, 5551, 274, 6, 57, "Code"],
Cell[221275, 5559, 8483, 203, 788, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229807, 5768, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[229984, 5775, 272, 6, 57, "Code"],
Cell[230259, 5783, 7773, 180, 814, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238081, 5969, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[238258, 5976, 274, 6, 57, "Code"],
Cell[238535, 5984, 3394, 85, 465, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241978, 6075, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[242155, 6082, 275, 6, 57, "Code"],
Cell[242433, 6090, 4152, 106, 483, "Output"]
}, Open  ]]
}, Open  ]],
Cell[246612, 6200, 152, 3, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"]
}
]
*)

