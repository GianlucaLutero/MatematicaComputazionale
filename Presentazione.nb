(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    808825,      15611]
NotebookOptionsPosition[    797441,      15251]
NotebookOutlinePosition[    800331,      15325]
CellTagsIndexPosition[    800250,      15320]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.701758817043281*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "ff061b19-78df-4426-84ae-4a02cd5c333e"],

Cell["\<\
TRIGONOMETRIA
\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7017576485113573`*^9, 3.7017576639421873`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8fad6acd-86e2-4dc6-82e1-89f1a60f5c96"],

Cell["\<\
Calcolo numerico e software didattico-Matematica Computazionale
Adele Valerii - Sara Gattari - Gianluca Lutero - Filippo Soncini\
\>", "Subtitle",
 CellChangeTimes->{{3.7017576683852177`*^9, 3.7017577041746807`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "5b35e99e-8570-4658-af04-5f307a8d7bd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "27012d45-0ea1-4f58-8190-50e8b92ac9a0"],

Cell[TextData[{
 StyleBox["Obbiettivi",
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]],
 "\n",
 StyleBox["\n", "Text",
  FontColor->GrayLevel[0]],
 StyleBox["- Apprendere i principali teoremi della trigonometria con facilit\
\[AGrave] e divertimento:\n\n\t- Definizioni di Seno, Coseno e Tangente\n\t- \
Teorema della corda\n\t- Teorema dei seni\n\t- Teorema del coseno\n\t\n- \
Rendere i concetti facimente comprensibili agli alunni con disturbi specifici \
dell\[CloseCurlyQuote]apprendimento (DSA). \n\n- Infine, tramite gli esercizi \
guidati dare la possibilit\[AGrave] allo studente di mettersi alla prova.", 
  "Text",
  FontFamily->"OpenDyslexic",
  FontColor->GrayLevel[0]],
 StyleBox["\n", "Text",
  FontColor->GrayLevel[0]]
}], "Section",
 CellChangeTimes->{{3.7017577262703753`*^9, 3.701757728538085*^9}, {
  3.701757778833646*^9, 3.701757780764263*^9}, {3.701758122796708*^9, 
  3.7017581242681093`*^9}, {3.702187705035461*^9, 3.7021877678940477`*^9}, {
  3.702187834980485*^9, 3.702187936858981*^9}, {3.702188056149166*^9, 
  3.702188129207547*^9}, {3.7023575954637947`*^9, 3.7023576214336452`*^9}, {
  3.702957534935906*^9, 3.7029576008131323`*^9}, {3.702957670130249*^9, 
  3.702957718002822*^9}, {3.702957914559709*^9, 3.7029579664689417`*^9}, {
  3.7029580102657127`*^9, 3.702958086000264*^9}, {3.70295818071097*^9, 
  3.702958199843223*^9}, {3.703563402445723*^9, 3.70356340494981*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "28867ebd-4ddc-4d62-8d18-4803749c67c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "496f1601-951b-40b1-89e9-198113a781e6"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A chi \[EGrave] rivolto",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757786788609*^9, 3.7017577952106047`*^9}, {
  3.701758096365346*^9, 3.70175811028111*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1c64015d-75f2-4913-bd06-d48b6da81dcc"],

Cell[TextData[{
 "- Studenti del terzo anno della Scuola Secondaria di Secondo Grado.\n\n- \
Prima parte rivolta agli studenti del primo anno della Scuola Secondaria di \
Secondo Grado, in quanto ne hanno necessit\[AGrave] per \
l\[CloseCurlyQuote]applicazione alla fisica.\n\n- Caratteristiche specifiche \
del programma indicate per l\[CloseCurlyQuote]apprendimento dei ragazzi ",
 StyleBox["con disturbi specifici dell\[CloseCurlyQuote]apprendimento (DSA). \
", "Text",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{
  3.701757802564528*^9, {3.702188176195565*^9, 3.702188511755487*^9}, {
   3.702958231642229*^9, 3.702958262438171*^9}, {3.702958301256915*^9, 
   3.7029583388484077`*^9}, 3.702958755359706*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f9dc73bd-d5aa-4fe5-8812-54d33a5f8699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Prerequisiti",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.701757812179427*^9, 3.701757818585503*^9}, {
  3.7017581145044003`*^9, 3.701758117589946*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f0a85a5b-0874-4db0-975b-4e210f1ba1e9"],

Cell["\<\
- Nozioni algebriche che si acquisiscono durante il primo biennio della \
Scuola Secondaria di Secondo Grado.

- Il Teorema di Pitagora 

- Propriet\[AGrave] dei triangoli.

  
\
\>", "Text",
 CellChangeTimes->{{3.701757821007757*^9, 3.701757826242482*^9}, {
  3.702188561809354*^9, 3.7021887207319193`*^9}, {3.702189008946814*^9, 
  3.702189057732115*^9}, {3.702958793514718*^9, 3.702958859146895*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "65271cce-8aa2-4634-9541-8ab133eb2f2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d4a3994a-d88f-4f00-98b2-db18aef836ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\</Users/filippo/MatematicaComputazionale/Trigonometria.m\>\"", "]"}],
     "\\\\", "Quiet"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\</home/gianluca/Universit\[AGrave]/Magistrale/Matematica_\
Computazionale/Progetto/MatematicaComputazionale/Trigonometria.m\>\"", "]"}], 
   "\\\\", "Quiet"}]}]], "Input",
 CellChangeTimes->{
  3.703569631646016*^9, {3.703866257456611*^9, 3.70386626964732*^9}, {
   3.703940891185894*^9, 3.703940892633933*^9}, 3.7039466013663073`*^9, {
   3.704004335365964*^9, 3.7040043426327047`*^9}, {3.704168155668787*^9, 
   3.704126436970355*^9}},
 EmphasizeSyntaxErrors->True,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "efc61d3a-ddfc-4487-8f91-61dfec0839cd"],

Cell[CellGroupData[{

Cell[TextData[{
 "\n",
 StyleBox["Regole",
  FontColor->RGBColor[0.5019607843137255, 0., 0.25098039215686274`]]
}], "Section",
 CellChangeTimes->{{3.701757998441074*^9, 3.701758093017961*^9}, {
  3.701758147471192*^9, 3.7017581510838003`*^9}, {3.70175826528433*^9, 
  3.701758273178944*^9}, {3.7029591428241158`*^9, 3.702959190381872*^9}, {
  3.7029595630691423`*^9, 3.7029595743307877`*^9}, {3.702959660841516*^9, 
  3.7029596671218147`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "eebc9a3e-1f4d-4185-98bf-2c9e5ec0cc68"],

Cell["\<\
Teoria

- Per andare avanti clicca sulla freccia in alto
- Quando vedi un pulsante clicca sopra per scoprire nuove cose
- Per vedere cosa accade prova a muovere i punti nei disegni( se premi il \
pulsante + puoi avviare le animazioni )

Esercizi

- Usa sempre le lettere maiuscole per indicare i lati
- Schiaccia invio per confermare ci\[OGrave] che hai inserito
- Il seno \[EGrave] indicato con: sen
- Negli esercizi guidati leggi i suggerimenti e completa di conseguenza all\
\[CloseCurlyQuote]inteno delle caselle
- Negli esercizi a risposta multipla clicca sul pallino della risposta che \
secondo te \[EGrave] corretta

Pulsante calcolatrice?
Se hai bisono puoi usare un foglio per fare i calcoli\
\>", "Text",
 CellChangeTimes->{{3.7029592909524612`*^9, 3.7029595200826263`*^9}, {
   3.702959843131048*^9, 3.702959851926807*^9}, 3.702960857833798*^9, {
   3.702961330801569*^9, 3.7029613704580307`*^9}, {3.702961659252536*^9, 
   3.702961686312952*^9}, 3.7040044149045*^9, {3.704004547202037*^9, 
   3.704004661355953*^9}, 3.704005021492406*^9, {3.704005175842289*^9, 
   3.7040052471763563`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "65f2a966-0f58-4ab5-91cc-3afc3391e721"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "662c697d-36a7-4e84-8fbd-936cc439c2e4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: SENO e COSENO",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703561953952704*^9, 3.7035620060291843`*^9}, {
  3.703563194375814*^9, 3.70356327112707*^9}, {3.703563334396192*^9, 
  3.703563365089061*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a3bc7838-fb0f-40bc-b142-ca1a36dc64e5"],

Cell[TextData[{
 StyleBox["sen(\[Theta]) ",
  FontSize->36,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["y", 
     RowBox[{"P", " "}]],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->36,
  ExpressionUUID -> "d8f19e16-fddf-4039-8504-40f0665e549a"],
 StyleBox["\n",
  FontSize->36],
 StyleBox["cos(\[Theta])",
  FontSize->36,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->36,
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["= ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["x", "P"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->36,
  ExpressionUUID -> "624205bf-720a-47d3-b203-f2699dec58e4"]
}], "Text",
 CellChangeTimes->{3.7035699081514*^9, 3.703570728184163*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b42f20ef-8eb8-4505-b903-b1082c9ebae2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defsencos", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703569865758745*^9, 3.703569868602861*^9}, {
   3.703570157260002*^9, 3.7035703000474863`*^9}, {3.703570584882036*^9, 
   3.7035705883114557`*^9}, 3.703862618133802*^9, {3.703862688559525*^9, 
   3.703862728464252*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b88380e5-673a-4261-af01-e00664bfec47"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {479., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5280$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5280$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Red, Blue, 
               Darker[Green, 0.3]}, {"Sin", "Cos", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "Angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{526., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703570086673793*^9, 3.7035705582335*^9, 3.7035705894076567`*^9, {
   3.703862623630522*^9, 3.7038626484758387`*^9}, {3.703862701216816*^9, 
   3.703862730161173*^9}, {3.7039408961937213`*^9, 3.703940904892466*^9}, {
   3.703941771404128*^9, 3.7039417811581984`*^9}, 3.703946794330942*^9, 
   3.704003074354559*^9, 3.704168379883692*^9, 3.704169054186317*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "416cd269-f408-4409-98cb-938b68820a9c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Osserva che l\[CloseCurlyQuote]equazione della circonferenza \
\[EGrave]:",
  FontSize->18,
  FontColor->GrayLevel[0]],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["sen",
     FontSize->24,
     FontColor->RGBColor[1, 0, 0]], "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1, 0, 0],
  ExpressionUUID -> "62f4fd6c-8d56-4ec0-a13c-4193c0446bca"],
 StyleBox["(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" + ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox[
     StyleBox["cos",
      FontColor->RGBColor[0, 0, 1]], "2"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "fa76b765-2409-474a-aad9-28972e315b82"],
 StyleBox["(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = 1\n",
  FontSize->24],
 StyleBox["Questa \[EGrave] la",
  FontSize->18],
 StyleBox[" formula fondamentale",
  FontSize->18,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[" della trigonometria.",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.7040058474588614`*^9, 3.7040058836280193`*^9}, {
  3.7040059146466913`*^9, 3.704005930423451*^9}, {3.704005979739992*^9, 
  3.704005997854095*^9}, {3.70400603316066*^9, 3.7040060505338573`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "cf213812-a977-42f6-8d34-514e88985674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonesen", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038661230170307`*^9, 3.7038661273565397`*^9}, {
  3.7038661706133275`*^9, 3.703866196608869*^9}, {3.7038662955113144`*^9, 
  3.7038662999021873`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a0933898-eae8-4ae9-baeb-b472fca09161"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Seno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`grafiseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663013408756`*^9, 3.703866338606423*^9, {3.7039408967412786`*^9, 
   3.703940908900725*^9}, {3.7039417718211765`*^9, 3.703941783828933*^9}, 
   3.703946794573558*^9, 3.7040030745419827`*^9, 3.704168383022398*^9, 
   3.7041690544363422`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "81226213-9cb1-4777-b359-350e3d9105b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonecos", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038663781597786`*^9, 3.7038663822816715`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "aa6610b1-50bb-4fe0-ad89-22d3ca02ed12"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Coseno\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficocoseno[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7038663832968783`*^9, {3.703940896794318*^9, 3.703940926428261*^9}, {
   3.7039417718476787`*^9, 3.7039417868394766`*^9}, 3.703946794652046*^9, 
   3.7040030746039553`*^9, 3.704168385882049*^9, 3.704169054451968*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b13d9bf5-0a84-4dba-a9ec-0d3e351aae47"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "3329c87d-1a06-45ce-a2cd-fc587ad29a03"],

Cell[TextData[{
 StyleBox["sen(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "P"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "d982702b-ae3c-4725-a974-1b3780fba3a2"],
 StyleBox[" = PH = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["PH", "1"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "735a36e2-42f6-4fd2-840d-5c09348b7c53"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["PH", "OP"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "5febb2a7-b988-4ba8-aa27-76fb5326cc9b"],
 StyleBox["\n",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "P"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "d512eaa2-5208-4fe8-abd5-919c43092a3c"],
 StyleBox[" = OH = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["OH", "1"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "fe32aac9-26ad-4d32-931f-367e398bcdd9"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox["OH", "OP"], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "85cc343e-18fc-425c-ae1f-afd60a390336"]
}], "Text",
 CellChangeTimes->{{3.704002520045436*^9, 3.704002569110077*^9}, {
  3.704002609203266*^9, 3.704002706699196*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f641fa14-e015-4896-9bf4-3b3960a89684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rapporti", "[", "]"}]], "Code",
 CellChangeTimes->{3.70386277636623*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c19c712c-ace5-41eb-a29b-8672b266d7be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {462., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5327$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5327$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], Thick, 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}]}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{
               Darker[Green, 0.3]}, {"\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{509., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.703862777693576*^9, 3.703940896841196*^9, 
  3.7039417718626924`*^9, 3.7039419072994184`*^9, 3.703946794719541*^9, 
  3.704003074653544*^9, 3.704169054545762*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "61d128ec-a975-405c-af87-80593581fbe1"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\n\n",
  FontColor->RGBColor[1, 0, 0]],
 "\n\n\n\n\n",
 StyleBox["sen(\[Theta]) ",
  FontSize->24,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["= ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "OPPOSTO", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "01e91f61-f4ec-42cd-90cb-6c39ffbb993d"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["AB", "AC"],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "f2889c35-92b8-4f64-a7c2-e0faa37099e4"],
 StyleBox["                 ",
  FontSize->24],
 StyleBox["cos(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"CATETO", " ", "ADIACENTE", " ", 
     RowBox[{"ALL", "'"}], "ANGOLO", " ", "\[Theta]"}], "IPOTENUSA"], 
   TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "b944ddc3-8fff-4f34-9647-bc591f9aac5e"],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["BC", "AC"],
    FontColor->RGBColor[0, 0, 1]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "e1c288c0-ddef-44c9-8a07-f502c20eddc8"]
}], "Text",
 CellChangeTimes->{{3.703562630593067*^9, 3.703562897231632*^9}, {
   3.703562928577821*^9, 3.7035629464673862`*^9}, {3.703563019580144*^9, 
   3.703563031947398*^9}, {3.70356551397563*^9, 3.703565517468425*^9}, {
   3.703565551194296*^9, 3.703565554128024*^9}, {3.703862759791403*^9, 
   3.7038627612753*^9}, {3.703866459730482*^9, 3.7038664961437783`*^9}, 
   3.7038665278697076`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c5741caa-323d-4976-ae87-5953bbe4f2a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangolorett", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.70386282246383*^9, {3.704168199933444*^9, 3.704168208937605*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "748000fa-f200-4166-9a9d-fe3b508ce699"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {2^Rational[-1, 2], 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {
            0.7071067811865475, 0}, {0.7071067811865475, 
            0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"B\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703862823428588*^9, 3.703940896894593*^9, 
  3.7039417718939495`*^9, 3.70394298377773*^9, 3.703946794869362*^9, 
  3.704003074786738*^9, 3.704168209625142*^9, 3.704169054858261*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "350b13f9-d476-4ebc-abf4-421614f99f94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "127890ed-ba16-42ab-81a5-d1a4c0887359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Calcolatrice", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942948273542*^9, 3.703942951729044*^9}, 
   3.703948397538411*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "33addc57-ad12-4f54-96f0-eae9c73c3a21"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["b7nny_shm", 3, 1]],29,
   "FrontEndObject[LinkObject[\"b7nny_shm\", 3, 1]]","29","29"},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{3.7039429525834045`*^9, 3.703946795693454*^9, 
  3.70394839860182*^9, 3.704003075054468*^9, 3.704168351449605*^9, 
  3.7041690550926604`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1c9131bf-2e55-4e50-b4bc-9f4803ca96d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EsercizioEsempio", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039420235445185`*^9, 3.7039420274694376`*^9}, {
  3.7039481991561823`*^9, 3.703948203560149*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f76284ba-c14e-4f2b-be14-65067bf316cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esempio 1:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esempio 1:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{LineBox[{{0, 0}, {0, 1}, {2, 0}, {0, 0}}], 
        LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}], 
        CircleBox[{2, 0}, 0.2, {2.5394540616517496`, 3.1852258848896513`}], 
        CircleBox[{0, 1}, 0.2, 
         NCache[{260 Degree, 340 Degree}, {4.537856055185257, 
          5.934119456780721}]], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Theta]\"\>",
          StripOnInput->False,
          FontSize->10], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          FontSize->10], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          FontSize->10], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 25 \\\\\\\\nC = 50\\\\\\\
\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\" \"\>", TextForm]], "InlineText"],
      Text[" "]], 
     StyleBox[
      PanelBox["\<\" Sin(\[Alpha]) = \\!\\(\\*FractionBox[\\(A\\), \
\\(C\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\\\ \\)\\(25\\)\\(\\\\ \\)\\), \
\\(\\(\\\\ \\)\\(50\\)\\)]\\) = \\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(1\\)\\(\
\\\\ \\)\\), \\(2\\)]\\)\"\>"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxDividers->{"RowsIndexed" -> {3 -> RGBColor[1, 0, 0]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{5}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7041691135856333`*^9, 3.704126505815894*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "98a57774-de45-4b81-a33b-d9999ffbe613"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DEFINIZIONI: TANGENTE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703563451333693*^9, 3.703563480763627*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "4a909eba-d39c-41e1-bc4f-4eef9e871f13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"definizionetangente", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862859615328*^9, 3.70400306888826*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "97f5c21a-9e14-4727-adf9-8df6050a1352"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {478., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5387$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5387$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{1, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{0, 0}, 0.02]}, {Black, 
              Disk[{1, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Opacity[0.2], Cyan, Thick, 
              EdgeForm[
               Directive[Thick, Cyan]], 
              Triangle[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 0}}]}, {
              Opacity[0.2], Magenta, Thick, 
              EdgeForm[
               Directive[Magenta]], 
              Triangle[{{0, 0}, {1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, 
             If[Trigonometria`th <= Pi/2, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                
                Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}, {
                   Cos[Trigonometria`th], 0}}]}, {
                Darker[Green, 0.3], 
                
                Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                  Cos[Trigonometria`th] - 0.1, 0.1}, {
                   Cos[Trigonometria`th], 0.1}}]}}, {
               If[Trigonometria`th <= Pi, {{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  
                  Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                  Darker[Green, 0.3], 
                  
                  Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, 0.1}, {
                    Cos[Trigonometria`th], 0.1}}]}}, {
                 If[Trigonometria`th <= (3 Pi)/2, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] + 0.1, 0}, {
                    Cos[Trigonometria`th] + 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}, {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    
                    Polygon[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}, {
                    Cos[Trigonometria`th], 0}}]}, {
                    Darker[Green, 0.3], 
                    
                    Line[{{Cos[Trigonometria`th] - 0.1, 0}, {
                    Cos[Trigonometria`th] - 0.1, -0.1}, {
                    Cos[Trigonometria`th], -0.1}}]}}]}]}], 
             If[
              Or[Trigonometria`th <= Pi/2, 
               And[Trigonometria`th > Pi, Trigonometria`th <= (3 Pi)/2]], {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, 0.1}, {1, 0.1}}]}}, {{
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Polygon[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}, {1, 0}}]}, {
                Darker[Green, 0.3], 
                Line[{{0.9, 0}, {0.9, -0.1}, {1, -0.1}}]}}], {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{1, -3}, {1, 3}}]}, 
             Text["H", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["O", {-0.1, 0.1}], 
             Text["K", {1.1, 0.1}], 
             Text["T", {1.1, Tan[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Rotate[
              Text[
               Style["Tan(\[Theta])", Orange], {
               1.1, Tan[Trigonometria`th]/2}], 90 Degree], {Orange, Thick, 
              Line[{{1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Orange, 
               Darker[Green, 0.3]}, {"Tan", "\[Theta]"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{525., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.703862860503118*^9, 3.703940896925843*^9, 3.703941771940825*^9, 
   3.703942052907565*^9, 3.7039467958689327`*^9, {3.704003075201689*^9, 
   3.704003077693231*^9}, 3.7041683449801693`*^9, 3.7041690552020464`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ee90527e-a735-4d27-bc3f-a42e22000a2d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\nI triangoli POH e TKO sono simili: \n\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TH", "PK"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "42d20d63-4052-4ce1-ae2c-708edb7ccb48"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["OK", "OH"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "d23a690c-1c98-4397-9ebd-ba7c081c5762"],
 StyleBox[" \[LongRightArrow] ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TK", 
    StyleBox[
     RowBox[{"sen", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "206edc82-878d-4611-b548-93ad2b009784"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["OK", 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "010bb446-724d-456e-be2b-fce48cdc14a3"],
 StyleBox["      \[LongRightArrow]     ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["TK", 
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "912077cb-440f-4779-b01a-b1dd9454b380"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     StyleBox[
      RowBox[{"cos", "(", "\[Theta]", ")"}],
      FontColor->RGBColor[0, 0, 1]], " "}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "23477084-a565-4174-86b3-7f62952ef5b9"],
 StyleBox[" \[LongRightArrow] TK = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "20e31f45-fdcf-43ac-b756-e885d48025ec"],
 StyleBox["\n\n",
  FontSize->18],
 StyleBox["tan(\[Theta])",
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" = ",
  FontSize->24],
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox[
     RowBox[{
      RowBox[{"sen", "(", "\[Theta]", ")"}], " "}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"cos", "(", "\[Theta]", ")"}],
     FontColor->RGBColor[0, 0, 1]]], TraditionalForm]],
  FontSize->24,
  ExpressionUUID -> "306e9167-d653-4bbf-8ecc-d256201c2fc0"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7035635034658527`*^9, 3.70356375446353*^9}, {
   3.703563792728937*^9, 3.703563825332163*^9}, {3.703565521175215*^9, 
   3.703565571882224*^9}, 3.704002981896831*^9, {3.7040030286269617`*^9, 
   3.704003044383288*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "836f6f18-d2f8-48fe-bffe-a214b300080f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tangente", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.703862894874756*^9, {3.704003064874708*^9, 3.704003096113665*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "7fb445e7-2014-497a-8dee-f5a6a6c8d36b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {478., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5433$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5433$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{1, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{0, 
                Tan[Trigonometria`th]}, 0.02]}, {Black, 
              Disk[{1, 0}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{1, 3}, {1, Tan[Trigonometria`th] - 3}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{-3, 
                 Tan[Trigonometria`th]}, {3, 
                 Tan[Trigonometria`th]}}]}, 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text["T", {1.1, Tan[Trigonometria`th] + 0.1}], 
             Text["Xt", {1.1, 0.1}], 
             Text["Yt", {0.1, Tan[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Rotate[
              Text[
               Style["Tan(\[Theta])", Orange], {
               1.1, Tan[Trigonometria`th]/2}], 90 Degree], {Orange, Thick, 
              Line[{{1, 0}, {1, 
                 Tan[Trigonometria`th]}}]}, {Orange, 
              Thickness[0.008], 
              Dashing[Medium], 
              Line[{{0, 0}, {0, 
                 Tan[Trigonometria`th]}}]}, Null}], PlotRange -> 1, ImageSize -> 
           400, BaseStyle -> {15}, Axes -> True, Ticks -> Automatic, 
           PlotRangePadding -> 0.25]; DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {1, 
                  Tan[Trigonometria`ptctrl$$]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
                If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]]]], 
             LineLegend[{Orange}, {"Tan"}]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, Rational[1, 6] Pi, "angle"}, 0, 2 Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{525., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7040030974702883`*^9, 3.7041683419642305`*^9, 
  3.704169055561487*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b4ee865d-d2a9-4d8f-ab71-fe73af011e2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bottonetan", "[", "]"}]], "Code",
 CellChangeTimes->{{3.7038668881404796`*^9, 3.703866910984089*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9a2a6b6f-ab27-4436-ba1a-4478d7087c35"],

Cell[BoxData[
 ButtonBox["\<\"Funzione Tangente\"\>",
  Appearance->Automatic,
  ButtonFunction:>MessageDialog[
    Trigonometria`graficotangente[], WindowSize -> All, Editable -> False],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.703866896716856*^9, 3.703866911801592*^9}, 
   3.7039408970104885`*^9, 3.7039417720788507`*^9, 3.7039420601349435`*^9, 
   3.703946796153141*^9, 3.704003075387569*^9, 3.7041690557958884`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "8cc4d04d-8a0a-4251-8acc-b4807cff9c04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "cc4718d5-2b71-428d-a73c-de37ed219aa1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ANGOLI NOTI",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035641514009333`*^9, 3.703564164977171*^9}, {
  3.703564203834907*^9, 3.703564205135581*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a2480c7b-8e5d-4e6f-acaf-d308d914fe90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti30", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862957984501*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c501c8a0-49ec-4378-b83f-00cdd4e80b80"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 6] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 6] Pi, ""}, 0, 2 Pi, 
      Rational[1, 6] Pi}}, Typeset`size$$ = {583., {219., 251.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5475$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5475$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 (Pi/2)], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}, Null}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 6] Pi, ""}, 
         0, 2 Pi, Rational[1, 6] Pi}}, 
      "Options" :> {
       TrackedSymbols :> {Trigonometria`showvalue, Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{630., {280., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.70386295918711*^9, 3.7039408970417404`*^9, 
  3.7039417721257286`*^9, 3.7039421042354956`*^9, 3.703946796217732*^9, 
  3.7040030754545813`*^9, 3.70416833227575*^9, 3.704169055842738*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "4c0bee17-95c2-415b-89ff-49742a06a5d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angolinoti45", "[", "]"}]], "Code",
 CellChangeTimes->{3.703862986160528*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ab55440f-ac1f-45fd-b75b-d96cddc0285f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = Rational[1, 4] Pi, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], Rational[1, 4] Pi, ""}, 0, 2 Pi, 
      Rational[1, 4] Pi}}, Typeset`size$$ = {583., {219., 251.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5532$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = Rational[1, 4] Pi}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5532$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$, Trigonometria`maingraph$}, 
        Trigonometria`anglegraph$[
           Pattern[Trigonometria`th, 
            Blank[]]] := Show[
           Graphics[{{
              Lighter[Gray, 0.5], 
              Circle[{0, 0}, 1]}, {
              Lighter[Gray, 0.5], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Black, 
              Disk[{
                Cos[Trigonometria`th], 0}, 0.02]}, {Black, 
              Disk[{0, 
                Sin[Trigonometria`th]}, 0.02]}, {
              Lighter[Gray, 0.5], 
              
              Line[{{(-6) Cos[Trigonometria`th], (-6) 
                 Sin[Trigonometria`th]}, {
                6 Cos[Trigonometria`th], 6 Sin[Trigonometria`th]}}]}, {
              Opacity[0.2], 
              Darker[Green, 0.3], Thick, 
              Disk[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Darker[Green, 0.3], 
              Circle[{0, 0}, 0.3, {0, Trigonometria`th}]}, {
              Lighter[Gray, 0.5], Null, 
              Dashing[Medium], 
              Line[{{Cos[Trigonometria`th] - 3, 
                 Sin[Trigonometria`th]}, {3, 
                 Sin[Trigonometria`th]}}]}, {
              Lighter[Gray, 0.5], 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], Sin[Trigonometria`th] - 3}, {
                 Cos[Trigonometria`th], 3}}]}, 
             Text["Xp", {Cos[Trigonometria`th] + 0.1, 0.1}], 
             Text["Yp", {0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
             "P", {Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}], 
             Text[
              Style["\[Theta]", 
               Darker[Green, 0.3]], {0.2, 0.1}], 
             Text[
              Style["Cos(\[Theta])", Blue], {Cos[Trigonometria`th]/2, -0.1}], 
             
             Rotate[
              Text[
               Style["Sin(\[Theta])", Red], {-0.1, Sin[Trigonometria`th]/2}], 
              90 Degree], {Red, 
              Thickness[0.008], 
              Line[{{0, 0}, {0, 
                 Sin[Trigonometria`th]}}]}, {Red, Null, 
              Dashing[Medium], 
              Line[{{
                 Cos[Trigonometria`th], 0}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {Blue, 
              Thickness[0.008], 
              Line[{{0, 0}, {
                 Cos[Trigonometria`th], 0}}]}, {Blue, 
              Dashing[Medium], 
              Line[{{0, 
                 Sin[Trigonometria`th]}, {
                 Cos[Trigonometria`th], 
                 Sin[Trigonometria`th]}}]}, {
              If[
               And[
               Trigonometria`th != Pi/2, Trigonometria`th != 3 (Pi/2)], {{
                Orange, Thick, 
                 Line[{{1, 0}, {1, 
                    Tan[Trigonometria`th]}}]}, {Orange, 
                 Thickness[0.008], 
                 Dashing[Medium], 
                 Line[{{0, 0}, {0, 
                    Tan[Trigonometria`th]}}]}}, {}]}}], PlotRange -> 1, 
           ImageSize -> 400, BaseStyle -> {15}, Axes -> True, Ticks -> 
           Automatic, PlotRangePadding -> 0.25]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Labeled[
           Grid[{{
              LocatorPane[
               Dynamic[
               Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#])& , (
                 Trigonometria`pt = Normalize[#]; 
                 Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
               Dynamic[
                Trigonometria`anglegraph$[
                 Mod[
                  ArcTan[
                   Part[Trigonometria`pt, 1], 
                   Part[Trigonometria`pt, 2]], 2 Pi]]], Enabled -> False], 
              LineLegend[{
                Darker[Green, 0.3], Red, Blue, Orange}, {
                Row[{
                  Style["\[Theta]"]}], 
                Row[{"Sin(\[Theta]) = ", 
                  Part[Trigonometria`pt, 2]}], 
                Row[{"Cos(\[Theta]) = ", 
                  Part[Trigonometria`pt, 1]}], 
                Row[{"Tan(\[Theta]) = ", 
                  Tan[Trigonometria`ptctrl$$]}]}, LegendMarkerSize -> 40, 
               LabelStyle -> 15]}}, Alignment -> {Center, Center}], {
            Row[{
              Style["", "Label", 20, Gray], 
              Text[
               Style["\[Theta] = ", 
                Darker[Green, 0.3], 20]], 
              Style[Trigonometria`ptctrl$$, 
               Darker[Green, 0.3], 25]}], 
            Style["", 10, 
             Lighter[Gray, 0.7], "Label"]}, {{Top, Left}, {Bottom, Right}}]]],
       "Specifications" :> {{{Trigonometria`ptctrl$$, Rational[1, 4] Pi, ""}, 
         0, 2 Pi, Rational[1, 4] Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{630., {280., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.703862987445499*^9, 3.703940897110343*^9, 
  3.703941772156979*^9, 3.7039421075433903`*^9, 3.703946796367025*^9, 
  3.704003075688933*^9, 3.7041683354948187`*^9, 3.704169056467805*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "54c8bdf4-d5a9-4faa-bf6a-96060f7aac25"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e8a7e8c2-b615-4317-9e1e-aa9eb67abda8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FORMULE INVERSE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.703572668497764*^9, 3.7035726722315607`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "3f4b87f1-9332-4017-8ad3-9d4f2811442d"],

Cell[TextData[{
 StyleBox["Come trovo l\[CloseCurlyQuote]angolo \[Theta]?",
  FontSize->24,
  FontColor->RGBColor[0.5019607843137255, 0., 0.5019607843137255]],
 StyleBox["\n",
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontColor->GrayLevel[0]],
 StyleBox["sen(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontSize->18,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2ddb49c2-89c3-4d4b-86bf-97508f37ef55"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arcsen",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", "2"], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "7955bac7-b5a9-4193-87a2-c4bae33d45ca"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "180ff14e-6834-490e-95c5-15a9e026cdeb"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "c3bf070b-403b-4ba2-bd9d-d40870b04094"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come",
  FontSize->18],
 StyleBox[" seno",
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "61d3ad21-4945-4643-befd-45e8a74fac69"],
 StyleBox["\n\n\n\n",
  FontSize->18],
 StyleBox["cos(\[Theta])",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2a1d0a2b-5b57-45a5-bb5f-da9ea245dde5"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arccos",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox[
     SqrtBox["3"], "2"], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "d95e3c5d-d5e5-4c3d-87f6-5fa29caf1368"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "6f8fd7c2-dbdb-430e-9f3d-0b7dc3c3be00"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SqrtBox["3"], "2"], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "2e42b775-f2ae-4bf9-8a17-e724df1c00af"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["coseno",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "049e7cc0-4d3c-4d99-a99b-f3c70eec82b1"],
 StyleBox["\n\n\n\n",
  FontSize->18],
 StyleBox["tan(\[Theta]) = ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["3"]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "838c8cd0-8425-4768-8e65-50d6c23511fc"],
 StyleBox[" \[LongRightArrow] \[Theta] ?\n\[Theta] = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["arctan",
     FontColor->RGBColor[1, 0, 1]], "(", 
    FractionBox["1", 
     SqrtBox["3"]], ")"}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "490cc33d-0dfd-4655-a9f2-99defae9bdea"],
 StyleBox[" = ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["tan", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "e08d5574-e543-4d0e-82ef-449def078b74"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["3"]], ")"}], " ", "=", " ", 
    RowBox[{"30", "\[Degree]"}]}], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "a7ac1c3c-4d6d-4702-bef1-a3fb6e1d6ba1"],
 StyleBox["    \[LongLeftRightArrow]    30\[Degree] \[EGrave] l\
\[CloseCurlyQuote]angolo che ha come ",
  FontSize->18],
 StyleBox["tangente ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    SqrtBox["3"], "2"], TraditionalForm]],
  FontSize->18,
  ExpressionUUID -> "a4daa3a8-4877-4f96-bf12-0abe1ce24ed8"]
}], "Text",
 CellChangeTimes->{{3.703573152250655*^9, 3.7035734743492117`*^9}, {
  3.703573505001946*^9, 3.703573531372149*^9}, {3.703573568538046*^9, 
  3.703573604206109*^9}, {3.703573657966654*^9, 3.703573658944536*^9}, {
  3.7035737252961493`*^9, 3.703573797417841*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f3499736-a878-42fe-b2aa-286ec6d48717"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "eaf6e525-c36e-4362-8f56-a8581be1a2d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio1", "[", "]"}], " ", "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039421126114435`*^9, 3.703942120523225*^9}, 
   3.703948224644946*^9, {3.704126608340702*^9, 3.704126618852888*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "764634c7-7c1b-491d-b259-41bbb1e4184e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio Guidato:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio Guidato:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", 
     ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 40 \\\\\\\\nB = \
110\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
Sen(\[Alpha]),Cos(\[Alpha]),Tan(\[Alpha]) e l'angolo \[Alpha]\\\\\\\"\\\", \
Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans sarif\\\"], \
Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 1: Cerchiamo l'ipotenusa C.\\n Applico il Teorema \
di Pitagora:\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Passo 1: Cerchiamo l'ipotenusa C.\n Applico il Teorema di Pitagora:", 
        Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        ButtonBox["\"Teorema di Pitagora\"", ButtonFunction :> Module[{}, 
            CreateDialog[{
              Style["Teorema di Pitagora", FontSize -> 14, Bold], 
              Graphics[{
                Line[{{0, 0}, {0, 1}, {1.5, 0}, {0, 0}}], {
                 Lighter[Green, 0.5], 
                 Rectangle[{0, 0}, {1.5, -1.5}]}, {
                 Darker[Green, 0.5], 
                 Line[{{0, 0}, {1.5, 0}, {1.5, -1.5}, {0, -1.5}, {0, 0}}]}, 
                Text[
                 Style["\!\(\*SuperscriptBox[\(A\), \(2\)]\)", Bold, 20], {
                 0.8, -0.7}], {
                 Lighter[Red, 0.5], 
                 Rectangle[{0, 0}, {-1, 1}]}, {Red, 
                 Line[{{0, 0}, {-1, 0}, {-1, 1}, {0, 1}, {0, 0}}]}, 
                Text[
                 Style[
                 "\!\(\*SuperscriptBox[\(B\), \(2\)]\)", Bold, 20], {-0.5, 
                 0.5}], {
                 Lighter[Blue, 0.5], 
                 Rotate[
                  Rectangle[{0, 1}, {1.8, -0.8}], Pi/3 - 0.06, {0, 1}]}, {
                Blue, 
                 Line[{{0, 1}, {1.5, 0}, {2.5, 1.5}, {1, 2.5}, {0, 1}}]}, 
                Text[
                 Style["\!\(\*SuperscriptBox[\(C\), \(2\)]\)", Bold, 20], {
                 1.3, 1.3}]}]}]], Appearance -> Automatic, Evaluator -> 
          Automatic, Method -> "Preemptive"],"\"\\n\"",
         "\"Applico il teorema \[LongRightArrow] \\!\\(\\*SuperscriptBox[\\(A\
\\), \\(2\\)]\\) + \"",DynamicBox[
          ToBoxes[
           InputField[
            Dynamic[Trigonometria`catetoNome], String, FieldSize -> 1], 
           StandardForm]],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoNome, "B"], 
           StandardForm]],"\" = \"",InputFieldBox[
          Dynamic[Trigonometria`ipotenusaNome], String, FieldSize -> 1],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \\\\ \
\\)\\)]\\)\"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaNome, "C"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Sostituisco i valori \[LongRightArrow] \
\\!\\(\\*SuperscriptBox[\\(40\\), \\(2\\)]\\) + \"",InputFieldBox[
          Dynamic[Trigonometria`catetoValore], String, FieldSize -> 3],
         "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) \"",DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoValore, "110"], 
           StandardForm]],
         "\" = \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\)\\n\"","\"\\n\"",
         "\"Ricavo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{"\"\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBNome], String, FieldSize -> 1], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\""}, "RowDefault"]], DisplayForm],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`catetoBNome, "B"], 
           StandardForm]],"\"\\n \\n\"",
         "\"Approssima il risultato per difetto!\\n\\n\"",
         "\"Calcolo C \[LongRightArrow] C = \"",TagBox[
          SqrtBox[
           TemplateBox[{
             InputFieldBox[
              Dynamic[Trigonometria`catetoAValore], String, FieldSize -> 2], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\\\ \\\\ \\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoAValore, "40"], 
               StandardForm]], "\" + \"", 
             InputFieldBox[
              Dynamic[Trigonometria`catetoBValore], String, FieldSize -> 3], 
             "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\\(2\\)\\(\\\\ \\\\ \
\\)\\)]\\)\"", 
             DynamicBox[
              ToBoxes[
               Trigonometria`CheckAnswer[Trigonometria`catetoBValore, "110"], 
               StandardForm]]}, "RowDefault"]], DisplayForm],"\" = \"",
         InputFieldBox[
          Dynamic[Trigonometria`ipotenusaValore], String, FieldSize -> 3],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaValore, "117"], 
           StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 2: Cerchiamo sen(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 2: Cerchiamo sen(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"sen(\[Alpha]) = \"",FractionBox["\"A\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"40\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaSenValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaSenValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 3: Cerchiamo cos(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 3: Cerchiamo cos(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"cos(\[Alpha]) = \"",FractionBox["\"B\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosCNome], String, FieldSize -> 2]],
         DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosCNome, "C"], 
           StandardForm]],"\" = \"",FractionBox["\"110\"", 
          InputFieldBox[
           Dynamic[Trigonometria`ipotenusaCosValore], String, FieldSize -> 
           3]],DynamicBox[
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`ipotenusaCosValore, "117"],
            StandardForm]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 4: Cerchiamo tan(\[Alpha]).\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 4: Cerchiamo tan(\[Alpha]).", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{"\"tan(\[Alpha]) = \"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senNome], String, FieldSize -> 3], 
            "\"(\[Alpha])\""}, "RowDefault"], "\"cos(\[Alpha])\""],DynamicBox[
         
          ToBoxes[
           Trigonometria`CheckAnswer[Trigonometria`senNome, "sen"], 
           StandardForm]],"\"\\n\"",
         "\"Sostituisco i valori di seno e coseno trovati ai passi 2 e 3: \"",
         FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\"/\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum, "110"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen, "117"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Ricorda! La divisione tra due frazioni\\ndiventa la prima \
frazione moltiplicata per l'inversa della seconda:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum2, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen2, "117"], 
              StandardForm]]}, "RowDefault"]],"\"\[CenterDot]\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreNum2, "117"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`cosValoreDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`cosValoreDen2, "110"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Dopo aver eseguito la moltiplicazione tra le due frazioni \
ottengo:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen, "110"], 
              StandardForm]]}, "RowDefault"]],"\"\\n\"",
         "\"Semplifico ai minimi termini la frazione e ottengo:\"",FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resNum2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resNum2, "4"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`resDen2], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`resDen2, "11"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Passo 5: Cerchiamo \[Alpha].\"\>",
         StripOnInput->False,
         FontSize->15,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Passo 5: Cerchiamo \[Alpha].", Bold, 15]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     PanelBox[
      StyleBox[
       TemplateBox[{
        "\"\[Alpha] = \\!\\(\\*SuperscriptBox[\\(sen\\), \\(-1\\)]\\)(\"",
         FractionBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreNum3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreNum3, "40"], 
              StandardForm]]}, "RowDefault"], 
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`senValoreDen3], String, FieldSize -> 3], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`senValoreDen3, "117"], 
              StandardForm]]}, "RowDefault"]],"\")\""},
        "RowDefault"],
       StripOnInput->False,
       Magnification->2 Inherited]], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704128348354103*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "97f35bd5-8e5b-47c6-b08c-2c23589bf25f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio2", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942141975054*^9, 3.7039421471372027`*^9}, 
   3.703948260963499*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "eaa3ea4a-3bcd-4de4-bc0c-7b345c1db612"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 2:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 2:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0.7, 0}, 0.2, {3.141592653589793, 2.0647376957144776`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0.7, 0}, 0.2, {3.141592653589793, 
          2.0647376957144776`}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1.3}, 0.2, 
          NCache[{5.20633034930427, Rational[3, 2] Pi}, {5.20633034930427, 
           4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1.3}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"A\"\>",
           StripOnInput->False,
           FontSize->15], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->15], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->15], {0.5, 0.6}, ImageScaled[{0, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 1.}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.6, 0.08}], InsetBox[
         StyleBox["\<\"90\[Degree]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.15, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"B = 30 \\\\\\\\ntan(\[Beta]) \
= \\\\\\\\!\\\\\\\\(\\\\\\\\*FractionBox[\\\\\\\\(3\\\\\\\\), \
\\\\\\\\(5\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare A\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! tan\[Beta] =\\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(cateto\\\\ opposto\\)\\), \\(cateto\\\\ adiacente\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! tan\[Beta] =\!\(\*FractionBox[\(\(\\ \)\(cateto\\ \
opposto\)\), \(cateto\\ adiacente\)]\)", Bold, 20]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto adiacente?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto adiacente?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$6823], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$6823], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catAd$6823], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catAd$6823], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catAd$6823, "A"], 
        StandardForm],
       ImageSizeCache->{0., {7., 36.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Qual \[EGrave] il cateto opposto?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Qual \[EGrave] il cateto opposto?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$6823], {"A"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"A\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$6823], {"B"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"B\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`catOp$6823], {"C"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"C\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`catOp$6823], {"A", "B", "C"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`catOp$6823, "B"], 
        StandardForm],
       ImageSizeCache->{0., {7., 36.}}],
      StripOnInput->False,
      Magnification->3 Inherited]},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"tan\[Beta] = \"", StripOnInput -> False], TextForm]], 
          "InlineText"], 
         Text[
          Style["tan\[Beta] = "]]],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catOp2$6823], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catOp2$6823, "B"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`catAd2], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`catAd2, "A"], 
             StandardForm]]}, "RowDefault"]],InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[LongRightArrow] A tan(\[Beta]) = B \[LongRightArrow] A = \\!\
\\(\\*FractionBox[\\(\\(\\\\ \\)\\(B\\)\\), \\(tan \\((\[Beta])\\)\\)]\\)\"", 
             StripOnInput -> False], TextForm]], "InlineText"], 
         Text[
          Style[
          "\[LongRightArrow] A tan(\[Beta]) = B \[LongRightArrow] A = \
\!\(\*FractionBox[\(\(\\ \)\(B\)\), \(tan \((\[Beta])\)\)]\)"]]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quanto vale A?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quanto vale A?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$6823], {"50"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"50\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$6823], {"18"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"18\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`A$6823], {"2"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"2\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`A$6823], {"50", "18", "2"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`A$6823, "50"], StandardForm],
       ImageSizeCache->{0., {7., 36.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704131615644782*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c44748c8-a41f-40d2-bf07-d3ea0c0187a5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DELLA CORDA",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7035739489576197`*^9, 3.703573973609384*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "a33b1612-b74e-48f9-9c46-ec96819a1e28"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["AB = 2r sen(\[Theta])",
 FontSize->24,
 FontColor->RGBColor[1., 0., 0.5019607843137255]]], "Subsection",
 CellChangeTimes->{{3.703574010488777*^9, 3.703574028471489*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "948e0298-4cf3-4236-a7c8-678768c04e0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863021932871*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "869e5c9f-96e6-4903-8c35-700a9f6ba94c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-1.0275825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     TemplateBox[{"\"\[Theta]\"","\"Corda\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 40}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.35] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
        FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.4666666666666667, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.7, 0.]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0., 0.7, 0.], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "40"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.703863026297469*^9, 3.7039408971415963`*^9, 3.703941772194463*^9, {
   3.7039467968618593`*^9, 3.703946798466337*^9}, 3.7040030762824917`*^9, 
   3.704003265236156*^9, 3.7041682306273317`*^9, 3.7041690574835663`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f483e0ad-8d32-46b8-8371-0e8ab3c1202a"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.704003267432983*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "aa506e30-f01b-4780-af5b-7f929886411b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "b98afe31-6ef7-4b77-a0fb-93070ade76b3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsubsection",
 CellChangeTimes->{{3.703574115201405*^9, 3.703574126467238*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6c5cc4b5-938b-4641-9638-b1ccbef0334c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda2", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.7038630957334414`*^9, {3.7038670598514757`*^9, 3.7038670713926587`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b16aeae3-4dc1-42e5-b134-d1de75b55fd5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 4.872703441314004, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 3.641592653589793, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {510., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5755$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = 3.641592653589793}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5755$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[{
                  Cos[0 - 0.2], 
                  Sin[0 - 0.2]}, 0.02]}, {Black, 
                Disk[{
                  Cos[Trigonometria`th], 
                  Sin[Trigonometria`th]}, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {
                 Cos[0], 
                 Sin[-0.3]}], 
               Text["   C", {Cos[Trigonometria`th] - 0.15, 
                 Sin[Trigonometria`th]}], 
               Text["r", {0.4, -0.15}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}]}], 
             PlotRange -> 1, ImageSize -> 400, BaseStyle -> {15}, Axes -> 
             False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[Trigonometria`pa, Trigonometria`pb, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red, Null}, {"\[Theta]", "Corda"}, 
               LegendMarkerSize -> 40, LabelStyle -> 15]}}, Spacings -> 0]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, 3.641592653589793, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{557., {243., 250.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.704169057530414*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 4.373096365930644, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 3.641592653589793, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {510., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$23227$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {Trigonometria`ptctrl$$ = 3.641592653589793}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$23227$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[{
                  Cos[0 - 0.2], 
                  Sin[0 - 0.2]}, 0.02]}, {Black, 
                Disk[{
                  Cos[Trigonometria`th], 
                  Sin[Trigonometria`th]}, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {
                 Cos[0], 
                 Sin[-0.3]}], 
               Text["   C", {Cos[Trigonometria`th] - 0.15, 
                 Sin[Trigonometria`th]}], 
               Text["r", {0.4, -0.15}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] + 0.1, Sin[Trigonometria`th] + 0.1}]}], 
             PlotRange -> 1, ImageSize -> 400, BaseStyle -> {15}, Axes -> 
             False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}}, 
          Grid[{{
             LocatorPane[
              Dynamic[
              Trigonometria`pt, {(Trigonometria`pt = Normalize[#])& , (
                Trigonometria`pt = Normalize[#])& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = If[# == {2 Pi, 0}, Pi, 
                   Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]])& }], 
              Dynamic[
               Trigonometria`anglegraph$[Trigonometria`pa, Trigonometria`pb, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red, Null}, {"\[Theta]", "Corda"}, 
               LegendMarkerSize -> 40, LabelStyle -> 15]}}, Spacings -> 0]]], 
      "Specifications" :> {{{
         Trigonometria`ptctrl$$, 3.641592653589793, "angle"}, 0, 2 Pi}}, 
      "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{557., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.704004674507036*^9, 3.704004674523614*^9}, {
  3.70400475101376*^9, 3.7040049191839933`*^9}, {3.7040049632508287`*^9, 
  3.704004986859641*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6b21ac7e-1579-441b-bd6b-3e374443d6b9"],

Cell[TextData[{
 StyleBox["AB = AC sen(\[Theta]) = 2r sen(\[Theta])\n\nMuovi C sulla \
circonferenza !\n\nCosa puoi notare ?\n\n\[Theta] ha sempre la stessa \
ampiezza !\n\nPerch\[EGrave] ?\n\nPerch\[EGrave] \[EGrave] un angolo alla \
circonferenza che insiste sull\[CloseCurlyQuote]arco AB.\n\n Quindi possiamo \
posizionare C in modo tale che il triangolo sia rettangolo ed epplicare le \
formule che abbiamo visto prima! \n \n 2r \[EGrave] \
l\[CloseCurlyQuote]ipotenusa e AB \[EGrave] il cateto opposto a \[Theta]. \n\n\
Quindi ",
  FontSize->16],
 StyleBox["AB = 2r sen(\[Theta])",
  FontSize->16,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 StyleBox[".\n\nE questa formula vale sempre perch\[EAcute] \[Theta] \
\[EGrave] sempre lo stesso! \n\nQuando C \[EGrave] \
nell\[CloseCurlyQuote]altro arco cosa succede?",
  FontSize->16],
 "\n"
}], "Text",
 CellChangeTimes->{{3.703574313395405*^9, 3.703574337691551*^9}, {
  3.70357437300624*^9, 3.703574505325901*^9}, {3.7038672782667184`*^9, 
  3.703867293700658*^9}, {3.704003393257348*^9, 3.704003400707918*^9}, {
  3.704003477407679*^9, 3.704003480868709*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "89c0288f-674d-490d-b69b-1ff57ab443c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacorda3", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867148332883*^9, 3.7038671863854427`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "fd50934b-7a52-4480-8d01-fe61c0223ebf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Trigonometria`ptctrl$$ = 1.5567621605278044`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Trigonometria`ptctrl$$], 0.4, "angle"}, 0, 2 Pi}}, 
    Typeset`size$$ = {508., {199.5, 206.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Trigonometria`ptctrl$5799$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {Trigonometria`ptctrl$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[Trigonometria`ptctrl$$, Trigonometria`ptctrl$5799$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{Trigonometria`anglegraph$}, Trigonometria`anglegraph$[
           Pattern[Trigonometria`a, 
            Blank[]], 
           Pattern[Trigonometria`b, 
            Blank[]], 
           Pattern[Trigonometria`c, 
            Blank[]], 
           Pattern[Trigonometria`th, 
            Blank[]]] := Module[{Trigonometria`anga}, Trigonometria`anga = {
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`a, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`a, 1])], 
              
              ArcTan[(Sin[Trigonometria`th] - Part[Trigonometria`b, 2])/(
               Cos[Trigonometria`th] - Part[Trigonometria`b, 1])]}; Show[
             Graphics[{{
                Lighter[Gray, 0.5], 
                Circle[{0, 0}, 1]}, {
                If[
                 And[
                 Cos[Trigonometria`th] > Part[Trigonometria`b, 1], 
                  Cos[Trigonometria`th] > Part[Trigonometria`a, 1]], {{
                   Opacity[0.2], 
                   Darker[Green, 0.3], Thick, 
                   Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, 
                  Darker[Green, 0.2], Thick, 
                  Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                   Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2] + Pi}]}, {
                  If[
                   And[
                   Cos[Trigonometria`th] < Part[Trigonometria`b, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`a, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1], 
                    Part[Trigonometria`anga, 2]}]}, {{
                    If[
                    And[
                    Sin[Trigonometria`th] < Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] + Pi, 
                    Part[Trigonometria`anga, 2]}]}, {
                    If[
                    And[
                    Sin[Trigonometria`th] > Part[Trigonometria`b, 2], 
                    Cos[Trigonometria`th] > Part[Trigonometria`a, 1], 
                    Cos[Trigonometria`th] < Part[Trigonometria`b, 1]], {{
                    Opacity[0.2], 
                    Darker[Green, 0.3], Thick, 
                    Disk[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, 
                    Darker[Green, 0.2], Thick, 
                    Circle[{
                    Cos[Trigonometria`th], 
                    Sin[Trigonometria`th]}, 0.2, {
                    Part[Trigonometria`anga, 1] - Pi, 
                    Part[Trigonometria`anga, 2]}]}, {}]}]}}]}]}, {
                Opacity[0.2], 
                Darker[Green, 0.3], Thick, 
                Disk[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Darker[Green, 0.2], Thick, 
                Circle[Trigonometria`c, 0.2, {Pi/2, 
                  
                  ArcTan[(Part[Trigonometria`c, 2] - Part[
                    Trigonometria`b, 2])/(Part[Trigonometria`c, 1] - Part[
                   Trigonometria`b, 1])]}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                
                Triangle[{
                 Trigonometria`a, Trigonometria`b, Trigonometria`c}]}, {
                Opacity[0], Black, 
                EdgeForm[Black], 
                Triangle[{Trigonometria`a, Trigonometria`b, {
                   Cos[Trigonometria`th], 
                   Sin[Trigonometria`th]}}]}, {
                Rotate[{
                  Opacity[0.2], 
                  Darker[Green, 0.3], Thick, 
                  Polygon[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 0.1},
                     Trigonometria`b}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {
                Rotate[{
                  Darker[Green, 0.3], 
                  Line[{{Part[Trigonometria`b, 1] - 0.1, 
                    Part[Trigonometria`b, 2]}, {
                    Part[Trigonometria`b, 1] - 0.1, Part[Trigonometria`b, 2] + 
                    0.1}, {
                    Part[Trigonometria`b, 1], Part[Trigonometria`b, 2] + 
                    0.1}}]}, 
                 
                 ArcTan[(Part[Trigonometria`b, 2] - Part[
                   Trigonometria`c, 2])/(Part[Trigonometria`b, 1] - Part[
                  Trigonometria`c, 1])], Trigonometria`b]}, {Black, 
                Dashing[Medium], 
                Line[{{0, 0}, Trigonometria`b}]}, {Red, Thick, 
                Line[{Trigonometria`a, Trigonometria`b}]}, {Black, 
                Disk[{0, 0}, 0.02]}, {Black, 
                Disk[Trigonometria`a, 0.02]}, {Black, 
                Disk[Trigonometria`b, 0.02]}, {Black, 
                Disk[Trigonometria`c, 0.02]}, 
               Text["  A", {
                 Part[Trigonometria`a, 1], Part[Trigonometria`a, 2] + 0.1}], 
               Text["   B", {Part[Trigonometria`b, 1] + 0.1, 
                 Part[Trigonometria`b, 2]}], 
               Text["   C", {
                 Part[Trigonometria`c, 1], Part[Trigonometria`c, 2] - 0.1}], 
               Text["   D", {Cos[Trigonometria`th] + 0.1, 
                 Sin[Trigonometria`th]}], 
               Text[
                Style["\[Delta]", 
                 Darker[Green, 0.3]], {
                Cos[Trigonometria`th] - 0.1, Sin[Trigonometria`th] - 0.1}], 
               Text[
                Style["\[Theta]", 
                 Darker[Green, 0.3]], Trigonometria`c + 0.1], 
               Text["r", {0.4, -0.15}]}], PlotRange -> 1, ImageSize -> 400, 
             BaseStyle -> {15}, Axes -> False, PlotRangePadding -> 0.25]]; 
        DynamicModule[{Trigonometria`pt = {
             Cos[Trigonometria`ptctrl$$], 
             Sin[Trigonometria`ptctrl$$]}, 
           Trigonometria`pt2 = {Trigonometria`ptctrl$$, 0}}, 
          Grid[{{
             LocatorPane[
              Dynamic[Trigonometria`pt, {(Trigonometria`pt = {
                  Cos[
                   Part[Trigonometria`pt2, 1]], 
                  Sin[
                   Part[Trigonometria`pt2, 1]]})& , (
                Trigonometria`pt = Normalize[#]; Trigonometria`pt2 = {
                   If[Trigonometria`pt2 == {2 Pi, 0}, 2 Pi, 
                    Mod[
                    ArcTan[
                    Part[#, 1], 
                    Part[#, 2]], 2 Pi]], 0})& , (
                Trigonometria`pt = Normalize[#]; 
                Trigonometria`ptctrl$$ = Part[Trigonometria`pt2, 1])& }], 
              Dynamic[
               Trigonometria`anglegraph$[
               Trigonometria`pa2, Trigonometria`pb2, Trigonometria`pc2, 
                Mod[
                 ArcTan[
                  Part[Trigonometria`pt, 1], 
                  Part[Trigonometria`pt, 2]], 2 Pi]]]], Trigonometria`pcc = {
                Sin[Trigonometria`ptctrl$$], 
                Cos[Trigonometria`ptctrl$$]}; LineLegend[{
                Darker[Green, 0.3], Red}, {
                Row[{"\[Delta]"}], "Coda"}, LegendMarkerSize -> 40]}}, 
           Alignment -> {Center, Center}]]], 
      "Specifications" :> {{{Trigonometria`ptctrl$$, 0.4, "angle"}, 0, 2 Pi}},
       "Options" :> {TrackedSymbols :> {Trigonometria`ptctrl$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{555., {248., 255.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7038671880872765`*^9, 3.70394089721062*^9, 
  3.703941772310358*^9, 3.703942323558496*^9, 3.703946797031694*^9, 
  3.704003076477169*^9, 3.704168239722031*^9, 3.704169057780472*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "1e5bd5fd-526d-40f4-8fef-b6dfa0b87f41"]
}, Open  ]],

Cell[TextData[StyleBox["ADBC \[EGrave] un poligono inscritto nella \
circonferenza quindi gli angoli opposti sono supplementari, cio\[EGrave]:   \
\[Delta]=\[Pi]-\[Theta]\nPer questo motivo i seni sono gli stessi. Quindi \
anche considerando l\[CloseCurlyQuote]arco ADB la formula resta la stessa!!!",
 FontSize->16]], "Text",
 CellChangeTimes->{
  3.703867310209563*^9, {3.703946844322687*^9, 3.703946849334548*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "0a8d95fe-8362-4a7a-a06b-68d0bbae9100"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "8198f957-0f2c-442d-bc21-b3ff3c00aa7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio3", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423340109363`*^9, 3.7039423376875615`*^9}, 
   3.703948279815196*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "003c7e99-2f7d-4eee-b667-e219ae97d5dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 3:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 3:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.8, 0.],
         FrontFaceColor->RGBColor[0., 0.8, 0.],
         BackFaceColor->RGBColor[0., 0.8, 0.],
         GraphicsColor->RGBColor[0., 0.8, 0.],
         FontColor->RGBColor[
          0., 0.8, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"2\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      TemplateBox[{
       "\"r = 2\\n\[Theta] = \\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\\n\
\"",StyleBox[
        "\"Trovare \\!\\(\\*OverscriptBox[\\(AB\\), \\(_\\)]\\)\"", FontColor -> 
         RGBColor[1, 0, 0], FontFamily -> "sans sarif", Bold, StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"AB = 2\[CenterDot] \"", StripOnInput -> False], 
            TextForm]], "InlineText"], 
         Text[
          Style["AB = 2\[CenterDot] "]]],TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`raggio], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`raggio, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] sen(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`angolo], String, FieldSize -> 1], 
          "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`angolo, "60"], 
            StandardForm]]}, "RowDefault"],"\") = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`AB], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`AB, "4"], StandardForm]]},
          "RowDefault"],"\"\[CenterDot]\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`coef], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef, "2"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot]\"",TemplateBox[{
          TagBox[
           SqrtBox[
            InputFieldBox[
             Dynamic[Trigonometria`coef2], String, FieldSize -> 1]], 
           DisplayForm], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`coef2, "3"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704129416693192*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "79411d95-75b5-41f9-913f-49a0af07715d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio4", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423479597387`*^9, 3.7039423521548414`*^9}, 
   3.7039483319061213`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "bb8e7eba-a2ea-45da-92b6-976392ca2708"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 4:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 4:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {RGBColor[1, 0, 0], Thickness[Large], 
        LineBox[{{-0.29552020666133955`, 0.955336489125606}, {
         0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"  A\"\>", {-0.38941834230865036, 1}], 
       InsetBox["\<\"   B\"\>", {1, -0.29552020666133955}], 
       InsetBox["\<\"   C\"\>", {-0.9800665778412416, -0.5646424733950354}], 
       InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.6216099682706643, -0.31798060149924406}], 
       InsetBox["\<\"5\"\>", {0.4, -0.15}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25], 
     StyleBox[
      TemplateBox[{
       "\"r = 5\\n\[Theta] = \\!\\(\\*SuperscriptBox[\\(60\\), \\(o\\)]\\)\\n\
\"",StyleBox[
        "\"Trovare \\!\\(\\*OverscriptBox[\\(AB\\), \\(_\\)]\\)\"", FontColor -> 
         RGBColor[1, 0, 0], FontFamily -> "sans sarif", Bold, StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quindi il lato \\!\\(\\*OverscriptBox[\\(AB\\), \
\\(_\\)]\\) misura:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style[
       "Quindi il lato \!\(\*OverscriptBox[\(AB\), \(_\)]\) misura:", 17, 
        FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2$1531], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`AB2$1531], {
             "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(5\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2$1531], {"5"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"5\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[Trigonometria`AB2$1531], {"30"},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"30\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`AB2$1531], {
        "\!\(\*FractionBox[\(5\), \(2\)]\)", 
         "\!\(\*FractionBox[\(5\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)", "5", 
         "30"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[Trigonometria`AB2$1531, "5"], StandardForm],
       
       ImageSizeCache->{0., {7., 36.}}],
      StripOnInput->False,
      Magnification->3 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.70413080476787*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "e5ff2ab5-1c1b-45c2-87ef-ae5888966edf"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEI SENI",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{{3.7037525095800962`*^9, 3.703752516021167*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "27ab370e-739a-45e8-9525-f17fa8be66d2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["BC/sen\[Alpha] = AC/sen\[Beta] = AB/sen\[Gamma]",
 FontSize->24,
 FontColor->RGBColor[1., 0., 0.5019607843137255]]], "Subsection",
 CellChangeTimes->{3.7037529150196342`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "16f3095b-68ec-4752-9f11-56c8106feb7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863173930427*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c8db4ac1-8e83-47f7-9518-6293f0117750"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863174920074*^9, 3.7039408972796335`*^9, 
  3.703941772360749*^9, 3.7039423605461826`*^9, 3.7039467974020567`*^9, 
  3.704003076824266*^9, 3.70400351514786*^9, 3.7041682530203204`*^9, 
  3.7041690583273735`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6b19d6c8-47ce-422d-be5e-0907887dd40a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "d900f154-99e5-4186-9c3f-acf46c69304a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE\n",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsection",
 CellChangeTimes->{{3.703752766267577*^9, 3.703752805006543*^9}, 
   3.7038673536104937`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "f6dd1530-c906-48ab-8df0-dac3cf9e9a8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremaseni", "[", "]"}]], "Code",
 CellChangeTimes->{{3.703867359916173*^9, 3.7038673665860524`*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "c69a4915-9ce9-44d5-952a-7032f81beb0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.75, 0.75, 0.75], CircleBox[{0, 0}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.8775825618903728, -0.4794255386042029}, 0.2, {
         1.1853981633974482`, 0.14999999999999997`}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{0.9800665778412416, -0.19866933079506122}, 0.2, {
         2.4061944901923447`, 3.291592653589793}]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-0.29552020666133955, 0.955336489125606}, 
         0.2, {-1.956194490192345, -0.7353981633974482}]}, 
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[{{-0.29552020666133955`, 0.955336489125606}, {
          0.9800665778412416, -0.19866933079506122`}, {-0.8775825618903728, \
-0.4794255386042029}}],
         "Triangle"]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[{{0, 0}, {0.9800665778412416, -0.19866933079506122`}}]}, 
       {GrayLevel[0], DiskBox[{0, 0}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.29552020666133955, 0.955336489125606}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{0.9800665778412416, -0.19866933079506122}, 0.02]}, 
       {GrayLevel[0], 
        DiskBox[{-0.8775825618903728, -0.4794255386042029}, 0.02]}, 
       InsetBox["\<\"A\"\>", {-0.29552020666133955, 1.055336489125606}], 
       InsetBox["\<\"B\"\>", {1.0800665778412417, -0.19866933079506122}], 
       InsetBox["\<\"C\"\>", {-0.9775825618903727, -0.4794255386042029}], 
       InsetBox["\<\"r\"\>", {0.4, -0.15}], InsetBox[
        StyleBox["\<\"\[Theta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.7775825618903728, -0.3794255386042029}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.8800665778412416, -0.09866933079506121}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {-0.24552020666133956, 0.855336489125606}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->0.25]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7038673711823397`*^9, 3.703940897310891*^9, 
  3.703941772394822*^9, 3.7039423631528177`*^9, 3.703946797453463*^9, 
  3.704003076892997*^9, 3.704168257110552*^9, 3.7041690583429995`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "07c1646c-fd16-4df2-ba87-01572def88c3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Direttamente dal teorema della corda:\nBC = 2r sen\[Alpha] \
\[LongRightArrow] BC/sen\[Alpha] = 2r\nAC = 2r sen\[Beta] \[LongRightArrow] \
AC/sen\[Beta] = 2r\nAB = 2r sen\[Gamma]\[LongRightArrow] AB/sen\[Gamma] = 2r\n\
Quindi:\n",
  FontColor->GrayLevel[0]],
 StyleBox["BC/sen\[Alpha] = AC/sen\[Beta] = AB/sen\[Gamma]",
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Text",
 CellChangeTimes->{3.703752814660338*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ac658347-7d30-4ff0-99e3-98593d227af8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "a6df3a26-7079-41ed-8c66-4b9dc53eec51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio5", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039423655741987`*^9, 3.7039423787640705`*^9}, 
   3.70394834205114*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "d7e410e7-863b-4609-a910-75d6ec17b29d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 5:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 5:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 0}, 0.12, 
          NCache[{Rational[3, 4] Pi, 0}, {2.356194490192345, 0}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{-1, 1}, 0.2, 
          NCache[{Rational[-1, 4] 
            Pi, -0.5317240672588056}, {-0.7853981633974483, \
-0.5317240672588056}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {-1, 1}, {0.7, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.6, 0.4}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.1, 0.6}, ImageScaled[{0.25, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {-0.8, 1.}], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.8, 0.],
          FrontFaceColor->RGBColor[0., 0.8, 0.],
          BackFaceColor->RGBColor[0., 0.8, 0.],
          GraphicsColor->RGBColor[0., 0.8, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.8, 0.]], {0.1, 0.15}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 6 \\\\\\\\n\[Alpha] = \\\
\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\\n\[Beta] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(105\\\\\\\\), \\\\\\\\(o\\\
\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, \
Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare C\
\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"Calcolare l'ampiezza dell'angolo \
\[Gamma]:\\!\\(\\*SuperscriptBox[\\(180\\), \\(o\\)]\\)-(\"", StripOnInput -> 
             False], TextForm]], "InlineText"], 
         Text[
          Style[
          "Calcolare l'ampiezza dell'angolo \
\[Gamma]:\!\(\*SuperscriptBox[\(180\), \(o\)]\)-("]]],InputFieldBox[
         Dynamic[Trigonometria`ott], String, FieldSize -> 3],StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`ott, "105"], StandardForm]],
        StyleBox["\"+\"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`al], String, FieldSize -> 2],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`al, "30"], StandardForm]],
        StyleBox["\") = \"", StripOnInput -> False],InputFieldBox[
         Dynamic[Trigonometria`res2], String, FieldSize -> 2],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res2, "45"], StandardForm]],
        StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\)\"", StripOnInput -> 
         False]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->1.5 Inherited], "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Utilizzare la relazione \
\\!\\(\\*FractionBox[\\(\\(A\\)\\(\\\\ \\)\\), \\(sen \\((\[Alpha])\\)\\)]\\) \
=\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(C\\)\\), \\(sen \
\\((\[Gamma])\\)\\)]\\)\"\>", TextForm]], "InlineText"],
       Text[
        Style[
        "Utilizzare la relazione \!\(\*FractionBox[\(\(A\)\(\\ \)\), \(sen \
\((\[Alpha])\)\)]\) =\!\(\*FractionBox[\(\(\\ \)\(C\)\), \(sen \((\[Gamma])\)\
\)]\)"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{FractionBox["\"6\"", 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`al2], String, FieldSize -> 2], 
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(o\\)]\\))\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`al2, "30"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`c], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`c, "C"], StandardForm]]},
           "RowDefault"], 
         "\"sen(\\!\\(\\*SuperscriptBox[\\(45\\), \\(o\\)]\\))\""],
        "\" \[LongRightArrow] \"","\" 6 / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num3, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den3, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`num4], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`num4, "C"], 
            StandardForm]]}, "RowDefault"],
        "\" /\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\*SqrtBox[\\(2\\)]\\), \
\\(2\\)]\\)\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""},
    {
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox["\<\"Ricavare:\"\>", TextForm]], "InlineText"],
       Text[
        Style["Ricavare:"]]],
      StripOnInput->False,
      Magnification->1.5 Inherited], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]], 
     StyleBox[
      TemplateBox[{"\"C = 6\"",FractionBox[
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num5], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num5, "2"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den5], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den5, "2"], 
             StandardForm]]}, "RowDefault"]],"\" / \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`num6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num6, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den6], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den6, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`res3], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`res3, "6"], StandardForm]],
        TagBox[
         SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`res41], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`res41, "2"], 
              StandardForm]]}, "RowDefault"]], DisplayForm]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704129716875326*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "74e0ba1b-538d-45b1-8a09-0f50e5f2eb50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio6", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424332140646`*^9, 3.7039424400257196`*^9}, 
   3.703948350866846*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9bc6c068-7a23-4af2-ad10-50a1af786ef2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 6:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 6:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.6, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 12 \\\\\\\\nB = \
9\\\\\\\\n\[Alpha] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(30\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare sen(\[Alpha])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, \
0]], Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! \\!\\(\\*FractionBox[\\(A\\), \\(sen \\((\
\[Alpha])\\)\\)]\\) =\\!\\(\\*FractionBox[\\(\\(B\\)\\(\\\\ \\)\\), \\(sen \
\\((\[Beta])\\)\\)]\\) =\\!\\(\\*FractionBox[\\(\\(\\\\ \\)\\(C\\)\\), \\(sen \
\\((\[Gamma])\\)\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->17,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! \!\(\*FractionBox[\(A\), \(sen \((\[Alpha])\)\)]\) \
=\!\(\*FractionBox[\(\(B\)\(\\ \)\), \(sen \((\[Beta])\)\)]\) \
=\!\(\*FractionBox[\(\(\\ \)\(C\)\), \(sen \((\[Gamma])\)\)]\)", FontSize -> 
        17, Bold]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quanto misura sen(\[Alpha])?\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quanto misura sen(\[Alpha])?", Bold, 20]]], 
     StyleBox[
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$1546], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \\(2\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$1546], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \\(3\\)]\\)\"\>", 
             "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$1546], {
             "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(2\\), \
\\(3\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
           {
            
            RadioButtonBox[Dynamic[Trigonometria`res4$1546], {
             "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"},
             DefaultBaseStyle->"RadioButtonBar"], 
            
            StyleBox["\<\"\\!\\(\\*FractionBox[\\(3\\), \
\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(3\\)]\\)\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[Trigonometria`res4$1546], {
        "\!\(\*FractionBox[\(3\), \(2\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)", 
         "\!\(\*FractionBox[\(2\), \(3\)]\)\!\(\*SqrtBox[\(3\)]\)", 
         "\!\(\*FractionBox[\(3\), \(2\)]\)\!\(\*SqrtBox[\(3\)]\)"}]],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      DynamicBox[ToBoxes[
        Trigonometria`CheckAnswer[
        Trigonometria`res4$1546, "\!\(\*FractionBox[\(2\), \(3\)]\)"], 
        StandardForm],
       ImageSizeCache->{0., {7., 36.}}],
      StripOnInput->False,
      Magnification->3 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704130815106286*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "41b2bb30-5cfd-49e3-962d-49993bc646a3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["TEOREMA DEL COSENO (o di CARNOT)",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Section",
 CellChangeTimes->{
  3.703753102306326*^9, {3.703753757882468*^9, 3.703753769382806*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "878e6daa-fd72-45fd-8bb5-2fe5df3102dc"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AB", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "42b69aee-2e2e-47aa-8977-4e2c41d37850"],
 StyleBox[" = ",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "47d5c5ac-0fa1-4c2a-9d62-9a816bef7de4"],
 StyleBox["+",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["BC", "2"], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255],
  ExpressionUUID -> "6c92a1db-9f90-49b1-94dc-d5505927f6d8"],
 StyleBox["-2ACBCcos\[Gamma]",
  FontSize->24,
  FontColor->RGBColor[1., 0., 0.5019607843137255]]
}], "Subsection",
 CellChangeTimes->{{3.703753125728129*^9, 3.703753180277624*^9}, {
  3.703947162107607*^9, 3.7039471963935423`*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6d6b9555-e62c-4ed6-9dc3-4b7744ce43b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno", "[", "]"}]], "Code",
 CellChangeTimes->{3.703863204159693*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "ba1b0424-5eb7-49f3-83ec-04763b5b49b0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863205287299*^9, 3.703940897342144*^9, 
  3.703941772441698*^9, 3.7039424523239822`*^9, 3.703946797752244*^9, 
  3.704003077133994*^9, 3.704168275856702*^9, 3.7041690585408926`*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "6bbab010-12eb-42b4-b58e-1e7a9c7e5162"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "bd142521-b6a4-4440-8eb7-a4085abbf0ed"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DIMOSTRAZIONE",
 FontColor->RGBColor[
  0.5019607843137255, 0., 0.25098039215686274`]]], "Subsection",
 CellChangeTimes->{{3.703753200599216*^9, 3.70375320242968*^9}},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "5fb87b21-48b6-4a1f-87af-a39e4d8ccfe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"teoremacoseno2", "[", "]"}]], "Code",
 CellChangeTimes->{3.7038632420367403`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9ef48162-8491-4ae1-b73f-4cd34e9e1e64"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0, 1, 1], Opacity[0.1], EdgeForm[{RGBColor[0, 1, 1], 
        Thickness[Large]}], 
        TagBox[
         PolygonBox[
          NCache[{{-1, 0}, {1, 0}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {1, 0}, {
            0.7071067811865475, 0.7071067811865475}}]],
         "Triangle"]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[
         NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
          0.7071067811865475}], 0.2, 
         NCache[{Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(1 + 2^Rational[-1, 2])], 
           Rational[-1, 2] Pi + 
           ArcTan[2^Rational[-1, 2]/(-1 + 
             2^Rational[-1, 
                2])]}, {-1.1780972450961724`, -2.748893571891069}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{1, 0}, 0.2, 
         NCache[{Pi, Pi - ArcTan[
           2^Rational[-1, 2]/(1 - 2^Rational[-1, 2])]}, {3.141592653589793, 
          1.9634954084936207`}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        DiskBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.8, 0.], Thickness[Large], 
        CircleBox[{-1, 0}, 0.2, 
         NCache[{-ArcTan[2^Rational[-1, 2]/(-1 - 2^Rational[-1, 2])], 0}, {
          0.39269908169872414`, 0}]]}, 
       {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
        PolygonBox[
         NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}, {2^Rational[-1, 2], 0}}, {{
           0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           0.7071067811865475, 0.1}, {0.7071067811865475, 0}}]]}, 
       {RGBColor[0., 0.7, 0.], 
        LineBox[NCache[{{0.6071067811865475, 0}, {0.6071067811865475, 0.1}, {
           2^Rational[-1, 2], 0.1}}, {{0.6071067811865475, 0}, {
           0.6071067811865475, 0.1}, {0.7071067811865475, 0.1}}]]}, 
       {GrayLevel[0], Dashing[Medium], 
        LineBox[NCache[{{2^Rational[-1, 2], 0}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0.7071067811865475, 0}, {
           0.7071067811865475, 0.7071067811865475}}]]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 0}, {0.7071067811865475, 0}], 
         0.02]}, 
       {GrayLevel[0], 
        DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0.7071067811865475, 0.7071067811865475}], 0.02]}, 
       {GrayLevel[0], DiskBox[{1, 0}, 0.02]}, 
       {GrayLevel[0], DiskBox[{-1, 0}, 0.02]}, 
       InsetBox["\<\"A\"\>", 
        NCache[{2^Rational[-1, 2], 0.8071067811865474}, {0.7071067811865475, 
         0.8071067811865474}]], InsetBox["\<\"B\"\>", {1.1, 0}], 
       InsetBox["\<\"C\"\>", {-1.1, 0}], 
       InsetBox["\<\"D\"\>", 
        NCache[{2^Rational[-1, 2], -0.1}, {0.7071067811865475, -0.1}]], 
       InsetBox["\<\"h\"\>", 
        NCache[{0.6571067811865474, Rational[1, 2] 2^Rational[-1, 2]}, {
         0.6571067811865474, 0.35355339059327373`}]], InsetBox[
        StyleBox["\<\"\[Alpha]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[
          0., 0.7, 0.]], {0.6571067811865474, 0.6071067811865475}], InsetBox[
        StyleBox["\<\"\[Beta]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {0.9, 0.1}], InsetBox[
        StyleBox["\<\"\[Gamma]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0., 0.7, 0.],
         FrontFaceColor->RGBColor[0., 0.7, 0.],
         BackFaceColor->RGBColor[0., 0.7, 0.],
         GraphicsColor->RGBColor[0., 0.7, 0.],
         FontColor->RGBColor[0., 0.7, 0.]], {-0.7, 0.06}]},
      Axes->False,
      BaseStyle->{15},
      ImageSize->400,
      PlotRange->1,
      PlotRangePadding->{0.2, 0}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
         RGBColor[0.75, 0.75, 0.75]]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.703863328195582*^9, 3.703940897379905*^9, 
  3.703941772510723*^9, 3.703942455040086*^9, 3.703946797803369*^9, 
  3.704003077193606*^9, 3.7041682785600853`*^9, 3.704169058572177*^9},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "776e4e81-12ff-4a19-875f-917f39fd52a5"]
}, Open  ]],

Cell[TextData[{
 "\n\nGuardando ADC:\n\n",
 StyleBox["CD = AC cos\[Gamma]\nAD = AC sen\[Gamma]\n\nPer costruzione: DB = \
CB-CD = CB-ACcos\[Gamma]\n\nApplichiamo il teorema di Pitagora al triangolo \
ADB:\n\n",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "5b7a26d0-a678-404d-ad9f-92d320aa797b"],
 StyleBox[" = ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["DB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "193aa7f4-7e7f-45d8-9159-38de980f5796"],
 StyleBox["+",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AD", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "f151b7ac-f0d6-4606-bc4d-38fd3548d914"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"CB", "-", "ACcos\[Gamma]"}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  ExpressionUUID -> "0d3ba991-73fb-4172-8a85-ff170df71889"],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"AC", " ", "sen\[Gamma]"}],
      FontColor->GrayLevel[0]], ")"}], "2"], TraditionalForm]],
  ExpressionUUID -> "8d922b08-7e9b-4cba-98b5-3841a22356aa"],
 "\n\nSviluppiamo il quadrato del binomio: ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "60d9c707-663c-4198-a510-a51c77f4894b"],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "1412b40d-f144-4807-82a1-964d8f68f721"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]],
  ExpressionUUID -> "64e63d01-5f2a-4afd-b7f9-f8079ff76e6b"],
 "\[Gamma]-2CBACcos\[Gamma]+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "0f281d91-0d06-4751-95ca-ffd04268073b"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", "2"], TraditionalForm]],
  ExpressionUUID -> "d9b148d4-805a-406b-b5a8-1d84d75d180f"],
 "\[Gamma] = \n \ne raccogliamo a fattor comune il termine ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "07d28dd1-f62c-4c73-a553-aaccd302806a"],
 ":  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "ee3cb177-1cf6-4451-8189-3cfd16ce8ee4"],
 "(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]],
  ExpressionUUID -> "8b688b73-dcdf-4fd1-bb62-e3ac88610fcd"],
 "\[Gamma]+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sen", "2"], TraditionalForm]],
  ExpressionUUID -> "e0c6acb1-ccae-4b0a-8982-5fb8afe8469b"],
 "\[Gamma])+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "acacf589-6223-4f8a-b4e2-234620b6092d"],
 "-2CBACcos\[Gamma] = = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["AC", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "05946f70-e22a-469b-83e2-1548de121e5f"],
 StyleBox["+",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["CB", "2"], TraditionalForm]],
  FontColor->GrayLevel[0],
  ExpressionUUID -> "396f109e-6ad4-4752-a0ff-9cda93bbb070"],
 StyleBox["-2CBACcos\[Gamma]",
  FontColor->GrayLevel[0]],
 "\n                                                                        "
}], "Text",
 CellChangeTimes->{{3.703753264726861*^9, 3.70375371938772*^9}, {
   3.703867496292187*^9, 3.703867498010098*^9}, {3.703868029554041*^9, 
   3.703868030100976*^9}, {3.703946980353115*^9, 3.703946981855782*^9}, {
   3.703947238305213*^9, 3.7039474804819927`*^9}, 3.7040035715827007`*^9, {
   3.7040038564875193`*^9, 3.7040038843328733`*^9}, {3.704004074662993*^9, 
   3.704004153666554*^9}, {3.7040041882806463`*^9, 3.70400421884643*^9}},
 TextAlignment->Center,
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "9e536f31-3215-4808-8224-af383e3b4fac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "33cfab2c-7ae8-42ef-80e9-26e97505bbe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio7", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039424902213645`*^9, 3.703942519593337*^9}, 
   3.7039483587752533`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "550579ec-d37c-4f1f-bcd1-6c9407aa7f66"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 7:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 7:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         PolygonBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}, {0, 0}}]}, 
        {RGBColor[0., 0.7, 0.], LineBox[{{0, 0.1}, {0.1, 0.1}, {0.1, 0}}]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{2, 0}, 0.2, 
          NCache[{Pi, Pi - ArcTan[Rational[1, 2]]}, {3.141592653589793, 
           2.677945044588987}]]}, 
        {RGBColor[0., 0.7, 0.], Opacity[0.2], 
         DiskBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{0, 1}, 0.2, 
          NCache[{2 Pi - ArcTan[Rational[1, 2]], Rational[3, 2] Pi}, {
           5.81953769817878, 4.71238898038469}]]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{0, 0}, {0, 1}, {2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->10], {-0.1, 0.5}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"C\"\>",
          StripOnInput->False,
          FontSize->10], {0.7, -0.1}], InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {1, 0.6}, ImageScaled[{0, Rational[1, 2]}]], InsetBox[
         StyleBox["\<\"\[Beta]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {1.7, 0.08}], InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.085, 0.75}], InsetBox[
         StyleBox["\<\"\[Alpha]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.2, 0.2}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 2 \\\\\\\\nB = \
3\\\\\\\\n\[Gamma] = \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(60\\\\\\\\), \
\\\\\\\\(o\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", Rule[FontFamily, \\\"sans \
sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\
\\\\\\\\nTrovare C\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Applicare il teorema del coseno:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Applicare il teorema del coseno:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`A7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`A7, "A"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`B7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B7, "B"], StandardForm]],
        "\" - 2 \[CenterDot] A \[CenterDot] \"",InputFieldBox[
         Dynamic[Trigonometria`B8], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`B8, "B"], StandardForm]],
        "\" \[CenterDot] cos(\"","",PopupMenuBox[
         Dynamic[Trigonometria`G7$2103], {
         "\[Alpha]" -> "\"\[Alpha]\"", "\[Beta]" -> "\"\[Beta]\"", "\[Gamma]" -> 
          "\"\[Gamma]\""}],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`G7$2103, "\[Gamma]"], 
          StandardForm]],"\")\""},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Quindi:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Quindi:", Bold, 20]]], 
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \"",InputFieldBox[
         Dynamic[Trigonometria`Val7], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val7, "2"], StandardForm]],
        "\" + \"",InputFieldBox[
         Dynamic[Trigonometria`Val8], String, FieldSize -> 1],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\)\"",DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val8, "3"], StandardForm]],
        "\" - 12 \[CenterDot] \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val9], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val9, "1"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`Val11], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`Val11, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",InputFieldBox[
         Dynamic[Trigonometria`Val10], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`Val10, "7"], StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->GoldenRatio Inherited], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Da cui: \"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Da cui: ", Bold, 20]]], 
     StyleBox[
      TagBox[
       TemplateBox[{"\"C = \"",SqrtBox[
          TemplateBox[{
            InputFieldBox[
             Dynamic[Trigonometria`Val12], String, FieldSize -> 1], 
            DynamicBox[
             ToBoxes[
              Trigonometria`CheckAnswer[Trigonometria`Val12, "7"], 
              StandardForm]]}, "RowDefault"]]},
        "RowDefault"],
       DisplayForm],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7041309205530376`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "7550307c-13c6-4e02-9ff1-913f87ebb124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio8", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942548966643*^9, 3.7039425547660713`*^9}, 
   3.703948365698081*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "b416cb98-c1a4-42e0-9f72-6d8b42c45421"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 8:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 8:", 20, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     StyleBox[
      GraphicsBox[{
        {RGBColor[0., 0.7, 0.], Thickness[Large], Opacity[0.2], 
         DiskBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {RGBColor[0., 0.8, 0.], 
         CircleBox[{1, 0}, 0.15, {3.141592653589793, 2.5535900500422257`}]}, 
        {Opacity[0], EdgeForm[GrayLevel[0]], 
         TagBox[PolygonBox[{{-0.2, 0}, {-0.5, 1}, {1, 0}, {-0.2, 0}}],
          "Triangle"]}, GeometricTransformationBox[InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->10], {-0.4, 0.4}], {{{1, 0}, {0, 1}}, Center}], 
        InsetBox[
         StyleBox["\<\"A\"\>",
          StripOnInput->False,
          FontSize->10], {0.3, -0.1}], InsetBox[
         StyleBox["\<\"B\"\>",
          StripOnInput->False,
          FontSize->10], {0.2, 0.6}, ImageScaled[{0.3, Rational[1, 2]}]], 
        InsetBox[
         StyleBox["\<\"\[Gamma]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0., 0.7, 0.],
          FrontFaceColor->RGBColor[0., 0.7, 0.],
          BackFaceColor->RGBColor[0., 0.7, 0.],
          GraphicsColor->RGBColor[0., 0.7, 0.],
          FontSize->10,
          FontColor->RGBColor[0., 0.7, 0.]], {0.8, 0.08}]}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox["\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"A = 24 \\\\\\\\nC = 12\\\\\\\
\\!\\\\\\\\(\\\\\\\\*SqrtBox[\\\\\\\\(3\\\\\\\\)]\\\\\\\\)\\\\\\\\nB = 12\\\\\
\\\"\\\", Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, \
False]]\\)\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\nTrovare \
cos(\[Gamma])\\\\\\\"\\\", Rule[FontColor, RGBColor[1, 0, 0]], \
Rule[FontFamily, \\\"sans sarif\\\"], Bold, Rule[StripOnInput, False]]\\)\"\>",
      StripOnInput->False,
      Magnification->1.4 Inherited], 
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\"\>", TextForm]], "InlineText"],
      Text[""]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Procedimento:\"\>",
         StripOnInput->False,
         FontSize->17,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Procedimento:", 17, FontColor -> RGBColor[1, 0, 0]]]], "", ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Ricorda! \\!\\(\\*SuperscriptBox[\\(C\\), \\(2\\)]\\) = \
\\!\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\) + \
\\!\\(\\*SuperscriptBox[\\(A\\), \\(2\\)]\\) - 2A\[CenterDot]B \
cos(\[Gamma])\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style[
       "Ricorda! \!\(\*SuperscriptBox[\(C\), \(2\)]\) = \!\(\*SuperscriptBox[\
\(B\), \(2\)]\) + \!\(\*SuperscriptBox[\(A\), \(2\)]\) - 2A\[CenterDot]B cos(\
\[Gamma])", Bold, 20]]], "", ""},
    {
     StyleBox[
      TemplateBox[{
       "\"cos(\[Gamma]) = \\!\\(\\*FractionBox[\\(\\(\\\\ \
\\)\\(\\*SuperscriptBox[\\(B\\), \\(2\\)]\\\\  + \\\\ \
\\*SuperscriptBox[\\(A\\), \\(2\\)]\\\\  - \\\\ \\*SuperscriptBox[\\(C\\), \
\\(2\\)]\\)\\), \\(2  A\[CenterDot]B\\)]\\) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`val13], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}], 
           "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(2\\)]\\) + 576 - \
472\""}, "RowDefault"], 
         TemplateBox[{"\"2 \"", 
           InputFieldBox[
            Dynamic[Trigonometria`val14], String, FieldSize -> 2], 
           DynamicModuleBox[{}, 
            InterpretationBox[
             Cell[
              BoxData[
               FormBox["\"\"", TextForm]], "InlineText"], 
             Text[""]], DynamicModuleValues :> {}]}, "RowDefault"]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], "", ""},
    {
     StyleBox["\<\"Quindi cos(\[Gamma]) misura:\"\>",
      StripOnInput->False,
      FontSize->17,
      FontWeight->Bold], 
     StyleBox[
      TemplateBox[{InterpretationBox[
         StyleBox[
          RowBox[{
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$2669], {
                "\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$2669], {
                "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$2669], {
                "-\!\(\*FractionBox[\(1\), \(2\)]\)"}, DefaultBaseStyle -> 
                "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[\\(1\\), \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3], "  ", 
            GridBox[{{
               RadioButtonBox[
                Dynamic[Trigonometria`res5$2669], {
                "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}, 
                DefaultBaseStyle -> "RadioButtonBar"], 
               StyleBox[
               "\"-\\!\\(\\*FractionBox[SqrtBox[\\(3\\)], \\(2\\)]\\)\"", 
                "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             ColumnAlignments -> Left, ColumnSpacings -> 0.3]}], "Deploy"], 
         RadioButtonBar[
          Dynamic[Trigonometria`res5$2669], {
          "\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)", 
           "-\!\(\*FractionBox[\(1\), \(2\)]\)", 
           "-\!\(\*FractionBox[SqrtBox[\(3\)], \(2\)]\)"}]],"\"         \"",
        DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[
          Trigonometria`res5$2669, "\!\(\*FractionBox[\(1\), \(2\)]\)"], 
          StandardForm]]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704131174389434*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "c9f68e56-5109-4e91-93f2-37ac61b83c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio9", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.7039425664315176`*^9, 3.703942574381358*^9}, 
   3.7039483708077374`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "381db649-3665-4d99-abf5-aae9acb787e5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 9:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 9:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Sia H l'altezza del campanile\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["Sia H l'altezza del campanile", Bold, 20]]], ""},
    {
     StyleBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxcvQe4JFd1LXx5fjbG/v0A22CSLAwiRwESwQaDweBATsb+njFgm5zBYEAm
iCgMyiinkSbembm3Y+WcqzrnnPNNcydJSA7zr10lyXzv6kzTXV1ddcLaa699
zj7FH33sC+/9+P9aW1v7ym/i5b0f/fqbvvzlj37jfU/Ahw98/iuf+sTn//mf
/vLzX/3nT/zzl1/zsV/DwQ/jXwP/6P12p7/TH52dLs6O5/uzxf50vjOZrgbD
3cl0ZzrdG0/PDGf7k9GZ4fjcZHp2Or1/MN4fjc9Opuens3OT2ZnZ7MwUHyen
5tPtUWev197ptU8N++fm07OL/ulF78Hh6MKpvf1e778X27vd8U53/MBs94Ht
3Qv4e+g/8PLL+XK33t6vDy7snrkw3Dk9XZ6drlDOTFfnx6vzk+2zk9np0fSB
xdaZ8ezsaH5+OT+/mJ+b4fqL+7dWO4PJ6dni7GJ1erH85WL7geX2+fnqzGT+
y9XO+dkSPzmPpi23zi230LTdwWhnutybr04vt/dmy1PzFcrZrd37d/fxioO7
0wXK/mILrzuT+dZotjudopya4zjez04tlqfn87Pz3bOLnf3ZKiqnpsuo7E9X
u6P5/mR1Zrk4vcB9V+e3ds6tdk6jN5bb57a279/eQTm3tXV6ivqsTk3Q4cu9
8WJnOMPrmfn2mdn2/ny2N5nuzxenZnM06txq68xiSR+ns1V/tLeYbk/QivGZ
1WJ/d7WznO7MFtuz2c58vrtcUjPni7354vzW9unlcm8xPztcnp9u3Y8uXZy6
f3X6/OLU6en2/nhrZ7zcm2ydmW+dnm2dWszRQJTTy9U+GrhEt8xPLVDJFU44
u0SF9x7Y2tunBi4f2D714N7ZB2bL+2fLaFCojKZU1eXqNOofnrY7muEVv31g
tnV+fur8fO/cbPf+wdb2bL4zns3Hk2l/OGx1G9VatVTaH07OTBcYu/unS4zm
mdliZzzZGo6W/cFyMNzuDRfdwXa3s9Xt7rQ72+3OXr9Ppdff7w/3JxEgR7vT
0f58ujsZ7056ZyfDc7PxA6v5/UsqD64Aoe5+b/Afu9vnZwvC3n/956RZmzYb
RVs9sxxdeOiXFx58cK/bOz2cbNUH53ZOPTDfQbl/QeXsbPvcZH52PNvrj/YH
493++Mx4cXY63hr0l93O9qB3GhgDkBarXbKX6VmcPFns9VGx6Znx/ByaNlud
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
UTqdTmsAosimJY4BSgxUCnhkuWQ8waTSsB1eFIAMdJdIWUZGxFror2iUwxni
dNS9NL1gk8LHCfgo8SLNObgU90Hg+RHbCCLxqmFGzBOB0A5p1lAJr/CKtKQS
zrvRMIZT2JSqotKyJgYZShuhPUaapoNBlDwHJgQfwtrDXDJVCef0wiUULpo6
Bg2GEyaZ8L0Y2U4k/AA8I7SOiLeBPZhYdCRyYK5jErYptKL5DFQy+nlkUI96
fFBc1AmhZhCji4crdPyjgjbCZNRvVDfECiETooVw4CBCBVpHCjnTMBEdN6q1
VqUWRcfRjrD/PvvAL3dPn5osd2fL08vt7eEE7nhrNl6MB9NBt99ptOvlUiYL
gqaoJB3HLVQpkjFCuAQg8ElAL55CiHySiccYPk6JSzAoXmU2pBTjWJoZwEf3
vMxeLtjX49f90zvf9utrH3vy2i2XXqS87WXplz89/xev1f/y1ZtvePHx173g
vhf+gfTaZxmvf27y1U9LvPl5d7/xkiufsfaeV77ohn/53IUzu4vtPUbLMZIn
CsaJA4fuuf2Gw8fuOZw+HrMlrZQ1g5zHy7kNAezMJGJsPA4y8WkqVgMXIb6D
rKKV1jQrhh4xWgHhozXXZJrULHoVgOBoXQ9vQHQyZQbQR5pg4Wk5IHQ31MNR
AhRdSFW0cPQxCtFaRuS/ImDoii4KLEYoyk6kCA9XDaUVyAw/A12iQ6MECfyG
4dIKx0phAR8CvSoxFCUtRAiMVtCi9YsQxXpICA/jJ1pTTidT0coyrCnCRuRP
w3MQNYTZCzxlMEYpFmh7pB4jXEnRyiXH0bw3zf/oEcwi+4ruhcv+6k3xGt1U
DCdEAUIp/ItSkeRw8QhgLGQylVKpQzvOerPuYDWanF1skz5c7IQgpP3dWwOa
ogH8xr3WoAVKrHUbjWKpAJOQJR5cR7Mg4JRwwYh4Mc2zCW5DjMf5dDohJjd5
AThFDM1upNIbrMKwGpyNbzL2xCkUjx764fv/9Dlra+956tpXXvXEq1/11Bsv
edz1z/hf97z8ottf84fXvvgZv3jFRSf/9CUHXvx7P/idteuf8ZhbL33CVc//
reuf/ZiXPXbt0t9cu+/nPzUM79gJVrFL9Vb/3rvuWT9+34n08SPc+n1SPGHI
vG4GktUSbFbhUrQOHAe9RIMUrv6n5HBhU6LVfMQiYd4rKAUCG84oTNGTaOUL
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
IQYQ+pbvGDVfqTQL5d2+vtW+7bMfftKVX7zorn+/9JafvODfPvUU7t5/6uZu
rwa3lnPXxI9//P7lkYr6rc0b3nzlxx/77U//euLet33/c3/wja+8I3XkR6tW
KScZRbNoKlDJKhwwTTkoNoqGmFGhWXuNlx0pI9DmJcg0HDWjnQ5AmSSJCDLh
f48cPXLrbbcdPXYMbtN2DMvRCY2WHc7/yxEOEZVosholhYa7aFklymcQJS7F
xOJx2lGwGQPXyiEHuqZtG2pgmPQgMkECS2qIPQSEJYwuJ029hEgza5YQsTqK
40uup9qeqCKCAmByhpH3vaLv5UFRRGgZOFTPtzxiOETxmoEoItA9HxofpIjo
1KbnoOQcHbFpxrKzllmvuoVCkM1lnUzOy5adbAEwDYB3l/OdlKsIvil7JFtc
w7SoXZSV44ZPwCMS9D1wF4APHwpDC9Fia5wmoXGsrHCyZQQQjbSfLkz7D4MU
yoEEAgMPEbr76PaTcKXGCpdUHk7wDnc3q2HuLuX8ZF27mAuapdKk39+bzE7N
F2e3tiMQnl6uUPBxZzIdt9p74/Fi2Jv125NGBzF1JZfNObRKjpobiLZFiG1B
ZjlVEB1BCWQDgTJqbIlpi0+pKUlJyGpakoWELMXomVJixhayNSszqaQb3lV/
+87/ff13n3nollcc+8WlN/zbH/3wy88/cPW777z2nXfc8varf3TZ3T9/8+Yv
/vrEtZfd8M3fveGK3z1x15/8/JtPufGqT/Hr15ydtipaNqP4TIIzVVGnfXGG
LJoyqkQL/pLMczIrwRTgMMKJFZ7iC8PKuDQjw3IcfKiu6/F4/ODBw8eOHabn
LUDmyTzIMAqHaYYNfaVqlGgqKYhAEQLAowrkjlmFxCHtU48l4ulEEiVyxOGD
ceDHNQ/2LpPotw3ZNmjPDyjbUVkj0zSDqu1lDSOgjRc6eMd0Jd3gOZvn8Bqo
VgWi3XFzdiZr5fK+lgd7wbk6UPy8pQu2owBALql7SdZ501YcF2MMhyRqJi8p
JoSALMP5Gb5sZiAI0QL4bs9XAk/IeHDMZoEea2j7qKxN+pMyzCFlwF0BAqEs
PLNOj4YD1RKucD8QOa8ZkgE+tM2M7+TBcpbxPyCMtiQ/4nO18KlRWrjfhBaR
o0SvaLdLmGePY0kYdNaxC9mgVij0W63t0Rh425vNz+/s/vLUPl6BQJSt0XjY
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
oCAhQghfiKikwj6eCIohVAOn8ZQ4RDIhkgpSdIgC1ksFGDKIfZwyn9U6jGCv
CEYDQYcgXlQ8iUc0DbEH+LCiotwVRvZDHLrndlhcXdYiBwN+SBioLIIKiEHa
1WLNqlbSBEniFAk2eMBzoGgR2JvIeHFuIOz1Q0SwAKwloMIyMFIDx8U5uIFV
JYlQXSdLRiqL/Du37br36pcvPGvxHzxLTvEs+aPn5lM8t//Bc9dpnofP9dz9
B88ij+caj2eux3Obx/P0WZ5Xx3oeP/cPD5/meeJMz12/89xz6u/uP/vM5+fO
rV61GjPm98cy6TgERXmdV7Q0AABBgbTkCENKkPB4d8jBFXiXUPqeCdEoE46S
poB4JWwUQjijy47E6QK2JShZBXfs3BYx8WXvAY4bowIeR0EKdeVhyDAJn/M4
nCW7Cpwo6ibwSswGTIjWP91uEB7sAXY88tOR438/9v0Po8eyFqtDnb3dTSiY
2ZBIJm0brohmmvBOaA7CL1hbS/r9TNYdIBhi4Oaj1DytaETEjJt8jAnITKCG
JasowkeE6UAoQPE1suUTWEKlpJYIlbG+fvQ+T+H6mdV5l7H7ruCLZodyLvZu
u6w6Z3JVzjkHNv25dO2fa9aNCW2fWLd9UuW2mXnrLv7qg7O++fYNUyprjplp
Pa0KESKE41xef3WI9AUhxYWDAbI2TNewlFeiSZ1RSQkP0gDLUAJBcGEaLwLg
rCuOinq5cGdsRY3p0ajmmEKU5Sl35pdW0ANChfTgD/hqvTUlpcVVVRU+Xy1J
hURXy4Pj+FCIEDXctMHBBlcgGgq2DKkkTKrInTl3CEkA4i7KOidoHG8JBlQz
NsCRNUSwJhCsBkADDxq+na6l0pmmaH1rNPn3rv5f+/rEosI3Hrp37dxzXp/8
+9em/XH9gpmbbp75xZVjPph1+qezzl599cR1V0zcumBW7k2X7V40a+eimbvn
T91y2TlfXjbzm4tnbb32ihVTZrx3/uSHPadf6PEsOWead8sei1Wa25qj9dEQ
G9RjEaA7qGHHWWE/Gw5ADgeuq2H7mm1yEhmi6sK0j4JizJGAPABpYy2Fcszp
8C/dhSVBJgQs7ThaNIIiJSiJTPpxvolzBfXdmSm3dhBuLzpqFxtAAFUNvp+s
aKlIqqmhvr2pubezG00t+4dPjBw+NjQKOfDYMJpLwp+H+oCb9HQ2N7cA9Xcc
2wAipGeFC4JkuLrWXxsIwXqu9QWh3BI4TCYSpBCSKNQD5Xx+f0V1TVXA7w+E
fVW+YoKphDAQeVMlzQjJpoTiiO+TJ2/7Xd7K8cFd07miseHdpwR2nF6z5YzS
LX+t2j62asf4qm0TazaPq908pnrr+JJNMzaumPP+S+fuWL8uqjJJyzHliCTp
/mAdQVX6/CVhsi4c4NgAzwXCkAMF0sdQtRwUbMSABE+QcEmoDke4F8kE62hX
e1xRULSEdUeUcC+LDqMgOQ5WcgLwQRa7tYAw1HmJijJveWkt/E7emmBNlT8U
gH8voxIFi/0MUlY0X4B7j/3m2LPMGyKv05ggIDdg8y8vshKVm7CJYKAyQPr2
1pTlVu2zmhKJdD1UxFZFOB4LnRwmB6o/ot67aeXlZz/8R8/uSWfsmTOx4NIp
lddeXDb3QnrhlfSCS/xXTPFdNp69fip33TTfrLNllKqYFpwxWb50Vul1M4ov
nbpvzqTqKy8ILL5k9dTffzTO8wykzbM86564XSred/LEf0k0sOVGHxESsKED
5e5FnD6mANFpPGe6e0Ey7h6hjJ4CmAU4ByNqnIQtHoqjShZHyaRbE3ArBqft
UBXZbbnkiRAJnA9WKkNIkGN1Dh6Xo7CaLpiQdR0VHpwFrEGguLgZbUpnujJN
vc3tQ+2th3q6jw8NHuru/vHQIbh+OHToxNDQwa6uwfb2rpYWQIMNUIvRXsoG
DoC+IYC6/DhZF8IL0RiNffE4uMNAelGAnhDhUCDkR+8DCIIQXUOydYxMKLD8
GMNmmThXYgQ/fGypp/CbCeVbp9fuOCuw4zSmYBybf6E/f1rlnrH+3PG+XdP9
26f4t42r2zW+eueFu1Zf+vl743LWrbbEsA1Enwa0pweIWor2+gMVUDvgR/EQ
QWGSJyH2/AIX5Fm4F6zI4PgGXPCJgFeYIwO6iG0KsH4VANUC9g1i9ASCJBnA
qRMMKC47UQ71WnTlcwH91XmD1VV1pSWVcNXVAgNSwgTpzkz9R0qdRyUlGWeW
BU6VJUNVbOA0gks+gWrqUrmpBRSVVywtrDCwZoFF434Ly/bEIl26L12zpuzj
2768edyrM099+8qZRZdPLLxuZs6VU7ZfMmHbReNLrptZcePMsvkz9l06rura
6bVXTyu+eKz/+lllcydXXz65avbk/BsuOLBgzp65U7dfNK7g2pnb541fOecv
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
VuGWed9+flH53q3dLUZ3fSyBHccRWaXtCM1LAUAtmmyaKHcEcc8bKm3pkqnz
toaNeKaiuRcqHmSPMNCpTRV1VXfnR7Lt6Jah2ZaFvdBZDRYoxzq6XEpoJ4jK
BAoUZTRlVWyW44ByVVdX+7yEzxuGOESXQkD5UJtpTJgW9vZFVMgbgIWsZAQF
oyG5wFtjm+KNkD8cp54RLW+Qqm9o1RQ7YpopU/rnaFKu+yRc/DRf9rxd90lg
+4t1W9+q3PBcYPfLas0Xe9c+mvP5PflfPerb86kV3h0J7S1Y+27Bxncr93zq
yDvffOGyrz5etGb5XdtWPR3jC5jSTUzxVrZs/f4Nr7z26BzR/23+tpe95Wvj
EeLkrz/1d7SnYilTVPQoSlC7TmzY0avqkuHek6y2jCwIqgRryHIVFi0Vm9kU
d2wZ2Bx2Zxk41qC6/Tg8+hXhXq1rOxYiEYzhASCvos0UDgFlL5xP4iRNVBOR
RH083ZRp7G3uHOjoHWrrO9g1fLivF3IgXNkgPNzXP9KJXhKDXV3dne2drS0t
9fWRiCPwVDDsda3EUATB1cygcOabhU/DDFp5cBJLQblDz0AKz+yBm/AqyUqs
wFsan2gxk70pLiWtefKuU0o3zq7cdqE359zgznPYwsmh/EmBggn+fecH9p1H
HTif3j+eyB/jzT27bMcFu9dfvuKj6aWFWzoaxY4UwAxXbRSgtQnUvBJSoq6p
EEEmNsLBemTcRj7O0SzFVVjFS9ZUlGLlXbssRuKhfEAOhBWN/equFDMqQ+Oj
QHlMGQsKTkZAcnUlECCVswrEGHIaUUJRbIoqKa7bW1Syt6i0sqKWCMF6Uxwr
3tzUlkk3RyMpBIQ4Lxm1LKh8kEw4KFoJK65JUC8ykmBTgmpHkvBtTVVti9sn
hpzKfa8U77rfu++p0u0PbfhokSHtE6ktCTN/pC/w4ZuLbl549iP3zd628Q1b
rmhuUPN2r87dtYIWCk6eHLzvoal3PXruy2/ftGHTq8eOpnW5lvUfMLmKUNWW
px6cTdV9vWbVE3vzlxPE/rb2NEmyUTvdkujXI4Jpy6jWYLh6i7LbZ+kON4uo
oIWNb3CHXLVpDVVmRHQrcN1aWMTU6F0Upsiw26yEe/Z4jI6uVSJ6okqagJsH
qLUPcZs9QAHuoDBS1Ig0phs7myGuOoY6eg/2DI52DZ0YPHp0oB94MWRCbGkY
Hjk6MDjY2XV4aGikt6+3q7Orra29KROLWbLIhtE/McRjry3rjtNCNYKfEUYC
SIZhMQh0SMP+AQnroyypOhADkpMoWbIkzkpKWoNRY4Q/fWCxp2TTtOqcC4J7
xoZyz/bnjKnJGQO8WKydqYWmm/4LlaoL2H3jvbvPK948ddeaqz9//8KiXV9l
okQaiisPYQHkldYtiqDLAS7jsYesWxqElGSqrC5TEKLojSxh8AG0sw3UuTfc
CEPRfOwBlt0gxLYQuD9AcyG14+wuakhiAz3qCcBCt0weUAynuvPvuOWFGnB4
FC8xlO6tpcpKa8rLqoGzkGHWNCJNjR3xWEZT45AtgA+hX4MNqRCwkpGK6FCW
Ik7SNNKa4cSTGcuIA1yNW059RGtNBYtyHi/Yfk/Brjvyt9xPVL7X0kh9dzR2
8mTbyV/rv/jkznffWvrRB/esX/VG1KY6W5333nvu4QcX7ti57OTJ0esWnjrv
es9VC8Z+/c2LeJr3z++PD3WeGGob6jHXffMsR25c++3jm9a/SQZL+zpamjJt
jcluW2xXEiIgOM2QVLcSaJAKXUlt7IcDcI0NqJBKIDgxFmHt6ai4hbJhWXlD
+FdQmOGWujpjro4UxbhiX0K2t5Bj2aycWFYX4DdfFUU2JaM+UY9B2NIx0jVw
qHfo8MDBH0dOHBsc+HH0MFwQhz8cPDTaPwBBONLXN9DZ1dnW2tna2tkMxCRm
6CJDBYGWMhzBCZSAZECQJU7DMHDfOxuWBRLKrwEUHvgnJE7ST/N+SgwBW9Sl
iE2zceGAElx2+3xP8YZJtbunhwvOI/PPZvZOoPZOJ/dNJcuAmIwXq6dYlReR
heOCRZO8+VdsWH75B6/Nzs1ZntbqEgawLzxjYwRCM0le9KKptiIbkq7jVCaj
yZQhU7LMYJszJDYcvYZFLuCAoitVH49FDAOgrZhVto9Hk1CWRGD3FAVBmtWw
QrloFusRGkvqBtxIgqRc1R+psrLGcWI0E3asRk21IUT9PiJvz96ykmogKAAI
XWf1NNxsUdBV+Te1YIjETNJQOAYeeCLeGEs2aEYkTJACJ0Z1s60+mozU7tz6
tz07783fc/e2TXdXHHjtX9+3jXSzJ0/2nDz50/KP7/l6+cNffvpwzoYPZPLA
5q8+eOelB265fsbDd845UPzBF58vevmVyU8/cePK5c+cPPmvv38//F9HD34/
0txsebd//ZzoXZ234bXi3Z81O9xwW1taS1pkMil3iVEOD/QNFHgV8fG50jFZ
sQ+UyeFQZgJFDljskUMBTZn/H5FDEbcZXQ0RdH5S0MSRJmmUbAOm5qrKZ9Vy
IAhdpU00GoAbDt89apoRy2xMNLQ1tg139B0fPvzD6IkTB4//cHDku5GR70cO
njh46Oejx44NDQ91dg12d0MQdrW3tTfXt9anI1GgmLybWIMsH2L5II/+Z3TW
KRV+JLptSCGZD8ksqfK0iqfekBApVvLRImkYZjJS36BbKW2/EnzngZs93pwp
5IGZ3IEJzN6zuYLx5L5p5N5pZNkU//6xRNH5/L6JQtHEqO8KI3D33m13fPn2
VcWF37REiYyNCr2QUmSFMSOMqPgM5GBW1Ig6uoxoEKkQi3bE2NimiXjuhMUg
qwHo6oALwLCyydDV2YMsGc2kGiAZuLo0TFZvDcoxVG1IftFYnGE4YDAkiVuA
ruo5hL0YDLAA/6DgQqKoqakFIuzz+9w4FCwzlkw0RJwU8KFYLOFqqETjDq/y
EOfA0SOWE3ciURlHxe3GVENbBrhL6cYND+zZeUdRwf1bNty1ZcO9vY11h3uJ
kyfbT/6aeeHxObctOO+hpRd+/MbtNUVfLXvl3n2b3lnz8cPffHhHRf5L335y
Le19fvv6Vz58405bKKfKd4v+fXz1nqrczzZ+elfdvnf2bnymJveTJFPXDG9X
tCKcE+WaeYdScMcE7dZQq8gNQgD8BIF77HDRWZVLV8qRx6FNBeB/dlsGg07m
sIUYFZpw/FCFb8Vj9yYa7f2mXpi1ev6t2zCrpy26kvUAg5PxWHM609HScqhn
+MjA6JGBwz8cHv1+dDTbyvX9odHRvv6+1ra+jp6+9rbWpqbGNBBHAFyQD4IM
4ycIL0X64CJJL0XXkeEgRQYZOszxQUEiZD6ssEE0uhVR7MVyZNWiAeAblt0Y
SzU6RlLYp/nefmSpJ1hwgVB9qVYzQ9j/V8CEXMFscv8MsnS6VDlDqZxlV18i
7p8uls4J7p+/Y82NX79/fXnR+tY4l7bVuGpiLtPYSEIwLBJb8ICMGREbQ4u2
VE4zWA34OJAPbHVhXWdq1znZNc5E4gf8Tcf58KymkCrpsUgy6kTgRmUXr2U4
sUjc0m0ghmgVxnCQzLDPQZGj0QiULVwJalSRLIi9aDSRSiWAgOzbVwxsBYKd
oUUWkgE6sUMujUB5h6eRsEnAq4Cw4HVVd2LxJMBBTkBMaBtMwqncvP7eLdtu
2rn79tVrbnv/vXn5eS/m5z1Xsv+N6v3vfPXJrW88d9XHby/+9L2lxTvf+vC1
m/fufqVk98uFOY9tWnnTp29cFCp/vGz/R5++u2Tr6pc2r36hYMu7e7a8vObT
uzavuLW68MVdq/9WvP0tNVQUlxlbwD1VRXAoNSzrrIxDa6ikwbh+fhiEKODE
0AyflVp1A5MWoLopGmrLUrQIb1qUFQEt8iQAjzT2IxkoGiBnNWyzFwfZiSex
dxyVxohsCsVJMUWN2w520aQb2ptbhju6D/b0w/XjYezqPzY0Ajnwu4OHsq1c
g919Pa2tTfX1KWDjJoJPhg2QpC8UqgiHq+AiodTSfpr1K3wYMGuI8nJ8SBUI
WQzrAgdsytAl3RScOK/qInCpiGplVDkh7pO8bz64xBMsnKJXXx6pm8nvPY/O
G8/vvZQvuZQvu5AumSKWzzKrLmGLJocLpoUK5+WuXrz20wUH8lbVW+G4zhuM
ZuBQMWVHWd0iUEQASBqwUviJAHzVkCiRisTqrii/hmPqOHiiKTxKvkgQnwJy
eFer2cSWJJyD+E1f5t8VxNUmxSKj4AlpNB5PApyBMiIIPOpkulsEwDgYhoew
dJxId3e7qmgS2puwFWW1B4rL/T4S6zJOtqnxRCTTUB/VGE1k0KxCdQwrFo+n
sP2RJAVeipp0Xw+Xm/tUzo4lhfvvOVD67LYtD67bsjQn957tu+7fsu3BWv8H
q9c9WJD/WvH+d7ZufXzLpoe2bH64uvQ1JvhuzpY7yoqfKi68t7j4ncKCl/cX
vlW894MDe98rL39n97aHqqtf4Kll2zbcu2XNkxK7tx4egIbCuhy8W4VCXREd
agPK/rpBiDL4nKvvIqJzL+eiOdJVfgIWIGcHH2jcscLtqN/cJzkO+y1VtI7P
2qKyrvQysJasgnp2ajvb6g9/WkDM4onWpubOptau1o7hjt7D/cCFsb/6xMih
IwNDR/qHsiKZvc1thwaGBzo6mhsa6hPRhlQ0Ggf4D0k7wDA+jgvAxXJ+XggI
EqWJtCkzNB+SJABpIZ4OsWRIdAVyIQdKMqkYApoisXqDYbVpZUrN60uv8YTz
L5ArLzWrZogHJvF7LhT2Xc0XzxPL57Jl06XiGfK+GWzuWLV0tli5MHfNwq/f
m1tWtDljURGIHLxzKAGt24SsEXbEcKlELIqD2ZyqUwDiAC+jV4Ph8jqNB+Rj
WIptwBe4P4MHpjiDLKH8SjyFm/CqBjcqO+kJkZvVmUQjR9Oqr2/UEDkptg0x
ZQPohshOJJIAMOBPCGbso/BVlJeXtjQ36GikZRFhtrbGT4a5SCRWjxsLFtSw
mC4INKEqjqnHYvEGgIbYACrDf2LUpnu7iO2b71617uqS4jsl/v1QzTvl5HMl
gSeriTdFe9UPv8ilNR9y8tbR77megdITP9K9IweOnqj5r39RnT15//pVGBou
aWvZ3zfojSd3xVO5nLyKkT8vq3nRsFfyyifbch7Zuf01TSlPNTuqrQWlcMiW
DbhLpmRGFECGaN/sakpLvJJtvkKS66oq825LpHs0KZJZAUZI9JL4b51XJusT
AR9ZFcff1PM4VE7OVuesmUVWUAXdB3QzFY03NzR1NjX2tLe5Fp8jOPV5ZOSH
wyPHRwaPDPWdODQ03NPR09o40jfY3dICaROCECpyMg3IC2Ke4LigIPjcK8Sw
fpGu4+kgT/k1PG5EWdNwXW2wro4jXMU+LuwLlIkqh2ZAtN0SifRE6nT/B/fM
91B7Z0sVlxlVFyp7p4kFl4h5V1OFV7OlF6tVc5WymWLRdP/20wO7x4X2X16w
eeGWFddV79/dmhSSUMmAZOgOyxKKQfJSwIkajv1bENo6xBsNi0XTaEXG8INL
klGiBRImqq1JHCBb3NoWGbiRWV8GXUfPOMe0XRahu44JDsqnoBGTBaCGJOne
3oHGxoaenu7h4eHm5hZR5NKpZEN9vWaIP/50/Psfjg4O9xw5PBqNxk5898Pw
4BGWlrZv3ZOfXwgIsqEhXd9U314fQzkhLW4aSdOKSoZDcKKiaxQVENnKhvqK
b7++Yevmqw8cuFNk3qg+8Ey5//76rtWxzNqCfc90dlYePyGd+NlMN5f39Xsb
mnenm3Piyc2JTI5lbJakzQK3TRG/FKivd+x4mua+Vo21nLK8vPppXfu4uur5
gtyXS/M/FalKQxdYmYME4Zcly5ZMRzFQKwTSOYJCAauAnO0GdLUuORzGQp07
zjUfF/+j/euekfHuOZGAjYhuqznjbpFk5fpRiYf+jcVArfltg0AzcCdHYGxV
ySRirZlMV2vrwa4eNwgP/nz88E9HD393aOTYyOCJg8ODXe0dDZmBrl6I1XqU
aXXSUMUjALBCJFlLUVU0Xc2ytQAIKaaOJWqokJfwV6ENtUBSpJ/0wSvATXB9
MRzpD1YDHzDkqM1H2qPJdrNC8b71xBIPUTCb2nepWDxNKZolF17J7bkmlHs5
WXRpbc4EKm8SVzihdtOp1Vv+HMidXb5rUenuW6r27WxyuKSmOSIGIUAOSQtz
IhATxUC5ZhuleWRaUtD0FhYLTkngfA6Ho0YYh6KicRJPoQOl210v8ORvnsIc
LYmsK2vJuT2BlNvJCZlSVTWDopj+/qGurv68vLzVq9ds357T0dG6e/eux554
8O57b3v0sQc++eyDltaMYYrrN357z913LF16ayhM/OPnk4cPHwEYWVRUtL+4
CFZoV0NzUktErHpVTHKKI+pmiHF7tIHEqTWtLdWr11ybl3ejt/oeSXyFqH6e
Z14q2HPrB+/MvHfpac8+efldt09YunDsC09fet/d58+/zjPvKs8NN3gWLDhl
yfwzrrz4d9fMPfe2az3XXOwZe5rntecvrih9RRA+JvyvK9SyyvznCjY+X5mz
Qg/UOpwqspCyJIJXNZPEfX5VgEyIUYMbAix2trr6rhyb1Q3mMTzdIOTdKR3X
pAmCT8XJfhz80rB5ADtXZNfFlM7OiOG5iqv6mNXz/LejmexOorGOpsUjTks6
3dHSfKi790j/4OH+oe8PH/zxyOjxkaFjI0MQhCM9XRCEI31Dfe3trU2NmQQO
TAPap5kav7+UYSoZupJjqzmuWoFMyHh5uoaHyPP7AhCNYS9PBA1JTBoJU3VQ
xo9nsD9ehJqU7DCcDLdfrXj19Qc8/l1TiD3TxYLx+r6pTsnlwq65bM4cPn8O
mTtBLJqgFU8U8s+WiqcIZXN3rZq14t2zS/PXJtQ6m2M1WtcVm6JJUQtyolc3
BEOydMWyZFETSUEKilJIkinUa4IgVHFuQlbgprtZEYOQddMgoHMWt2NUZH0Q
0ugQwfPo3ufqQmuKCZW6s7vbW+c/efLk3r0VkyZd4PF4zjjjnJ///lN+ft5H
n7z/6OMP33HnEnjx3fde37Bp1Ztvvzx9+tQ//enPy5Z96jjxhoaW6mrfE08+
/cijD+87UBTXHJMxLL1RZFOUGNWdBC1LNMeoFqDNQEOmeNlHF27eMGfvvmsN
+VVLfr/eXla0bfF9iz2neDxnejwXTfCc+wfPqR7P5DGeuXM8Y87yXDXbM3WM
59zTPFPO8Uw9w3PRmZ7xqFvmueUqz56ND9vsF1Fphex/RypbVvTFkwe++iQT
ovucTpuKioRuaxlBDQkKCneJOJQso4ktzZIECxQMTSAlVRJdYx0cqqQ5KQio
mcmaYOH2HyofAFEG1uv6Q2rwCrryogYzHmIEwyHUzPofIwA0OcQjAxUysBG3
7Uwy0ZwCdtw60tkD8G+os+fIUP/R4YGjw4MQhxCQh/p6epubIFv2trV3d3Q0
ZepjpoNzpQzq5/pDAQZljnmKoQIEUGOCCId9gIoC2+p8pcEgGw7rLOsoqimr
DKNUCXItJ4U4KmxJclQXHO7AgT2vP/vEHN+26707rqjYMpbImysVPyCUPkVX
3eFEbhkdeEplFpnEIjUw3SLO2Zdz2q5vb/zy1TtLdob6W7tlOpSJAfcNqVLY
MlTbgcoGDxTNDPEHqpKtCbbGOBp2akKVlt2zbSCALEfqBrp1kgAesJHYlT0V
YYnqlu0YpmGpaeAQgK8ti3ccxZVCUpiw0t8zyLGh22+/6i9neM4fh0/5u+Oj
LKGaNlSmUF7+DnjlvfffyivY9f57748Zc+5bb7xaVVEa8NXwHHXZpXOefebR
XTs2FxbmFOZWyJIO5QWwpqlZrU1djpKM2Q04xikcaGos+XDZlau+nVtWcqcq
vOCrufVf/wzt2XPfQ/dNPPMvnmvnTr154bzbFi+8a8nNty2+6pbFc5bcOHXh
/Im3zJ96542zl1xz8c2XXXzj1ePnX3nWmb/zLL7Wk45+0duxpqr03prq58rK
Xl+99omCgm/q6+G3FE0dm0lsLak6fs0hFI0UREIBgiyQEkPhFgAqz2iWHDEE
m6Y4muTQMJNR/mPmkvVzgbroeppzsutwIKORLp6Lum7h6AWTdb/KqtC4NgUE
dl+zlOy6RtZH423N6f625sHOtsODvT+MDB8fHDgxNHi0v+9Yf//xg0OHeru7
Olp62tr72zt7Ozub6+uTDg7x4DwLRwdCdSyPqyNMBggqxKNsODIgiislaW8w
GKqr5YIBiUFz4DDFVLBCtQakQLdTViSqihaTX1n08tsvzanZeIN/97zq7bOI
ndfkL59Xse7hA5tvqSia7y+9rmD17LINF9NFF0WJS0Jls/dvvXvnly/W7acA
P+gc1RA3TYVxTLiZKHSErToaugVDpKEKnESqQlBia6EkABFFPx8J7YQlmbVR
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
dvsdf7th/m1XXbG4ts5Yv3H/jQsezaLQK668atW3O4cGfm1IfWcbw4be9suP
v1U4TbWOHvvti8ZMx8n/PgnxwIm6KJuZ+sZgmHLQesdEc1FN4VgG9wzxFRsl
+nVspgZ8D89Xdw04LUPSVE6VVXg0TY1dzenGrRvX/d7jmTDufzf1LcDWnWV5
v45aRkprCVNKHZqAtdOGgZFpHQq1UxkhDVoTiWMGIg6mUiUJQtUxJBjEao0Q
ijZCEISoxSCS5P//c84++35be+91v9/ve6+19v3c8+dCEh3m7/N+Gzrd882Z
dfZee+21vu/53vd5v8vzft+vf+T9X3j0D/7ssUe+9hePO4bg25ptKKNeR+GF
2PdWVXV+vI58M/LtyNcDTws9K3YdF/iQEN26thmpqm6aYP06bFfAXpblOZ4f
RYXvp6ZuaxIAaw5oARdtjaUUDBPEvaBpMng7DCBgRunyhPFuXTpPK0HHIhue
oTE/xg9HzBBIimjptipptB8HwXJ7BOzxQ4HKQOjQdAnCtR5HupqCMKHaGI/G
qki6cFU2m8/y7ZRAeLJYwgy+cHK6A+F33HFZ5VF0sl4sZ3ka+oFtoTYUeKER
eHoDHKx2CMp1FaVWv9I83K/X9uqkVHW11dnr9vZ7nQalt6f0g134ylprr4U3
uQNe6cN3gAmBFgkNEANBQHR4ZZAoMRr305/52Dvf86++71WXbnjtK4Rxu0Jd
99qFawC5cLcjURYoSchEpIQ1E/ArlvOQg5Xl+rRCkA3XczCLo15bGHekcXvA
kWLzZCSnycy1w0984g+AtPe9/1d/5e6PfeD999z4xrffc9/vveUt//nmm2+5
977PLpbXGRJ/6MHf/vxzZ6SBun9Zv+O2/3rbz/z8XXfd9cEP/vKtt7z3tlvf
d8s773jVD7761+/72Ol25UdTiVLPKR2EawPa30KrIiiH6y6CHO5WgaLmDUOH
i5uQsNVkQKLQ++32/uH+YbPetq346b++fNPraOKSF9qbbX5yuj47u7asjlkq
T4njSCBQlhSL0mnpCs87uuK7ukf4lFxdcTRVVVRSCuIQdWi9DqiXaqj4xFUk
q1nvDwcC2C8ggwjj6tVGpzEQJ5ow0YyxKk9kkROVkSIK4ogytwzovgcshzOl
4D5oN0j8lhIOdGqiqACHcKqqpukGYK7Zjh+4ocj0Q2gjBAGbLCEQKHEyZeNl
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
vH5xev1Ljz39ih+4CSzxia+1H/9K7dKl7/m523/xytPtJ/7qb/Ddhx58CNYD
pgOul7UyJZ1Bl1FVWoJOKkDsNSKxwxEHSygKCNFUyZR5fQD7QaMimkjLHDvT
PDo+rh597OHXve6GG2545U0/+vpb3/Ouy1e+ud+CvxZBgyj/WJ8Em2xNM1RV
Go4VBKYkvyPSLiWBMpyC5lEWJUqjo+ym3AyD1gSxoRWRsuaOKDssoMP2aJKM
FUwcomDDsGk9P1zOWOiCfFJoDL9PKVP/fxBSXifY9QnpIFG6eVk1NUORZMQJ
umrCKQ9I7BF8WEKUzXEC+CdP2nMqOgje79OEEompjtpD0CagPLK9yAuKIF5k
xel8/h0QHhMIUV46Oz1dzVfT9GRerLK4yJIs8FxTNxCfjgewbET/WgeN1gET
A6m3e7StjjbvA2xtuGAq7TbhsNtpwCl3SZ+BXqRi32sPWUa4y819TTHAJJ66
8o1P/9Hv337HrVlkXr/+7M4zfubhT37g/Xc88tmHSb270yE5F7gkSn1IQTHt
vKZCqSRFelIFPbt12G/WusPuWOY1W/N8K3aCiFQbiUlO4NqOjy4e+9PHf/mX
7nvzm97+zv/43g/d/RvXv33dMhaPfPrxW95910+8446P3/+pdpN3rCz0S1CV
dlt64OOPfObTX92svzUcaJ/93Jf+5q8pXXKj3v7k737y/3z1rzpguxMwHyLz
aF2YPkniWX5YnhJ1UV4AvCgf1JhN/XcbI5k3hLE6QOzAw6JpsA/1ek0SucUi
efGla53OwWf/5H8+9HsPPPbFR4GdPkUYqqFbsmrQZkJZMQ3T0Q1pwsPqybQb
HyGqCFywWI1yIgKBuxRUeE3Yi+QvafVkF1aZFiQoLNLpdWAMRbJ6smka4Gks
VUu/0ahTQj+6cXx9vCs0vsyz7bM8R3mHJkNYZs3QbcM01N3iNwOWkCXQGTCK
OKFdU7SyUhyRPiONZrCUi8SjhkOKYVRJDkw79kPYOnBCNm23vlgtAMLnjrbP
bbffuji7drRZz/LjqlxP83Ka5pHv4SfBZ/lhs3nQoVWs9WG/xfJGUZ6VXdqU
ZmN/ZwABwlYbFLHOkhn1O+3mbnVju91q1A9b3Waf68G1aqoMJwpwHuxfPji4
YuuIlycWGAvJg/aHvUYYgu1Qkl5NNwXGdWhsBtXV53vdEUq/jwoTKaVIb0L6
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
YQRik3WWrtDPolkI/+gEU4QgXgQm8n8BfP3pcQ==
         "], {{0, 94}, {215, 0}}, {0,
          255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{215, 94},
       PlotRange->{{0, 215}, {0, 94}}],
      StripOnInput->False,
      Magnification->5 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"Trovare H, dove H \[EGrave] l'altezza del campanile\\n\"", 
         FontColor -> RGBColor[1, 0, 0], StripOnInput -> False],StyleBox[
        "\"Approssimare il risultato per difetto\\n\"", FontColor -> 
         RGBColor[1, 0, 0], 8, StripOnInput -> False],"\"tan(\"",InputFieldBox[
         Dynamic[Trigonometria`tang], String, FieldSize -> 1],DynamicBox[
         ToBoxes[
          Trigonometria`CheckAnswer[Trigonometria`tang, "42"], StandardForm]],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`altezza], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`altezza, "H"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`base], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`base, "80"], 
             StandardForm]]}, "RowDefault"]],"\" \\nH = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`base2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`base2, "80"], 
            StandardForm]]}, "RowDefault"],"\" \[CenterDot] tan(\"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza2], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza2, "42"], 
            StandardForm]]}, "RowDefault"],
        "\"\\!\\(\\*SuperscriptBox[\\(\\\\ \\), \\(\[Degree]\\)]\\)) = \"",
        TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`altezza3], String, FieldSize -> 1], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`altezza3, "72"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7041313852522173`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0f88e0b8-3ce3-4fa1-9a35-135d50c33eb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Esercizio10", "[", "]"}], "//", " ", "Quiet"}]], "Code",
 CellChangeTimes->{{3.703942584421835*^9, 3.7039425886934366`*^9}, 
   3.7039483747941933`*^9},
 FontFamily->"OpenDyslexic",
 ExpressionUUID -> "df940de0-e5d9-4dd9-bf14-d9431f1b034d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"Esercizio 10:\"\>",
         StripOnInput->False,
         FontSize->20,
         FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
      Text[
       Style["Esercizio 10:", 20, FontColor -> RGBColor[1, 0, 0]]]], ""},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], TextForm]], "InlineText"],
      Text[
       Style["", Bold, 20]]], ""},
    {
     StyleBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
04f++BITQw0bhAY7Z7zqtBv8iAy2ZZmLohbihyZ/IJIvtI162nWtgjQMqQKs
5gACVGiZiazwcTsbQzxBFY+Ig0+4JdTXsYKaf0IPoS2Qsl3UlxXIa05l3SXG
l9mIXQgui6FlSrbTqpMPuwNRQox7Ue8HWjxFCqqHVR0U72YCjBoPrW/F1p8H
V9ciibVoYj2UiMfjq7FoOBmLryVWN5Jrmzvbr968efpsa3U9urGRWFuPbWxF
nz9b29lZffFy89375wcfXn56/+bw0+7p0aezk716MV0vZrqNUq9VHnSaV836
Vatx2213G/lhrTyo5a+ahU71vFE87dXPbwbFH9q1TuGodv6xUz66G8JQnm6W
TtvtdKeZrRTP8tnDSna/28h+Gea+u85/dw1ZfDZsng2aJ8P2xXUrfQVSpFFE
uqV41q9kYAOS5bpdAryAhgfFfjto3fTrf/nt5U2vlj/fP9t7U8+f/fTT3365
BMAdA9O+v2r/5V33tlO+bBYvIaNb57f93G0/e9VCK1buQH70yt+CeOgXr7uQ
6fc5joEAMLlqZ266hbs+AATYUtf1SQ3cDfBkNF171dbLsO3840le/NBohnfE
k5870HT3hPdjPmBcPFr487MCedyL8jhG3bPoPM0sgALDBMh6WYfb3KCJQI2e
WwXRAmDJ9OCE1dSwlr5uoZnlq24hc3oQ1guwJp84DSM7hWBiASlCByAfsSDB
6YYGbgqGe8gpdZoOovViOlIADmY90y36ojOTT7LSkODhWSaESQJ3H4fFJ094
UM3ERAYsfkQVgAmyJ5RsASAQD6ygQxaAAKpRKHjb4EO9XjhgG5yFUW8aNxGo
uDFJKVPwZsi/JyaBQj5pwi2O+QI4nvgC414eExK8D3zGJx5OF13ClDuAFsTp
faQQJn0SB86PqiW69zHqbWZGX9DoU1GA2dEnxNFSOH3iFbV5kLLNCx4hvEyg
JmHcgLfoDy8gCaGt4MVHaH1BzC2t+5RNr7RpcHIAChAndiHuDCQd8hqIkGmf
HHpxABAAjwMccEirS2x0TojOitFFIrjMRh1CAvUtU9o8GbTpbEHCA4AgRF2B
hFOMe+RVCEQPIY5WFkirQBU7G1lB65I0jxD1iPEVTrH7A3Y6YGcCLj7qCcTJ
wCorahQneWnR4xdZVQ2BkkiuBaOJUDwWiyZikXAoHI7FQmuxyNNE8sXa+ur6
6tbm5tpGbD0Zffly/d3ui739V+nTN2fHry9S7wvpT7nUhwx4lsxBpXhaLeTq
eTRV2iqddqrZYTUH6LhsVq9b9btebVAvtkvn3Xr6spbrl8875YNm+aB7cdTP
HaA6Z+Nk0Dytlt7XcnuXw/Kgl21W0/mL/Ux6r5IBRh20yyiuB+dX3ZPLVuqm
l/7utvTDVeVztww/e5T4ncplq9jTV7rdDpp3w+Z1tzpsFX/3+fo//M1f/Zvv
bnu1QiFzNujWf/rpP970WrX8aTV/dt2qfhnU7roV4MZ1q3jbAZ1ThgCGfO6W
ACPfXlXuBqXPQ8BIdWRAMExgz12/+GUI5qVy2yvqPEEwwQ4FDsD0QNKilbts
FIGlaNLkob7x0IKCqihYfoxEBYYGRs1o/+PVOo8pMeqGfcyWEZRGtRQ4GK39
qaCpHBzdUgqQ3q9j04SUCXoheEot1aucDetpcEZXHYDJflCfGkY9D17BQAgG
n2D0CRMkP0FwE4Q0oZcrwfIYYBD3o95vvWYCuSyguVQ3O+nkICac3JQ+JWoC
4YGMBpIiAJYpj4C6tdH0hwh3cUvGuEeY8CCPYySAKsyk7nGmCNHk1Yd4Mmj1
h8wkqrJiPQC3uNkDTaw4ONRLtvLQReYC8SABAQx+1fD3wWTCCw5IGkdTNpL+
cVCME0iKwOdCnARgEgF4FN6eGfW3q4aHqWFcOTFjoAGyCFRFmb4XXZFpKjzt
D4MyMel4QZNKPgnDxOpXHd7wEgHjfsRORWw+DVGF0pdMEkE7atmNgR8BqpDB
bX9ohwo+dUgJb3DDq2245NVlPjpHa1Mu/jfzPuXZ3pIQn2XCruCWW9u2CYl5
KTkvrzoFvROYT8xRmsHBjy/5xxYpCEDWPCXPkfKCX7XzaHnUigAvF17SKycr
0ppN1DuW+eCKFPMEwj4lbmeUGRcztUxY7X47KXmEMK1tiqF4IBZjtTAyKiBE
Np5GVreVSIRlRJpneSEgSYImydGgtBnWtsMhUeaiES0aCUbj8rPNyLuXm+93
N1FD6fG71PG7s+O3p3vPTz7tpPZen++/Pvn0onT+oXj+Ac3Ypg8b+RPwJsNy
4bJaGlQvGrnj2sVBIwt64LRbPWrk9yrZj83zDzeV1F3rfNgA/hwWs++q+Xe9
TqpeOSmVDgrpg1zmQy63Wy3sNqv7/eZ+s7Fbr75tVz/1mvuX7bPrPhiiVK98
ft0sXvdLw0ahmT8FddQFCdSudNF8Svevf/fl3/+7Hy973WL2Ipc+h9tv725u
+41mKdsooULBsFG6bFW/Hza+GzZv27kvPVAjpesuqBoABZwBZAbgoo7hgMsa
D1XQ8k03DzwBZQIb4IN0vADT8tgN6ZIDd5FdwHtDPGlkRoIEwwTXTEZVkREH
MB8wTPTtHJYQI0kzWvf3qGkN9uQfg0V/LpoDGomlqw5qtr+Dd94uXjUK/QaC
if5cYAia9dbdUKpbPhtUz/vl9HW3eHGyp6oIJlNO/xQqipJjTmrMQf3WSz8h
mG98whgpjvulcSowRgUmGTA1IoQRdXJyU14GnjLpoiddjMEDqc2hkf0h9IoK
CpMTBWrlcnH6mA5qJ/DE7Z/wspMEZ2YCRr884eXHPdyYnf3GRn+1SP1mnvzG
DrgQjHpV5Imd/nqR/GrB9/WCb9zOTDr5CUgfBz/hCky4pHEIZ2CCgNNKgI57
jBD3YUYTQEEDDaECcMxsyMRoRgat+jfzYRMfNrDaJIOsigHMC4guf9hEonle
IBgyOHQILfBHXWGKBZVY9flrtFYuMkOG4dboQZMsAJxZrzLnleYJBTkLSnN6
wi5fxEPGPERshQhDOHwQoQVCs9ORJSI4vcKbbPSMk5+B78fmN7npaYJfYJUl
QbPLUWd4Y1lbnw0k5qS1P13m/nSZN/FrFnHjt2z8CZcYE1cXhM0FcWtZ2XFq
z33Rl/TqO3btXWDrA7v6hk4880W2vZEtT2TbHdqyScklMb6kbi2r23ZtZ0lZ
s0sby0rCEd4iI5tE9CkReeoNbXvCW/7wDh177Y+98UXeCKHVQHRbTjwLxJ5G
n75df72/+fp9eOvFxouX28/fPHv56t3r3f0P74/291P7hxf7R0fnZ5l8tloq
FbKpavmi3kjXiidtGCU7qV734rJ90amddGqpfit7A7/nSv62m7vr5WF0vmnA
3Vwze9rMoWhkT7uli2ENBuiLDlrJst+tnly2Ty7zR58bxze1o35j77J91G18
qtc+dVqnP/7Y+/KlcXNbub4sXV7lPl9nvr3Lffcle3e7d3P98fr64PPV2d0g
dd0/v2qewY//qp6+7SOr0iqc14sXw1bl6qr1+XOvV2m2S9XU2fmLnZ2Xz56d
Hh5m0+l+p/PDd9/f9S7vht3Pl4NhvXTdrn3ptL7rdvvN7FWnBAGO5qoNmV7B
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
MI5nj2rZw3ruuJ47wpM1aLZXv+QOHAO/zFYlhaMD4zvo6lbuBjV6VXCFsN/I
XTdAlpTQlHEj369mPveqN63iEBKwngUo3fTLg16pC5aqme11kA656pUAhteA
iDaK6+7PnR449TBMAC9wFzdaQPLCXWxDIB2AJFV4z/ljOPI//P77//j//i53
+h5SFfQMnAdyGQ7Gk62Pqxyj3P9PrarDWBiVUDDHHhuZXygT/H6wHcM98/j4
EYj+mCd6oTWDuXHVzt10C5gnsIGXCfyBONFhctk4HzbP0DUY0Sqbc3S5lfIp
PL1ZPMcXQEAXNyifoSVFyKuChjkfVFHRtVe96MDogPri0p3qKagasDkgY+Cd
ZE4PsDIZcwcgJrzyOIRPnnRCyktTbmnCKU44IWHB46BCqJEOG8m4kUiYuJAR
1Sdj6JICEHzUSGso79BI/RD3jWQKmoSlYgZ/DNzHuE8dJwJ6p6toJILT6LI8
QaODN3tQhXbK4f3T6YV/Nfbkn//a/K/HrN8skKiFg4GTR8Z94ScABy84F4jw
GJzHpxmAHuhyIty4Lz7hi5jcEeCeAZSSHiZ30OJD1w0zesP6UsHwLOocCy1Q
UQuroguigmdB09ABKynP+gNWSHZGseobM5Q4z8qLnLIkBBd4FbWgQwhhG6Mt
8tKyoNj0WBZVm6g6RW1FDDqkkFcIuQXNLQSdXMLOqCtsyCXGCSXuUSJOMeQQ
ZRsjLrOSV5LdorTC8i5RIoMhryIzkU2/FPWrMUKMEFSQlyLR6Obm+g5DUAJN
JEPiWkheV+XU3u52LLbOC4lQcDMaWk+ENxKJWCwUDkfiq4nkavLpq1fP3jx/
sft89+PLg5N36dRRtnCUyqJLc2RS77Lp9/n8u2LhY7HwrlDcLeXf1yp7vcZh
vwnS9wSpgoquTOrZDlrGlelVMmCc4XZQz+No5M5A9NZzp3Db1LvT20UYvM4b
hePHlycdXU9s1OrwWO1ft8GV5AZABhQ5jIJbfTZB1xJl/dI9hbsOsjY3kCmN
3HfD+neDGlpAB8k4KH8LOuS6cTmodNuQSmhpvA4T1PGFrssBCIIsbucf5x2c
+Xd3HbwuBr/JUb0UX74MMhdGZHRtMV0S/PWPV5njd8Ac7HRgAx8JASf5exXI
L3iCH8KvPqLBqLv1MZFGTfKjPaOrCvwiHi/iG73QEKxfA0CBbA6gAwMEyPAL
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
D+JfEEszK04tbaRsIR2ex9X3yUvk2tJ4wvGglt4MXgIIKfSli8JppCKVI0tV
ztIBnjopZA/hCSmF6C3wT5VDeuIYPaJDJ6+eUhfpbaHVCyzkslNHKVVdO8Vq
Uj6jY7pIGYBCxxYbSEsIjLioPYJgItf2YY+FqSN5eArb5DAFeUVWxXxXsAyQ
EwImwEBgm6tsA1cBYEFdfXZPZ/exiVgVmMkWV94CkAE+o9M5Ew4mbk72WILg
x1ePBX9+fHn67cEFGLBAKt4aXPxR3+hfXZ18e2juvf6Zd65Mv3t1/GcDU2dH
Fn/WP/Zn75575+L49z/sH1z4BIbwD84Nvz80//bliZ9enXu3f/6Da0tnhlc+
uL78DiDSpcn3rkyBr3FuZAV17DERDu1d1Apb6Ju5M7p05+y16XNXBgevjf7N
69++Pvl3bWLmh+9eeK/v+l++3/fWxdGzY8tnTzoMYoH/9aWPBhfODy1+BDA1
OPNh0lDm7MjMGVyUmT1/bfajkekLY3NXJhb7xhevTC0OToAtwfDvn1g4f3n8
4uDUlZGFofGlocmVsYmlsZmFyenl0cnF8bGp4ZEJsOvDYCgCNjQ0PDQyMzax
MDa7ND67PDm3OjW/Nr2wPDW/PDo1NzG7NL24Nre0Cntml9fW1+/cvHX/yeOn
jz59+OLpZzs7m/v7mzs7L4rZXbpaqBZ3aqWtKkqS7vDVPZHO8vV9trJdoxEK
uHqhWtmrFbZ1hpKquY0Hq9nNe5X9Byr8lNXtQMq3TZqn9jAwyGYMek+vbeMK
bAWI6LFkqFTPnLSehJu2qPOYBga3ipfkOgY6DQwkVKhIZps637GktiV2LLlr
KaEhJKu9mM7qKmzTxTApGaq9IhvpumdvahZOmjDSYexo9QDAB1yMhEhgjpmK
qlzwkoljHAV2rJNF0l4JIKJYeErINCUn8OopMCHqZOBkASnqpRPpyO1Vayfv
JbiUejpvmEyP+5Ce5HcIB/Ws2pD1oFNI0gsj5Awpwfhu14leikKwoveCU3qT
HpZW/qYwkvYG1biSypXcxIUBmgEkBKCD0A9PqZKdABoAI8THIdtvmElicIeo
ScYgyWojeKKycEdldR6T3ABJDC6j8HtSbZ+r7wLIwEsKm7O4kiPABRR8/c1q
ztv9Uz87yVZ9bxh7XH4wsghs5AeXRn96efI9FFydwZ5c16ff6we4mPjRhxfe
vtQ/OL36g3N9Hw7PnLu2+M7V8YuTN7Aty9DCz64tnh9eTTpTLL8/MP923/SZ
obmPRpYvz9y6Mn3rPGqbr12YQF6BAun9U+cHpn928drV4anpudmf//zV67/5
Bi6p8/Uv3nr/gx+9+8HY7M3BmZULw5jP/9HocUtQAJDzI/MXri+cHZy/NDh9
ZWr+8uR83wSu0l6bWL42uYS4MbF0ZWTy8vDU1dHZ/ompwdGpgdHpq8MTV4Yn
xidWJqfXZ5bX5xduzswvz8wszswuzs+sTExOTo5NjY9OToxOTYxNTU/OLs0v
L80vra7curl+787N++s3766t31m/cffGjZtLS6svXm6+2Nje3tqD/9s725md
vXw2VyqUq9VSqVxgKhW+VuGYSr24z9M5Va5rbFEV8ho4wuiBwhivuGLZhJ9b
KNqYIcDx1f3cS0zzEMr7e8/ucZVNkdrgqOeZrdtU9lN4C1/aYYs7fP6xUtkW
6ztSHY7c4UubCcPBmlNLrBoJDXAwqawKT7HFCfZAQeIBMAIuUiDXYl08cPWG
LrYtJTa12BQiHbwJDtHAEhq2SIIJvXiSjneibPzG68F3seR4Ij94GBvdUEPd
Y0cg0mGnApUpMyFQQPgPWejpLd4npIKUsqbk4VhnLInHhhYHGykypDFMcnw6
eNMoay82pulk6ZhNh3NvOW1vLmvqHKXBkFMJrgTWCI1JfZM0k6TXaUphobfb
BeEh6YWlV9IrYUQESXpYTRn1q8USAQqR2gUDSAEMIY4PgZf/P6vuI5iwOQIm
5BHAJOkaloVt/KOEvC0WdDELt67E5VRsO4gemSVmMaKLQSGmWthfOpZtPGkZ
mfSOTLpag4Mz89al8bcuTwF6vD848bOh0XMD4+9eGfzR+Stn+y5fn19bvv/4
8uj8mcHRD/tHz47MDcyvfzi8cB68ifHlC5Mrl8ZXLowunR9ZOHN9tm94rX/8
1uWptb6Z9UuTqxdmVs9PLX0wvNQ3e+fiyFLf2MqZvuH+oeGB4ZH8/q6hs5Qg
bmxn/+R7/+/3f/r2+PLNyRv3B6aXgWD0ja/2jS9fGl/uG125gqedv3Jt+vL1
2Yv9Y32DU5cGpvoGx/qGxq8MT18Znrk2Mjk1tzIxuzI+Mzc2Mzc1vTgJNjs3
MTM3ODo2OT4DGDI9Mzs9NTM7OTk/Mzc3P7U6P7cyP39zZe7+7bVH9289+/Tj
52CPH7549mz75cvMznZ2e3t/bx8RI1/K5fcYtiYzjMSyMl9TBFoTGUeXbE06
aMUN34kjq+m7ninr6OPjlO2pNXTqeZgyCo5UaWh1NLVWK3wm1XMw9sH9LGee
s4Utkdphis/r+cdM6Qldeprduk3nn7pyGSglX8twledSfTMhHhkdxcQyDsph
0R1XbuhKrEuRLoa60FSUtqYdGFbT4WNgApbYNtWGLsSK0tSUruU2VKmj67Ep
N23MGo0suglzvVttuUrTlVM86aUQ3zUSOE1VvwA9AFKIgjrZ6AWlFEB607eI
g/NdMCHw1Qtrx29RsLWczVfCJD/NI9HRnsXT3jOniES8ttRx603b+G7BHcGQ
3q6ap149lZKaggnsT3vipGByirT0+jgET6xvN/HsZSC9+iTpGwlYYUQFDVts
AM0AMAFwECo7ACBkmzwShOk1AiNwGBqFUZGkldgeARNMQeTBp0Oim0Bi1Rb3
bbFoKQUDLkMqmQJY2ZCzJp/xkiuHL7OcPU6nPzO28m6iSZgU3S8k6sezZ5PY
CCDDxYnFD66Pnx2cvIRtDqbPXZsYGB0ZmJy8Ojo6vLxyFXO65vunF8+NzWJm
1/hC3+TSpcnFi5OLfTMrA5Mr/VPLAxPrYFdQMHD53NjyhYkVsHNji+CbfDAw
2z82/97FgZ+eOfcX3//hX3z/e0NXzk/MzU4tLb7z7pmP+gevTy8Mzy9fGJ0d
mlvrn1jD5dqJlWtTNwamlq9PrQ1PwvZqf//41YGJ/sGpwesT14anR8cXxidn
xybnRkemRobHh4fHr1+Dx8mRkdGJiSkAktmZ6YWFhbX1G7durt25e/vh3ZuP
H3z8/OG9nZfPdjc+K+zvVEt79XKBrZUZqlincmyuLFM1rcYonGAonGcqoWPE
rgVA4VlqpKuxqUem3tD02JBg0tckXuFZiaUlrsZX9qv5nVrmpVjfr5e2qP0n
pd1P6/tP69ln1cxTevcpu/ussP+ELm+y1KZSy9kihe1daBQ8j8yKo+Yiq+Lr
hXbEfXlgNlD4VOsGzGHEH0bcYSQd+OpRqL6Kzc+bTsc1O67edu2max45/qHj
vfKCz924E4hNB0Y33zalrmW0DLNlGF3LaetGZCotW204cuyIocuHDh1HVNNV
0yHcCyYpG4FT9SilC2lIk6yPkGGbMpk09pJaGgVNhzAZ8qeGeQoyvXiCwVs5
6QOVdHtxxSo8xdzXnghMilSpS9UbPU4/moz9U2DSm9HaO7pTTEhXbXrzQ1K4
6NU6c04kiXqdmlMdhNPoR9LBHLuFkiQ6giS/s1N5iiTHfXb4slbPHPssTO6U
KclLJyRkT61nyVoPcXOAz+hMHnwcFfhGQk4SylG0UP4oqwkZld83laItZlCg
Xi1iBbdacWQKDtDEjC3m3ORPS/RMjsHk/bGVd67Nv3Nt4f3x1bevLfzwytTb
w8uXZu5O3Nscv/38+ton/VMrl6YWB2dvzK7dWbr3ZHBy8q2z5/71n//l6OLy
6M3b1xdvXJ5dfetSf9/MUt80+BrLl6eXB8aXhybXrs2sAIcZmLx9deLmueGZ
M1fHPxyevji1fnXu9qWp9eGlBxdG1wYnVvpH5iemli5eufiP/+gPv/en/+rC
QP/U3MLEwuzyvXszN+6NLN86NzDdN702tHRnYP7+6NLD0ZX740sPJ5Y/GVt+
cH3xwfLi3YWFuwuL9xaX7q+uPrp199O795/d/eSzJ4+3Hj3c+PTR1uOnL5+/
2NnYyuzsogLHy52d3UwuXy7myqVKpVCtVXi6LPFwd4kumMr4BhAJLbQUNFuO
NbNhWC3LDgwj0I3Q0CIThqHpqZpniIEmgbmK4PCcyVR0qiiLisjSIstoHCfR
5VoZM9IVvuAqdY3P4sKKVo7Vii8VPDEfSuXQAWekJlA74P50fKAEXFOrfBNL
v/nKedXiDmP2qMEeNvmmz5hi8SBWfnGkfN4S2l6147FdTz4M5YPQaPtawzZi
22kH3iu/ceRFXwStL4P210G3GyoNGP662DX0Q9vtmGZTNzqW3VAAA82WbYWW
ENmi79Z9nwr8SmwrsSOFybIs4gAaSyw02QZZMLWFpic3EgN8I3lfsB/cHCK0
TpZcewUMe/kGYSwkKJqCSRpfTUk+2Z/6RHgxNh/rXMPE9SOdKWJpPAGTJB7b
m/6RLqE6Jy1p0ohu7/Jub7SErAQREpUW9KXZIyRYRFCiN8SaBl5600tSsCJA
1Isbad5Or8dE+l+k7YPtk27Cvewo3UPaFhOTsXBmP0kyKaJoQ6LOavEkowwt
SUHJaXTOYAtwjAlghTknGGlxk+OtJGOWmM4VPKMUu/CVlk05rwtZUy4Y3A54
OpZa8AAedUx1w4x6Yd+VCz4KO9TC46rhxM3pnz4zNP/+wOwHQ5ivdWlk+aOx
2QHg/jfur3z86cef7d178mJi8cbVsYlrswuLNx98eOXsP/3nf/QH/+0f/LN/
+S9Wbqw8ePD4cv/w+Svjw4sf903dPjOy9u615Z8Oz783OntmfObD6YX+oYmL
g5N943PDi/cGl+70zaxdmF3tW7g5sHZzeOXmxNqtlRu37t279+z+g/ur62sj
1xOV0TsrS6vD49MD14aHRsYnZ+amZ+dn5xenZ6fnpmamJ8amJ64tTk/eX5t/
dGf96cdrj++tPr1/Y/vZJ5mNJ7nNx1Rmg6uAO5AFvyCZWaoyXRCorEjvCWw2
pLcaYq6pFFtKKRJyDp/xJcqXKhHmYFO+XiMi/76KbVVtqZykl5cUGrvbC5V9
sZoTKQT2eu4lU9jki9tMfpPJv+CKm0J5W6WyEv9UET5T+R2N3zZwZS3rMmVP
oBoiG0lMixfaotaRtSPd+tJufON0O3bhyK195WtfhvYXTtD1Gm3bCU2tYWlJ
jJGMEXD8+aYN5MQ48M2OYzRcpeHKLV898PVDlz+02Fca/aXJfONyX3vKK18C
a7jAImg4uGWpbcdqmHbDMmPD6Ro2UJe2bnfATLlriIcOf2izR079wKRig2sY
TNPA6R4XccCbMDhPlwFzAksMrMQZUdlArTbVWkstejrrnwzS3oF2qtXLKXKS
ugAEXgB/2tghQkhTvFKXh8AO4SdIUWyMlsC1WclasKvV08Bs6nCRtxB1srQ7
Xq/n0pvfTgY1ClAn+/822ZAUlODkqT8FB6fVPanP0htpgTeeCpymVKc3cpKu
FhGPhjg4b9yZE3JC8k96mAl6OnqSAavxeTA5CY2C5yLUduERtoF1yEwGHlHJ
TaFIRn2y3ofZ9TZKnaCdVAhSFmBRYnYiJgNujiMXHQlDQJpU1KWSKuR1uYQv
qXlXxb+iF0xIOPT9oekPrs+dv770s6GJ80OzVyaXhufXJ1Y/Xv340+m1G+eH
Rj64MHB1fGJi5cbVof7/84//1X/+9//+P/mnfzQzvzi7tPb+pb6+61NXplcu
T672Td/um787sHxvaPlW/+L6pYX1kanVwfHFgfGF/umVKxOLZ4bn378+d3Zq
/urCzbHV+3M37i6u37lz++7Du/ef3v9k4/7d9Vt3lpeXJ6fnh0fGhq9PDI1P
jk7Pjk8uXhufHL4+PjwyMjw8OjE6vjI3fXt97cGd9U8/vvXw3k2wZ4/uv3j8
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
ipaclDnAaaUET3Cj6KgVT6s4Lu+gTiljY24VFzpCE30NoespXV87CPVuoB3F
5kGgdzztwDeaIRPGUrMptyI9itQoVDwXBmnV8zgAk8DhPY0NdaGhal3D6uoB
uCdNU45MObB4D7iWD8dLGB3VwCMQYitxgjzddxXHlnxb1ey66XAWQFNAeVHd
9ktOlDfDnO9nXadiO0X4LNOCTxRNTTc0z9dqromK5Z4OPhobmNWGDlZr6lWg
Ma5eAwoE876hsrrKaKqEqmiJp5NmyaY4cIp+nAKT4KSj7qlcfe9EUCgNUKRJ
Gr3JqGmEs1cBAHwQ1IFPOD+JK8LjSQ8suCQ4YZ04AmSaJqPp1DhKBQ/Tafo4
sCAcJ5yncQZCAL5rZPwqST4YDm0msSSjQ0mSvtKl2F7h1u8a+h3iMXkAEOhV
cyUXnzo1afSj183xsWaz2ss34DEFkyR8evwnpGDyBkmSsEkSiUU35zQzAR9N
zn3Xzbk8sdg/vXRhbPbqyPz4yvrk0u2xmZWZ9fUfv/3uD3789k/PfDg1M7m6
vLIwPzM3Pwv/15cmV5emP7698OTe6vxE/73lufvrq+NX+24sLt5cxQzROzdu
3l5evrm2cG95/sHC4sqNpZu31x7cvfHw/q2njx7svHiW29uq7u/Wsvu13F49
l6VLe2wFWEFB4SiJyTkCZYNDikpQjMlTKl426xqirfEAKaZQ9SV0KDqGEMm0
je3hMLsGA0SJnFdiWYXet8Qi/LE2tiMpozAgV1CS5GFUl0oSjLGaUixhOxUJ
5dPTBCqcKFUUMPRVmH+Fg5Br2bSP7gDV9JhWgIkWvlqLfb7pC61QbAVgArar
DtRmqLVaVqNhNAI1wNUWGdyQFoxuR+qEWicyjkLlKFAOGmoL9nti0+VCG1O8
PJcPwCXxRc/lHJszDaoZSy0ffBzAIqFt6G3dONLtr7Vm0xZ9TfBlbAuFDeMc
MDEweBcVnvnYFCMDPCDZc2XHEm1DVHXacBjLpW2vZvtly6csvxy4Fdcp2nbB
NmnbZuEw11Yd27BNJ7JY30w62KpAiioNvd40qTZcj0k1tFqY1OgZWt3UOEkT
RF0M1WpgMCnN6DUSDElzVLwedaAUT3pXdk5xmN4MtF4Acb4t4AwAkkQbqCSa
QeZcbPKi80UDEzWBmeAejPzAG1HuHlz+hPzAL47JIZiFhR2mTlvFSgy2sWUM
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
P/zev/cf/cN//+/+X//xPzj7D/75/D/+3p0/+cndn3706NKVT1aWX96//Xx5
bmx2+v1Pn54pK5dfVaigsh3TpYgXDxT3wGi2jNAXLb5Q93m1rZtNVWur1oEV
HZh+izOV6NeMd1i3XWCZTMtjGzEbNkWzpVuvPOswNIBR0R5bbqqVLx3+1w05
U8pXq5ztfSMpB170Tffot7/57et24+e//PKbNswCoZz9bI3buxlpj1r6rY55
wwQ41WvgDxp8WaoVFRbGEd8NbE/m5FpRLJUdno8005MNhzMbSsO39l01YxtZ
U8vogCTJ9Ac3qiEViZlSQZEoVaqAyRLK554IuFXAzTekKvg4plgF58hWaxY2
+KsmlbM0kmQLBk7NU2rH0QyhnDoXxLUh/CFdI4ZtGOMEMch+wkxg2+kBBJJe
ktIbgk4AJg24edQaHCxRu0kf8CIJsKSsJgUuLDOH2QrzPFkihoDlD3o9soA2
w40N93CNlPcmCRJMEr6mTi2yfNdsGYCuZqFVHQBeEXNXzBMdVxQGZItykqEB
biM4iRZPudqxYh4uxKPVSJSmB52oN/lsUgl7oDMJgVFIMkwFKxSSAiL3GEyI
Biyu5oSYeAasQ8DwWSB3Y/WoqbfbequhtBpq25cAT1qhDDhzgJUpWqtpNYDe
RlqrYXY6+qumeRDLSdma3IqYVsS2Yw4MEKnh8ZHDtDGaARyDw0AoZn1wWDaC
QQnMeCcG2JIIo0mRAVTkdwgR99Z3nDJS5N57MGEXgCTdUAMWBHiSygO2A0yt
P86ut+V2cJw/n+Rmk5PzRF0HLDQxvtq01IalNAFyk7BtpMF3JbYtqbj7FNC7
iZ/ItiLl3/689c1XcWCL+cKnvLIjqHs1dkfUck7I+4Fk20oQWUEY+JYbOEBk
5EbovX79m393KKy8OPjv/tcP/5Pf+/5/+T+N/f7/dvt///O9f/bDl3/4xwv/
8z859yf/99X+S+sL42tzw9fmxn7y5M4PCtm/pDMrWvVmw3rRdYqRVogUqq3y
Rxp/ZAi/DuRfeVJHqQT0XkupHDlC12Y7UdgJNdevOy6leRXNrak6duNwdNOz
DKBnjlxyJRzg4O+A331gSIdNod0qvn7dev268dd/E0dd9vAr7esvdKG+83ls
/eqrCFv/KJlQ/UyvrnKVosFXgezB94CSxWzBkWDKBqDmsTCTqzYsuHmMUKCt
etljaiy9JbK7WqLnhmokMmVylMqXZdQzrEjgucAokKvYLlktSWoxUljsN4RL
zFUwcHBsuW6A14+RQACTWrKgkxSKqkXwxG2sQC+fGBFpxzAjjHQDMITFxRQD
M81w3QeuFjm8hE02Ey33Y/123IOPmMjqJWBCTmXxpUCp6Uxeo7Owv2lxgVrT
6JxQ2vaSzLTkVJVeoXiyFuxhrhr4GrSfrJ6T8RucbJMM1aQ5eIa8RMDkVO5H
bxoJCad4Gnx1xxFp+A51gFy+qrOAnIB+gHKURpeUGtCtrMlXcDWWKQc25ZvH
Bmjg6iXiEPUqSycfkSy7S6Xk60rWnlTMpScxEwD8XjBJktYQTLDxtJ6UvDly
KxQPGtpBrLaaarupobW0bqR0IuWgqR1F2qtIjXytESghSiBKcSTGoRSFXBTx
GFZ12NjhYpdr4DYTWHXPxMaUJIEEhzMgiS4k2e8COlYW6o9FiaQPoQoAJkl9
6DFQpCgRnHSl/52a5yl6kNK8NFRLesyRtgvHCSSoKqBEjtSylbYvAxciGSaA
cie5apigkmhz1SOYIABSWqIXsV7MeSEDFjR4P+ajptTuaM2WZQaiZNBOZDa+
bNtxmGNqdVUQTd/6/yh7C/gorrZ9eCpQrBSKS4IkuENwLe5uwYs7pUCBFofS
llJKcYo7FKfBo+tus+O6GkULLW2fp/M/Z04yLKHv+70fv/sXNrOzs7PZOdfc
1y3XHcwmxYCb5n28QAYiHpIJ5D4OZRcwUlAIyoTIZD/Offlnvt52ZvEqY4uk
tS2TdrTvd6XD8AfDFzhHLs0cvfTi7LWnv9t95debmTZdli/zAp662f3wU940
LlP/Ge5fL4k/SuwByXeYd/8su07n4Vce+y9HHRforEP22z+mX9v28Np2fdZ+
vWX/f5zpCp2mhDJfiin51M0I+yDCGOCQCAL6hADwI5ItLBsZJt3rva+z3Atm
HlEUQVF4RSFI/sy3u+edPLtBHdnK/a3wRmuqxMoELslS9FEYeHluk+6O15EJ
nJNsHlxFZp7M4F33GdttGVL4TGAybYCuiOsOYbvCua+5zC6fzUU5YTco7/EA
Y11Oxusi7DbSbfbjNoAkDLjdkyaK1JGUTvQA9CgksLBZFWIINAoqB4LlY2I8
SPZHT7jhIEsS1rHooNYEDvXYVTOBnzCYoAosI4V28Ct6CtypwQNIo2DCtFCz
vUjCXS3GwI1QlhkmUmE6FbzQ74SS7+CFgCCDHWANp/Uh+AuAF0IlHMKsGnw7
sEV7R0TWGN9r/VXNtEQwABNN0BXBS2xJ3tumAqmdUV01qFyK2xjYAQedEzSb
jFd10dW+V5uA2zk34Imw01DtKESm53wW5I1oyaMiwTcY6C4cmeGFKoU0cFR8
sB1bbUtEYGIAS8aqTz+s1pmoTfSwgx4KhwJeE/DlBHyBgCeILOjNlpH+D7Sw
4AyEqKDoD0k+iCe8LxTwBgEVCnlyoUyQJ8DZg7xqgj0k2GUOIIZXFRR1ywy8
Yan9d4D4wP53qJouMRHY4uqWAaDRsNEG+KuaDLiGJ7FIosVStKxNLJhoO6On
xJjJkmhUAUfZeAhub0RlA4RD9kM5AgB6AQZ6zhJpDdLwU/ABL/AuOKgv5JQ5
twRol+QNyR455ItkU2LI68aNGbZ7VsIKOBv3KOfPl5FXf+Yryp//VX4Ph4Eb
wkuiQPk9QVkKywLhdQQEKhyVf3v5PP9x6Nixrd37/9ii7dpeg8/0Hp/Wefi9
zlNTusw8OfGrw+uOnLqefjec6/79UdYTYZdkmshlNI9Ya5PUMIEdHhKTZXI6
5ZxOZc30pc8jHn7GZnyhuzT35rHk68cnnDw27vD+8WcuzbyZuSKScfYVlaI8
0v8eeZDL3Y8IhhzRG+LpoCzL4Mw4imNwTvAzEu+jAy4iqvxxEervfbUBK/wX
h/774osFYPsfr8KhUDggybkB9pEcCLpI0u0hXS6/3eKzZLB2gCQZok8XIgx+
WxpuuY87HvrsD32WGy7LNcENvKk7EhHmfBwDq4/cjMXJ2Nyc3c56XZTdStgt
MGrss5HAw6HNFGXgmQwBTg2wqpII0BhwzfthoxYPaY6Ng5JHKIsKgCUTgInX
Bttjaa8axoy9uRe57oURTjVeAZd/0b240Ar9nNfxCvAsVaT6jpY2EkUEtxvg
V8BOf7WcDPIOslCSCIU9C2/3bzkY/4IJRVIkCFKQ3hECGS1+gnhNLARBGuLW
cayboWDJH+xnYZzQCNh6wPrUe6Jaxg9cJhgv8sJ2LRKHUPDaYCg1C6ani46p
VslaVJFbcPI2mPeB/UFGEg4J1VMAVVQdBsB0YL+hzxgLJjIUPXZEBHc+cD+i
bHaQyglSsDQddnfCMo+IBG7lXmARFO4IUJEgFZbJoOiTwUoUnUHZK8sAc9xh
0RGWnBFYveCJAIQB4CMDkKFywAXEe6Drq4IG8EbCHBEVyBCLAzyBERvOBzsv
cBtsgaHeyMUUozmxejsoHRwLO1pqGNEWTTJdC61QLj0PwIqDw6QiaqU9NNIp
EfYAVD1VW4lZcNr+EHiWc4uMLeILB31yrg+4GkK2jwu48SjuecLjpPFu0J+R
Ixuf5dOCYH5cwDx5mf2n8oeikMrfLkVh//nd8/dT/x8FZIFsVR6LYWf6S9kf
cRh5hynio5T/Ks+znx7b8XXbURvrdZ07edW9/nN/bT7mVMMxPzSZtGr8pvWb
zm24YfjRjW8nbPP9WZ9wuvq53jL5TizoqSGZq3rSyrsf1KQMrQOu/hHPyLB9
Ap4+Bk8dY7+X/PDq6GsXBp05NfD8L4Ov3BpqyDjpcJ4IhO9Q8i0fc4eVbB7K
i9MMyYk8LcqSEBAA+4r6fZGnecpfr8AVIcY3bothXTHsCoYp72LK+5iCYTcx
rByAFPB0fq6ddF7/64n9r6A3nK43G3x50Wc5XJBzOiWXXfJZQj6P6LS5szJw
i5l0uDgcDukI0q4IY34edUhCiPH4ZYJxPEijTIawH8+mSMZiEp1ugfCJDCGQ
4CU2AWqMmICfI/nAHRYsTBOMLoJrm1SNsMqsS6DsUMhFXcKwE42AmmCUx/Bm
JYaxWFWnVj2udaZoCKPFCgBcoHAoqjtFSIJ0QlAZamzHHBIGQYsRIQkCEy0p
o4GG9kZITVF7HJu7QeeJNNPAFqQbgHwVbXuhopoaQ6YZC0WaGKaQQ8FGPMIk
qlERnjLAHjE4awDgHrg/mgKkGfxhgXGEkcb1wDhgfh3qFowxVd1aTfwhbggr
b316WCji1vmcqX5HKovr4awujx4GYItoDkCSEOfKlrw5si8vQENZsAABACEn
SALLDVJRWAhKFJrsB066LOIByS8JHoFzC9BbgEodEckXhvFbX1Bwh4DzDI4J
I7duACZhVQRVho1ysP0TEByJBLwGOCRemfIBsqPGQmF+FpAgTWMHpX21iSpv
WzGmg2BE60KNna2AIrHZIuz6ERhHiAVnRUILkk8j/JMIByxfJmFEBWAIOH/B
A74XmrQShCnq5CIeLg8XH+NSrofKdfny3a7fWL9gSeXdaX5zSkB0//fPx3/+
/ZuHJA1W/NTpLw/uX3v+/M6rVw7fvXvGlpUiuPXK77lPOOJFkA973PlcWGUN
itsZ+WLOeqxRL6z1yH6rL/b/6n6fdXeHbLmR/N3hNUd37by68YFps8PyhSN9
rO9+h4Al7k+x+j9y6fADLJCKyamYmPWBbK0ZxZvms73ymEFh35A8YpzsGO3P
GOy43w/PGkHrRtPGkZmZawzGtS739izDpoysb5yOIxbzaUvWOYFI4fEbIeaO
SN3wWG8YUm9KBAfOKgW/qHoizIcfAgyB9g6mVIQP7oGtQ8f113uO2j2/KP9k
Ky9zlcdPQ9Go1WBxZGUwHpOA6ynjfaf+jt+uyw/KUVkOi2GBk2mv32u1uu06
2q4z6tPMhvsAsRnbQ8aWLrvS8hhHHuEMkc4IQ4G7DE+6gU8ObyUwxZkJ7qo8
RAMVT/x2gCS8aiLtACbASRxI1BRwarhYeDUCoK0+ZFpM4O1eNq1tlo3RbEcb
UTk6KkBFBWNgaSPJMs1RQTuA7VxRwYaWoNGgBvkVsV0wKOD5+jHs+oROER9z
5sg5QScGHr/dTaM2eVlxPNPnzaDcwFsA5E5HuDMJVQ8KqaMwfoMI9vRlCHgW
58tgPWkkeApshykzfaGii/uNrmHVwF8GvC9wCK0U7IJUdWKLPBO/G3z8dMoD
a9tYrx7JNqJsTkTwZKt6pGrBuT8bUBjgBqvIEIY+hhf8Cu7RyEKw7tQfgrQI
cA1c7eLxBNCYBgAgPLQQC6gNACgvqkwrzM7wsAxMLQ8D374DgYmKJG4kGgD9
lqLkLFr7WgwE9fb+azxWi6UU0wbUIEVSB+CiBkCUXw6qbX1RyQ9ubZIfOiRh
cJ6w6cYrwUo2wIwcLLhQWRfDOhnWy9N3RV4fFM1hwRok9YIvI0joo5Lt5VP+
j99zaAF30nz+S+XSQ3LotM0tuy1oMHR5/e5zWg5Z+cmUr5M/O7hg3fFdJ+46
qJxjp69TfE7Osz+FnFe5fyk7LxhHL9rTeeDSEjO/r7/sZJ9vjY3n3UyY+kvb
2UdGrj04b+uWS/eOe+1Hedd2Lm0OnTogktk2ak3gMsv9Yy2neKr+jlctcFcL
2KoytjjankA6El1ZDQVru6ClA3+neeBe2xe6nn+ae7+82/6JsVuBrsszU/9o
2oBoxojfHPMjupnBzCl82hg6a3DUMybkTWass0TH+nwOXA+3Mawshk1FMIJV
KMQTYFXgz68Bnqw5+UXy6s++OWTcd9Jy9JeUaJ7NQ9yTAHsKZgS42zKXIpEp
tD8V9+u9HoufYWhedHg9BOmSJFLk3C7/XSd+93k++DoyAsRd2Xkrx5+ex+pz
aUdEDYwHGT+Pu3mfLeC1SV6YaUURDFg277PCXnLVCLee9pkoOHgO4QO45xpl
KBxk09wDzUn4Vz/hX8EEre7Y/WNHP6DW/sJiMxUQtNozFEpFR46tYkVHRgiD
LNa7EClbALaC2lGkN6BK76IVjXYoBI03si1awMQMh8eRGaQ3lfSm0f4MYOAB
4U3j/Vm0Nx0Y688ERvsyGFc67Uyl7A9wVzrpgYqRSOKJwbNIr9qjFBPAQWfO
+o2COoKB96jK2zDXpsZMVMVIQHOgEgvyTLIeHji4B6aGZRwYABO1qwVqTUD9
c+AMAO4AFj7ngsOkCu8Cdp62RWGzPyQmYUBSBFSYikMpP2CcU4ZNGR418uCO
zbnAXhjGF9FEingf4D6I4GSLgO/41NYwJ4p4aBHU2KnZ2hatPg1RodhorVb+
imiOphmIXoJGS8NmPQGXGKffmunQ3fOYU/32TNKhB2RH9AMv0SaBOyPrDYhE
WGZ4WSTl82z4ejgnNRB5KIgPGO6BKOlCYbvNmSbDobxRl/Q8R1F2XOSb9dte
u82KD4beLNntaMmuP9cacr7xpPMtJx4dt/rygVv8mt2/6IgI91xx5PzJK0r/
zw+UbD+zVMtkbPKxhssfdNnsbr1Y33uVadCK+yt33Vn3/cFTp3fZ0vfQmRvp
+3OEeyPEB12k9Ga2W1WfPKxUoKvxyFpPMNUizDVdhmoeUy23uSZhis/D2/zh
a/e7uZmia6hYWiv6psrthGd3sb/uYUpGmf+mfqToEhR7qz8zE1+kVn6eUe65
scSfxAcRy3tkWrmQt/1TdriizAV0piR2quz7Koa8q2BVgxjmAM5JSQgmzwCY
zL/0zdjtp2asz160jT6up7nA1dzf7EL4DkFc5PmLBY/u/qN4Cp66Hr0MBB+F
81+9yvv7n2D+k4KXz/9SlOe/v+SimWzQ8OyZX+ZTAvitEH49h7gTwe+FOXOQ
sais0wVnN+O2gM8W9jk5WKWGbvGwo5aCsjYwZuJ3QdUsEpZawdIpVUTaooIJ
ynsWb1vT8CGW+DBvzZ/SohOxkFKszRbgBsreIqEhlOEN8+CatGtgghwMjQ2h
RPBrDFHzNTChwziCUJzThkrsJNjhWFjvqsnIxwLRGzhJALMLrI6n9CyRyVPg
gQ49EFjwKfQ8oUMG8ITBM2hfOu15CP5oFMRPCNEcAZNiNA6bDZHKQVHPIIwk
iz4zlF8GKwJX/TpVyYSFMSvAjAwAjvjCAOzrRr/cICAvOMzkCrBVX51YDdtj
Cws8GOBpIHPJvEvkHWEKrH0PwgQALFHOGwWAALwLOFvKK6MohDr3CuVu4E8U
0BBhjDfWAJhEOBwKFgESFAMmWnkJoipafFWLisS6H7FlaW8njtEBEZhIlBPQ
QJmxRsD3iNt9lgy77p7XkqbGahy5kj9HZLJlWhJ8POsPCpQg0bwsB7lfw1La
44A1P2AOEjrRlx4iMp8EXV7HvVCUzn/yW+SRkvNK+WqfvUn3jXWbrSk7/nbF
oVfK9D5cY+SpVlPPdJi6d8qq43vOPfhm96Esm56WeVwWf1OUUZ9/U67t6I/b
jis9am+j+Wc7LbvVc3nKmI33xyw/8tnWfStXLX5wfQut+5JOT8bv9ibvtOQe
JkbsDQVzDe5GbfZ+HT6zAWdMZByNOG8z2tOE9TXhTbUeeRr9STT5jzXhH10t
xRCnZNZS7lThHViuA/ubrvC7v/rfvrqKr+kLS7UXpjL5mdgfbuwvAhN0mPcW
FrU3UfImKsp8DPsEw05hAEwqAfT4GyvHYx8K76pg8mEpBXomt3cP/+rgqEX8
iNn31p+87mFTH/8nL8t222T/JVrgyM6xv3wRkCMiHclxMHmewH/8UcUu/E3n
KtHfFT5P0XmvO6nM3Ed+irxHeW9K/puPhNQg9UDGU2Ful3Zy/kKxTcljC3pM
kNGTel5NNwjwkjYhpgOr1/xgIVj4opouVZYNKcmb/pXmxBKNWHjRHJVYMEH7
FNuIqkFioUZttYPHB3gCNqL1iEritV813XgEPojCQDSgrLLfitqTCwtUgKNF
mBG4ceqQDg1JUI19LJgIUKDVxTNpLAlMJ9AGYCyZBYynjSJhkGGNJfgJ3sgs
kAASdTyu93p1fr8Bx9Wwks8A3o4rUmLUitbUeSIW2W8DNAoqgsL8hRXqJMDW
ZoMqBwezwyJl5HEj4CCw0e/IQQgmoi9PwnMEbzYP+1bCsF0XwII6OqqQOEBY
gI1vjDpajiayaXc27cmmIdmBC5+FFoVyylA0oMjAY18UvIr3FFW0QiEjrbYE
ZnkoF2yyU6mNiiRg1TuikEa9ASYASVCxvab4pwGOlvbVFLq0UU1aLb0Wkg2o
0q8Sbs6GnMuO27PcGXcpS0aEUL0aEsCjPyzQAo1zlJvnGEZgvAzz2Gl9Qvif
s/Rzin7ksuZYs/I8hleSW7Sn5gtu5e8/fv9beWiWx8/e26LLms59dtWdvK/l
p4fqD9/aZdqOT9cdXPH1j4eO7stIO3r5+Ao86xvBcdCVtkem786YOb7vsAHJ
n05ulby6zbiFXSbN7z11yejFKybMm7R686ebNvVOT5nkfTjQcbuF43ol8/WS
pisYfr8EnlaCfdiUyWhAZzaiM+rjhnqcvb7gSOQcCYbLJTx3KgYyqwUzquZk
VnnurPNfPEHxNnS9SCCfNgn/1oOVO3s8XRhnN5+xrWxpINoqRD0lH1Elou6y
v0tdX7BTlUe7FGULhrXCsO+xUqpnUkl1TsrCxx9Bz+Qqhr23496lfnO3zVpt
HTv73KyVO/aeufzkH+X5P8oL5Z+/lb9cHm/K3dRtO08sWXd8wborK763bD1O
7zgpHr4auJSWd+7e84t3Lj+wW57+/jwY9gcYk+i9HyQeyES66NeDa5Um7TTl
oAFbd5s5l05yZvHgJohnMXBMHmyIo3EDCSdAGVXxPQvAFv51GYaJhwKJFq5I
mF1TRShWA6bNg3jbD0GmMZR/DaegX2N7/GODt4jUaDUkWn5HoyraOfAEpDao
EBdV0vLQYTBq3Tca9KEzjMVD5ELAtAWTxpCpPEASxgiMp2FvDvhVZI0CBcc1
SoxFoOxq8ssCy+n9etKvJ3C9HyrQqgZriVXFJwhlUGkfCuCTBokEH8Qg+a0i
rk7YUcVMAJgQngzGl6UKcZsEvxksW3NW6qFD+wCYZAveHNEb5d1h1hnhVDBh
oQVVKQDVwXAChoIkVYNwbC4Zof1R8CvljlCeKOWCRsKatKhaSashCTINTGB3
P5RJcaOSEplWG+vUdmB1mQMwsYd5pxqQKQIK1asBDxCSqAkmmILRCtXU0G5h
ClhTNY+dTw0M+SeF5Ih1Cz5TNizo9XAOo1f/kLZlBXC1FN9tgyXxHMERbj/h
4xiCE2mPQGe7DNmk6ylHPqLxHJclZM/IJ02/R/H/PhUf5fn/Uf6T80KZs2Z/
lWbTarddkzT0eL/lh2Z+c3PCFz/P33zw1I27BtNtFr9QQPwUNS7M1k0Vbw93
3RyQ7Vl3ct+Qi2cXXjq/8NiZIz/+tO7I6e2HTm/ee2L59h/G7t43aOc3DS+d
aHDzfJWbx7H0C5jpFyz9DGa6WtJ2s4zxQinDxdKmyyUyf8EMV96x3XzXe/dD
771yqecx34NKjK2Ox1TN76ohBBtL0USK/vjBk3amvK54/mAjMTjLPtLuTia9
Y7OFsUGyQ5BrEOUaR8RuL/Lm37qY/ODKN+f3LK7XpDqG1S9d5i8IJiUVrARE
klKYUu1DD4bFYzUGLNtnnLIxo9+n5zoO3NZ14J7pC7am2QpQSNniYHb+dGTi
9BWtOo6tmDCiWvO5Cb02th2xr+OEPR1Gf9c9eXv/WYe++enU4dN3+cCzx3nP
f4uGBY+Rd6QJBCydYgkrQzoZOCHdBlxxwf0w6E3j4PQ0yPrVATfgSs4iPUYS
LD01YELB+VBaDsLAetJV+TKrNngr1rRFjeAFrXS0m8ZZNJ4SCyyaCLNGBFSK
8UZAJrb/TgMQFERFxCq25KwwRAwnrVg0KQNYuA4TKHpVMQAKlBX5V68DtqpW
iZErPDELdKpp4BrpBFIP5bBY8BIj8FJ4Ri9CXQiTBD4mYFiMXaAtPOXgCBtF
2Gi/jWXMDGOGtTGEWRVlMvDgsdcMy05URWuOMEiEMUCrQpQeVcreq04t90Ep
bKR0LUEhQUuY81r16T8fgeJIAEbA4gIW4ZxRHg8VgQmChSC4iTM+pIgYEfxR
mXzKcY9YJp/Bs/3uELinE46QH05yyaE9al7GGYSmFrgCo9QjwNYe1aAyqg9Z
BJbTqyJpcFSuFw7TpC1hwQmL2NUYS1TCAZgA3xW8MC9EoXkHLPA9AGuGAG6G
VZGEVaVmUDoePFZHihca2AEG9kkbOJoqaICjEd6MKytP9j8PkRHSwzlNks+a
DT4gS/FeR4Rns2VWEFiS9rMSzYmcl2U55ldJzIiEnBHZwtMZjP92tpT55yvv
i1dkhuu2gbalePFGA+diVYd93OWHhOG/9l52eOmP5lkbb6/adT/VFAiFIs+D
pjzvoVDGvBx98mPn2Efe5FeR9W7Hsuynx3J+O5bDi7j1YUi2+8n7WY7TtzK/
/zVzzeVfx1stE52GnsZbdR13q5P365guV7Zeqee+1cZwCbNcwcyXsIyTWPoJ
LOMUZryAgY03f8ZMqZjTUvK+GfvVjN3jsLN2bOMV7LOfsPW7sZ+OYAf3YacO
Y/cvlzWnVqVcNZ2Ocn6qnCDXZqiWTvPg8WPLL1k6ccDEGd27YapzQhfGTDCl
RGEMdg2G1dtiVPpvUub/pHQYd2L4rKtDJtLzlqxdvup7myfi9PAb1m3q07Nn
rVpxdRu1adxlQtLAlX2n/TRhyZmxCw/2Gr+6f/LKiV/snjR17fzPfnhwx54v
5f3zpCDicwW85jzOBxYOQVj8gBqwHopwMr502XsvG78nkSYBaikboXIguIOT
quQOCdM6LLh9kEU3a7Q2/YVrUItLIHYQG/bUfBUEIOAxYCghDninLs1jQdEP
dBC0AzD1UFbIxyGzhvKAaGOsV6NmncxqNsSAho0WE1REYAIPRcLwCKQ5hE0C
V6wbgIlO8L7WfUWuFAvDy6YAY0ejTuGUUlXQAOAJ1KHF7QyezuAZAmUI8JYA
bxNoI0lmUjgAB5MAPiBrFxmrCGMUbhFOW7MxrIPnXKLgFQRfSHSLLOzapgA0
UXYoVQ1V/XUwGAIYvV8fAL6HD3YlqHUmelUOziLSUOgYUKcQD7uTIuAkDJk/
q7KNUM5UtQDlQhgCHIxciUCPsyF5AfQEoI0PPVZZiUfVEXrdPqNqLcLQShEQ
uV8b85ap24OUs+hZ1QuCyswe8DPCQkEk8Ky6ERpq75Vwm4jbijSBoSqv4LPI
hCOHx8GzAdIRIJ2qnpJPDeN4wUZEuMChwFM5gj9XJIKkCzh+Udn3JMpkSz4J
N0Q5+2OZzoH0zaV+UgIgrUTjEutlGZIUaJnk8xjuCevI9usknyHX7y0gg0+y
80K5eXt3HT+y49ru7ZZ6PbaV6fd9rV67hg88323Nr9N+MkzdceCrC5svWZY6
o2NddB2vA8u6gUVNmOLHXpixV3bsSdb7Ct9IYRtl8y1ZW83nfEslu+dffNIL
R5NnjvqvyARFTPjNX/6pu9RjxwdSBvbSXyWYWuKRqZpsxYgHpd33G3gettLd
qJt+vqnlcm/f5S7MlYYFGUN8Z+ef3/Tl2jkb5y8+1H7ozw2G/Dq2jr5PT1PH
mWLcuHDDkX+Pn6QsmqLsXppzZMUp/OwPd45O2nNszKc7R1Tr36xeUu92HdYe
bYEp/yyIx7R/NUur/9UCgCIOV+w/Lezba/AP57FNl7E1KQmf6WrMSB+y3fft
Rc/2478Mnrb0g2ZDyrRb2nLSie7zrvdacL35rAvt15tqLE3v/kOw51aq/zZ+
xIor9YZvHLfpxmXzX6SkMMFnbNRDsUbRTbJ2ggVLWM6SZZNM4QLJUhwjgfs7
jIrHBDDhr1ZkMkADyh6TijWDxa7Vd8WGOxB6IACJDa6iX2OLyRHCvE6/krHh
XCusP1e15bVC9JicETiCXRuPrpqV9ug0SsUWja1BTo5aNAuLb6EygFqmCzXo
1IFfLNQIQvEccGS71rjHQhQFWKpGOWgTT1sE/z2eyJB9GSKAX09awJshu1Il
Vybvy2Q8Opm0ZAuwER6AlejQ50A9AUcYEAqw3v0OyWeWAYD40kjPA8aXKpBZ
gBOxXjPwAOG4E9YrEl7BC2PaEDMZuwgbQi0BDioDSLQR/cwJ+C2mhyg1HGLc
CEw0hwRiiIBrj2EkhPOCLchguZea7lFf6EbP/v8yuNh5X+HL1ceQVQHQUA3F
XtBG1TvyQuPg24GfAQAyKrwA9Iio5wa2QyUBwg62h9V9gKGPACARvUTy29Fb
ADgSKEdEdD8KkWGAz159mHQXSGSe4Je9FlhNB5wrxsuTPpHzs4KPoP0hhsum
iTzKHMYzAoTlEUk8ooVn0Ww5lP3l6k1Lp66fMWNP2VZLPx74XdvxpxfPtw7e
cnrpsYwF+45/e3XfRf32dM+S+2lJWTc/0l3CQqnY79ZSjzNLPM76kL9VOt9Q
J1tXy3YnwXwzLmBr/5zq99Tf64m7y2NvOyXS6xXZ6Lkv/omv+mNv9ail/H+F
Zvn2Wk+9DR+5S4X1NQJZ7aL2DkFzC1Hf+pGp10t3z2fWpn8Sg323xn732aBB
fdq1GTCgUqfxNfqvGdv7fN+J11vOelh/ZErSkLQRowxjR6WMHLXz84VfHt65
/OTe2es2jOs+OKlplwHN+6zGGh9QjjRSnq1XAjOJE9M/GbAYw/pXrzPWeGiZ
ws9QjEnK3RGntn7RYnEKlqzruJEZMvNwYvKlTxZeTl59asicjfX7Tq3SeWrz
UdsGLbk2aOGN3ktSms+8/slGa9eN5unH8sZ/7x+wwT9m2dGWYzZN/PLU6bsR
u/t3Xs4LF/gFwSJ5CM5JcoSVl/Rh0QwvY7+XFjwSAX3p2LwGdC0oJMhZOD44
Fky0TIqGA7EOSezUGKZocHAxYqK18WqV7a8Nh53jRVMnCiUTY4KiFq17V+Xd
DoAqjFfPvxYNKIzHFpbPEa8LYBBSQX2zolF9anpFr848LRrjTtjhGGsKEBYr
T9mg70FbKG8qCwXTdIInS3Rmik6D4NFTTgNMoMO6erNA2Tmvg7DoKbMOKptB
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
p1b/Oo2mtZx8COu9ps2i08Nnnuu3+HrbyUd6TTs1b0Pa7DV3ew3fXqPOKAyr
Ub1ax7JlamPYu68rON6FHbqlS2LvfYC9XwarWBmrWhurXQdLbIi1aIF17oD1
6f7O4D4lB/XChvfCJozApo/DJo7DVgws8/kQ7MuJ2FfjsKUjsBVTsdWfYfM/
K9W+Z6U6HfvGdZnVeMju8V+IDfrer93r1MTNjiNX8/bfyv3hpm3Brk2j1q8Y
tGZvmyn72o7Y1WDcBWxSCJusYJ0v279dqhyrqJyroJyJy732w4rpMzstvtZ4
mb3F5DPjZu0aNXHxwAmL+878rtOi0x92nHJl/wYlpY9y7D3lxMeKqV31UUfi
B22sOHRXwrQT7afv6TJ2c6fk75tOPdJwyrE2M481G7+zzawTWK/dicvSW86+
0HzUzoQhy8ct21uvzfgZqw7fsIi5jx6/yMELRAvPE7IkPZGJp5wuQOsp1h9g
hKc0D652cAvWKkC0SEiRbuHrCCow1HAHDMqNSj7UxAqwBSAM2Ah2iA2nIHjR
VFg1nEFQExsJ0QiUKukJZxZog5VVymNRQyhIPQCCicxagpwNmMxAZIAqcEUq
KEV8SgeAApVqgweoeQSFR4oEb1VtItyqZoVsCCRhfJhWq7VJvToHx8RR9gB5
m/el6O4dt6dfYn1ppDuddGZQfpPVnu4D/hWcz+IhaDvhzYJC36QrxN8P8amA
EAlwKoEOlhZ74TgbBiKhnSGsPkem15FJwZ4FE+420s40xpPBqajL43bajTDT
yroMLBS1M0i0IxZMYimDRiiKRT80z+R/oi0awmgooXks4FmU4imW7f1X5yeg
DuKE07LU+Tjqr6iAtnAjrLFXN6o1sajg360W0GoG9SHRzD5tB1SZD+v2GY8I
i2whFsEeAXBpEdYgaQsgPXO/SaCtLGMhSSNN2AjGTTPge08tEDKjosnvzeB8
njwp9+lL5b4FT+o+MqFevyZt5jYat/udPutbzzo+YuGZbuMvdxp/dtCsawvW
ZS5ckzJs7A8NmiRjWBUMew/DSkL4eL8c9sH7WGnsnUqlStauWL1K3Wo14+MT
45u2imvWrkbz1hWTOlbq3q36yGEtxo9pPWNSm9lTkxbNar5qUYu1K5qtXdPs
hzkDdy1rd/7r7jd3Drnwba9T21vt/77elu1thozv0LpfcnyPJQnD9vde4KnU
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
MPnrlXJTZ0zqPKhB7S7tOsyv3Xt1iwWney+8MGTquWHj53UdNKttl7GduyW3
aNY7vnabxMR2VavWbdi4dc16DarWT6yZ2LRm/SaVqtWtVaVeYnzjOo2T4hLa
V63drFK1FrVqtY6v16lOvTb16rasWb1+tapxVStVjqtYqUa5KlXLVKhcslL8
+1Uw4L+Uex97H3oqJUpj775T9t13Gpcu1bte02nNu69sO2JHXP/t5T9Z2XzJ
3kYrzzT54mHSynWNZm1tu/hGm7kpbYeeHNz7zKDeqY1GkVi3o1NXfaGYJykb
MWVPScW6Z8CotfUn3Gg++seeY3Z0HLK55bCvW0/8oU3yj20H/ti+165ePbaM
HrquY++Fbaedw/qcK99x+brJnRXdFOViCWV3bUW39taW5VWr944buDth0i+J
Y882GH08bsTRxtNSmk36tdOsG41H7Gk7+1Tn1fe6f3ap86gdfftu3HHMmRlW
wk9+eyk58/wGL+8lg0w+a813p4j+NH/IJwbI5243RxV6JsXqSGMjIVp1a6z7
gfAhthQWxVW04MnbPsnbbowGSkVPOWCyxl84xyr2taiiXnUqbChTIyEhYrAe
1UkuEtQtd8IBDVzhZNsQuHfzTpRUKqrORZEf8CqHzFpkFk7DDNLWMAcg0aqC
iYHzWmEokvGIfgfnsftdKRydyePAwbD4STvL01xQ1jmdHilKZj/mH/3G5/1G
haM+JsgFw6GCZ4+lJzlSbraUFxJllqB4wON9Npa0UK5MrzWN9KYFYdebWwCs
zQs+oCfoN/IEVG0i3UaUb+IJddIZboPrGnj1AEwMaSd+PoRoTph93dIS5f8n
JPl3DIkBk3+J4qqH8qF0sAiFm2zFSvSLWYiG0Y9/ncAFnED0FRTDmaI4GHrW
rT2ljflDzkzhYGLOJ7F21VRhN8YaYG1hyhZh7HlQaA42DwJeLDFOBlxaojsa
pPiwl2dMISZTZvQ0pQ9w3OPIo//8pVzPMnTqMTyhdud27ebW7b++1eIzA1dc
7zXoSOOOg2s07l+pTuc6jZLiElvUrh9ft3HNcpXfb5hUt26bmg3a1W/RNalN
h05Nm3fs0LLPwM4TGvXqn5jUp2azHpXrdaqS0Cux9cBmScPbdRqS2KRjo8Zt
GtdvElejdp1KcfEV4uLL1Kr1Xu3aFeMql62PQUwppEQYlvR+2RGJ3ZY1GLyi
9eTv60/67v0Rc+LXbKiy4sdSC49XXTbu3eTl1Wf93Gjygfhe2+J6HKze/061
7odq1mrPnJ6j3OyoHK+s3O4n/zS5dGJnbPbZZqP29Ryxsd+Alb1Gb2g95dtW
U3f2Gb2/5ydHOvQ42WnY0Y4jv246bGvrKefiPvm2defR27/Zo9yurpyopRyq
o+g3Lh6W3Hz0kTarPK0X3Bm87Nd+K9L7byC7rSEGr7Z+suzaoPU3++029/sy
ZfC0I716rNt1nsuMKmLBixesJ58wQjAJ8fmM/ZnzpkDf8+Q62TDxzGPhiwZX
SbTa3McULnMRLmEbnJ9Cx+iWMG/Ucmj188UisdB/QJIFb8qe/KuTo70Kdsqz
LjgiljGrvcMGVYgAAZ1F9UNs6jhIt6b+F+RcMukLQNVrKK0vQRDwwo2qsx3i
fRHRA1kbYQX7yIDjs2YYjWEt0KCukVVSwQRcqCEOTioUYBGsVVUEgiSId4ML
1QzueqJAcgIty6FQ5IlPiJ64fPfgpXs7j13dvOfkVzsPr/xy54LPNqxa9d3W
r/dd3H/9+pl7pjQH52BFHLyOkPw4HPSDW+B8EHCFg3fkrTAI6TfLhCVAGKAs
pNdAuPVQZAbOxoWYxvuMcNo7lHZ0GTLvHz+EGv0Ao/FlC8CFAHgC3BI4WQ9s
ibUinRPv/2JgN6RjgJRMVGyBzchBqDzvgvKqPvDXsMskAGcneByAMmseVXYA
arupiV1XkHQJkJsgfHhtYAsszyuUloUGftWCWmq+3qVuAdu9aLhnUacVtCI2
CufyhHg4XFiALdVm2JMF2A24TkgAJjh4KkxDsX3g9TGkQRAtYdkjZPt5yhyl
dTJtJHBwdQUehZ7+5z/KjQxD596jqldoFZc4sXzvL+vOOT1yfUaXAYcT2iU3
6jihfpv+zbp0S2hTP7F5xYbtS5esi9XohJVtir0bj5WIw8pU+bBU2VpVy7Vp
UK5PhfZdqiR1r9ym70fN+n/YuH/FxoMqJ/T9qH6nuGYdEpu0qd+wSUJc42a1
miUlduxUv2e7Gp3afNy9a61Rrav0j/sorlqVCu98UAvD2mHv98ASB2DtB388
YWHlJeuwuZ9W27261HcbsHUHsOWDsWFjsGHrKgzYVK7rOmzgL1jfh1jN2Xtm
D1Ocy5WzHZSf2yi6qQvKYj3G9MDmbas+ak/H/uv6dlvSffDK+mNXNh27vO+Y
H3v3/rX9CK7ZDGebmT8Pm71tzrJLQ6f90nHS/upTTiv3SykX3ld+xJSTw8W7
9trJD2p9JnVd5xj31d3kLa4hG/N7fZE7YKV34MobPdee6r732qCNdycsPNO5
7erdF6JpEYXL+esFRT0mzD4ex0P+Atb6wn5TZO5483AuwvzmsQuwu8Gp4r9V
4qwyZxMZq0BZBIgndvTVq7cbgCQq1FBwSDeEGsoqIO+CtGlhFg0lYFs9A2Eq
NjWsOTCxLYFvZI3BLbuoa1hiYD9OgAbHN8uUhcf1AdoM0AbGOkg4eROAT7bk
laBEOYAOh6o/YFeTkh5VfBXcyDywJIb1SPDid8MJkoydB8wIfEbOJosOYCIP
610BcMksoFFGVdMVvLUNeizgpuyzODxunCK9XtLlpny4zPCRdJN/685DS9d8
O//zTdPnLZ8zb8W8Gcs+nTh75eyV2774+tLGww8OXZcy/H8IOf8JRp4IdBQH
pEYnU0Yo18YaeMHCSeAELAxl8eM6ns1iuEzKm4G7MhhfJmzJYbM4/AHuSGF9
6ZQ9jXOZdal3jh6A5fQyaQ0x9jDrjPJuJJQU4VzA0K8h8DdkHEiHLQi+L3Vn
mAR5y9CeYDc411uV6wwA8gV/tQAQA1AGNsIOUNKqHgT4Jxa1/9FWqBIDrwRb
4QO6uAH8D/PgK3aq4fTCCJhaE2hBFFUkIeUEz4Ld0NgOlP1HStfoJZCTUg5G
0vE8QFdwMuYobsknzbmEMZfKymYzHkkGmTMI0E0l3DbKY5LzKMX/93Ffzi0h
kspJl3F8rxi4lZOX/fSRcvFcZpvmI0thXWuXHN+1waoJI/YuXHi77+grNdt9
Xrvl983bnWvUZF9c3PxmjaYm1hgSX2Zo2wrz6787qea7Yxp+NLVuhYnlS/Z5
7/1m5Uonlqndv2KtAdWrD65ReUB8uX61yvVo+HHPJh93blQ5qU29rnUrNKpS
pmZ81QZVy8a1TOjQpGa7xCoJLeJbNK7c7l2sSQmsX2lsTklsWTlsU4v4060T
jnRs8/OA3qfHjrk7crh+8BDn6BGBgSNu1u1nqT1RqDF4f9tRa+MH7Ks60N2o
yVbF9jUsZAUg8OvqtdtSsC4/JEw83P3TDQPHfd07+du+03cOmr5/yKzD/Scd
7DNlf7+p+wZOO9B/2tHBM84NmXVryNzbwxem9p1vq5FcsHlR3ef2y8qZycp2
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
P5j7i+ekv2ldH7rAjZZ76KBDl2eiPdZyHpzh6Axh1GB8kuS/2tpon13/ZBJJ
n59W10OvXxfNWl3B1/8NJjpdjGogkSjm1qJ8zdQPGUwSwzSBiMVjC6WyFpm0
hcPiwnSyXFAFOhnt4pf8qsv0t2mMgnjBR/968owmqmMLc+5XpT8AQd87poEm
J6CaDyRzezEbUO8MQFILf839rITQ2Ya2I34P8/VMWBeQmLBkzap5/ou8wn2D
Vs1ftsTFfZmrh98cH2drVxOjSZPNJs+yMZhtY+xkMdHRWN/JRN9lsqGd0Vh7
E2NbIxPL8eYTR5lMGmXh7rTIdLTllEkz9IfaThwCmemN+guCXEYbLbMz27DY
8N4ZJ9Czq71lTWdb3OdPu1uUB9Wiw02yw92y/R3iNBikNjSv+fTOEdz1BGfn
ghOWLZcMW7mr2fWHqY1H2hSxoMEXNIR8l24E2HYgTALqMKBcBeThQL0SNK4C
6uVAvgxg3gBdDMR+APEFQj+N8ZYBbgDg+AN5XDfT8isKAcmgr5yRQGIGRGZt
b8ZJjlqDK1Fgt0PrEaibPqbx8+h6OQRg6FsjBFoHfpOPaOMM+8S1/y6K6RGc
7eQ/apM8V2C5Qv5bNiefwSlgMCtRvkwNAzHKRkVcDOFhKB1DGRKUKhaRxCIy
ipJlmsmzNInGyD/x5G9mIkOoWtP6XRUCqgrR5HX0FVP0C/f8XUeM9Wu/plsz
OsD5qZeFVDXGkSJVOCvQLD92nZjNlvFgEZklZYowihCpZcionFYYBS1NoKf7
uxIRkQoqr90j3H4oKaug5708k5qSvj7y4+N7oFkl59FUPHKzmPW1WQK+NIDP
6k4lT8qu4Vfn41b1/lH567tCUunbJzeO7kq8c+nE6WO7bl7Iun4l69K548cz
0w8fSD2ddWjf7i3Z2Tfznr2pqiBV1nIqiYKyOumzIr73mv2OAWkzw7OcVp1w
jjrvveWB5+ZbTuGnLfwPTAnMnLn2gl/yjcAdVwLSzgTs2Ltmz779Vy9UcOtK
yCU5b5+Ulhc/f/3iaV7u81fvSivKq6qQi5eeJqSe2JZ+Zc/Re5t3XEhMOpG2
+/Szt8VFREJuVdGec0cvP7l549F9XWi4v99VCyBaRaNVJf1Nq2t0SW46sqED
Fl1sCD+Dg4lW+PTPMPnpfmHXov0eWf/Es/+mIjqq+a/NP//V+oePtffXntEU
AAoIErhGjhAVYqIYo/BYRCKJVK9uVUkaBWwY4zO61GzQWqlk3ya8209+uU1Q
sqkTDgGN7l+kDl2Ic5fYo1PuAr4u7BbPbmcv/sxf/F01G3R7gW8bKgsdIxcu
ttMfYTBw9Ey7uXPmuM10c7SZZmNoaGVu6Oo8eZ698Qzb8Y6Opm4Whq4G4yz0
J9lYGZlbm9paGU2ebGBkNWnyFCMrcyNbSxN700kOpqY44MwxmeA2ZfKC4b9b
Txw+XX+g6xQTyHKMpjVBov/8R4dWvro6k/TOCAC3rvaxvd9xbrAEgHgANoIv
a0D3IvB1AQCrAZgPXgwCRyaBk76Ne2wBGz+5pL13bvenuV86ncDniaB9LFCY
ANFsIFj+tcW1Sz61FbFp5Vi0IVZdomlfRU7fMZcetvNntks3w62b5fGZ4f2Z
sfQzO7CbEwDKYlqJtkA+BCCDe0qGA6IFaLAFmFXzfeveg0vAwWhwzL3zhj4Q
mP1osxHABvVCqFMK9WCjOrjGHby53wTre3n7m9lnlfwrUviOqv51S0u1UkUR
IWwJu7meBzCMKcYEEpQtEbPEIooMo0gxqlRMxUTkvlECFDlKl+MgA9dJsFq5
qFbC/3stCTVpaZouEwJNZEezRQppmv5CmgYj/+jJJvlnH6R/Jl33S1ISUlQY
WyysYFGKMD5ZjXJwooJS6DCV0ilv7BBL2xDpJx4Pqy5vZVK6+VRe0fOrexPO
bIg/vGb1leTk09sSV82a7eswta7gPf7efa2Xi6jVVUWv6dX5rTL+tw5pm5on
h6vIZe+LXj54eiv7xb2r5QW5uXcuHT+468H1i0cPZpzNOnLhzMkn9+49uP/o
5o2bF85lp+/ceejE9UNHLx47c/vIyZuHjl7fduBq0oHbMwO3mXvFz1ydOX/9
GY/15xfGZXtvOOe94dT8DZnLY6+EbbucmHVnx7nzu28c3Xk5Me3S6ocVu8Sf
Hzd8e4Go7vKwpzz+q94eafdnlUTE/VB8/9Dp3THbNm3efTQ980ZC8sXYmNPb
tl+4erPg3J03KUfP+Kxbc/T6+Zcfn2mZSX9po3vfdb6OX5Ckf9RYJ2q0ztv+
8WVdeokustw/fUWDSH+H8HSwoH2yWreJzn/+fztUVRjzf+Wl4Ir4v+VSX5o9
Q1P5BZP7wIQsQmr5LAKltrajtVOCyXkUhohd264iNYly2VVHqz/soL3doaIm
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
60921p84VW/YeL3hEwwmWOuNM4OG6EGjh0EjDAaPN4IMDKARf0ITRgy2shju
5DTGec4oh1lDraeOsnYZazRFb7iBySQTC4PxowYO1YMg/cHQ3jhrtCQCKCJA
wyLAswCwNYAtgMIW1NsBiQ1Qu4B6TyB1liltwCEIXDYB2R71FxeAuqWAgV9p
DmrHdGCTmmWmADYDdBvAcvuMzJNKZ4kx25bGCY31Bs2NBu1qw47GcR2qMa1i
vUZk2CdsXCdm2CwYr+JOVHPMFExLGctWypkMCNM/E/5SUyEZRa/rozl46gBe
GIPioeKK0d0Vs8FlF3DNDtw1UD0a2/p0Wev2FZsPGZw4NrDshflnwerv2OYe
OOyzKrBTFdai3NsgvihGrsKcu0pBaTci7BYS2rh3eDy1SCATCflijIahtZik
ViKqEaPViLASRSkSEUOM44mIqck8gWsw5KOmh6pmuWo6jeBg0oBrYXzF8shq
Ia3P6Oq+zjxSHg4mdFTTO4uiRDXt9fDlgesmJcbADxAOQVOF2rfH4TDCo1UI
GVUYl6hE6wRUjlqEdrcolAISk/ScR8lpgHGGT31yKeJ+9vKL+70upM6h5iXd
3uOdEWaZ4W+UkeSQnT4/53LE9axViatnbF03/8a5FC2YsMkVu5JjE+JDT59K
z8u79PrNjZcvLz368OptZdH7qtLbeQ8vP7xx6ca1E2fPXL1x5/nTV5cvXD98
4Pi1czee3X355NaLSydvpMSlm7p5eEfEpJy6mrDvZMim3W6BcS6+663dVrkF
JmdeLyMjP/hKIJKBehVobQEtreCruLNX2tmMNPe09TQp6hn0GjaXWFr1ARPz
a4nV5WUlAiaXXktSiRX0WuLZwwdn+AXbuS8NXLV/TczFqNgzKWlH9u7ffvfp
uf0n02O37vUPPmJutzktvfRdkUwLJv2dITp/iC6R/pfiPh21+G/xonPb6jgJ
/qOu1k+XnaK9jyb6g5/pa9Yk5ZHxnUItYjSJOXJN6/ifg076I8l/p5HgTEMu
qpNyxFI+VwMmSKUUqZILiTI+XSkQyLg8TdsKpEoqLJIjxUoRLnCYSh5fKmCL
2YiMLavnCxoEVSp+UZOg7hNWz6jGSSytq7EMZVySM7Ornq9ivveQUb2B3As0
BP9o9OlU2X9psAQtVkA9E2DBQJL0jRX7DV0LmqNbFYlc7sncnEtnDmdY+KdD
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
+GIVvTS0WRD0vcMbNEZ/k63pEq/6ol7xo3npt0YvoFoImhf/aHTqVJt0Npm0
NLtXEQIPn1wZt3Fz2q6jQRsr3fwvQ78HD7XcpWe/F7LYBFmvGeOyfqxT8Dg7
v7EWXuMmexsYe401mDdo6HToDwtosCk0eDz0x2hcvvw52HywnuHAkUP0Jowc
Nd4a+hOnIcMg6M+BA/X7mr7+NnrQSE8v6OqFYPDpPPgUDlTTgMj4i3zml0/L
QU8Y6FgEehY21Tt86ZwPeldLThqBY3PBuRm92RN7Ci3EtUNrCdDHEojHGE0t
Gs/IdyC9985/EfjseditnMibjzZcuxF9I3v1/uxtB05uzMjctOtQcsrendt2
HdqYkrU59WpkwuXIhCsRG26Exl4Jjr0SEHtleeyFgLjzEXGnQ2NPh0afCojL
9t14PmDD+dCY06ujTgdEnvXanDM78aVn2OXzuy+ClyfBVVdw4XeQ45d7wE9v
1vQtlzIYFdEAtf+C/YnV63PkdnKhby+yHUiufxO9a+SWyTgUlMfF8AfKZYl4
PBQ3Pk0krJQgJXIRQcKsaxDAzTBPxiaL+aUKcbVUVMfhktWiWoxTIRMSFHCt
UkBpENHVGEMOU0TsaoWIijFr6vG1x6HgJufTJJw6lYgn0fRMw1c4CwcTCQ8n
zPgeypby6RIuTQWz5SgLYVBgOk5UmFKErUSZXEqFkF0pFdaymEWFb29mZSY9
upWZezfz7tm0RxcPPr18hPrh/rNzR3bFhW5Z7XUo+djOhJ2xEYmR65JSd589
cPLpvOXJDr7J0xemLIi84B9/3zvyxpwV5+cGXFgQdHlF9BOvtcUOfvetPK6Y
epyzW3rNLvCC+ZKT9uFnJ/vumbXx9PIjD712nnXdmLE4/dTK7Jvh994Sy+ly
RY+koZMvVglRTKYQd3e0fPnc0aVSdigVzRJRE8xTsuqktEqMViym53cLWW1c
cgOHIGMSRfQqTUdZIRnmV7HZxQxeAZNV0tCiIDIZbd9ASR22MnI7NDEYGhdo
7LZz8PxkyHMHNCt1mNfx4U7b9BdsHLN8F+SXDjmEBWedfs94/0vSmi7XXZdG
8kuTE53rQ5c3os2x16ao6QBE64TRXq/LVNE5ZLS/iDBrtNEf3ZX4NQ0YS4H+
J8m5P5j0zyDqBya4OuZohrEKajVIguMJQpTymGIOQ8Zn4weahl1IrVxCUkhI
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
tA7Ax4bhtFk4H41h05gYPn+Iw+pCI2sREy1UKpzJhuO502tgsbS7RtFQGbb9
4Pe7lQ4oOv1+3n+7RswOzczfzhb/cvDu/vMp+wwKf71Y8avOo7Dkjtaunrdg
8q+ukrcLft/No74VQVua5d3sCnRwSxy9/ZC38S6x2YKUrTOlbPxb/HnbhSuf
y0yFyzsbIUUDwQhjc50vEwMFb3PNL5/xNtCbgeGz4HwGQsiaFTJnhBw0n4US
MghsJolFJ7Dp0JeFZjPgHCaSz0FzGFgWhCf0GSYDy6OxhWSujC6cZ3JlFKKE
NDXbnjbUFDTVa02ZMZVRzV+LLcGaKRBqPmcffSHaBzZ+e/P0K5kYtrb284vn
autztnikY2trcN6j29eSK+wCq87Ylp71eqIe26HhXviratwOpdgdSnHv7feA
7TbZpmC+T8dx+0mNb/ef/nDHQdiXf74PgckXBz/7dv+nXx/6HPbnZx99s+3b
z7/ftuPLT//a8cW57V+c+hB28CvYiQ9hP376PuyT9+SDQStyA9LvqXY02m6s
XgRPvUVYLTHtr+X53WD1LBCZAq7bi3l72Zr+wrrhPMJMnKIGMo3l63arYe55
VCXLy5YhVVbRCONwis/NtajMpYgUur7nE13/qgtBjXoR/fox46aXx20udVhd
qvcOG3aLHnSN7HUO73YN73aJ7HGKaLYIrrMIqjQNKjUNKDYNKDAMTL/o/9DA
J/WiX7J+UIlGaK5KdKF+UKWdW62tU5WBX6F6aLma/yOLkGx9z1vn/fK+tao5
5thqbRzVU1AJSn8Ajd+ANBh4EuXqknLmUn6X4LFAYseaVlilXQRS3WfcA8v0
0yvcoDV65iLmhpg1LWKNiGkINgnLIqFp1FEGp48n6OMwe5dFjHk2nzRNpU8x
l1lz6zyRjIzF4ogLsgUBj4sjoRksOhVStlSUZJ49vyzgCilMHoErJC6titgs
jJBP57KIQ6MtlbVZ7S0loyN1bc2FdTXptTWZeZmx3W2P2puzG59kVZYkV5Wm
DHQ9Hh9s6GzMbWxoGZ8Ym0Zg61r7U7Jrwq+WhN54HHu9wcj+hpZe+Dk195PK
llb2wd5+l+zdvOxcfJNj/etLs+7ER6YmJWTdu1mU9rClorKpvKzjSW19cUlx
ekZZZnZ9SWFvQx1mbERCpz+VMcGzhRdz/FdL7DfropdrTPCcvzJHfrpMmBcj
VhawKwuY50vYl2sECX+czR5bp3YvUQf4yCYRvoOPaaNMt7EwPRRcH4sCJ+Jm
CIRZHBFLIFMJNBqaQUdSaRQZncjhYmjzGIIEhSFTiBNsdheX3EhAlMGHSumE
dsRsNZHZI1pFtk6VBya42riFhETciosv9A7NNPbKMnSttrBrjg4cjQzv8oke
cY7DukaPZ5XMjPcM/uNOj3pXcWxhxbstZ2+h493sx7vIAMHCFqS8feldMHm3
KLwFU29F0Fsi9H8EadM2XD6mkyYvFovoUKCh2LT/lfcaCWlbgYZCJB9ePMOT
q2O4kIXgyWEHz6RDuIHjMnEMBoYpLwpgWSwMh4PjMbFsOp5Jk3dLcihYIZO6
yBUtsahsVB1uLIE064UYsuBiHKUk09dCo2WW4huJyjrzLKDqLFP3boi3LUtg
83MfAaDwBuixuCZ11WZJV7yCQ+9HJfY4hPSdd607YNf8vVGLXkCOTnDpLp2r
h41TvzkZBvvT8utjtod0vX48rvfNfpWPfzj2wRcKH3/+92dfH/rq2+Ofbzv0
8ac7P/j8069/+OKb7b9++/XJn7Zpf/exGgz2+/uwA9ve++XU0e+MdGDKp2Gr
ovv4GWc2zQdw1YDInkdQfv5C6yVQAs91AccEMK2ei/QAsN2QeVAenX11TwWk
nwXVp0AN7Bvbib+t861ix1XdeswjscGp0ohMwbXCObv4Kf2wybOek0res1rB
hIuBs6Z+A5ZeHSYBg2YBQ0Y+/Qbe7Re9W0xD2g18GzRcy3Q9itQ98jS889U9
09Q8Hyi53VfyuqfklazvmK/snXMu4KGWR66pTbGJZZG2Zf5ptyxF9wx1p/v6
9qnajsUnnJ98o35H17/mtGcHqNcAmd+Dyh0gXZ1WW61l4nG17HpVvweW4Pxc
Zg9e6wHRLwuYP5aJ7svMZCn5uojRK2H0CwmTDDSWMIvFYpAsFlIqRXK4o3z2
FIMwS5xG4CcQTCxWQIUY8qiYwQAvXyyL2WTUGIsOpxJG8Pih5SXysw2WWIzm
Mic5zImn8zQqbpBFHKDC28uqGoNDI2KiI/PyslJTbt29eyM388Htm4lXE6Pu
3ohPiI20sTBUVz5tYWQU6u8T5u8WHnwjPubujZt5AcH3bNyvq5pEGLvc1rW7
/tcp98Nn3VR1vPRMA9LzmmdQVBSeNjCJoU2NrYvEiKFhHonExxOnuntok1Mc
JJwwMsJBzcwzcOt88jMRbYWHWWBOb4gwazLxswXJZt1KPg8IC+/j0makXAyL
MUsn9AlZEyLuhJAzzWGMEhFtNFwXbmKWjsIxUGgaFoNHTJBRE2wmhkSapVEQ
BOoUBj8Gx/UjcIM4xhSRPUHgTjKp0wT8GHJ2eHyovb+rdqCnbGSouKszs68p
q7r0bl/747xHqTV1FX3Do609w9llTxLTKrLzegoeDaY8bElMaYhKaggNqLyX
UJOcVBISk+seXRuc0JaX39LfUr/lTr8lUrZ0x5Zs2cKWf4mXf7k4vpU/Wy/x
37F2fFfUvNsQu/VR3P/f8zLeEph360pbnyP6ZxLHfzEoIlzIgIuZSAEbIZSz
FJSYQ+Sy8EwqikGC83gkJhNDIc+yqCgeE8dnEyQiJoeGImG7GLSeFSFxhc9e
ZE3T0de7W45gkAcENNUVjhmAOMlzvXnaT29kp1+KtQDbEbBPvZb8/Grhl3nJ
wbUlfRbNpLfdIND3jJN9kIN1iVton65b0Unn3D9tnpwJ43indBlHN+w1Tj1s
mPndqaSv/w7+6UTgcZ1Lvyi47Dhg9cVP2h98efaDT459/OnxbV8d+2bbsQ+2
bf/gq08++f7L7Tv3fv3lqW2fKn33sSoMdgAG26vw2+Hse+YMgmvD4x0ARABw
5/maP8ApA7oVD39BvKq1AUw2Xhi/EZoBvv6z+fMv5015nbqrmRog8XdQpgiG
HAs83v/bY1jXI1/b8aGhZ565X4muS4aRS6ZPbKt7bK+xf+sp+/ozTp0anmNa
bh0a5hX61k+UvavOu1Uo2uefhkDAPu9vq3RF+6xT7rkn3TMU3aBIPeWWdsrj
wSmPlJNu9064JavaZSraPjhkn6TgcEXd6tYFi8zzlrkHrR8edLx3yva+vm3p
Bcv846b3D9te/Tuo4NvI6TZf/RdNfqDgV1DwG2gOyfA2N3I2tY7VLay5SEVr
vJCoPOMfXsYdego3fc6OFTJjn4s756h1Qvw4F0liwsVckoxHY5DJEwhkC5nQ
zqSOsgkzuOlB9FQ7YroOPlOAm+ghzXZQ4J2o8SYWtlfIGMdMNuFn6rBTjVMD
j2nYjmUBnIJu62/Kqy+9VZNzKSDyUVjUw9DI5CtJ6UF+V4KCEx4kP0q6es/L
Ldjays3ayP6nb/+Awb749ccDv35/4I+fD/y2U+WX7ee+/OJv2AcHYe/9Bfvs
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
WwGyHmDqALGmVPJccq12dKZ5InoB+D+Ck5/B4VMg/r4ezKxvJlIS5UHZA1D3
e9D37HKuwFbHQ96l/rvAdr30zrB3vTGpnR4xveZR06rBizo2ECXTUXX7rpcO
eQqOb1R9k164Rz+wi1HyL3toVybv1W0ctZjYKvQrQnhkLnhkjTslLTi/mXdL
W5QNn5w1v9x1l4wV26RZ++Q5+5Q5p/QFp+Qlx+RF59Tlf8HENWXd4c2sXcK0
ZczU6+hRk8hRo6gB48gBrZAu7ZBundAevfB+2VE9oF3Dv10/oOOr+K4/aGQa
O7SkvN1xTRjScq1Uce/QjF/6LnT8Pw3iTPStwFYxqP8WtHwOZuxJCZqfKTbH
5FTDdwvxWzacbV02QuP4UJnF+/yY98M10QSgM0/o4/zjXebVDl+4JsZMo6Fd
WOQADb/AZCIYXBqNzULS2bskOoxGhLPxaC4exYCiGVt45iaJuUVmrQjQODGR
KCGTuDg0h4TYZ5EEbBlBdnhsJIcLYzI2sOhpKHIYjh2CobuXd+thY5Obo10b
oxVrs+Wrs5WLY7ULo13LU/M7S3tjg1O93cPTU/OTs5sFRSN+PrU+ru2+0aWp
74ZTSkYz6qejS4fDS/qSmuZCSofumgT/U8PbLKBCwybXyqfqF6WIr3/wfPks
Q90k0C+qPjlroKRsvrVtfWgAgtnjXRwAJoF7ypPKVqkTMetMzLptX0iEkXA7
LEjdjWAVXCAPWes00hxTNlP4BNahaItI9s1698TO755duEpw2c+uMphUKoVU
P0yYfJAw/HPy0M9pY/fTp1Sy5vTTZy1SFrVCep/7NT0LalRO6fkysPgz55S/
OKXr5HX5Nsyrpg89Sh3++U3P39wr/uBZo5ILC+g/dqnm3gtalzMclHv5Piy9
B7m29msNWKjwtjoZ7DYxjLzLp+1xydDbikMypBCgHApEwICJWEgJDy5iQ/lM
CPe2OdptSpuAhtynYgQkqJC8JyDC+ESoiLT3a1xrh4qB3MY6iHsMzA6duMWm
7HJlUKKheLcBFhSbgpANDhXJpaJZZCiPJBMkcBlJZCJESN/lMwkCOoFLkfmj
20gOn4GTgYtLhwtZMB5dhpGtW0NEh/GZCNljZO6MK2ymUNpx2D4uE3IkZnJJ
XOIuT4wDn4TgnAb4cDp6pWtjImh9/iUOc4cj+fpE8Merw7sfRCrnFJMLugdg
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
2vND0Nz9ZORvHOflbFd+54F5kvcpqBzo54AHcfvaRfuGVVSTeopRLT506NS1
kv08Gi+nNy33eaxvfBds4RYmLCydT6ILKSwxkyNmcAU0OhNPosPhMm4ccTmX
+4dnQrGEyeOSmVwyQ8DgH9LQMgXCxkBoiE0Oal1I2L1lCx0ODqg3QqqUiZUw
UYdM3O3mHSpyn0bisnc4NDiLssuW+SYmTsQjCNlEER0v0xWc2xtAaA4FwWMi
+NTbctAC5jaLQGATMWyS7AFEHpUk44ngdv8CgkXe4VIhHPomj7kjvNVIO2zq
Opu4TsQTGBSGmM3hM2n7HMrFCf7iaFPC64BvxS1OuKxPW2K2HBhouyO69TnP
TEhT+yjQBkJ9cGoKLpXA8Rdngv+52r8HbkI4qPjtmaKhvsbSkk6fkBaf6GW3
sF0b9yXNmDn9N1t6KbsPg3rU3gzYv192zF6771CqG9VjGDOs4dnu7NVXV7tB
o7IBuATg4PTk8ORYyuOLuFzRiVSGEnAhBdsLVOg8Y32S2lsx3lhU0VGZ1lLt
1lJrPNjrz8T+bv/ivgD8KLh+dsaxAegQQAkDbAfwyfhM9Bcg+Hdw8CXYf8VD
21BAQ4mkDCQ85lQofOhTBQ3fgH7dJi+d740zv41iaMTgvJP67bNKdZMrNALr
1a3rlW17nwetmAeMOCQsO79Zso0bfx3dZ53Yb5s4YB7bbxAxYJEwZflmzjxu
0iCg2z93+W0HKTRryjJy0CK028i/xSSwzSy0yzysU9+vTdW5WserSdujXtWr
Xt27Qdu/RcuvWdOnQc27Wtu1T82pQ8ezXcunV8O7Tdm5TtmtSWZnjKOHNQM6
1H1b1f3btYO6DML7TaKH9SLGnf1yNBxrlKx7DTwnzEMnbeI3XkevmPh2GnhV
qIdMfO40/4VOtaGiEkBEg8b/Bm1yYOzuXEGQonq2VkBLeHHA8Jj5zX4im/J6
X/gjOPhfQPtaumHEgqVLpFNn+xApeQpLkfKFkoNjIY9HIONXaeg5IXr1FLoL
oBiwTQBYKcAdXiFE5AUMFUGjkw6n5/LW1+o62jPmFtuWVvumZrrX4csQDHoF
gqHyrkkcML4oqmjAJufvBEbOurlNWGZVhFTOeOXP+BWtJNRvJTTNeRYU/2Cm
8aOhooqjtXlAqE1InKal80MNRV0HDRN/JR/7UHszNxtLbxuLwG+/1/j3/3kk
/9JN2zTaN6KksWMOSz5AYgl4GlIgRDPZG1TyOJEIZzCQ+wKCRITj0XdIiFk6
YmGfDhETN5jwWcrWJG1jmL41zIL2HxKmb+jrVP4KHjcFgfbB92ZJNCiKhtxG
oLbJ7Nk9VuT7PiW7jFceFbJrrRoy+dxj4Llz4x03yX0/5ne+hL96rH7hPf1T
8KRGzo5HC90we14hvud+TPfduL7feVZ9EdbzbeyYQvFezOCNcRX1y4hJ+bcL
DkO4eNiJ0xDJuhZq9m7rQcSanOmA3BeBPgmy6bbza0FpEo9C41HIAhpZQiUc
0En7dJl5QXHxexwSTkDFCak4BgFPReHoaAKLQDti4oQyUYHaou6tk/eWeZjt
AyrshImS3BqWbRERfsC83TVz2y2agt5nkY8kOIkAJWShBCyMkE0QsUgy58K5
3R5IENLxMgnEp6FvO2TRdwW3YmOFS8LzKEQOEc0m4rlk2bns5eE4RNRtti11
W2a7OLRNLm2LS9vmysDCWMbBBQLWyeX+JzFVyMDt3JzCwMdRET95sPfeaO+X
26sPRDT9E87rD0KZFHG44pkCUdAnhus1Qw9I7oLr/wLgt1LJP7lk16XB9yVZ
bakJq7HRCAvXWYfwHQ3HUUOvMat322ZZSI0kqGL0tOnbLf9yilUM5G/K71Tc
G4LKlt+UbhSVb22v48GHQxk2AOAcHx+fnpwIhXw2g88X7R8enJMozMXF3crC
tq7qge7q1u7qwo6q0KEWG+iqHQ0TLaLLHV3/lxD8nXmlfMTzAeQ0QEkCXA+w
r33D/iug/QawvgA8K+h6xCiiwak3B2Q8BbXfgsbfgQEVakvyT4/1fnapNopG
xObt+2RuaSVV/hya9sK/3SJgzyIKqpk0ZBzaZZUwbpsssxJjJqHDv6a/jqr7
9qr79OgF9+kE92kHNOsH1LgljwRlTTtFtugHtpoEt2l6VCk5FCo7Fml51L1y
LH9kki1v9U7esuC51Xtl+1J1lypt91pVrxpVn0o1hzZdj24jny4drw4lu5qX
NiUqrg3God3m0UNqng2aXk1qvs2qPo0G4d0W8RN6EX1qNoW6rg0aHl1qbl1m
Pn02/gOGHp0KtvV6oYNmkaOGYVM/2vTJPQzLz8sB8xagTu52LGe7OFf9VaNe
wSk9JstjdyeGw3Yhc77kCeVO+HJX1D8fsUwPBO/43DEBZWSQwNjikzCHGKRk
G8NbZHCmJZzZC9YsIM/uL/YwpzuxQw0z3WW19SmlzWnF7W9r2yPHpks6hoqn
V9oGJprKGsvqOroqGgZi05qyixZi0metXdrUDeoU1BsUVVrUlHv/blN837X7
O6sOZZ9prYhJleAinaRk5RB7BV8z/+K00uGBltm1sq7RotbGvrnGQUjNUu9g
W2l5e3lVW21rcmxCqH9UfnZZRXnTwtwaEo4TcEVEPAKL2CbhtlmkbR5pg4S6
LaxPxVOoaBxpb5cM32Ghd/i4PSF6l43Ypu3M0yDT5K0pKnRUhJg+Jc1zyEsk
+BQRtSRko9gszPra/AJknXt0CeOcJ9UMqXu81YlqssyaMkieV4sfVYzpveND
uhuO+ykC+YXv4p89R/7pMfBzRJ9WzoxJ8ax6SuvzhCr5hKJ70Xka7+vVCuu0
S5tCZ5cf5dbKmQb9j0+GfsNc7I7UvgOtkz+hkzbyc3CfnFWj3FeuXhk1e7Bt
GUykLOI+FX1b/Ru9ziVtHLBhZyLU9RGKg1/G7o3ubY1Ct4ZJqDU+EyvikAVs
Mg29xcDv8YhQAQUpJMG4uF0WboOKXKYhV5jYdQFpT8xG82goGnabjN1hU9Bc
7h6TsUul7Ny2v6GjhUyCgEnmMYhCOolPxcqUCZeC5N9GVqFcmX+hb7LpBA4D
I7M/HBqWTcVzaAQ2VTawXCaaS0dxWVAOY5dF25QNDn1LyNkU8mksBo7PkBkc
Mv22fdIii1QLhwRurmjtbr3kEJSuDgw+HhgCqQ440gL7Tz/SQgEzGLDcLzmq
J+I7H0/vivm6OGhsdUlOdERJQESHY1CnukOtfdzCC9dG/YBu1egBwzSIST7Z
rABhkb1hFbtj4g1RtOr2fbvcvMQaWucsLpGP9/d/JcnRyTnn6GRfcsAX7AuF
QglPfIij0cYnplpam7MykmorCztr3zWVBbeVW6+NmHExdse0ICD+/cX5Fwfg
B/4HRanU9pLjd0lxBlzbG6rJB8Tjo5VvGfMv4PN+1RVeyekWoZW2oMIGVH0G
yuTAtKuzZ9L/OHc9ixzzC+nOiIP4pEAU0ru+CMj+3rZRzwNqHbVpkdqoGtqo
Hlyr7Nuk5tOt6TOg7j2q5jX8ynNI1atHP2BA3adN063cJLhF161UxSbbOaTZ
Jm7guXXu1yoxP2gkPjPPfWGR9/R17nOrfPnXb+Ut3j57nfvMNl/RsVDFuUTZ
qUjBMU/BrEbDqUHbpUXZoUrBpljduVbNtVLFuVjFqVjRuUQ/sEkvuFHBuUzJ
tdwwpFn2h+TDMZZhI57+75z8a62iJ41CF184Vt83yNVybbL07vR4s/CNfb+c
ef9/PPcltobIZAmo//9A43PWXM3DJ3ZPVJMCIxOLi43xBHsiVo+FUT4hffeB
9udPtF8uKM4sQjIREbkpvYbt0zbpkDXsDJQwS6Mv8emLp5Q58d4Qc74eOlQy
3ZqTn+oSFmmRnOdZ1Bk/vNzfMlyTX5GeWZxR0FCVW1UdmZ5naOP3RNNKXtPt
vpL1j/J2Pzx1+PqBzdcPrO89c1ayT9J2Lnig8+axYdYzw8wnJlH2kVlBqTkN
Q+OrcDqOdEVCfkCscHHr5AMq80pAuqRjidtzPPzumZgkoqM4ZPg+n3CyzzoR
s4QsEouCPWDSuCQCG4MXEql8PIXPpAgYdNkUQ0FXsLtLjF8rSxNgWyTULgeL
kVAoIhJZgEGRtlawK9O41UnmzhxhZYwGmRUS4CIaZm9zY2FlFc8QbhN4Ee9b
X3mmGifV25ZMGOaOKaUMPItu+jps6Je40V9iR74Nb//Cq+GPjuV/dCn93KPy
flDzy/BO7Te9mimd973fKseUKb4pNyrosmxqkc+u/TyyXqNy22NYFDJ6bVFK
sSlFmWXO/+DVJGecJ/eZrnNsFmRz+vaOAxsjYcGFVAiXvMqlzvMZc3z6NJc6
vc9eEPNWj8S7EuEej7PLZ8LFbLxIRD4RUU8lrDMx/eKA/UnKuj6gnAuJx1zc
ARN5KMCdigjnUvqhkCJkohgUFJOCZdEhNPImhbRNo8L+FXTlM4hcGo5BRjPx
e0winE2Gc2k7MpgI2bsiziaTvMeSkYeKui3GSCMJGUwRkyVkU8VsqkRAFnMJ
XOYui7rDZUAFbPg+D351RcHj50mY9etTzscLFh03ujAaN9plxiYF8AjmQpLm
IUP1RqgCJEof+fduOF+eEC2PKbYf2O6nZKsjhjE4CpQKcpHbLalpyU5+/q5R
sW6ZJXZvWo3jhh64Veol9uqlTRimbaonb1mU7drkL9nErRq5Lhg4jiZVb6xQ
pHjeOZst/TUyIv10ypK9Wq4YJzngffp0u51PJLmeW90qrCwprcmprMvo6kjv
bAxvLno90KhNXrOSUqwPyTaAY3IuUD2+kD/7pHp9ZXQh1TjgKYMTW8DxuoT5
MOfddqfiJ4ZL42Ps0v1/go1rgDp7UPYPMPV4t9TpP9TjPs+km72D578dS44Y
dIiafxjZ/jfXd19ZylzJpkcmwu99r2biqHJAy2OnypeuTSoeXa/cepXdenW8
hhQcm1Q92186Vj8zz1e2f3/nZdDfHrha+ZRFFm7/opv871/bfaMZq+pSKmPI
C8s844AmDbcK2bfqruVa7pV63rV6/vU6fvVa/tXGru1mXl3aXg0arpUGPs0W
QW0qjkVfq8bc1Yt/aZdrEdZpGd+n6ln+yDxHybXodVT9y4xLg5BOO4dQV893
dsmrGsm78u41T3USjCxKg6LnTYNGlBI35Mw7/o9Glq2u2dV8G2j8EpT8Bmxp
rubY2jy383KPDYlW29zwk1IqTzCNl3vR0vWfLtb/CNBqVxQ3EdF2A0dY2RqZ
XehemO7bXhiHL00jpqdgU4OIqRHK6jQTsrg+0ZUa6+Xl9jozO3x+um0SRSjr
6kkrq/GJS0sprM+t6/WMzXygafaXe8++f/5K0cTMLigwKjs+JDXYJ9EzMN03
Pjw0IyvD3sbp2TOlH+89V1e3rigZ2lhj7bN+/RTIxuFtuuIN9uQD4fASztgn
r7Lxy1cCIrjigyvWtYR6JEBfnjDAlYhP24NvzQuYRDYWT0VgaCgcFYlnkdb4
jE0qaR6LHCfj5gWsbSYLQkKvY6HrRPQuHYdh4qlUFJaOQDJQCBYezYdBjoko
MRpB3d2i7cnIQ2VQ2IL96xUM3T+57JGZv0Zovm5i7auYOoX4Rvmo2qcZ9a9y
mtUzmlWTml696Xme0P0sfkghYep53Jh6wqJJ8pZxzMp3ltXPvHpV46Ycqsle
TcuWNUjTenbMDEieAWE9wDCN6piNlsnaO5aFctoZcr9Tdo1OxW7d1oDlk5Bi
Kn6fiRIx9/YZECF5mU4YJ8AH+JRZqRByc4q7PKTwGFAqepuAhpGwMrWwQyft
0rAbJOQ6Db3GwK0x8Rts4iYdu8rErtHxq0wShMvBivcpBwccsYjFYe5y2Xts
JoLNQjPpMimC5VAJXBqBScb8CpPbRlrc20Q1KI+5zWeuM6gQFg1yG2ORYZyG
E7BkXGII6Ix9LvOAR9nnk0VsPIcKlz2Gx4RJBPB9EYdEQMl+24dzHrims4nN
q3M+82N6PKb9tcT+lGskIaoCoTE4MAc8LcBTP+NpHFNeXfF0Poh0z0TmN4eJ
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
/AQGN8jYrRWTp2jwWTJs7YDDEIoJZNoqhjmLIE8gqPMw9CoCv8tg0dg8Eo26
S2WvsJBwGgLCQEHpmD0idJsM2yHt7qFXN/C7ENwWjLSLxG/vbSyuLUwsjvaP
tzS3NWTUFMS8q86vneyc7qjrz80pS08pzClsjI4v1rTwfazlclfd9YF+wNev
vJ+ZJby0THrh+VbZJ+eJa/pj1zwVn7JXfo2KbrWKbg0/mhTfe12q4NapGzb+
0qX1a+3cnw2LXzl3O6ZPvR8/Lp46zR89K1sC+SMXSa1U3/wVk+BSA8cIW49Q
dS29yKTEidl52SwQUhFi2t4ZFXVB3TsnQg8oq2zaPJ02LzjZOrjAnVywrj4d
n30AwgPAlQKaFAj5gC0EJM4FmnlIEEuIh4e0kyPhB8C9ui0AdHINPnwAfAaJ
S4ExCYtHvG0REcEhbEkoEC56VkRfEVMXecQVIQfOZ+M41Ns6vSwinUUg8Sgk
IQXNw6H3WasiytY+dVdE3eHebuTBCmgEEZ3CZ5K5tNtgi4hNFHBue46wyBtc
6o5YSDgQ4s8lCA61Bb8Xgdo0xm6/OGJpf9o3AWy9G6YOEJmBfbNr3gtw9PON
6C8fjv8POH96uu/46SCbuJMw0hsXk5/+3D1XOXDSNHLFNnja2KvLIGJELWLU
Lh9qnQVRj+1W8mvTDhjR9ehWs66z9ugoKIavbQh/zXWlnN5sHUoZHy8BGX3y
608keOE2ZG9ucnpkemxqoLmvubSqteJdT0NUX7PNWK8ifFvxQKBzI9W+5Chf
01QAQ0PMdwfnluDq1cdjdSC2ATw7wDMHxz5rqNjUrirL9N7nZjHxoZ6H40Gg
5d5tltry04YAdXe/GdsKoFFK1E0qcQ0v8Qhae2E29sB3SD27w+H9eFAuwSeO
ahO1+Co475FV8wPLup/Mi78xePeNQe43BgU/mb//2bromVPtC5cqDc+6V+41
+j4tnmlTrikTZr6tWsEtTpnTeiFtys4Vjy0LVNyqtH2b9AJa1dxr1H3qVdyr
VT2qtYJaDcK79EM79SN7VIPrzRMHbdLGX8f3W0S0mQW3WIU2Ocf1OIW3W/k0
KZlkPtRIfKyT9tIoW822XM+pWs2xRsevWTO4Uye23zR7wTZnziS8x9izxtSl
UME65blVilZYjWlyr3Z4l4Jn+32fKS3jykg7R7BmBZpl+uS315OJwX4x8kbh
Gk5RPlEZtZXVZHgJOHMS4/7tAv8nwNKQHjkz8CbbM8YDTXaVhb4V1WW1rYsj
29KyQdK77r281pnihoHU0qrAxExD++C7qm7qD396pqL50MZX7q6Z3D3PF8YJ
KUnvS/MKzg8ubz4AGueGL1vxjwR8JupAxBYI+Vf0vSPSrpS880GCPT7YETCX
pNK94ws6ibyNI0CJWCiBsMciQvkMmVtfYVAWhPgJKXOFgVrFwdaENCKNgtyD
z2xBR9DkRZYAxuQS8AQkCgMlE/eoVBibvc2nohlYGAmxRUFsM26DAEgGHkbY
W6eR0TKtzqJh9yArM2N9Az2d9dUVGZlvkry9ksJDchJispKi48LCA3y9ndxc
bZw9nQOiDJz99RxCVexDdb3eaHinGocWGfnnqATW60Q0vPKvUnAveRVQpxna
quLdpOLd8qVmxt9Uk7/Uyr2jm/1n5aT/ehL5t1dp3xuWeBctl8xLq9dvyubO
CialkQ04t6xF/aAay7Dq2OL+xoGl1sG58fnV6em52705TKyIijljkz9y6Vcs
yj4JxaDA6Vy04JJNF1E4hxL+/gco6mB6QzS+cTq0eTGx+Glw/rS6j5nfAC/q
QNaOENtmqQMbvGXUyS7+HEc5P5ACAftQxJLQ4VgaDH3I2Dui7XGwy2LypoA0
xyYs8ShrQiacQYSTcUgaDs8i4AVkmoRKOqASZUchdUtIgHGJOzzC3u1eITKa
TcQwSDgB8zbQzaNT2FSchEU62WcdiThCJpnH3qUTN1nEGTKmBgeLIu5Zs1Ca
F0J9cGZ5TFG6oGsCkS3gGgOp/gfh4yvWNyenv7++VuMwHXDQuK6qkJyUaJew
fHXvTqNYlGkk1joAbu6/bZmE1ojaMM9AGyfBlCPqtaN6TWLHVZzK9V2rUwoh
EAT4V7+2c0CUXkMvb/emAi7tNpX+XEIZXe1vaC+prStsbaqoKSmsL86Z6CpY
nkhanXWCbxvw2dqfLvTAld4nqRrg6QCBxcGx/OmJ3vWh5Qeu5g1D/Zxmw0FZ
Y7etazpcX6c3f+2N/MvTTFhNEJj65+1N0qY/zvYWOZo5Bb+nmVcdqb/fUg8r
sPQutfea1nfbNEjdMcubMU/tMw8Zc4yC6gRPPAqsUHRrf+bcJO/U+NSh5rlz
g7xHvaZ/l2GUbPrPO6TNeeStu6RNu2fOB+dtBOZvuMZNGoT2GIf3GYa3W0T2
vHQo1vCq0Q9seWKVr+BQouJZpehSruxaoR3cZhrTbxbTbxLRa/ZmwDFz2uXt
jHPGlHvamHPCoENsp0tCn1figF/SmHN4l6rluy8f+915Hiqvn6pmUfjS+r2a
U/ULjyoF/xadmIHXSTPOiWOe8WNWgc3KNlmPXqeoB9SYJvbrRvbc5tBGT34X
ffP3O/JgUB90/REUfwfGAkWDmbZ66k/0Y/UDRzzDi0d7oyg4g1O+AhA/A/SH
HySaRzRlIPRCT3rX5vlmJrwPjhqMKaQF5rB8somWYRP6LlV2frWRqd1Bye2u
0T0Wr+6GJnrbvo9VykrRe1dfvkCaWUWT8Ejw6faCkulCEo3F4SHpxGUBmcTC
H54Q9g4pmAMm+kyE41G3ScQ5vmBPIsTicdt4/A4Buyv7YHNpezzWDp+9IaAt
S+krJ4wdDm6TAN/mkrEM/B4UurQDGUNhlrkCFF9MxaG3obtLaPgGBbNJwa0y
KVAaaQuLXEfBltgUOJkEg0OXkXsrKNQaFrNJJEDg0MXZpcGhsdbWzorS2pzm
8uyxnqqe5sLi/JSCd2llpQWZeTnBsQnRaW+Ti2szq3uC37ZElQ8EF/SEFg4F
5fc4v113zVk0ix1W8ap/6Vr3wqXmiUP5E7vab4yy/6Gd9qdXiZ8pxfxeIewz
xag7BsnfGmfbpXaGlq/5vJ+zSRwyDmnQ868xj2p0iWuKLRwZ36QgqAf7558o
FGZjQ9NtAJaBZZIxIiLxlMY8ojGFNDqXLRSdX6+jiZ0zm439G1klY44BVVb+
TY4R47bR46+DIEae0/IWjXe1y19aNeh6DRgH9Zr7d9qFtQal9CflDrd2ru2u
Mz5IwRnvAwnKP2GjjzlY6u7CEQvOQc/wMHMHbMghE0mEb5GQO2QEkkUgStjM
fSpJTMYdMUgCEpqLQ9LxCAb2Nj+WR0OzKbKBFTCJUiGPQyPjoFtMAg5cHn86
PZR5TzJ6BI8YIsPboCsJ6HXPA4bjhdAUHOp/EqgekZ4BtqFsoT/CK4Fzixv+
Eyn284ODz88+aKBwNqO9QakRAcE+uSbujbqhK0apdKMQmmkAzTqM5ZguUo3c
0YpdV/Cb0ItrDq7eLpnmRJfOJ5Utjq8enp79376PgkO46BB2c8P9CC6lokNw
c4HYnqtprsx9n15Vkd/ZVlJbGNNRFQ9bKWDjckkI932hzYcz/Y8nCteHj8GR
2m1MmG91cnZPwte+4Nh8pGrd4F4ckQzWN4zK2jQCMp1M40c/017wDhkFC3Gg
Sg40/wY0f6MWteGXs26aDVVI31RPG9GNqNaxLtO16vFO5/hUco0zFl/5Nchb
lBkGTSoH9v0U1GoYOm4aO2GZNGeZOGeSNGuZNmedsWiVvuSau+b+btuvCOKS
veSWsWibNOWRsWIdP6TgXPGdfppH5oJTypSqe626Z72Wb/NPRlkKjpXKzmUK
rmVa/o3m0b1mcYNmsQPWSePueQu+ZWs+xas+eYu+b2e90qec4rtdIjq9kgZC
MmZDM2fNfZq+kg+8qxTzs3r8PdWkuxpxj81zHzmUPnAuUvFvM4kb88hYeFOG
8E4cNXAvf26dox7YoBPZqhrQrOHTbBE78n0WeO7V6GWhBtYSQd1TUPkl6HuF
qAj+Si36rxbLyvYtod4GncV/vpKogTOjg+2HjOXPAEUZfIo+2wtpynJyMnF+
phz/lVLxPbP+Hyx7//gq//dPk14Y5/vEDdX1UZYQAC0SVPdXoWi9XOkU94oD
FQMJANjTayJzXcpcZewuk3ehFMIuHD1LwiCJuxwGDCYg4PlYhJCCJCEXsfB5
Pm2HQ0OScTtMIoJHxnCo6NtSyfgtDmmBRZoWU2H7NBgLt03DQnkUDIuEwWGg
ONw2DrvFoKOYFBQevUPFQakECAG+Cluf4jCxByIql4lmkGFcDp5AWF9fH97Z
nR4YqO3pqRwdbpya7x6bahsYrh+ZaJ5Z7F5fGIZszg30NJWW5LW3to+MT3b0
Tde1jxfVTZQ0LxTUr0W8HU8qXfbLnvHPnY8t3XDNgblkbuoFDzw0K/1aK/sn
3aynlqVq7g12sSO20YOW0V3mUW3mEc12cV32aX02yQPW0cXeOb3+74YDcgd8
M/tCcgfSa+ZKulZHVylo5jGOzmcLRDsQaHFh3m0GLJtII6KoaCQfSxJTxGLm
kYh3JbkAa9jjiu7dkOxhVcu8vz0M/V4j755p7U8mdV9o9f1JsVHu59zfPHr/
pV7nQ7uRXyyav9cr/E4zRcP2ralLTnhCdWv7kkQALvYBHXsuZUClDBwBMn8k
U3GoJSFh5YiD4JN3KOhNJgZFxSE5JPIhlyMiEZjIXZHsMjGwXBKaQ7jNjBUz
cfs8/AGfKuYSeDTsPpfMp2DJKCgTjzzgUqQsGgtLIO11wFYqUGtZ0BV3AsT4
XGgCjnXAhTIQKdwwlIHkNRBaiRDPgET7kv7omPg59+Q76Uc9JNmrqz8xOjjN
xbVR06FDIXhKIWZTIxT9OkJolyC1fCN64jOrHDb9zLP/dWJL3ihhmQdaFrGj
yzQK5/81kQUnp1ShGCM+JJ9IWdfn4uuL47mpweKyqveFBZ2dleODFa1lIR11
HvidlEN2EhlleXloBT5oSXk/COnfAKkqOHsNeDanh1pSpuYF2RCQtAFD/Uxg
MrCrF9hoZpufrOZQovEyZn9sEnQagqo/gWEDkPBPOSdx/CTQy958HNasFFBl
5NWgYVatbt3pX8ALrBYaJywpuTXJWxQZBfe8DOm5F9Jn4N9vm7jonLNqkzJn
mT5vn7Nqn71iFDduFD9pnTJjk7FgmTRt+2ZOJ7jPLXPB/s3UM7uy397zjqvG
WsWMKTvXPLMp0/JuU3GrVvdueOVep+ndbBXd75A6aRU3aB0/7Jm14Fu+FlwJ
CSxc98yd8X87550x5hjfbRfc4hnTG5w+EZW1aOVd/6V84AONNz8qRn/9OOiO
UsQLi1xVzxoV3yb1wBbT0CHv9MX0anRI5pyRW92T11kvPct0QztUA5vVA9pN
I3s0w+ZfvKHKabfHphWCTffb+HOZHJgJt/RLkHtV8/D1iIONR1n2P8658uDS
no/0Z4/8FbBeg31fwIxrzTNVfnL/J3n7L1Ri5R4Hy71K/F/NpC+1Mx6Z5Jl5
1FW2IlmS/9cReA+AESAYEYuk82wwzjxepS7yyf1S2Ooxgikhi2hUPIuM5+C4
fAxJQmWwCDJZgqFjtpnY3UO2zHTj6BiokEKUsOjHLCqPCKdhlumoGSZ2koeF
82VYwEMZOCiTAKcRMLLZwKQSGGSZ5UHQCbclUsVctJAOp9wmgq6I2ORjEYtL
QbOICImASkRtTw93Dg+1tTaXt7WUdbRWtLWXNzUVdXdVTU92Ls31lJaXvHuf
GxwW7ursExAUHRabnZBalVs6HJPSYe9TrGWZ+9Io19il4YlRobpttUvUpF3c
im30nJZH1y9GBV+rpP2slaXlVOkUOxr3bjW1ciu7diulfj2lZim9dSGzdSGh
dSnufUtqzVBJ93L96Hb7NGpolTyzTd1GcvCsfQb/kMnl0RjUzfWVluoK2btI
5xBoZAwNjeYSaAc0yQHviisAzAPA+QjaFwVhecuKttX3dCpeOk88dBj7xWn0
G/uZL8yH/lun8x8mQ498Vl4Grz/2GPnZvk7Nr8UosMo8MD/uXcf4HPr8Glyf
ASbjnI+HszAwJmJLSIFS4fM8wpqUhWSiV6nobR4ZzcAj6Hi0lMs7oJDYaPQ+
Hs+hITg0KJsMZdMhfBaUx90T8NF8Pp5O3KYSYDLCHPAIUiaWTdxk4zcPuWQ2
pm1jKn1v2Z+CthcQNKScp9eSb8HpXXDxErBeAb4FOPC8oOicMlSuRM/BieIV
MDoCNnhxVF1HYkh4mYNnv47/6Ku4oSdxvS9DJ/TD0VaxIofcQ9WwDb3o6Vee
/ZaRZUnNC/175HdtAx2Tm1T20f9tR/3x7ObiUCpmHexTP1yxATi7ujicn5gv
L++tr+kY622fHSztqPYerLfAbfgckr0pOyqX+zLKaUk5D0WMe0BqCI5tbziv
bwS2N6yXgHIfsNTAkeflqfsY2sJrINy8YvTzn+wnwn3A6GtQ/dVluymYLax9
8dvPwj4GdF57V66rB5cr271Xt6rWtGo39h/zyEd4lGKtkta1fft1vVsNgrqf
+Tbe923S9+8xjRu3Sp41iR4ziRmzT1uyylg0ih/Xjxk1j5PxZP51wpR9xrK6
T5tbzrpL9tozu4rf/uD9ppHmkDSn6d3x1LpYw7VOz7tNU6ZSXGrUvRvNIrsd
ksZfxw9axg+5ZS14Fi6HV22Elqz55cz55kx4po+5xfc5hre7RXWHZU1HZi6Y
e9b844GfvE7KnSfB38uHPTXO1HWrMApsUvOpV/NuMg7u8s1cettEC8hYUXeu
/EY9/qFlrnZIq2HsgGFMr0FUv2tQ9efOCDn/K7lffDgdLmDgT7eBowEF+mK2
toX/I5MGu/CmjoGgI7ERkLhcUIoAXLaOOH5CaQNJ3HyjteL9v/7znsr3puFy
j2zlXrr9r0HUT5a5D3UzlHRjkzO6ILcl1WH78MVuf8ul0Of0UkOAH+KTqTjG
EYS6jaIscDBYEUIq2hOwUXgGCkFBEFlEMptIoqJkhgVJwUDZBPg+kyAzL2wM
QkggHXNoR2yKmITg4TdZ6EUecY6DxdBxMrZsMbC7ZNQ2GQkjYzAMAoFNkpkm
NA0H4ZK2hWwoB7vOxEDEZLSUxRAQZYvvJgkOPWDRmVjkVG9XXWlBT2P1zGD3
xGBHS01xQ3nx+HD/8tzE1EBXy2BPTUtNzrv8mLT0qMT06Dd5Oe+au4Z3S5rW
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
kUHFK77Z815pkw5RfXbBHU5RvUGpU55xYxZ+repmufYBPd9cdf/Pr06/qfgp
GqQ+Ms18ZJKjdvZRnm3eiUtJVUy/5DUD/767JoWX9LKvmRY+cq7SCu2ySBp/
6DdhGN393Cfvlm3518+SAxPSANbtfEByFcBitJNn6A++6c9TY0amY0/ogYAf
+2b3O/D6NgfxV/BKX7RuVZNmfeHXW7/ecbykFfOJYtDnSiHX1LL0zMrzM0cx
GPLmMTgf3qmS1wj5eyHn3Wbue5o3IA0BtGSTsg2lbqAFBAabJMVj9ikwAR7B
w7IxpHUSFctkYsV8sohznngp5ZG5ZLSYjOfhcEwUirOBFFM2JBzyeTNcJoxP
ZRDW1/CIBQZhlUdDiZjUTTZbRBMyMRQhhcChrPGJczLWipyHPPtDKmJ9Y3EY
NtGDnOknQWZZqGU6Yhk9NzHV1jrR3drXWDfW2royMbkyNjrXN7IyNIqeHmuZ
RVZ1jaaVNoUnFwfFF6YWtSVmt9h4xdt6JunYhJg6R2ta+mtZBr6wCbT0STR1
jfhZ2fm/N42/uWF075mbqn6guq6fp3d2celgS/tSZ9/i0Phq58BsW/9Y28h4
1/R069jM8Ex/61DH4ur83MrM7NQEDLqIWF1kEVFcynkrirP/cXeLi4Aulpbk
n8OES5JyyNts3BYNzSejmBQ0S0jbPJs7wm0Vx5DPHtp8+sjvjkPrDdfhr817
PrfouuCFueqDVoolP03deJS48iIDbdfA9ezYDe46rEGAoHrhc/cOZbtCl4SW
ziXmPOOYL5KK994yuUISmchh0Q53+RIOlk2BygTE/U0ak4ki4tZYDCybRWTg
kYwNMoM9zmTNCARrYjFcJMTKJDSRgErAoM67Ewq57I1lKnZUyhg82hwU0YtW
p4Pmm1yRE64MhOEWU/VU9hwcKIHdq2Drtw+i62DfFgiC5QTPd9KYTYb3gTBG
hHVvGQ5JrTQsHsqyCMvTd5qyDaGrBUxcCki6Eh6hGl3uXcT0zjl5Yo+6oN3+
0n7A3nkto7GJeZ7jeq5G3n7YOTrcA+AdACfbIun7A3C6BzZFO3u7AgGf0Nc1
WF86UZvb0l3dVZUR317qsdprwV3XAtuaryV35aSLx3yN9zy7tzw3IPMH+54f
do3PHvhzg+gDNTFPn7B+n4nWmJyK94rpM3RDupqWgrlaUPQVaP0HaL6wnKWh
FRv3Uy8rr7LONyLzqXaAoXWZhceoRficQfCEVxHap2xdzbv9pnmJsnvnM+/+
66Ylqs41AdlzkcUo5+Qp18R535xV59Ql26RFu8Q5q8RF46gJq4Ql89g5o8gp
i4RFPb9B+4Rlbb/BJ3Z1yg4Nnz0ItwqfdIhffOnZde1ljqZLk6pdnbZHi7ZH
m6pDhUX4gH/+mXSZd8tYCC1dSWzGx1ahIyohUaVnPJn0Th11iuvxThj1TBjx
iR9JKEE4h/dF5cP+9ZvDn/9r/uVV++/uuD3ST9d2LNewLjV1a/JNnPXLhLgl
r9hETaq7Nt41LbpnXnzXtkrRrfKZd+P18En39Gr3qAir9KnPLBb+ohhEnwgD
nf8CZQqgXkMO7/pe5dG/nqv65vgKqVmAGsCXfby79QN4exkcPwLbbsTJwBhP
C3MbT6+Y/Iji7uiykfTyxcEhCp+5Dc5zGQA5TAHglwEDHFC3OJwOJC53k8YW
wz9somRi6oyAPSzmLUvE2E0xYouPkLMxZB6WzELSGCgeDyUSnLsci879AwlS
NpFDwDA2EGw8mkvYoG3ACKhFEnKBSTojBk5+7k9I2JJQ9yUcMYMlYfFEFAZr
Ay1iIBjEaRFrlYKZwqzOjrR19rbktNemj3VWD7aUDLaUDbdXNZVldTSWDLQ2
zPT2Lk5PYmFwBomGXUeO9w/0N1RkVWHjM8e9gus9g+uSM8ZSc6ZsXHNuPLT5
5hftb3/VunRbX8vYV88mUMvMy8wp1NEr9p6O5R1NYzVTZ+eA+OSM8uLqrv6B
OTKBc7z/4eQQvDk+FW9u88RSoXhLvCffPHqz+1p08Gbr+M3O3sGmVMjiks/b
4sjYeD4ZScdDmWSYREBEQhcqa8/3TKQiyo6Ess3ByMhQCXmRS1sUbOPP60rA
e7OIuI/vav/lvs0dx7qbbl1fWzT/1bj2H8+HP9Hq/s524KLn4CXv7qt+PQ+j
llQS1y86TET2g3okCK7e/14tT+ELnR/V3fUj6rsn57Cc3d1TQOKIOHy+bIvH
ZeH4bOSmeIPPQXCYSA4by+MRWTQ0h0ncEmwKtldZZ7KEC6MxoFQqis1hiHgi
OpG5xZNziGQ2BnnAh57sLBxLWpmYCMiEE3PZnY+wkzN03vI0z9O9Np8D+QMg
+xXsK4Jt49dsVyHB7ZUsViJIphJSJ7u9kvIi7ULM7eNjNN3Knlst6DiTVXzn
bgaUP00vt8yb9slmOyTINT0wjy1GfGLW21sAQfC/uObD/jvu8VsR+P+Ohc8L
+w7E4Iwnbw4Ai0Famh2pKa9Jjmluq8zvqSpuq4hc7PFlIWwOBdrg7VPw6taJ
5DrY1AZS7w/CkHeisFOpy2vJizd7d8Dmt2SqzSIsY3rAfKpDKb0wUDsa8fW9
1sWiclD/C2hWAJUXhMMZvmHBToXtOvVzMclZdn6p6qYZ1qFDrikQ1yKIafKM
azbcPn5B37Nb1bFBw69Hza9bxa3dNGIouHA1InfNO2nKI3XeM23FKWnaNnrc
MmrKMnrWJnbWImHJLH7ePGLKNm7RIHjUPnlVJ2D4hWfHPfOKfz8INwoYsoub
M/IfULapNAkeUrIqVbKqeO5SrefX7pAw6pw8YRHe55q2kFQLy+uiZLUR0pqw
8TXrgVnTAVlTHsnDrokjXvEjgelTEXmQmGJYchX6jnb8Z5fdf3no89U1p6uP
gzQMM5V0U5+bF7tGj4bkw9xS5l2SFkyDR1VdWlScm5Vc6hQdalRcm65H9Tin
1/mEJhj4NTxOxH+lXa31/CWYjQQDKiD/C9Dxcr7K89eX6r/Y24SkG/OnA5js
S1TSBT7xs7fs78ErA3AcDcAsAPQjANsBeP4xRrgren9uFnEo3oOv78wsOysA
tuBkEWwSAZrOoh9sQnA7VPTpPpa9jxuS43t5dAiDiyKLlvjcMSlzGE1dwZDn
iZRFCgvK5sCZjHUmCU4jnltS86gEHgXHpGB4DIKEc97IiURE4HBoEm6dy8Sy
2Os8OopNxZLgSAoSQ4AhVqcHkWuDiOVeBKx/qLuura6yOC2rqCiqvCy5s724
ojg1Jz26oCCtqDC7qbmuvaWjd6B/aHBqsH9qcHi2sXkgNi7d3cnriW6xU1B7
QHifjUuFnVu5R2BdQEijV2Cpo2u6nXOCf1h+U9fM8Cy8rqOva2x8AYbsWRgf
XJ2B41AoCp7KoDNZTCaNfri9tyOVHx/sH+3siURckZAvlAjOFkiumCfaJHJE
BCYDQ6XAaVgIGbnCJq5vMTFcyjoTu0LFQwQc0vLyfEX5OUz4dJSUiZYSV8S4
yR3O3BZ/SSBdf33GEgCy+zp/e2n5p6smf7rjqXA75E8v8j82rvz02dBfn9R+
qlv7o1P7Je+Wq36dD6Inn8VvfGs2cs1x/aEH5rLF+GWTLjXvbnXf+p/NU56Z
uWW3T4vfAgiew5HJpNtSBhsnkJAAONjeJrLYcLGYsCVjyOWcTRFHwKRxRDAG
A36mWNh8AodF5/M2xbwtJmFTxNhl4c9gjnotRIK9OSkxA7PgQl3zeSO0fXMW
zuxqgX01sK0PZC+BVBHIf3kn+XWHc+/Druu2wFMgCBaJs+Hwsra6GLeAKEN3
T6PgLMOQAQ1HqJIV1DSaaFUCf5nWa5O1ahaMMnBDGfthzH3HU7LhyAXw6vf1
6y3YOnrL+t2x5M3+luRspE9fAyZJBo7Odcrc+GR5SW5TRXVrzfT8QNRQS8ji
YCgF5nfEcwTHBmdK6VT+Pdi5DaQ6QOR8Kgh5K/I7klody5692//5FUsNiYho
6m8tKc7OzvF1zk676Np5XTsNzGScL77lCqDPILV0VDkG75QFycmuto2sUrLK
vm/e4JiD8WjGe7bA7cvmvPIx2k5Dmg6dhv5dRuF96kG9epEjrpnLAfmwsOwl
/6z5gPRF36wVp7gZu9jpcxPX2Bnb+HmrmAXL6DnzyBn7xBXL2Hm3VJhZ2LRe
QP9V/dxvFaNeuLU7J6/ax05ZR006xU3eM8pXNM1Td6w1D+5yT56xjxo28uuw
j53Orl+vGmAW9jILuugpdZjg3PnA7Bm/9IngnEXP5HHfjCmftPGsJmpQ1qKh
V+Njs5xHesl/+V7/s1/M1LUTtUzSNIwyjdxrTPza7eJmXNNXnBOXTQIGz8+P
HOofOlY9dq1TjBnU9Gqw8i7Sc8h6EdT2PGz5b7eiYsLTwELweV+M2o/AlKe7
r4PCEzW9QI+6vAQUTHtxTBnITYHkDmD8cki6AnaMwVs3CFyFsxt0COoOwJxk
G4KjT63TBpd3odzIvwMsFBABaR1svQIE4a6Yu3vC25WjoG8Z8Nc8pojJx1Og
KEInldLIZ/agydNo4hiOPMdgLrFYMCYNQiat0HArdCKMTUbRNhAbmDUKESni
0/gcEomwvoGCI6ALuI0VLGJ+HToJnR+aHu5bnBqZHx+eGmxbmB2YHG8eGmzs
7agfGx9ZmFrqHx/uGx7oHRutbWuqbmhu6Oqva+tt6h2fg+IGxtdzStsDIgo9
Qgtc/HPNnGK1jf0VX0TomMa9MIrSNAjXNgzUNgoIjMrpGlxmcmQoAmEJskqg
4yg0zPziwBp8VCjCb9AhPBnt1Yls62zG7bDkmwwODS9k4CnYs6gOjl9fRqwt
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
Tcl+MdW/AEy5nCd51im8HXcOTil/GjH3wKNJ36vMMnxYw3dWz6rXPmoltJpn
lQjTCpowDBo3jxm/Yp56371AJbjGLHbQO2MuJHEuMGkyvGQ5oWk9tgYZUQYJ
r1wPL1n3yjwLZyZsE6asUmbPeGIaN2MWP20QNabu2WkaPf3Ise6+fd1ju8K7
Rpkq9uU39DNuGWS+dKkxDmjXd2vwTJi2jejT92p4bl9m7NfqEj9mFdZlGzec
kDqcXw7NrVovbcWVttEyGjHxlYiwwiWPjDGPjGmjsNbnXlV2KSNh1fDEdkJE
C6a4neMVNXTxpvtf/vjgm69fqD4Pem6WdF0v5plHtXXshEvysonPiLHXgEnw
yHPPjjv2lS8M265rZagH9V62abjqUO+Qdca9Ug3fAfPEvcd69aiuLDD62/kx
ca+6rC9H9fqvf/glXk0nPDTcm7ievMO14aF+BUd35JRP3zEvfWCpAaoDoCcC
eqMMM0BbncevYInIuT0O6YgPOxHOgP1VcETmsxgiwf6ZziAS+lDQChJ8bJ+5
D7bBG5mcyZqVbaxIiOtCNIKDRhPgMOTSPGZtEYtcJpHWiHgIhbDMZW5IBCQm
Fb6yMDA51Bid4O8X6O7r6RYaFFiQmdPVWjc2VA9b7eYy16Coidm5uaEJiLlT
uMLff/7dHuUPn39z8bNvrip89LWCwj/+55jy061nuo7hxi5RysZu31xXV/jP
lb98e/uxnlNy3cQMFeyfMAV7PLaMwd+m8qRkBgNCpUNkYgyfsSagrgiIkNdS
GtgTvuFwj1gMOZG4xSId8OhvNwWvxNS3MvapnL/J25ALSIdbVLkAxyFBSJip
Mw1DObvws2zaspRF5FOQPCpWTNkQkNFiEkHGoL3iM3f5dBmPwiVt0Egbs1Oj
VZWVv7vTE7ZpOLApBDt7YFMODk73qfLRLujdGy5ffGX7yRcBVx7WPdZfeGyN
++PVls+0Fj5R7PqXYtfHj9oV7tUq3K/+VHf8ihvhshdVOfpANf7oVqjoYST/
fgRdNZloXiV9msG+7phy2SHnrnOOkmNi9QhyGoYbGJ9JTInOzgktLwrNyfQp
KwibHWlfmxnoqM6ryAyy9zXWMbuuovWlusl/9SyumNo9cfYw83B1cbJxdnOw
Top06KzwWBmyY8PM9pna5yYD7FzA9QQCNSBUAWIDIDE94j/e5P12LFN5IwnC
r0WO9Hjbu/6kZ3HN2jvE1KPQzoes5op7FMI2yZdqRA2Zx3aZR84YhDA0nUVm
PmJt+zHziN4OhFQCfj+3ef8BAOH7o83DHfHxjuhAtrm/83p/6z2JxmoazEup
Nstpsy3pS86tKCsqrxgYyYJh84WsK+DU7v0785N9rQ9bz8G+OXgTdszyPOb6
7fCtDza1DyR33sjugA+671mP8A0KvqnqpuGmhokN960a7qlEsYeXQKP1+dZr
gwLov2XhEf8gdfNbl35V93ibkEaTIGxULMTVb8Inec02bNHEZ0HVslfHu+++
S95l72S1xHr7grnwInRG8UZmMTS1ZCWrGZFUj44oXo4ohYYWw1zTpmwSRhzi
J50zV84EiU5Qv0HYoHZQr5Jzg1HI0APr8lvmpfctsq5oxj80y7trlHtbL0XV
sljZokjdotQ3aTooY8E5auipUY6eY7V/8rh74rBpcHtSbE9xGaSoGlHejCtr
o6fXY+OrMBGlsLhmvG/JmnvOnHl8v2f+nHl0h1VKr13uaFQuJKcK5+bd9PPX
+v/+6PFvv5nc1vS7bBh1x7FAO6THOHhS23nAxGvENQZqFjH53KtV2WXYwLVL
3Sz/oW3mDdcYrbgi1dDWF3EiJb8DJ8/JiEd/B6t3QPcfT7ofgNlkcbTSH1To
zyybXd0demoNWWuKB+QfP0i+FaMUXpP/A+gPAcUc4OLARuMJdkhOXJTzYICK
YMK481QwugUGiQCHoYsgi5sLE5vcddYrKO0Vgi3gi5AnkqUD8nLPyqrbFhoq
xaJkKBpjjY6eQS/0L8+MTCzND62vDGARYyT0GJswtytAvN7Ciagz+NWmxenK
qaHShYF66HgbYbYTM1k11hDSU+OWGvYsK9YsJyugs7MpvaDSMzpNUc/669ta
Sk8f31VS+fyHi5/9cOWba4q3nlvYh+d6JVb6ZtQXdC4U9K9EVfTEVI/UTuNm
qAfLXICR9JH2Vhh7UDx/Ck/tp7GH2YxeKqqZR+kSEXro0HbmWqcQNSknwV5R
sMTJftoSjItel5GwtJVZOmxWiFtmry+wcSsC8iqPvMIizzLJM3z2soQxzyZM
sgkTXCqWS0Nvscj7QvYrPn+TRuNsbDBRGAJ8lYTCbKzDEHD4xNhoTXXt2YyR
kRFiMkzE3tggQSahY+Pr8y1zEzmdff938baCwicKF1U+13P82srrKzuPnwJD
fgzw/4OFt4KJ519Ngv/wMvRjg8xvnFu+dej5wqb/Xybd130hz+Iod7ygt51X
XwYT9EPpah4sM8tCE6fy8PgWc+uIuprx1QUMZGoYNtcAm2yZaKtpK8kqSrMs
ytFaWykoz81xNgp5/iRc6UbCows1332UqfxrjrWmf7inbne9blXu1415n062
fMeAPjgvCj7WOz3We7uru7dvdPDu3iH49PD4o1PZr0BqC8ghstmQjcnUybna
hM72p3HlF4MbrwRP6afvKQXLA+2h3t7zjtGT6hGtiqmNioW9tzM7H8Q2PPTI
D0rvTsvpnuheeSs9Bh/OYXKmTd4CmnxPsC3hHRyx3wHmHpAhhTtjEG56Xndr
wcxsIQ2etbaYGrZQcYMNv/Wab8R8bXMq/xW8UgBHCoKzNfG1PZBZAvJjwLv3
jnfpg+zyDvW6jOXL3xxvHa6tLA1wCC780QvzZ3/w1Yv2FtsLoOs/oP7z01ZT
Pqzb2iNF0bX/YSTtWuCERmi7qX+/rf2ydSnEOn9VM7xbO7L/vlvZfaeiB46F
ltH9Fr5dXonj4dlLUUVrkdXIqCpUZC06rhEfXksPKEM45Yx4lK7aZ8GNYpcs
UpYNk0f0E0ZUg8ZU/OY0guceerRfsSm9ZF131bz3umHW10/j7tmU/6KT9OPL
2JuWuf9VD7/rkG2ZNmiTNmWROKzqWX9FP9k5bVHL5yzgGjRPGHDLWY5uIuYN
MHN6yDltsMymtdyWteSKuZiS2cDsUZvIds/MOePQAaPIEZPU1djMuYCUkaCc
mXt6MX/4WuNP36g/1g6599RTwyjSxr/EMqTaMLDhqUuxWeyIUeSEbmDn98nE
RyEtRu4pT43ybxnMaNhBXJyKQ7x9rcNKbhceKFgy9b26wHL8udNLpQIY/fjH
eNxT40btJz2+Qbjs3pFpvr3s3ZdSgcIr8bc7tB+O+ApvDhUo2wqC1w6HyHaA
oG8RwC5NKmd3SQnNLMg8D00VEJGYxVEOEnPE2Hkv2qUsT8501w42NnYWlHcV
FjTVdPT1Fg+NOQ5MKU/PPRqZ0urt8ehqz2/uaCuoLI8ujAwu8g+pDomsKQ4p
bHOIbjZOyXQsqLPMbTfLH9dIntQrhdo2027H9H1ikn/Za/RZANwggBSe88rC
FWrnvpySJ56chY/NoNtaRxsr6xrz0jpLEnBTlbSFGiGieZc8sMsYFmBaqdAq
HrbjSDB9srkC9qlU3ASVMCzYWiAJxtCS4Q3ZDIQziubOMeUbVCFycXWQyYHz
eOss5gIW041GT23AV/AECpUiw5HEeBofR6et46FEMgKDQZKRRDaGK6LIpWQR
D09mYlCbBCgVPs1ALNHgc9jFESJkir0+SlzopM13sFZa6KsdHPTweG9FQ1vJ
eboEn8jfgCAWB/o7a8vK8qoaagpr2pJyu//1i7bC39X/edXn4+sRf74V/1/d
2mvOvV/q1/xNveJf2lX/Nen4TLfzC93uH83GP9Xu+Itq/c9Wo7/YTF10Grpi
2/+9XtkXqlnfqmf9rF9t7VTmE9NV3gYNiqmoqpscH1xamh7FI0e3GIgzeo21
VuYk2YVHKObl2Yd6uuip6qs+CXv5LO3pzZxPFWx/+9LGWtc5L80BA4ma7TVc
6lFDTmttEmw/yN3AkQfYczzZdt7b0t/bvXt0/Nmr3U9OZDeA1AlQosQrIUO1
9lU1McHZmTqROfop7ZrxMwaJ3DuuVDuzERv3GfvEZZ2EIdX0fo38qSepw2px
fSoeFXkt6O4BEnyNCX4/w3nz+v2b1x8Oj3kHB69Oj05PT45P3m9JjnYgOFF9
30pbx2J/A3QgAzKWNrLekEmasheijfaYoVLwEry6Dvb/DeQ/yuVPDvatwbYp
oD8+P2kSPTmVPpLSH2zJgnHUysbmlJoE/QfelVoplD9qryp8YQLQJaDnn+cn
nh1mSy0tL1zLvzAqvO7SouzWaB46ZBYwbBO86F6JscuCqPq0PvVqvedccd+x
7JFrmWPqhEVwr0fKREQBJKoYGleLjWvciK1FxzdgA8vwnnnLdql9znmzVilL
hpFTFknz+vEDL8K7n/kPPfMbf+o7ouRSf8O6+KpZ+SWTljuGuV8+Dr5pnH9B
L+UnrdgrhimfKwXcMM0yimo3ie63ih966d961zTTNnbsqWP9c7c2+7gBj8yp
pHpUfg+9oA2b3riWWQfJbVzPaVmPKJtyT+k3DKhzSBy1jBlxSJ9zKERFpoxF
5S3HF0Oem6V++rPhx99p3VX3v6bkpqgdau1X5ZXQbxfZoWRfcqZJNPw79EP6
HiXiVAJa1Jwzr+om/6bbru48betdFxqW5hxXp5GMfRBGvnrfllrhApqvgp7v
z8LDhaUWPUufCy9qr5tXRRe5ozGP9/Z/Ozl9ssVX4ixdPCZcAFtXuZRL21xf
ObYTINEcDOBgNnjUbh6xi4ZakTO5+1KGgI7g4AgiIo+LIw61NeXFxyeHxKcH
R5ckxgW5J0cHxeRm+DbV+0yOxy3PVPQ1NFblDfm6l9tYZr40CNEyD9QyC3mq
F3VPLeW2YsZFlfRrzwqvaJRd12+9otd6z7r7kefQZ6oZX7/Iv2PZ+NKvzzZi
yi1+7Ileoltg4zT0vDeK/BBg8Aw8doNHwYpp2PfbtEM++kAAl3PW9iSIYxl+
V4oSM6AS1tqeFH0o5vIoCAZ9lclfowtW2Vsw7h6CxF9iCVHCbYpEQmVR4Xwm
RsRBydgIPmmFQpiiEObpxHU2jUFnsSh0AoG6TqWuMJmrxI05zPr0BnSZhUbw
CWgJHbvFxrJRS0zEPAO9jFoZmx/uXpvuxa5OoGd7VobrUNNtFMQEl7I2O9XZ
2nZ+mgP2BQLMEnyir6extCA9PjM5PSWxKCS06qFK6M/XQ++q1l54XPv9o4YL
z0cuaIwqfJnx1+s1nz1su6g5/u3T9s8VG7572vKjZsdlw86bVl1fa2Z/qhL2
zYvIn3XCv1Vz/uGpww8v3C1dMoLTGpuHVxLTK6oaevt6R2cnhteXBknoOezS
+HBbVU6idXiwcnDg09AAOxt9U13tWFOdpMc3wr/9xFDllqm/h3VZvi6LEra+
qI+Y0sJOatJXtaUEkzcS69NNp7di15Md3Td7t9+9/e/bg++AXB28ige8Aj60
qDzVIz4pziYoQ8uvxiRlSj1iRjOSeMOZbmnTb+gybBmzaJG2oJc7q5U9+Sis
7Y5n2VOngnHo9gZ9D4YgHO4fnimTg62Dvc3Dw6Pdt6///0Lhd3zZ5tgMPCW7
srmhf6Yb2ps11ZWQi+4PYq8ZCNDm7+nFW+Di/usbYPcR2NY6kRm9P9T/cKgL
hE+B3AxsWQOJmUhiuwdq5lDl1eXJ1d5GVwrAZfvRf3xt1lFeCRDeoEXh3O90
JDg+qO9ne9Qf9Kpv2ia/sM9xjlywiFqyz4F4V+JtM1YfOFbfsi166Fp73sDX
qdwxfcoqfMAvZz66BBZVBE2ow6a0EmPrMeHla6GFWPfcGZv4LseUMcvEWZPI
RaukJYOEsWeBLaoBQxo+48+9xxSdam5bF980L79i2HzHLPvzx6GXdFMv6aZf
1U+7apD8lUrwbYtcDc9abb8mi9h+8+hBVfsqo8DOR9YVqs5NNlEd3mkT8TXI
nE5CfhsuuxGR3YQo7EZm1ELjSmfdUwetojq8sued02Ztkqf0E6YdfTuTKlEl
nSxr/6Zf7jt99NXzr37V//QXvV/v2mnZ57jHDzgnDKk5Vaq4VGt4tRtHjuuF
QZ76tD9wzP9NP+OKcYW6V79lUKt3UoO1X4l3KkTDdcLUvclY/fmHhWjQ/xjk
KID5b0cr3P+gmfW5Y5NHohNi7snOloHsTZBY6E+fewkIVkDqLEcoH5KcNqkF
FFwbBSYjYkZZrE4xd4zPg+9u8w92eEwmUsBjsahcGpk+MzVXVVyTGp3u6xLo
bOXpbBfmZuuXFB7bWVsNn10kQKhDjajk4Ekr3QYt5fKnKoVaL8pUNIpv3sy6
dLXi9q2G366O/nyp/ZufGn660fjj7fbfnvZfVR/956Wif17NvK5bZRXW55vZ
F5DS8NzU1S+xYI12XsbME22trkJhcAiPit4REd7uMI6kaAkTwiXOsiiLQg5y
k48VMKBM6hqDufyKIt2isflUEpOEZNAQbCGGJcJQmUgyDUkjn72NIuWyeFgc
h4AREbHbDNqBFLUlQAoYKCmfKJOSOVwYlT4jFM7x2KMMyggVP8InLkiYUDFj
lU1bYFPnOeQ1EQMuZmLohLWl2UH42vj6+sL83BAUMolFrVKp6DNhtLAw2d3b
efbL12e7B5oLhlsLF/pqepoKO2tLezu7xifWcvMGHd2LHHxb9e3rFF8U3FTN
e2nV9dKy+5pa0i2NDCXd4stK8d9e8//ysvPffjL/+EfTz2+Y/6ridFPXXcXa
2y4qIzK/MqWiNrW6qbJ1tHd8eXWDMDw1h8edBaBSNg2Hg8+w8GvnDfhYOAJy
gEisQcDKuYw1+PxsSXFnaWFPbnJzbnpFc01+VYVlbs5PTLwhE6fGQmvwMJoS
nMY+Q/ODVA/sm4AdcyBXAbvXwZtL4PjqyZYR2MreZ3Vhl7rS4uOj4mscgpt1
/Tq1Q0duOrWrBsPU43muEau6flOWycu2eVDznFWN8N6bDoWXDOMdYyu5++dJ
aTj8xv7eec7e6WvwYQ+8O915tbd3eHS+ZLwDr2gsfEd3XVKqf1VxysrgSH9+
RXOqOW5WWUy5xsM8/UAv3Aafiffv7G0bAZkLkFiCPbU3bx8d7zwGcksg9t5i
+m6w44Snc3WDldkp2XmOLgpp4JptZ7ypCsAmvC/9AnT9Cwz8SCjx1jfv+c5F
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
5ps7168oPbin9/yZr5NVWmxQeV7ySF+rgIE9eXsWG8jkEi4eCZ8bH4aMj5MJ
EJEAt7tD57PxNBKGS8FJuBQBCyfjkN/uyvelZ3ISursDe3WAPDli7kn5Qin+
5I0YgAOpZP5ot59OD0Usa8l5Vm9Erh/4XkDgA7hOpzz994KnHyQPPuw8BJxL
QHIZfHgBgB0N4zg6HF9WXxqSUv5IP0zXqUrfpVnft9Euvf9xQNGzpGadsi69
NOaLeIh+MkQnZFzJvlrTrtI/dbx5EEOWHr8GJ2/A5jsgBGBn/0B6vPMGvAdi
kXh0eDK/uLW+ZbBvaLS9vaypIaijxna8wZW5XE5cToDN3d3d+jcAXwP5MyBN
ATLP452g13vhYNMD8DTf7d7YPf1NcngDHDqyYWE1tWHBSfGZZf0uHmU6ztU3
XBsVLJb0ndzBjBqoUgDl/wDtQYl5lTfCa644lKrb1nvGoYNr5Hq5cMPcSd9q
rH7I1LPzBnktqt7N6v4tNmeRS8q4W+asT85yaCkkrgYdW4MLL12PrcEmNpMD
SmHu2fMeKSuuKRNmUV0WMf1GETNGEcsmcYuawV33natvWlbdMWq6a155Sz/p
0ovgi2rRF5USflT0+1bR70eloK9ue/5XKeCuYdo9s4xHVjlfKwVd00s6UwWW
EUNmYcP6/4+ttwyrY9uyQHndt/vd7ivnHo0LcQ9xCCF4ILi7u7u7uwd3d3d3
Nmz2Zru7K64BktSDc/vnq2/9ql9V9dUca4y55hzTu0XZseGjQ5OJT5llQJ1L
REd4zmh+A7y8A1nWvlbWDitqA+c2QuPK5nyyhk1C26wSR2ySJg3jxmyiJh3i
Z+wjBgPSpkPSp2x8yu+9tP3lusZ//yzz0zXVd5+CzD1qLEPb3ppmy1qVaPl3
2DuUKTtXqibPGuYtGEcOfbSsuKdd9NS2Us4pzz24QN82+73DxKNAgoJ/n5Ga
9NZ4JND651yMzjfLkamS77vveI+ZZbqE+N9wVLlXkxI5N+FKwT4CjlS+ii32
+Lan4udYUT6aWomlDsMIk8MrLbXj9bkttUG55VZRcaruLi/1jT+YWnqlplUM
NrUvDowRUTun09z1pfVd0tm/y2cw2AwkjTqHxXTjGX1E5iiBNo+iLC7DppbW
JpdgAzPL9T0TQwNz3VMrw31Tvb3TvTMr4EkwfA5OQ9F3wHghBMcHExjbR8D6
PsDbBthiAHpGG/BrLA6FyzpTKKgNOkpMhXwVULkkGA0OJiMQHDKZRaDioDAE
aA2DxQKLol0I+xAlOiYJ1/FkAhhKWIMIyCQRjSLAk7lovAhHFCDxuxTqIY1+
QmMw8WwmhkhDnmHOEgw6hUHM4zEg1MokGb1CQc2TkZMMEohFgCKh4JmRhbE+
UFRmWnRKSlhSfEh8bEBCUmReiU9eqUl0nqpvhoxL0gVFa4lfn9n6JI9Ono8H
zWkpiypMzakrauioyynIiU9NTUkvTMwpSSpq1bEJeiJrLKflYO8Ra+cYGO4X
72Dh4WBl52BubW9qpftRUe3dK0e9z3lRQUONBYuDjUzEHAc1TwJPsNAg7NLU
VGvDeGPz/HQzFj7Ooa1wyBDk0hQcPH/uEsk5H51DxSPRUBAKOkklznAZy3j0
NIdGFrAQYj56bwfe1xVCJqSKeZF7fK+vHDeA5/2d5LWPtjtGWwBkwx9MVWBD
EThSAkRPAca989L0Xc+pYaesgiC/1Hx97yJZu6IzgaPuUq3rVeme36+ZUCmf
VPU+ufBlJP5jLFQrBiTr0qxkVRaYPDo4wxds/pkQAQ4PAcEJwNk9Iog3KV+3
dw43D8HLxPqqqaS0rtyCseqasfr6sv6GyLFa58UWDw4k/YCRwKMr8AT/e3Lw
B7CrDogDAELmMTPsm8AH4DoATLXjrRfc/ctY7nWe0GVgNDQqI9HaO9XPv8HN
vU/asV/CHSb14vYOoR9olgXSJID8fwD9pVc+JV8Lh78L7rYMqPCPmrOKQtjl
QD9H1punzr/2Xfpgk//etkQ7sFsvpMcsYcgmYfgcNJJHoqsRsZXw8JK1wHxQ
SBEk+AvMNWPeNmXcPHzSJm7YMKxFN6xLI2BMw2dCI2BC2rH6jW3ZXZ3c28q5
jzVy76tFSr53vfnG6daroCsv7S8+t7v6wvHXZ9ZX37g/Vgt7ohn32iDl4juf
h2pxr0zSVZyqdH3bDQL69Px7Vdw69OxzjX0q7UNbAjMGMyrmS5tXKjshVZ1r
+U3zxW1rZ+QkoQpqH9/jkbHglDljmTBsETVnFDyo59MakgtOLAeHpo1qmMSr
6EU+fuf4yzX1i48M3uvHWPrXy5vkfLAsVvdq0NBPkrfOV4xoV48Z0vHv1XYf
kjVvf+vYJGWbreFX8MkxT9a+81MY2i4V/krRzCkwGhiSBEYvANESwJBfoHXE
JaNYmeSwz84q5ioKsfYeJbkm4wvvjw+M9plWQpwzFqRW0mNZ1RpY09hc29lf
3tGU39YakNtu5Fut7pKt6Bz5XM/5lYGzY1JiSntx3mBJO2qCy2TTaUIh/9vJ
NnC4AWywxFwagseY39oBrW8ui7ew2zvs/X3R6en22ZZ0+p25sSHa3V///v14
c1Mo3BIdHO8INqjifdoxIN48YPP2uHQhf+v4gCHicTZ5vIOtM4RiMugiHpWG
ARPhi0IClIkGiWmYLSqZioCgVyHkNSweioUvIrFreA5zA0DRD6GEAxR1j0Tg
nKENZJ6MAlOQiwTYEhsNJUMXQAMdsJF+/PwkaWkGNzm0OD+zPD0Gg4wtLXaP
DdeCVkYhkNn+zqautqa+1obB/pqZ8a6FhfHJqcme7smu1rmzvTkhpzKhoCom
vdw7Js8trtAsqljJI1s5sOy9e94N7TCJ6wr+SXXT8/izCPIvGXFJrvNN7QjN
7A6Ibg5L6YlOG3ULbTP3rXmjEylnFJ1eOQPC8pchODaTRyMwIeDhucme6YGW
5qqM6ryoti9R7YXhg/UJY81pLHgPYaV9uqsQPdXFQcyyoAsiGAi20EWFj/PJ
q4cCMo+C5lARWxyKiEPcFrKpOARmbYFFRQjYaAEHA5oa5hAYXO4knzu1vz1S
Xaa8sKBDwmoebxgdC7VPqBp7OPV9lAbAMD6TDIBI4ztH+kTwFBA/2MVcP6R/
EuC9aiudPSMDLEIrZFyrdCNnTOMW9Xz7tb2bPXPmjdNHNLJGFVO6niewlVKI
mskQOacq04C6tn6yUPxnHnr/8OS8wHX/FOByNtF7R/yjr3vgRVBPz1Rl9Vhu
3kxxKbi+cayruWKkJXiw0pi96L+J8j0Q2wpET9gb//xxcgs4Uj0gKQHgBADj
CbAcvpOtTsm6u5znKPJf+0C/zSI8UmribSNS1e2TTRzq7f3W7lrOSOgRF8L/
B5j0Bb68ACp+BYY08kK97pt2S+hOaKaj/AoWfNJm9ZzbAzNmVF0yP4b0Pgkl
SJtnvbUqMo0dNkscNInvN48d9ClctIzojC6DRZVBA/OXvVPn/HJWnDNmLWPG
TOKH9fxGTMNHNAIbNXy6lD0HFZwG5d37npl9eW1ZekM57bJMwl2luLsffS69
sLz4xPzSE8ffHpv9dNfwtwemF5/ZX3/nfFPW855K8CutREmF0Eca8c+1014b
Z6u7NZiGDtknzJpETGlYphp5VziGt0VkDaeWzxc2gipaVmu616o61qq6kPkt
sNQqiFNMt3feomcuyD59yi0LbRY9o+XZ5p0y55U0Epgw5BbZklE0beX25doD
w7/++vHuW1dTn9rPNgVy5jmvjLM+6MfJ2+ZphLcoBzZ88urR952Wt+6QMq1+
4VbyyCFVyipLx6dLx7HbNmBI1aNCQjrie9VLoOUd0Pgr0PcI6Hd9o/rxN7uY
25ZxxoZ+LmpG4Z7a7T2mYoHVNkFJQLCam9YzcL1vZqmpqxVqZpZv5//FP7nH
JQqkaT+hYN/22bNaxjpL2Tk7sb67bmmobrZ1lLuyyTigErZQMD4OLmJgzmId
TsbNbQqWdnfnOcxxCnmRw8JxmaRNDm2TTxAzIOsi7sHOBvD925ZYtLfBB77z
RVurW/sgFm9AsLW4s4tncZB0PmENPQNGjS+iuyhoNAm7ts4hswkoNn5lj4Fl
I5d4SAifhBKQCUICkXnurYRlYclcIoPNFAHQhe3l2XX4nAg5T4GM80hL6zw4
DTeLAPezKYsE6FBzSXJXXc5Abe5AbU7Hl7ik1PDMnMjaxpTqxuS8opDu4Ybx
udGykgpfv0AfX393T0dPLydPf3cPnwA3rzgPzyRjnxxL71Tn0ALX8AJrjyxL
vwLbqHqjkFYFryppp8oHxkl/faIfntc5OntuWvfYrP6VTdsjvYrrH3I/2/TJ
m3XJ6DcqmbUq2bc9UE90TO4dx+0A///X2X06AKCBr6Bj0fA2q4uPa2Uh27eo
E8AhGTjvpz0AfoiOObQDFvGAiTvgEb+KKYfr7K87nJN90Y+jjXUuiUsnbAg4
YhadjsdwCYRt7vbRwTAVXy7kp7d3PgJDHojFz4DjF8Du43OXEtEzgPcS4L8H
Nj8CW3Kn61JH6w+/Ma9tYO8BGx4rUx5R8XYfjOyfGKXIeY4pBYI0Q1dUXLvN
Qsd9cjDm8Qi5ANC7EMjDGJZcGk07DaLh1xiRPbi6Jj49/j+zkoPvu/vAziEg
Oj5/NYArYAwMdNQ2VKZnlbV1IVo61sprGntbk/pqrCbqlYQwq0Oe7smRtGj/
Im/n18Ov94Gvb493HwIwD4Bs/h2l8QNvC3AdD3kf8agLmSV/iaoys01M0fXL
0fCr1AhZkHaCXtcZltBEAkNSQN1roOgPoP/9QquLlKHXI4fpG/rDpslE3wqG
a+aqW1hvaGaHsnO8lGvNc0+ksmPBB7siq7hBh5RJ64QRr/w5z4xpz8zppDps
YMGSd+acS/KEc9KUS/qCVcqcVlCnpt+wsne7VlibjEOlvEu3iseYesD4U+P8
Z8Y5N+TiLryKlPwQcvuD5+WXRpeeGF+6b/v7Pb1fbun887bmb3cMLz+3ufve
65ly8HONyBcasQ9UYqT0Ml7qpWl5tQQVoj0ywTr+A4rmadoOhfahzcGpvQlF
k6WNK/VdsOr2lfL21aoOSH7TSnzJvHtaf3AJ2CVlyiF1zD0bYxQ2YRo+6Je3
HJA2Y+ZV4xLUXNYED0novvXc8tfrOq8/hfjEDzxWCpT86PtOO1nFqVLHt1bZ
s+SJWdp7mwqroEX7MJCKe8cfWjGXrNLeuJZquzZY2FZbOjV+8u/+W8CUu7Qs
MNUCNMicl5103hqpjf5VKem+05yOY6WZho3lZ61QfwUey/nHjgqHLpteKPHs
5TUJCYlXT4LkP+S9ko658zJexXD+leq8nPm8jue0vvugY8z4IhMgHB2hDhjo
U/HJHh+FBs3ODCzPDECX+wmYbhFjQCzqY9JbaMQOErafgJogI6comBk6YpwC
G0Qi+1nURR4TxcCu0rCTItaUWDgk4LWTCZVUWjuFMk4gLREpawwmksZZI7Bn
2OTzxAeTCOMToAz0Age5sElZO1tsLFhIxrExcAYexsHjOHgsj0wik7CbK22o
oRIhaoyLHcWv9q4uNtFo82jUMB43JmAu0wlT1UVR/Z35bVVJNQXR0Z5GRrY6
tu56sZm+cdlB7uGO7kHeZbUdYXGFxuZ+0nJ6V249l/jrT//190uXb7/9xx9v
/nVJ5r9v6P/zts6lx3q3X5g9knF49sHzvrSvpLTvNYXIx7qZtz5F//bCLL6w
e3j23HHohf2igjdS1Rf5xHhU2nZJ3m5VywenH0RQclu4rlqi4taS1LQGFf6g
7+/yvgkPgeOtr0juxgqC3LsErl6a+wKDVtCI9Vxqs4DRwaN18Wi9bFKPkDQo
pkyLiRM83OA+lf6VxTrhcg559HUajkkAc6ioHSGNx8YRcSskxBITT+TgaQws
dZPGPwviH3s9JEwGleI1OnKTSL65uX71aOcSsP0rsHMBWL8I8K8B6w+A9XfA
hszXdekdwZPv628AkTYAVK6B85Ny0/R9sz96dWsnoPXTmVpxa6oeAwaBY965
TOcskUHCpk78nnzWkUIyRca//5VJon1QxugE6OTgx7/B8fD4RHAgZmyxdoFz
svL1RLSyMlRRk5+Sld/UMd/ds9pUU95RGzhQoz/forBJNDp7gNNvt0T7vwo2
b+0dyQIn704OrwAMPYCpdAyVPiKaANwzdWbAxCmUtWlE1eS75Pa5ZEzaFVMe
x4v/ZQP/292IhAwc0PAYKP7XeYPwoLp1UPCDINDvRmMK9t0+6ZCAQpZ1HNo8
qMs5o1nBL13Bs/Kz25SSW4WcQ5FF7JBt8phd4qBH3px39rxn1nhE6VpkwXLQ
lxWf7GWP1EWXjGWbpEX9yCHNwPnPgX36Yb1yLg0qXkO6wbMm4XMy1mUvDNPu
qMRLSsc8VYy6/9H55ksjyedGt17YXXuse/mu/qX7ulefmt156/zgo/dT5aDn
KhFSWvH31CKfqCe/0E9Xc6sPLyf45sG0ffsUzDPVnYrtgs5kzugZmBTWLlV3
QBs6IdXtq7U9sPwGUELpvFtyT3AJyDl5zDll1CFjzTB02Dxi2C8H5JM6Ze7d
6BraVliP8Yhq/e2egcTPH958CglIHlM0y3iqEiSrm6jt1abpUS/nWPDWNkPd
r9khdtrQe/ClUeE/lSIu6iW+sC/Ws2+0tGsyc2tXC+6XjO67qjwTahYPDFr8
OQTwf75OZCUlDj7SbNANWPxkWqCl4JMa5rm24g4Aad8A0+pGiTevpX/96y07
47oQP2hwCNzbH2ViRZFWgFv5igxcocqm3RZ+YwNL21CuYAq92g6bZ+FHYOAu
FKyHy57d5s2s88eE9H4epYeEamPgxvikpS0G+oBP2ufi1ulr6/h5NmVFxFwT
MdaYeNAZwjDJcxzKFJPUT8EP0fCj5zNA8ctUEpzOILBYJDqTQsPME+ATZPQM
CzfHJsxsUpZ3mdANytIOG77LQwuZCBEdtinA7gjQWwIMiw7fQvUw19qPeEtH
u0ihCAzHjNM5q1D44CpsgECZhaz2JSd41pYnNNSk1lUlpYbZeIQGRmfENQ80
dM0Mt45NtQwsd02zgiI7dc1y333wv//M7Po9bSk5S0WNgFvPbC7cNvtFyv7S
E7vrz+zuvbL/oBCiY5hqYF2sbV0mpRpzXzn81ydWf72uEpXfNLYIOQsZRZ8x
k0SUdRr1rcPQE5O+JwaDH52gsvbLDzX6JT+1mASAC/p2YDyAKAZQvK9Y0SFT
wCLQ6Wg0dml1Frw8gQAP4eDDGFjf2cch43poxD46eZhKHKVjhxjoPga+bx1H
2yYz9li8XSZTQITRcctcInKdS+ZSEUwKiIpeoeFwbDSXj+bscUXA7gmw1Ytd
SqIg3ZbnpMRM6T3Rs6+C+z9Ed74LbgOcm9/597+xXx1z5E83dY82TLY4n7a4
mgfrnj9O2oeGqsOzSk0iazUjJ4zS6IpBax/8huQ9mlS9mw1Dp40icerBTGUf
zrsE/hOvlbt6eW+Mgj3D42fnp34c7f+f3dE3gC5ex3FoooOt88Ok72I4erKh
tT4vv7SxfrKlfroqP7+1yGOwzhg1arpNtDgQSR+eXN/cvy4UyR9u233f1/72
7TawrghsfADoH84nam26HBHMULO2Fd2JqZ1zTslzljEQ5Yyvd78AEp9G38uY
AqNtQLUkkPcfwOzToTQtWZuK6148SftZraCmkPQh75hlgwCQeuCQbmaXUkiZ
jleFrW2tgkuFolOFRUzfGTOxSx7xzp30yZnyz54OKV6N/LIcVYYKLYK55YDc
MpftMkDmiTNagbPaIYMGMYMf3c5kwpBhCMgyYuateeZTjaj7H8Lvvgt6phj2
WMbm1kvd21L6t6XMr9/7fO3upyv3NW8/t3z63vnJR+/HSr4P5Hze6qY+Uom6
pxx5JnPkLcuiqyn+BQht3x4lh0J1x1JLv4bAtMH4L6P5VXPVHWttA2vtA/CG
HlhxMyi5ZC4wvT+8eNk5cdg1bcQhZdUifMgmesgna9EtadLEq8YqsCGhBOwc
3Hj1qbXEX989l/d2ieg296yWM0xUNE74aFKs4lSh7lmn7ltjENZiHdWj5db0
3KjgllbaXd34F8aZyuYNBg4jJj4j6qHNb4ISJNyAO2899up0gdbrQO3Z0trp
/fJZxeW55dAra4KW+VBOTNHi5BcAgKwLYzuy/lNe5cPT+6/11SNMtIqNDSuc
3Sa0DecMrdA6VlBF/Z43ygW2fn1dU2TCxhaai1tmYVmIZSx8hkGCbjLhXByI
CZ1nwcF8JIaNovJQHCFBvE7e2qZsrZNE20TmFp7MwwmEBC4fT+JgCFwMhosh
8c4UCppKx5CYaBwVhSAhwWQCmk2msOhM1vngyjkSZpyMGmPjJwSkSSF1VkiZ
oSMHuKRpAX2Zz1hmUCeppAkmeYxGGEIjuziYQRKmj0Ic53JWacw1GGZBtMck
cPGcDRpLSF1DzJdW5nT31vZ213R3VlUWJbiERvnGxCYWFOc1dlR2r5R3IYsa
KE4BPTpWNUo6+dLKEc9kvV/J+0qrhj+VDXz5MVRKPei5gt/Dt44v37mrqoeZ
GCfr6iYoqIS/VQi6/8rpwl2tq481U4ua+yanz0JGK6BQO6TssUnEfzw1u6QW
cUMn46p65q8f0v6QTv9g2hRXSO2ZBYhCgLEFoJhHEMYWjbDJ5hxtrQNf937s
bx9t8QUCGomMW6MQlvHIeSx+RsCCbAgRm3z0hgCxvbG2SeQIsDQ2inz2Pfn0
c3c7EQMnZhC3BTgxBy6mQ4Uk0hZBuE0W7THIuxzqAa0OtxhHgrpgIfL7Qs1j
rvo31idAoPWNJX/Cen2mcb6ylfc52t92PL/tBYt4lmymD5UYhyZ055ZXuiXU
6AVVyQf0qUeDXrn1y/q26Kd0W2V1mSSOWqStmiQSjBLJKlFCeZ9lGdtiv/Sa
9uFhDgv//VAAnBycHH07OPi2uQdsnpx+Bb7t/9hGUUBDk1VNbY3V5bVtdV3N
pc3V2QldxS5zbZbkGZttiu0W59XW1uXNjbvrPL09kd/JrsnXH08A4dtv/Fcn
gvfAkQGw60hdtm4o9o7MKA6qAhuGTCo4LF90+norB5BQqunP9AT6Pp7bmdbc
OF6MtbEIVnVaemS9+j58VjO8MTBrwjVyWD9oSCF8UDV+9JNXm65tubVVmqJH
vYZfg2XsoFPamFPG1Hk3bu6sX85MVOFqxBdoWCE0sADskrZsk7xonbJgFjen
HjynGdhvENXz3qnqk1uHgc+QgWfnY8XAe+89b711v//S+5GM24OXOtefKt64
r3zjodYNSZWLtxQu3la5/ljv/mvbZzIuD2Q8b7xzf6+f+EAh4qZ8iKxV4Wu9
HN88sFPSvJ5fr0FAu7pLrbFvvWd8b0zBRG7FdE0XrGsA2d6LaOoGl7YsZ1cv
RRVMxFVBPFKG3VOHnVMWTEL7LSJ6PVJm3RInzP1bbYJawjIX3OP7lYxTf7pt
IvnGTdUsy9ynQtUi9YNe5NOPEYrmRYb+3Xr+Ncqu2Z/cczX9miyiZlTsqxSt
v8gYZcmaNsk7zJ4RMM3gMlUPRwlf4j2v3I/yV4Axb6BeGsj6b6D70Wip93XV
6l8/C7Vc+e5ejbOLyxTS2T5R8sVJ2dxazsPVzMbCQVfT9amUxeOnzrfv+b6W
zXPznXb2GfAJ7anpgE0v4qhCJpYNxQtWxWdbKQLLRZ8BAo22jCIvkrlwwSbm
GxdxKoQDAtQpD3XAgu2c/dpCOF+EYLERJ0z4BhvF4+NY62SBmHhGKLb56F0B
ao+LXecTGSwinIpfpuEhVDKGSeHymXNncHFGYLj0WT5pQkg7oygjsJUmPGKA
y5hd34DSqGMYVA8W141ENxPQjQTcLBE/DVodPG87xK7NwxH07X3q5jZdtImk
0RaXIX3DI3AkfHpqvKe7o6m2sqCuPiGnMCA+2y+hxCmq2MSrWN+5TM28SMkg
55Nhpr51gZFTgZZFgrJ+uJJehI5VqrpF+GfjUHWDUF3DIFv7JCfHJHUVr/sP
da7d+nT9psorOWMrx9COwamO3r4zMEmtqHJPSbzy4YPEL7+/tLb54OV7V9fq
prLpSx33gNSGvjniCpZJYvEEB3wIbWkCPYJYnSFiIGwueneDvi9m7IoYO2Li
3gZzXUzlcHEcNkEsYojFNB6LzKCQeAzS5hkhITPZOAqHQGSR4TwygkNGMolI
ERUuoC8KaMvrZOwOmb9DOkNvEAU6wFoOJi17cdCWLIziDkPtkK4OsI0BgRHA
VwV4ssCG3JFIcZtj8P0w7PtxDIdtvQhO7BuJ7xoZDE9vMAmrVPAokvVq0Y5d
0YheUI/utikdMM9v04mp1YzoU/Xv+3y2PAifXEc1Xctbh8FsIQcAdgFg89v+
toDO39o8/bfg+QYAcBy4pb20uDyxvCylvi61py6rqySur8h7udeRMGNMBukd
8c22+FI7G7/s7FzfF2scidx2N3UOvz063v2wzZRdZyh93zU73fabGQmOjImz
8q+3iB5T8594a0e/bHv8H5ooPe88YMblHEmKJYAlW9+oyqemoHcaE7ouneZx
7aapY0GleJvYEZ2IBuXIDmWvIQ2r3s+WhWoOsZrBbSZRvbZJY245swFf5vwL
F4KLQGHFK+EFK/4Z817psy4Js1bR4ybRUwZR05/DhxX9BlX9uzRDW2Xsvijb
1Ws4Nyma5Px+X1/yhdGNRxZ3H1k8eGR0857s1TvPrt56feWmwsVrsn9cen/p
mvyNu+qSzwwevHa4+875xmvX99qJt2RD7siFqNhXPNfKMAjs0vRs0wnos4ud
0PJqVnOvc4xsD00fzCybq2qHtPXCGjtB9V2rlW3LpS2Q9PK57CaUX9akX+ao
R+aiVVS/WUina8qEZ+ace9KkW+yQb/qsf+q4d/LYe/34q68crz13VLPOkDNM
eKrsKaUUrGr6RculQdmm6JVZjKxNkn5ER2ABwsin08S9WtulSsas7anxqKzz
kE5wqWmQ63u/smsRLRLqwdHBsUCv13lDcZsEALFzCy3++7PuG6ogaePSgtqR
7tahwZKJbJsaL2/VmtqYxAT7iEh3Y3MbOWVTVU1PHdOo+g5M+wB5HszhCHfx
NDyRCF2F9oOQXTziKmVthomCbZPJe3T+EX1jn76/R9klLBJpUAbz3J2dx6cw
BAQiB4vm4WB8HJuLJfEI8C0GYZtJFFEIbBSJCqZwiWwhlb3BJPAYZ+R8moAY
I2GWOEQsnbVMpS6wyMtc6iKTvEAnThJR4+CF9sX5TjBsGEeYnFvunFysgcA6
FlbrV0BFK2tLSAJsamVuAYaYhGCbpyDNo8jKXlDPLLZrBNo+uNjWMwlHM0Cr
2M6+0dryxqzyqrzKuricCtewXA2HyA96gU/VPGQMQ+SNgj8ahejbRntGFAVE
F7oHJvvFZERmFqZmlCdnlsdnlGZmV5WUtpZ+aQwNTLQ0dXv3SlXxg6a/b1RH
Wy8eT25uPq+AHR1pG5voTiqMtgqxyOzJy+wtiKpLyGjJymsqmF8bQeEW5uYb
55eqiMyeVUzRLDoXB6pCrJSjVmtQkEYEqBG10opa7cOjZ3lsjIhHFYhYTC6L
RKIg4HgcEk/EsDkUBOcMVShsDpVCx66SMMt07JqQiBOS4BvU+S3K/C4Fv0sV
bGEJFFALeDwHOWZIW7JeJ+pu0j/sc6SP6YoAX+d8MARP+ofwPrD1dE/8msNW
3dvxE6/HQKF6Sfk+/nFeicUtTvHtKh4VL62z1QN7XHIotmkE9dAh9Zh6ueDs
D4GlakGtH+yrFb3rbAKIdn4ztn4V8wji4Yngz0TxPvD9aH9753AHODoEdg5+
4Gmk1vbqnIK4kor0qvLArpaArgbH9i8mU1V6zBnLPbrlIUcP2DE43JA63L4A
HEsChyrH66Y7GxoHx0/5e6/EbK1tnoeI5beECIjM9lOzijcL6LWNn/oYtHTF
mCxpQJH4lwaqOwwYfX1eW9IvwR1LuKza8JsB96n+gEtwyZkC9S4G22WSVX16
5DyKNXxr5C2qdS16Pzs2qgYWW0f2e6TPemRMBheuRtfCw0pWYyrBcTWosMJ5
n9RZx7gR+zMkCR0zDB/Vj5xQCRpWdOuQc6pV9a+Rs8lVtixXMiySUYv65ar8
lVvKNyXVJG9p3rmjfPX6syvX7ly7+vjapZe/XXpz4fK7S9ekb9xWkXysdfOZ
+b0XNnfeOL/WjLgu43tHLlTeuuSFbrasVfE7kzxtv26HDKi6b5uqS41ZYIN3
Yl9a0WR5K7ihfaW+A1TfttjYtVbfjciphxS0YyIL5sIKZsPLEG4p42YhbQ5x
I54Zs66pkzaxg1ah3dYR/cG5IGPP2scKAb8/sXmvFyOrEfb0g9cLdR8F3UQN
k0J1i6JPDtnqPqWfAxv0PDs/O9Wb+LWah3bL2bff+FzxUL9MM6DAMTEhIDbl
kkvbnXzgJ+kETo430Hb/vCa2R5I3mmio7n/9TckDgxZpm4C8ijz8MgPcAkyM
lHF4o+C1fDy5YwUyNQ8CYYk4HI2+vnsi2jk9PPr648fe5g5NLEDzOcub2xA6
po5J6tsVrB4LcELiGnMVzEGu8ElQBnqJhl2gkqYZ5DkmZZpJm+My5nisGSF1
gUeeZNMnhPypDdG8kD1PI8wSEJMM/AKfuirmwvhsEAk3ioYOkjFzfBKMyEDg
yFAKCUwlrWLRiyjE3Ory8PhoZ/9wS+9QS894W0VDXn1n8eJKb99oWXtHQsfw
+MDUfHVnf2HzaFbNVER2n6l3gZl7ka1fiW9UvXdIkatfclJaVW5+U1hklr2D
d2JyXl3jwJfqoTPQ0HdNNfXO/GQfYh6couMa6BIel1nbNg6GLUCQHcO9QzOD
S7h5MGhqYX5sbnoSDFnCEXBUBhWNQi4vz83OjPf3d4EXZtlUIoPOqKk6n5uz
QVj9c6zq8QHAOndJPg+ub3/uz+fOyUdCLHqhl7Q2CHwjnnxHAucu3iRgiwSI
UcA6/rsQf8jCbzDQfBqBiEWSaUQanU6hMM7AhERmUolsCplHIixRaTg2g8Jh
MTh0JBW3QsetCYhYEQm5y1zc586dMnAHZLYIASPMli5PhGD6LakL1usEnR9i
RUCsALCVAIEaIJL7yrx1JLgEHEjubDzjMjS3tiNotMSBvs82/jaqZibOkbUm
wb0fXSs/uBUbRYw7pNIt4mkK/lPKEX1K4a0GafMOuTijCJB7Prao6jS/WpBd
OC3Y2AOALQAQA8fMky3uvxkJn7e7BicMjw6XV+YV5Cc1tJa3tyRPDUVPddjP
1hjBW603lm0AkT2wYwfsWR2K5I83rgOnd4FTVWDbcEuo/XVfGbv5M5moxoDE
gafic2v9lDx8JdWjLEN77eOHXnqB/0ubdO1jg7+WFLD0Bmj6X6D64ddZ8xwv
UymV8puma3JBCzZJ9em1g2GFS5oh0w8MGz+Y15i6tqmYFen6tKkFdanFDNlG
9frnL3tlzwaXgmLqUcFFC1GV4KQqZEj+nFfSlEPMkE30iGHosE7YkG7o5Kfg
USX3blmXyk8+JbLW2crGhR80U1589PjH728uXn515eKHGxc+3LgifeX3W1ev
3755/cG1yw8uXHr1x9W312/KSt5XlXygffOJ4e3n1pKvnaTUw+99CLwtF/bG
IOeD1Zd3ZoXPddI+edRap0F0/Hp1vNssg1o84zrTi8bLW5br20BNbYtneNLS
t9Y8jC1shpb24KOL52IrQSkNOP+sKdvQHqvILpfkCfekaZPQLk23Wl2fljOW
YhPSo+nw5a1WzFutqCeyXnfeOtxQNJbWCDQ0zjO0q9RxbfzkXafoWPPOMF/d
sdbIv0s/elTWpea2ctIjjURFjwKtuEIr5wR1t1nFkIOnDr2yKgrAXBxQ+hCo
+U9g+iIsT0/XoOyewcJ/ypmFNATQeHhgHWCjCXweSLzTsXMyv7FH3t7bEOyw
2CK8aIvHYnJwWOTq2jBidXBlrhex0kslTXLo1Zvc4eNNzD4Tj5ufBg8NUVam
+MQ5EXeeTR8lkYZxyEE8epRKmmVTFjm0FQZxhEkaoxMmmcRpPm1OyF0QcKc4
zCEWfZRFneKxVtiUVSJ6Abk6S4TM8wgLGDIJjUcjkQg4ehUFW0HBlmdmJrv7
ujIyU6OSEmNSYs2cre28nZKzYwKiPXwDTZzDkm38wpSNnB7KmtyWtnmsEiRx
WfPCc/tLUrb33tpJvjCWfKL57I3u09ef7z38eOfRO4WPdvrawa/eOvztF3WJ
f378y2Ulib/d/eWF/CcH5+DM/EkE7t/5Q56YwxTgRNtUNm6KiJkkEefpZ2pt
l3zwXfSnRdi/R+QKfuzx9oRULBxaWVB6XjOOwAB0EvBNKNhH0k+QYoDzFdim
HxHOOAkVsbbcM4Tqn9hHk4DjEw4BTaWiANL6Hpa3haLt4ZmHFP4ukcNDk6gw
EovOI1E4WAITg2OyOIIt0Y6Ix2eQqXTWEpOBYNDJQj59U0gSspF0FIyyChOi
YbvEkRP2OMDBnhDEm2eScbEVMROH6QxmTHmKEEbArglwaACIPgM8VUAse8S6
cLz5V+DHza+H0hsiox+nWVxB5kiXeniqh76VgU9kg0PUoIZfnW54s3HMtLrX
skUUS9Mfrp+8ohwxrZ2A1AjCPNEZk3OGRUWtJ2SzMvLn13dPf/xgA8eoo3XE
Po/6bzARcU7WIITZqbnu1obK0vzy4sKOpvrZ8bqVoWTyYPr6ZM7WUuQBxeWA
7XDMcdwlft6n3gWObgLfpb/v6qwL9E+P9PnA/0MlS+NHQlc6M+v7C+2/5Mu4
Zwfn9qu5Z112nJVw2v9JthBYCgU6JIAmCaBVHT2dY/H4qqlKlJzr9PPYFcuK
+diSzqCkNqOgsSda3Up6457u87p2xZqJjXLhXap+cxbhHT45S07J476FC+E1
CN+8meDixcRKhG/aqGf8uENEr1VYv15An2Zgj0rwiGLAsKZvj7xTmbpXubx1
ropl+bvP6S9lAv/x6/uffnvz88/Sf/yicOmPFxd+v335xjVJycdX/rj768U3
Vy6f0RL5e4/UJR9qXn9icEPK7PpLBymVsAfyoXeVwh9+SlJxrPxoU/5MK1XB
sdwyeVkvZNQoqMsuos87qTO7ZLamA1zfttTSudzQtdI8AG8ZI35phZf0khLK
QcmVqzGlEJ/MMcuwNouIbve0ac+sebu4cYOATrPATtvYQdf4Ua+4fhPP6seK
3v+6o/P32wa/K+rKG4RYORQbmVe8Myl5blGh4FKn59pq7NFvHDKuFTb23r7s
kVr0K524V04F9zyzP7nVBwUgnBwXlfxK/stIzdnXHBgP+j+DAqiGm1PfX96i
JQyiPUZtFnktZ2HxbR2gkOa3TzoJ/BYofo4n3qXwqKJtBpvPY7N2OeeEGron
JjMJa1wqbGcLsSHqFdKGhOTVHTxdBONsI1m7FNImdYVDmqCQhoikWQppjUEh
s2g0LoFORZ0JHDAPh2EgoETIEg0JEVBWtwWLm6LxTdGYkDPNpULpOBwRRsAs
IolQCAu1tIqnLiMh4LUVGGIVjYURSaiVVdDg0FBRRVVmaWlOaYWtp6eFq01U
SpRnsFNIuH1EVrFTaMQnc/drb/SuvbWR0U/850MrGcPk++89bkhZXLir9eid
yaO3hj9feff3S6+llUyM1TM+ySVcvuz091+dfrsV8NNDF4kLCs+MvO4pGcmb
OQWnl0OI6+JNAEWkUzkE7iYL2IXtrK+weItMLgjDWgATp9ZI0xjqNFu4ss5b
O9wgCqlIyOxERf65nwldULC92yAU1NDh5RvEbkC4CggJAJW4TSAdMvibJM4u
c1tM3Qf+bTl2CgAYKrCMBVZYAGTnBHp8CP1xjAMOyIDwPJvEZdDIBDqCwMcT
9unYfSZoC8+CAwQoICCcCkgMCmxVRBLusE/gqEk0t50iQm/tAGI+QCA0oDGG
DJgzf6EdhtSlUj1hK+YAEHcktgBEJucWJQxHgOwFEO2AdRtg3x4A8vmiroEh
UEXWgkoSQiawUzauSyV/4XngkKznnHkA2sYH5xlLN0nAqiYtyKaPKSQ1fvCM
0rb2CYr4MtPTDAPNjfcPfD8Gvp8C306A7z+A4/N3W2eLl0mk2dmF0e6B1rq+
itj60MDOsIUiW8qQ8RFK9hDzfH1NWgxVOcGfy66DUyXMwWvsie7hdiqAaQWI
/cB65s6eAgznu4INKB1wSunOdGue0in59jIcUI4DflMcfGqMUbEjZbhmA53a
QON/ARl/Abq1JMJ/XPMcf2RfbBrb55G36Ja9ap+5qh02JO1UouxRqOhV9Mm3
Ss23Xsuz1sCnzTqkzzZuwCau3ytrMq4ElFQFTa5YCi+c9Mubck0dMo8d0o0a
1oue1A4f1Qwe0Qoe0g6aeOXf/tar86Nvg7RVxiNl92fvdG5LPr/yr6vPrtx+
dvHq40sXH164fPuXa7d+viX5+707l2/9cvHl7xeeX7r+/s597bv3Da/dNbz2
yPT2K5f70h6Sb13uKfi9Mkx7Z5r1zjT3vV2pnHWFZtCgfxFKO7BH2bnSOrwz
OGukvo/U1o+vbZ7p64O3dS3Xt640dmKKWxHxxaCkktXkhrXgvGmnqC7nqG63
uDGns5U07Z6xaBY+aBTebRB6plyaLINq9e3TX3xw+8cldbUrjxQeOWiq58vI
B2kZeTsG5n62Lrby7vzsUiwTX/gos+VpaIOhcVqYonOIiqK12n0F5zLrsyex
Gnvnsv67M+eWrsd0kRowKQN0yuw2qQDQBKNXN64/81cLENdPAzs8ANhEEvGt
VF4rHpa/j6kCeEUilj/3RwZhr4ouaCRjM0jEJN5W79Y+dI81BbA6N0lkwjKI
RcRSSDgMHk/jcTAMmmBbtAZfoFJWmSQQmbxAZ65gyWDImUihETicGSYbi8TR
afQjOnvvLEJZglUufxmNGmOSwXzaGn5tiIbrQcOqKJgWOq5JCN8hLxJpK9Qd
wu4e45SLW8dDmXgYHbmCBy/BhwZG6ltrGltr2/oaW/qqaltSWrvGi0uqXN3C
Pus4WzmmO7pXfNLMVFBL/yCX/PpNsKJMqK/jF3tdb0sVSx9Dm1gHC2+Poo+K
Fo8eyv7y69XrlyVv3Jb87cL/yspLWTtp5BWFN7anEgj927urFPIwkzpJY06L
yP1cUv8mdWKHMSfEjDIgfay1EQF2moGd2eQgNrkIoRAPWh6pLM09AxMqYYxB
nhXxoOssOGF5crqrGdTfz4QiWGuoA67gx8b2NpdDwyIPhFwBmyTkEjdIKywc
hEPEsIlEAppCwbA41HUBW7TDF2zyqXwWhkmG0GlQLhdH5xEITBSDhqRSCAIa
iUNdoKDHOXjaOn2LToPxN0fowhUB74TPEuFRaWvwt3SkxhYilcdX3No2puBl
AcDmZFPhdP3dmcYBmO8AjizAeAnsvwVOZI8Ah1VMdGVDXmJ4vnz4kHxQtVJE
i2x0r5Rri4z7oHkQ1CYAHZK9aRSFkAub/JgyppnVreCdYead3tAB5ZApZwDC
ZrLPhdwJcPJnN99X4CtbgEQgZ1dW56dGp9vaeksqC1JKgzJ7UsCtdowlhyOy
/gFOYQMpt4F9eUp7Buy+3t+V5v9Q3wSMjw/sAKIjQAsANm1Pvj2ZXIlrHvCN
ygmLLG1zy5j+5D933WzghvOqhHzzZeMxI7NKYXMh0PX+PFvS8x7IfSdhtfTM
uU7dr8k9d86/cMUpe8kqaUrFu/mN7Rd55yI131q9oDbT0E7jkHar8EGH2HHX
9CnX9Anf3JmIsuX4spXoYlBozpR39ph72oR5bL9OSI9e+Jhe+Khe+LBm4Iii
W89H39bXdlXS1iUPNUJvvDa/+Uj98qXnV36WfHLjyZNrtx9eufXw8p17FyTv
Xrpz5/KD+9cf/X75xR+XX9+4Jn//ocb9xwbXH5jceGh+75WD5EuXm29d7ysF
vjBIkzHPfWf65Y1ZyRvjAlWfbtcssLZ/l55fi3viYGjmmcxZq2uFVFZPtfas
dPSutnTDG/tQRe3o9IqV9Lq17E5CaNGiY3SPfUSXY/SIY+yYa8qsX96qXey4
eWSfgX+7ZWiba3S3pW+ltHrgxXvmj6Se37yj+F4zVUonU84kycwu5gw6DO16
1D2nlPybNPwTzEK+yFi3XrYB/8N16feEAQ2HGSP3WQX9HrMwhLz72BPVKHM9
fWAsAah9DtT+L9AuBetOkrimd8OiO7ZmGQ5d4FOAw831PfEyjzjDIcCZtDUB
e4ZL7GETR/hsCJ0FojGXxBziNoUrxqL2GNB9Bpq+tsgjo2k4FAEPp7NoOCKK
yyYQcGA2dYWMnyfjZvk8uIBHINFRWAri8AC3t03jMGl0OhODx4HXZtbQ0xDY
BAQ8jYQsYCAzS5P12LVmGLgeh+hGr7RA1ogoJGENAp9dhE3Nr80vYMamMAOj
qL5xVN8wprZ9KaN0KPVLX07d6JeGsaKaLo8SvG/xmm3S0me/Pi3fSRW3/ldm
9XIO3Xq+fZbBvc6RzblVI8n5pak5SYVFcfW18WVljeFRMe7u3p91DbR0DAzM
rIzNrZPScnoGR1B4Ap6A4IlIAg5yZakHjxil0xYZmF4qpo9JHBeSprm4KRpi
jImZFNNWcbBhJhnEokBYTPgyaLii6nzUBR1D5xHF64wtEpQ21DbVWtpbmd2Q
n1iYFZtSU1A00dc63l/TVJPc3pGYmWlTWeJSvljRBm8ewg/0o8eHEJNL1FXm
Hu0QEB3s0799JX/bRZwKwd9EcECEBviEb3QCnl/OFw9tbUwLuMNc+ggbg+MR
BOsiysHpMn9zlkPHsUnTOKwTHPV3HvXqCdfqB3Af+P5mg/cAADS+bz472XgI
bN35IboJbFw+3fn9+PQKd/cajCxT0GrgGRVuZ5um4N/7MaDmrUfVS79GlfBh
0wSIfSzCOhBiFriq4jEl5dH2wqfuU3TtJ694r4S8JSwfOD2vIdnbOzeO2Nnd
3/16sn20w91gjy0NtPd2dnWP97TPNlR352UmFZb7tE1kkiE2O0w3YMP0mKe4
yXx2cF4191dg7+LhxmMAOKNPlqcHst9ojwGG8j5XTrT5a8VQQ3hmvKVnnVs8
19gP/1G/7ZJS3k/WAxJKNbKBE3OlxUCr8rklY8elE3BUmMwfv9uMaoT2uWTN
h5ZjPbIh5pGjGsE90hZlr02/KLhWGYV02iSMnoka69hB58Rpt5T5M8Dxz18I
KJgPLZoPL10K/jLrlTniljrhmD5pEjOsF9WvGzagFTKoGdCv5dcr79au4lT2
SDvlgVLglSfmP19R/PmPN7//fPfab7eeXL/35NqDh1duP7wseefybcmrt29d
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
U3Nvz5LGdxpZcYgqdDcJzFB3XDJx2H3hOfA5ekE3AWSRAjJPA2kFDSo7dRgH
zZiGLDkkQGyT5l1zRrqgHPrxN+YB/xD4vz4j4Trz27f/azGCUwj1fU3l7fXF
9W1ZX9oLc1qbiysmmsPJS45ivMXxnvmPo8+n23e2GJK7dKXzYehCDUCkcCyW
29tSFW282RO9BTYs9igBo72WhbVvrDIjtfz8Ze0LDMLxr6xxT01Y77wODXOB
N25VQx3VQJ0WUPK38/1x2vGJqs1FR6pjNiywFO+csWwSNq7u1anq1qru2fXR
tv4MDfSCu844iVfOvEfatH38mFvipHfqfFgZOLQE7J+34JU57ZI54Zo5a58x
ZZk2qR8zYBg1qhHSp+BRr+hSqelZ99m56p35F9lXdhcuff7pZ+l//fPlbz89
uvrz/Ws/Xbtz6cbtC5dv/fGL5K+/XPvtpys//3zx198u/37p4qU/fv/1xtm9
axee3Hsg8+yp9p37WpckVX67qXn1mcW11453ZL3uKAY/Vo97rp8lY1L+2rjs
oWmmrGO1XnCnQ+q0Y8KweVCTd2JPSuFkdsF4ceVcSxu0fQDe3AOv7UXVdMHK
OsDF/cTsRlhs4ZRf6pBzbK9j1IBNzKBD4qhb1pJD8oxRWLe6R62WR61dRFts
/nxlI9m3E3dPJebqzwYX/+f1Py+//9+P9m9d8vVsUzU++95Rj5MwqX5qm9Xl
qgd4/h0IkACCJfod77lpWV+Rb/xJe+ljwIRVRrdOUtdLp3ozp0xeRzpQcx9o
lAC6f0fXuP5DKkzC5tQlriSpZDa5dHkKuYkS89cEUARmaosAAXDo7/CVPfgE
HdOFxLdi8P10FIQDIjDpeC4Vu7lOIVGmieQRKn0YstpCwY8wiUsCCoqHg5Mh
yyT4Eo+IIKIm52dr63MrijNTGiry62vyaqqyCr5kVlYUu/m6mVqbqxnqaplb
WDm7e4bEKOjaS8kZPZOztLJ0iI3LjIxONzF3UtMw1fj/mHrroEa3bI2bOzP3
3pk55/Rpwa2RFrppdxegG2/c3d3d3d3d3d0JDgmBJMTdheA0LbS/Xzjz3a++
qv1HXopKpQjrt59nr7XXemelqWmmoWmqpWur9dZMV8vWxTk0M7mmsrQnK602
1CfHXP+5kcYLRwv9hLCAgszs6uKSmaHJj/sfttmcg60dBmb9gEd6z0FtMyAc
4sQeG8yiNhBwzQxqD489d7iN3uaRaHgCncIU+DY8koxcQpDWkXw6cZ9Nec/G
7lLhbNoqkwJmEiFsyvomcYNPQjDw60zcGoO4scXA8ajoTTZhdXn+P93peTtg
BneevbXM3waTqJMY/DAGO4HDT83NNueVRIVFOSanh/SNNfL3SEvIqcn14Z1V
GMDjfuMyaWur1LVlLmaNT17dZ64f0FY/sFY/8tYPOWu7DNQWFbVJIW8zaRTS
1hb7F5d6yCFTtlgkNg5PwWHeH0K/fO/f3e9ZnaptLwoYb1TZGFdkzt3bX3QE
yCq/cCoAVQvgvvtGe3rMffp1R/X4yGRz03r3cyKak904meYYF/3apfy+6eRT
I+q9kDnNyDX9eKhFyqptypp+wIi256BN3JKu9+BL+2oNl8roognC3n+K0Y4/
A1zgSKDnfn35+OP/UmAfh0GzBRV5lZ31VZ0dRaV1pYXlA/VZ6OmAX5u2AF/n
w8GVL/synzh/7JMVj0lWADMMYIaeXLrZt/u09WqHd+3rB03gYyKf2tzWUxWR
H+MV76YfGfTQv+BlaLuiWae4Ee28G2CQ9s3XK/jnqBPQdh/IlwHGzdsjzS+8
TVBKAAIKkQFFSIvoOS3ffh2v/tcObSourY+syo0D+yyi+lwSJzzT59zTZtxT
prwyZgOzIcElyyEly355KwJf45Ix45C1YJc5b5o+pxcHUg8beu7R/MyuWser
0S6sT8+94o5usrL4s3P/e+PMP5XF/n1F6syFC2KXpf8UlxMWOX/2T1nhU/Ii
Z8+LCMuInBY7e1pU+JzEOTGJc5LCZ8VlRC8oX31y/ZqG4qU3soqa4pe0RC8Z
iF8xu/DEU1kt+oZuyl3D3LsGxfd0S65bZd+1K9YK7HJKBdnHjVkGtbrHDcQX
TKcVzuRVTNZ3QLqGkM29643963UD0NpuSHEfsqBtPbFiMThz1CNuwD62zy0F
5Jk9H1S64Zw1bxgxoOZRp+leZxva7Zc2kZi7Yt9OVnMsvypuovS/D2UlH0rd
M7jw1v+eTo6Kac0d9TCVJ68goY8AdyHATwiwEwKihYBkofeJmu9eBP/xov+e
z4prcre+a5yye5uEF8gutghYcT7xmLlCwFxUdGqLkFKoqmenYfCgSfxIE5hE
/7i5+420utbPpS99oK5+WB39tDr0njjM2exibQ8JzMshhM9kk48OuMdfGDjc
JHyjdQPbCpopgYHbwaCuNdDIxsICFrzKIqA/bjKZpNWp6fq63IakoJj06PjE
6IiMxITKsoL5pdHShsyY7ABrHzNNc6t3lqGWHqV31cKUnrhdf+PnaOSZFlWa
nVAV6BXlaRfobO3qZG7u6+joZWXoZKrrbWuQG+3TWZ3SU56cHeEcaKftqX0t
yv5tbaL3SGnixmjjLn79Ew3/iU7kItb52A3y6vIHLvE9m7JPRrCQS1zMKh29
SEPO05GzRMQsBj5B2Jil4hc5VPj+Jn5/i7DHxvKZaA4ZysWtMrFgOmyRRV5n
ElaZuHUW4WSKKJeMYuKRVBRkl0vc41G4bBKfS18BL5X/NTeHxoTsH5EOP1IZ
9GUotBcM7kajx9kscGd/cXNrYWl1en1D6ch4P4+/RWJyUDTGEQb7a3v7gM7C
ra6SUegtFpVFwbJJiB02bp+H3d/E8rlYHotAo1AYdBaDu8Vj7vM572lYNgOH
3mYT+HQ6g4Tjc5f2D0Y/Hc7iIQMTtQmDVW8ma4XXOmU3Z/WPV5S25698xT4G
uKrAoQrwUfXTgfreoTGO5sA+KgdTG0vHqq1isnRDGlS8h1Q8lh9FQVQiIeph
yybhSy4pMOfkFau4Wfv4ORWnmrt6CYYe+VUdy9yjE2tzBHC535Hf977/f9ee
v38DaFT+5ORcZU1VbmFGdWN5VmFKeUl8a63X8rDeT4YKwHn8fl/o++4/fm1K
/GQ8BhiuACMYoIUA/EBg0+0T792Xg5e/vujzeVHL0N6c9jHXgs5ofz+TsMoL
vo03Qzuvu9YpOmLEfX9pJBPW26NO3I1AkzS+3h2tvn1X845VvWHWr8BivFcO
Qtt/QN2tX9Oz57lti5p94xuXJuvoEYfYYZeUMY9MkGfWjF/WXFD+YkghNLgQ
GpQP8ctddEyftkkH2WfNmact6yfPacVOvAkdfuHV+tyx0tC70Smk3cAm5+Jz
H/n/vSjy35dkflOSPX1R9pSc4pnzkr+flTlzWvKP32XPnZYRPiMn4In4OQkR
YSkRMXExYVkxSfFzYudlFK8rP7hzXVXpkqqCksaFmwaiCnpiSkbnH3re1Yx+
oJd5zzD3nkHxff3yW7ZZ180zNQKbbZLHnVOnHaJGXKIHg5JHYjNG0nMnmjvg
fWOY5l5Ifd9q8zCsdmC+tAtR0YXIalgKzx93j+tzjOx2Thzzyl4MKIa7ZM4b
R/SpeTdpetYZBrY7Rgy5x4zaNi14pIxeVnIU+f2V2Jn7l6WuXZR788Zy6LbV
op5mxJju70DsiSChO/y3i95dGc8CwFYIiBBadda9fcNHyWzIKgFiYFtyx7Hn
RiZbzjqZ0GQH5AkB9SJA07tDcL7rK6HL1oeaQfC3PnW5g4u43RPhSsAzd9j4
XdoIZ7XrAA79SiEc0lf4lLFdEuoD+pjEwH74yPv2bROJHIQjOsmUMQi0GQnv
By/1I5ZAeOgaGY3lkqmfDna2uYJNfnywBpSbWthQVV9RWFVSVNna0kJg4LtH
agrqUyKyI73iMr2jOoNjl7TMqp9oxT/WT7AxcPd2iwsJys1MLq4orI8Ji/Fx
ckiJDgz1Ng9wMYwNMK3O8e9tiG8vi6jN8CyJtYkOC8xNieltaZga7F6fX+BT
KTssxi6NziEQGRj8BniJQ8YREOsk1DqFACejoSwYlQUnc1BEJhKGhc0QEFMM
EohK7CfjBxiU0b3thR0WmEGa3ySDtyhrh1QUk7LBIK3T8DAuaYNHwfAFkSwQ
XRuQT9vs91u0TQ55b5uNQKzX1dedhNjup8PtfQaVRsChcWg4Ar6A3Fhg0lAr
0Knp6YHOjsaBwd6JmUkkCoVE4REoGoG4xtvnUtlEOHaDt8t9f3xEZhORhDUU
EUqmIE9IxaOweUQWk8rkcHibu3v7yG0+gU2Hsdmr748IXw64e1wWl4HgceY/
76E2sevQ/rLxOq2u/H9M1wvRl+7tzVxgjZ//jHoIcDWBT8bARzM+2wBHtR6d
s1omFbYv1sU3VOoGp+jHtmpHd+vFD90InVOJhRjHQ22iwI7RYI8kqHUsSMOn
+V1gvb5ndlbpIBRGO/6rg+vHn9uc99ive/+51vfz6P3BFn+XjGXMTYAa6sqq
K9I7evKqGuKbW4K6Wy2Xh59+Z6gCBxrHe0LAwT+B/evAthGw7QzQzb7Q3wF7
Hp+prl84VsAvy+MvtlBMUNNYQ1T7mEFRpa9VnoZjt6TZ9G3vlWdBk3fC1q7F
ouzyW76u2AH1QidNBQcd3TzDpAzz38XPuUR1+hVRXDLW3zi3v3Zsfeve+8q2
XtOrzSZi3ClhwjFpxC193CNjxCdn0i9/PrhkKaQUIuBJaNmaT8GKW9a8fcac
bTbEOH1BL3n+iX+vRsSIVtDAW486fecyG58yXeOYSzds5f5HUvzfcpdFbiqc
uyh5SlrqjJjE76ek/zwt8dtvkmf+kBU+oyghpiAhJS8mqiAqKSMhK372d/Ez
wnKSssoX79269fKi0muFS2oXrxmKK6oLXzaUve98Uz3snm7add3MO7pFj/Wr
bzlkXTZOVPNpsE+Zcc5cdIqfsAvvc43s9Y/qisscbuqC9U4SGzqXqzoWGwdX
arpA+U2Q0p7VolZIQvmMV0KHdUS7TXSvU+qUZw7EJg2kHz70yrNZxaVa37fD
KmrQMQZkl1QeXQm+qZEif9dP6ZqxQFn9LiTxUjNb1bzXTj8EG6wKhIsC+eou
Tn5CUXyhPABwFDrhSckz6+sPJHXqFNxW1F1HdK2ajCKgqv6D6qpvAVAwUHkD
KFUCOu8ApUJCd9g6zrC7xmkB1T1LmycTG3f5wHv2FpvSg0JU0ZBLR4Ktbw5K
G++hQ1e2cZuL4Fk2k7S1iZ8Ftc0vd1CYM2uwETQKhELMozEIBo1GINDgMBSG
SCXSqCvwpdkxdEfr4AYEtjg/PzE6MzIIIlI3q5rbWoe6Szs7StqmGwdow0tA
ShHWyqP23tuI+yraVj5RCdl1NZ2DwzPLrX29hZUF7X3NDY0l1dWZzc15kyNN
s5NtI701wz1Vq6MtIyvg9pGR2bU1NIWGwKGgKDgCtcHjM8g4JBmPREKWmUTk
BniWioIKUEDGQI5w+xwUgwxB0ZHrTOQygzjPps2gNzoRa42YjVYua3qbvcSl
LhywNnYo63zi+iYTw6VhWGQEh4zm0bB8KoZJQFAxAqcDZ5E28JgVBhW/Clmq
qPzPrOHd1XnEcPfU9MgsHonhs9hcGoNCwmzAIEd7/O8/P+/u8qh04s4ub3ll
fmERDCdPbn4krxKX0awNOANO5JIIdOw6enXnkL21Q+fzSAd8ysEmmU3H8hi4
D++3dvbnPn9BbO+sHHxcpdMmuRwYjYpCQGYpuAUKYpUNQ5EWhvsr9YtihToK
heDjMvSxyytNYu/R2sC2248t30NWMH7DPy3vtV+UenZdenxFnUFg7iObbKOE
UZ2YAc2wzmcpS4ZZG845ePdkzBuLzutvc9861ej615RNCCj8+dNP4Nvnv3q7
fvv0/2/FsveB9fETb2VpcrC5raO0pq2ksK8hY2QoZXYxBYKMxaAC99iuJxM8
ya+P+b8B25eBL1rANxNgWwU4eAJ81QQ+WB0y7fkYvfcco08Hoc29oX65+V71
rfejzJ7qtug6TMs/6r5kAH8QwX2ZAb/hGLgISvzZJ3uSTWiXohc4/a+8rnL0
gl72SGBiunMaUj944rVD6yPriqfmlWqOLWZB/Y4JowFFi34CQZIz5Z457JE1
4p016Zs945M9GVyyFpC/7J2z7JAxb5Y4Z5w8a5y6qpM4/9x/6KVv9xu/Dl3v
+reWmc+1/e48sJRTeqf4h5S8sLzUn+dlz8rLnZGSOSMqfVpY5tw5sVP/lhU+
qyAuIn32nPhvZ0RP/SlxWlT6rITkqd9FT5+SEpW4pHjtxpXnivJPZOVfXr5j
JH9LX/qq8fnb9pdf+t18E3VDK/WxXvEDnTJ548iHLsVXjFL1Q3psEiedk2fs
I0dcI4Zt/Jui0sfKmyC1LdDqZlB9L6R1bL2uf7pyYL2mH9YwhEoqm/SO7fJK
7LMO77II7bOKHTaOHTaLHTeIGNT27VBxbdD2bDEOHo5MrsxqxVqnLAWUb7jE
NN55ZSn0P9cvX9Z5cEf73l0NyVs6jwxi7qnHvvHs/6c7Vkhg3F2FgEihjylP
DR+/ETUu+913xDBhzNEq08dpQN0bL6bf7+MVCkw5nkxfLRcDOs9buM3dvR8p
+TjieVBV6vAs5eNJXuHo6BdvH7r/fvjrBziw+5E9hqqJTSmMC6jLCiipLO3u
aujprqkqzxgZa1+DgfqG6gfGO0ELoBUUbHplfWh6Ia+yObesIae8obSlp6Fi
qKqyeWCgY3israKqorayZ36OU5Q/Wd+yVFQ/lF8zUdK8llMJyayAGtumyF0z
VlZTbwQtEnY/obi7tMP97R/H3/8qRv96colM4Na/f/ki2MB3fwks+7evwPHP
b8D+//1Tf/v6nbOzhdrhwvf4SA4ZskmDblJhm+SNbSp+i4LZJGO5FPQhlXrE
pBzQCRwCjIZb5dGg2zz40S6Shp/ZZkN3eWs04jwWPk3amGUSltkkKBW7yiIh
twVSjUXmUbE8KkZAFSZhY2aksygnrjA3KSstdmika3i0X/AJcGgoDgMhbazh
4SuYtRXYKhiNWKMQcDQSli+wKSwyUsDUmf4lyPjMQt/KGoiIHjh6j6QzVjd5
cDoLxeTiiHgodGVyl0kgw8EkAetwYAYGTNwArUGGJ4YaNhBDGNQEHD5AIo2t
rNYtrnTOTLYNd9cPd9VP9I6sjq2sDY4157mGuf5eGPe/cNCbjbE74/UX9rAO
37YSvu2VcslVo8PpIeGO+vYOgWkNnunjKo6t14xq9ULnNUJHDKMG7sUOqcZP
m8csO0SuGLuOPjEoMw5sy+tH0r79pyu04G98dPJtfDpByv97dPJ1m85ZJzGg
i0v93XV1NckppdHBS70ZKHAiChGAIHpS6S6HO07AZyfg0Ar46PaVb/Bl+8Wv
nRtfdpWA73cAQOv4yPLjjjsZpkFZM8Wt52Tld5j4d+slZil7KfxNvUnfcTDI
ZeOxEelKFHAnFl5WkQB03j6RJUW/AwMhcXY+Wm7VOnlgp8bFgJJGg8CZp7b1
98xKXzk3a7p1qNnXGwV3+ecs+mZN++ZM+gtWAcgvf9qvcNa/cNo7Z9Izd9kr
Z8U5bd4sZlwvdNQwaVY/eUktfPqpZ88Tl9an9uWPzTJuqvhcvWOiqKgiIflM
9qyo2Ckp4d9EBVZGWkxWTlRKVkRMRvicyB9/SAuLyImKCPAic0ZC5oyYnLCs
/Lnzoud+lxQ+KyUirSCndFnhtrTUfQmZh1eu6164pid9VV/6hqXiE/ebqhF3
NZLvamXfUcu7ZBr/3K3ygl7iY7tSTe92h0SBx5yyD+rXdSxxCWvJKJ0qbVos
agRVts7V9S/X9E41DiIbBzdqBzcyK6cDMwYDkkZtozpt4wYsY4ZM40at0mbM
4mc0A3ufO1SqeTQbBY+k5gwHFUN1w3tdMvtdkjtu2+b8677vn7Kq/xT69z9F
lYVeZgg5bP7DefudRWOeqVGV3VvAW2g7SiIiOO+KXZ+4Y81tn8xXTsEGFvGP
VAtvupLlIj8o6GevFjoA1cpAvixQex1Yr9G6/fySYcef+l3q4aW5VeUEGmfr
B7DOpqEx/Zy1OoAG30Qy+jv66gpi6uMNPDw9XOwtrS1M7K1MU5Jii4qKPf39
rN3d4zPzQ9OyXMLjjN0DLz3ROH/3ldy9t1dUTG4pv1G8euPWY6Wb989LSYkq
XXxoaZxwRcnh4iVTEalXZ2UfX7ipLaH46uYDo5dqtvomQdWdPXju3s5ngMjf
xnMZtG3m3iGfycULNuuDfdoOl0DBrZJQa1tk3KctNrD7foc2fMic3qeDuLh+
MqydCu/kk0aP+Utc3BgHN0UngJiEeRZ5lUtCsCgwBhXDQk5y8fNs0iITO0tC
zv11YILgMdCri6NkLHiTieYykCzSGpcG59DgTNIqn4vbZqKZRDgDh2CdHLri
9zlUgWDIiA+1s9C1MNGwttIpKslp62w6cYjYHhy6B48WvNU0FQsmolbRUDBi
CQxfXEFBltEI2AZsYW66v7erfHGxAwLt40H6fvDXjjlrX3bwxzukYz5lm4Sl
bYCBz0cfeZT3AptDRcFWRsZH6vt6i+prExqbmoaGB1s7qls6CwryAxsak3p6
ihobMoe7mxpKK1NCcuL9EjNCvYNdnsYF3WmrsR1reVJTdA296oLbCEQj0mYm
ctKyYjyCE01cs/3TFt2TyDoea08d5iwS0Qax42ZJ7Q/iBtUTxkzjZk38pq0D
pqyCB1KqYTyB9vg/XAOfuMDhzg6d/u3jL8HTPnsXh8WQmYipub7O3rr6opKm
zMzJinRkbzwdHoSFm23gdQhUdQ5N89e+CfDR5Mdezccd3+Oj18cfFL59lACA
O8fAW+aOKXZDb773yVSr0VRPZ1Q05q0l9LVb0T23G0IOU/peQ4XxRIfg/RsJ
v+75TfCG0oCa/wYKhYBx45aiam2nbsfktdDyJcuMXrWUXk2P7lv6Bcq6OepO
rWYRIyaB/dZhfW4pYyGFy0EFoMCSuYDCGb9CUFDxnHfBvE/BtFP6vFPKvHn8
lHbwgGbQsFHiomkCRCN4Ss1v6IVb+yPzPKXXAaIX3omKPxARvXb6j8syosJi
Z8XO/Sksdk5SWkJGTkpKSlxCTkRS9I8zUmdFpEVEZc9KnBdgRFRWIGBk/pAW
Fz4tIy6hKCN3Qfa6ouI9cdFbIpL3ziu+UbxuIHvDQPySodQNq5tqYXc14pRf
Rd16HnfVPPa1R+k1/dSL2olPbCucEmfc0lZM/TqM3Wudgltis8azysazKsfz
6sbK2uYqO0DNw7CGXmjbCL6sA5ZaNhOWN+Ec3WcV02+TMG6ROGGdPmuXvmwY
OfLWvUXFrVnDs9sibkgvrEXHr9Q+qckja9AkclzVY/IfylHC1+wu3Ta/ohkt
pDvwNzu82rtYIFwCcBMCTIVmXI1kPfBCAXvXXOvN7H3VDLyumRaLGzbcDpy/
GDB93bPN3joIGE4HGh6ctJ5uF2M0RV9Waf6n5tKfT2Oicwu6JsfGSYdz5E9I
CJg10speGJ6ZXagfGhvpbSa1ZWTl5IQG+fl6uoeHRmWl52dklvgEJ7uFpDuF
JL2x9nuk5/zAyOX3q8/OXH5+6bnxE/MgF89QM3t3exdbS1v9d1qa5iau0eEl
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
ohq/8SBo5FF8v7bXlKrnsEHoiLZPyxun7MC89gU87QPweecT7ccP5ond+bUD
HO182toFvgIfNr9/QH0mQngIPDe5sSOutjG9tqyxKh3cFwJu1cAN3MCDrnA3
ntCgt+kr1wDua+BI/YCpfcSTB47/ARyfO2nu+smW+cEJRPNpni2urVlIiV/x
T51yqAffSOz7L60SOdNZ57j2h2GbLzOBiKKNL53GQJEQkCME9HtGB8RdfBet
F9flXQLyKJn1aELpREybRSI13aqfWJc+syrXD+h3TZ73SFl2ihuzixkKLlgO
KgYHl4CDK9ZDKtYDSpH+JWjfcpxp6pJR5IRh2KRRxIRx2JR12Ix1+IxpwLR9
yLSBc8sjzXhJJeNzoo9kpW8qyCiLnJURFvubtPhZaUlhMQFM/vxd+qyIgpiY
vIik1J9nZM6ISf8pLqCK+DlxBUlFWSk5aRFxSQnla9ceXVN+LilzR1zqlozU
Yxn553IX38pd1Za8oC5yQVXqqt7FB/bKj9yUnwXceOR7TT/hulactnvdI9MC
AUzeuLW6JC+GlKx7JE1a+jbbBjVF5I9n1i7kNs5nNy9kNC3WtM/W90K6RknV
nYiCWkhqGSQwbdI9ddQqot8scsgmdc63BG2ftvTcteGRVfkr9yYz15qgUvxr
n1G7HLhD+py6f7lxVKljXGlgcqtz9MhVqzahp9lCF50k3oYpO3X/M+ij8VMN
IPgfgIEQkCJ01TFFKOaLtNmwuaqPgX7kRcfGCx7t4i/DNVy6DQOh8q/i3/r0
AwOiQJ8MkCEEDFq2RccrPQ8yjRvognMEGxLy0+Ewj9iNWR6cGp/tXyFg2Qgm
E79GOznZ/wpQKJym7rHCmuEuELNz8UtBzwfPdOJDy7ZbOmWXVaINHDNcwnIC
08pDQvzd3P1cHVzDvNxy41yq8pyGukOy0y1szR/bWGuaWKrom9w3tbhXXhQy
N9pCX1vjsmEo2CSLsr7FQ7Doq3QKmIxf3N3C0qlgMg5MIYDpFBibjGRTkQzC
Bg2HJGEnqPgZHgO8z0FssuEMIpRFgm4xcQd8yg4Tv0vGbJExfCJsF4/Ywqzv
ocFMEpyGETBH8GurTPwqBbdAxsxTcYt8BoxDgTCIqwwimIaFMAhwFgnOI2OJ
qBWBryEiwATEMguL2iTjv+zwkWCQr7O1iZZKdLB7dmZsV0fLYHe7ACZYNJ5K
JDIocBJ2BrXeg4V3UgndHEovg9xKp3VSBS+oIOzGNHJ1tq+1CTqzxJ5fP4Qj
gSPuFy4C+EIDjok/9ggA8P7nezbwaf8kA/v1++H+1vYW/+jo8CfweX9zt7Ko
zs0uPNKvzupdov5bL1eHUF+PCAdr3wCfWDefYG19m6fqlm/MQ60Dkq3D4v2T
iq2Cg9xjA53DAzyis52Du10j1k39V1669z/177nqVXMndEg1HWJVT3ueNK4c
3WQYMmubDtcJmXjmXGUS1VE6gmT8NWf880/+x08U4BP5+xEd+PoB+PId+Ajg
VvELtcO9le09Ewt5w2OF81NVI21NzUlLXa41/n9fLP4fUJkQpO1fmCmF1S5R
/NC5n2tXfnIDPrCUvrwXAvaEAPLtHywn5nbYHCcusSY4O78vOmzSPLBTJbNf
NLT8n6aFKnF4++oGnfKDhylAfCXlc48eUCd0shqNb6sFPophWmdjvGIrAvKr
1WKrXwV1PzCu1XAo0PNtsYgYNY6Ysgif80iGBGat+WXOB+cvBhQv+hSAPHNn
nbJAblkQt2y4a8aGXS7cPg9qkzhvFDyg69FrEjBm5jepY9+tY9vx0qTkysuI
0/LGv525IyV667LcdSkRBVmx/5GTPnNBWkRS+IzEqT/lzpxREBW/JCqtcFb4
/FkR6VOnxH8/LfrnGUlRUWlRsdN/nBIVvXBd+cmt68/k5e/KyD44f+HZ+Quv
z19QlVfWFlN4I6akIXvL7Px1mwsP3G++DLzzMFBeI+aiWrShf+dj85K75kWq
Ls3OSXO+2fMe8UNG3pXWvhV+CZ1x+f0pZRPZ9fPp9UstHXPNg+uDM+yGPkJh
PTy1CuyVOGoX12cXP2oYNmgcN+VdvOFRgBRIr2f2VY9syx955tildqv6N5vk
4U3q2C8FNC4aNI9qNo1ZfBeIUzJbFrrVIKRUK6RSL68VbWAQqn6rDojQATyE
vqUI3Q2O+1vU9hP7RbVnCUqmZX/zqzvnGarl7KtnUffCZ1PKDiakOwI0/PUF
VcoAzfbstk5di6T7rlWasT3awWXaYWG6EQaWMaa2fuF2VnmONsmahua279xD
PGMdnHxNzGzV9C3VLHyMA0vVXFukXpZIv2w+fbdc6W2TnktveSdhGX3E/gDw
2WwShUFAwWjoKR6pZ4tcD/xcZtBHWHQ4ngrBM2fJ2z0IbBGfM7BLXvnK4m9S
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
dSn5N7IXtS9cNVa+ZX3vlsOZx9a3TCIvqvorqATfNch66dD8wLJK02fQOn7B
JhZkGzlsGdYZkTcdlTeYWj6WVj+aXzEbn93f0L/W1A9uH0M0DaLz6hAxJWsh
BWs2saNmYZ0uGaOueVNmkf3qnj2anqM67m3qXt3mMbPRVfCgmI53RukaTm1q
scQH0WinqIbhUC0g/u9AjNCerlD4PQWlNxkn5a+JUu9jlBocX5kYR9+yHHrh
u6Th12zlWWbs3KrlOafit6Qa2GkS0mAWNqjlTzhlVBxkbQF0Pzm57FD1319m
gqKyChU0UtU85xU1Sh/bZCobmdpGu0dlhwYExSRF9Gj5WBbXVFaUVkYmpFp7
h6pom6g+N1LTdtRyDk3qmJ6As8bm8FMQNHxzl33wgU8/oFPXeEz8Hov9kbd9
RN/cIxG2MBtcDGSXCvnMJ21RYTjENBO/Qqcs0Smgvd2FjzvkTcY6g7AssB40
3CwVO8siLvKoK3w6bJuzIeAJFQumE8CbLOwOF89i4Li4FQ4BwqfABG+1Q0Ps
0OBc2jqHAmXhYZsU5DYdzSHBOWT4FhEtWNskDIsEY+JhTNIaVyBLSMsMwiKN
sMShwZiENQoORkTDkGuL4LmJxanh2dnBxaWx5fE+zNr86uwEAb1KRMNJaNgm
izLR1xbi7eLtZJ0VH1FXVtDSXNPd3SWIu5xcw+JC197BopzK5NK27Kr+rMqR
hNq+mL6xbDptlkEEwcBt60sNB1srLPrMIrh3YSpvbakPNDS1y/oFX6ZDIOuQ
1amJmfLZ2Yr2zoS8PM+wSHt7e2MDPVNtDUeNty6PX/o+eWXl5BXrGZB8467h
k2cuDY2r/ykBgdM5fsn5T0yCtXyarJKhVjlIw6wN6xjBvjZhETPnmAEzS4C+
8R9+7tOuEt7+Lq3fogJkWTKpkzhgkrlsGLvy3GFSI5Bi4zGsZtJg4l6NYf5f
lZrAu1FgH445f0mUr1weYXSgp7W6va92vK9isqJuprZ2srkJVF4+UFzSVdHc
llcXm93oWTsSkVvlm5fvlxVrkuR1oTz8XytVEu/nHn5jvf5KU/5FkwQ2XwBc
r/X50NSSAB2vIPXQAVmvaflY1M34lYe23RpWHS45yLel5L/7rj12SgYmvE/S
jmlCwIB+dGnzm2RYduNmftqoa0DN06DW+4Ht953y39hX6bmPvYhYME6YdUsa
843v9E0e8kyfd0ibd85c8kyb9s2adc+ad8lZcyzAm6VDbNKnrSLa9eIGXgeO
KzvNPHCHaLmDrJya3SxKTTXTlO75/0vBSujcw7MiylfOnb8tIXNN9IqYiLKM
zDlxSTHxs6fFxc5ICv8uLXZWWvyMnJScnIT8eRGB+7kkcfrCudMKUqIXFBWu
Xb9yR+mGiqT0LTGx29JyT+QvqUrKqUnIqEopqovJqAlsjvQlTQkFLamLWnIX
9S4rm9+8aiPy1O6lberZO3YyLwPuGmZreLXLvIy/Y1pln7TkmrpoGzth4FPr
HN/hHt8cWThY2gsprlhJLxqt74M0DYA7J3Atw7jSdmJGDSGpGuuRDjKLareI
73HOHLdOHDf2H9JxG7UMbH3tVK8a1GufAQrNmXTyL9W0yFcPnHmTRjctw/mG
RCAynp9IkSQhwEFI4G4AN6Gfodf9/fyUXCqVbCrUbXNMgoteh9Y9iRvV8B9x
8BpwDujUC+56FT2kHT1h4TsqFAU8f2QD5NwE2n4DuqQ+Nb0GRlI8Ve1kX1aJ
+a/dDmkIycus6ejsnCRm5AzW5fQVzrdit5gQ1EZdb3PrzNAoaAgOg2Awa0PL
I4Qj0uGPbTYHR6Ej2JtUOgGBnpihwlc4GNQWFseD43bh1I+EnY+43T0Yk7wA
3sYjmJhpIqKXSehnE0YZ2BEODnS0RebT4RwKeIu5vs9DC/QJh7zKJEF49PUt
NpzPRDCIS2QBQGjrmywMh4lko2BcPHKTiOZTEds0pECKbFE2mAQYFQ1hE2Fc
MoJLQbCI6yeLJGAUlE9A88mILfI6g7hMwSyQUXMM3CKfBt8SSJGTwvuFke6W
qoKslLiw+EjfpJhAHwfzIC8HFyuTYF/n6FD/gszkzua61OgQV2sTHyfr9NjQ
sryMjvaG3t6TA9j6Vs+KluAp8EDrUOfA3Owkan4BN7uAmdigLH865h/t03jM
VT5z+a8qsKNfv/Z+vCcebVF/fDipTj/aP9jhk7nb6zTqJHi1u7osMykmLDk+
ws/P881bzZs3H714+kpKzlhISPS/fpMR+i/hv/1xWdcoeHSO/Vd7M2BgBWka
knJdP0IjsFs3YsEwfV0nB2UbAzYJXzSMhtgkEw2jYS99p9SCxo1y5l9HtqjF
1T8KL9ZKbAltR3qWoO5bt962HDSwyNGzL7D0yKZs/7+Fxz+AYwaTeFKgBnwV
PG1u0js6O4py65rLh/vrlptbp+vqZtobwW11q02NM5WtbdFVUeH13jmjqd4Z
ARHxsXFR0Uk+VlWJaqsdKrtruu+3/I/ZLsc0029kRy4mdnQ8L728wSKqSy8V
Ju439UfQ9I3guXs6tYYmHb5VO5cbf5kY6k30FAPtKic7XY0QvFjPPmtct3gv
tZkdm96nE9h8JWj0WuDoM4cydZtcU7dOvYRR++QJ9+Qhr+Q+74xp76wVnyx4
UCHSOx0UkAtyygGZ56/YlGKMEhfdkhfcQwbME7p1g8YeOIw/81zWCF22Ch1y
ti/Sex5x44r3v2TNhcRVhCXu3xe99OgP2YtnFf8UvnxF8fwFWWkZCWFp0XPS
Ap4IYCImIiMhLScpd170gsQZRRGBODl7QVz4srzs1SuXbildURGRuXFW5Ia0
3EtFJS35i+pSCuqySjpicmpiShoSVzVlLuhIKejKXDa6eN1M+ar1JXXvl9Yp
4vccFVVCn1gUGQT0KbxJVVTNOskRJ0Hs4ybe+TRZhzZZB1d7JrVmtsxWt8Ir
29a7x/Cd48jqrpXsalB6+XJmDTazDuuXsWAe2WEZ2+WRMeGdtWQRPqXj2m8R
2PrQsvSGTYtKIMi3GBuWM69hm/nCpuRlYK965IiGZ56XjUWXo/LXABEg4u9A
ihBg9Hu5jYa4c6mQz/wl7wFTt0xb/9RbPoWyPh0PXbudnRsDPUutgirVwht1
Q5tt3EuUIoFXLiMWKm+OJwKAtr9a2ddf2q/NldLM/y10Q9G71CMiOTauIT4X
7ORf4+kSVtJU3Vrf2FZaG+TlmZoa3VNftj7evDBaPgWuhFLaCZRuHLyTw174
8pMJHPGOKAQOeJGLgLLXJsiL/dzlkS849HfK1hf8e/I045B08JG9dcCiHG8T
jrfwuzQEnwQlIhfJqEUGDrJNh21xNthUKAk9j4FNbjJg2+yNLRaCRV5nk9c4
dDifjd3kYng4JI9wsvgkzDYFs0sj7NCRPCpSgBEeBXkiS0hwHmVD8ChgC5MA
5eEQfIFKEfwEv8rBrtLxi0zi6iYFRUNDsWvz88P9zWWFSVHBvi52LtaGbrYm
RhovrQzVLQ20IoJ8c9MTW+oqxga6c5Ojo4O8c1Ni64pzmqpKhga7entPbE5U
loV/tENSUZ5/fHF4TktyeVdqTUtqSYVHQERCfHpMSEhUmH+or31SlF9cdHBm
WnpqjJeXi2VdaXF+ZmpUpHNAsJ6Xt6qru0ZRbnKoX6SvS1RCRGqIf9jbty+f
PL9pYHD/6bMgQ5O4ygZQemFbQmFn9wRZYCQPAAD3HkhqGH5lH3fZKFo9pP9N
2KRWMlQlBWKdDDaIWnkXvvwuGqkTDlMNWNRMgDiW43VSJ1/HdDwJLjdN7U3o
w3oWzD61Lnnh2BoaW1baPJNX2c07+PDrZCrfx+/fj3/++vpX8euv958+YIiE
xtae0sL65rqJkS54eWt/Xn5HbfF8Vw28pX4hu6opriavdL41oC5Xx9/bwifR
7f/h6i2g4trSrVH679u3+3b36RPD3SUJEhIIkAAJEtzd3d3d3d3d3TW4awHl
7lUUDiFyzomc/Rfn3DfeG6/GGsWuYtfeDEatueZc3/fNzyfT1sDFzVK7NEt7
ZsxyYycTeVgO3crZWk8bnEop66hLrphzSVvRipkS9u8WdBl+7jz/zmbQN23b
qfc3pmbHOrMAS3ZA5+MftVzAul9qiKtvyZpm/I5HLcoybfC1f4NcwMiLoBUF
1wEtt2abgFav7DG//Img/CmfrLv2wa7Zm57ZoKiSQ6/UWffMceu8Sb2cefPi
Lf2IaY+4FW/fScf4FvfoYR3PAQWP4WeRQ+9i+4w8ilXkHJ8J2bBzGv7M8VZU
SPspm4zUvwXY7/P8F7eQOJ+gAA8PN+sj9gcPOdj+w3PvAfe9h8zBxybCfZ+f
/Sd+DlYxbnYJXt4nArxPBEWkuQQVeAQVuARe8Iu94ZPUFpQw5pc05JLUYxPS
4xI14JUw5hLT5xAz5BMzFXvs8PSJo5C61xOtYGn9mGeG6QrmearOjYoOjdKm
pUoODZaxc+4Z877Z733Sx5wTWh2i64Jy+4uqVmo6t9rGob0T0Oruzezy6ZTS
hczG/exmSGTxum3sgE1cj0/2YmjJlmf6hk3orKpH80uXXhXPGVXPZed0hG8h
WC+w8p1vpnNqrVNiu31Yj5Z11RvDQjm1AElVu8evNCwNvJRd07kCm/nDxl64
9pg4VFmGNCr514m6N7527nTz6owMqvcNz7KLyLKPLLbxzffza1BNxrM4bjvE
1gEzFnd9dopYgPehyRUt/zLKMkictfLrWD8A0DRgB367g7skwuCgyY1fkCfg
2Y2d+flPWMQP4tEFfBJP6L/6uv7x6yaDOokhvEdS9pD4QyIC9wUCvYFuX8Jn
b1FDn9GjHzBLHxCwMxANvUyl7t1S92/QO0TsIYKEODqGgSmQLQL6CIdgCpld
EnqfSTCI6E0KbvcugMtEDwr4lAo5pYCZB0yKckFFXTJQ1wTCJQF7hsecYKBn
eMQ5Dn6BQ56SYOdkBB179Id1AOiUAD0nwU4JEBoWxGDSGBSEBj+ko/ZPMHtU
3N7x3U4sE3mYvz0iwQ4hWyvrM2Pvh/qmB9vmRroH2mrKMtN8nKztLIwtjHQc
rUz9POx01ZU0VZ672JiGejtnJkX3tLX09HQxZ1x5b3ZSRV5MbkNE7rhbbI97
dLNXdJW1b5KesbunZ1R4aGxmalyQn6Ozk66poZaHq4ulidw7Nemq8tzE+PDY
GF9/fxMLy5fmJmqxkSF5yTmVOXX1xdUVRQV5mYl5eYlVVZnLm1cLa3gQnDaz
cQhjfKF9AybBl47xNZaxVeru6c9dc14FdmlHLqhHrehkgnVzMPZZa0aJi5pR
s9qRK5rRq+pR64YpRw4VRKtilHX+jmXWmkP2vEvWqLZ3obZrVlDR5Mrm7uXn
H2gS6eud/f7vP358/vr9T+IDMC4+7cOw0wtrVQ09JVWdrR3zA72g4oGe3LKu
+srF7pqN6oqxnKLGlMaOfgTeo6xLyTlayTBUyyD8pZLLK3VTOy/rqFyb7Nas
tuHewcHxpr7WtI6qsNI+j6QN7cAZcddSOY8KDYdBXetl6+idoFHq22IMiwdw
11Sr9yHQ9LffBgyaW+rMU2fsc6FqEdP6uevK8T2qbgUG9mUG7uNKnmsagaOO
cQ2h6cNBOVPe2SOOGdMOeauO2TueuXsxlRCvlBnPzHHb/Bmd5Enz4k2d0DHv
xFXfgHmPhEbf5CGTwPbnHlWPvatUQmo0nJKeSr55zPFU5IEMP+tLccE3/FzP
H9zj+88jrr/xCgtxcPBz8nKxsfPce8R9/2feh2z8bNy897l4Hgmw3ed+eI+f
l+uJiIiioIiCsPALYdFn3EJKwhLq4k/f8UtoCknpC0oZ80iYsIvpcUoYcDNR
RcKATcyQTVCXQ9SYT9JGQtzm/lNLThk7HYciJYtMmXepj/XyLULH33h2SpuW
6QcOuyTPBxdu+ORMeqf3O8W32DOX+JyRoqaVsqaV3vfo/ilETddOTtVaZvVm
cSsqoWLNObHfMrLTNWUyuHDXP2vHN2nrmdeguv+UkfeUjtOodeiKZ96mWWKn
QXiOSVC8uUeKlmXhS+sJbsuNf/njWfxgLJFQFt+9+9598l4FOp65b21qVZ0m
DEMWVFyatDxqDT0bXMMGAmKaQiMyg0JiAyIL3UJa8yLiX2UcstcDf3mdQajw
Beq4/3CK4P59JcTV0kLoTYmE83b/AYDAXR0iMKv4b2cXtI2l1Rv8KR1LpmDw
wO01wMCcIRax1NmTL6u3v2zSKMsI4iKYfIin484vrj+hIdfQvTPI+jVy4xa9
ewLZpR4dUg5RJ/jjM/wlg3kdHJGCRR1jYSdkxAkOzsAjGIS7QcPCKJhDCuaI
joedUTAExA4JuU/HQ05IcAYBziAfMciHxxTQFZlyTiJc4OCnTGaChTJVzF2n
KswRFbuLh6+jjhYJMCbxADPIECoORMYxhRWUjDy4gyn4Ng1zeIwFH2MPSXAQ
FX3EwKLOCCgGFkPHwJiowvwgGQlCgtbWpyemhrrfD/cwBU5rfVVFbrqng2VU
kHtpVnxFXnpzTenE0EBHZxtzxlUNdhY0d/smtmRUHtiFDlp519sGlRk5xalq
uMTEFfX2jKyuzQ721VWVJqcnBZcUZKWn6qdnuK8ujE+MjowND/d1tTdUF1aV
Fg12tq5Pz++vLG0vv4ccLmDReyjkIRqBuL2rs/v+HfjTYxI4AYCikS1RHT/2
1z5ytqVmcUtORbh30RCNSIRmIlE3+4Nt9pR+8rRGzKh2zOS7pAWD5B2jTKhZ
DlE3AW+bfepeQreK39B0r1JzjPXLqBjdR3/98eF/a3DuDPSZN/n++fbTxckv
CMzp0hqkf3K5vn+0oK6tqK6rvmu2qW05b6y7sG2ksWmxrWq6saK7tLwnqXQi
owNpkzT5wiFdySzyjVmMhmmqtmO+XmC2SWyeS21ufPlgetFKWvVaaO2sY8a8
QciBmNM8h0ujckCdnc+YbSDIrPLKsIMk7VLuHYUEZqSAuv9zZ5rRbWISUm3Q
DLyOPDQIHVVPmHgaO/rKrcrOssTJZcjQb9siaioooSI0bSwwY9Itfdo2Z86+
eNu+ZN+zcDeq5sgrbdI1fdKjcEk7edq6aE8rYsY9ecsjZMEmqc8mbeRNaMMz
50pxo+znRonKWvai/EJC9+/x/4dVgF1YUPg5O+/je6x8D1iFuVjFBTh4+TgE
+B9x8Dzk4GPjFubiE+LiEWIT4LzPw/ozP9sDQREBuceSyuLir8QklcUevxaQ
UpeU1pV6YSQmbywhayEiayMoa84vYyUgY8X71IJT0pRd1OCB0DtWQQNOMWM+
cauH4masYhaaVvmKhqlPNZMltNPMQic0fXpfWNeqOreaRA4HFK45JQ355c54
Zww6JHdGpg/kVi6kVUz1TCFHFwidw7CKpt28hq3KTlhK5bpH2pBtdLdbwlhg
5npI1l5kzp5e/JZJxIymQ8M762ozvw7HVCbAjuuF11on1FqHlL80zZK2bvmP
bh2v1xxP8Lxw/NrDaASva5eSRYKVbYG2fau657Jh/I6ub5NNSJ1tRIN7xlhw
zlxoXFt4dHNwZKd3yJRrSK5r5YJs3JS0V4O2gdfZTDXQ/YqpT4Fxvs+t4awy
YX+3WjUrWG/v756am1rG/fgBfDj/QiaSIeQTDOkM/ema9JF0RAEv0hibpNM1
Im4aD55BY1aRTDAhws5p9GvEEQN2SDtCMI5odBidCiWS4Rg6GUYkbKEx82jK
EoG2TSLuYbFbRPQOFrWJBR8S4WAi4o8BhxDhIBxkDwPZwjMPYFsk1MEpEXxG
htKZsIDap2A2TgkYJv7Q7mI0MCYVYTINEnKbiNjGwzaZcgkPWyfB9+gYEAEF
IiD3cPAtEhJCuXODBxORzHd2iOg9KvM6yINLKvqaSryhEa5p1Esy9pKCZ3Kb
MxLyx8fTCwqSQUBdUnEkDAJ9p4Y2Jvq7RrsaVqb634/0Lk6PLExPtrbd+Zm4
x1Z5RLe/Ni8NTQdr23SpWVaZe9dqWaUoqvmVVk4RyXd64cM5nUQAg/bWjg5A
+6A2JGyOTkeR8CgcCk6noU+PCb9cnt/Srr6cfLminP5yffLH1gVTc1z+8us5
9WoZAM6/A4wvwOcPwI9xBMo9r+mRkhubRoKMY5dOMMgm6+Sl75FWAkMv5VY7
5XeTnAHt5AG1mJ638QMG6dPm+YdmeRjjlONXPhij2BuvnC/W0QeaTrWW/jlV
fX24jzd/tN/4cBfA+UH/o6nW7x8//gYGUybnDzoHV6u6Jko7hvNbO4pbB6p6
JivaphOHG3N7BxtaxurKW3oa+nt716Nz5sx8l9XcppSda41DCi2DSox8K3UC
B9Qix9QS501q6h2yRz3iF8LyUIHFGLv4A/UA8AObdb7A1Rf+rXbRna7FGL0u
4EkSRFPxHTDeBnSqAcX3gCYucKmtTdKIaR3w2n3G3LNKI2pELG5HOGTjlfeE
pd+SXdiKd8RQVFxVbM5GaNaSc+aSbeaGe+mBW8mue/5KYOmGXcKQbdKQQ/by
u+gZy/xd1cAR27RFq7DJNzH9rxKHHgd0i1k1C6rkSUkFy4roP/oPFyvbw5/u
sT/gkWQXkX0gJMzKwSVwj//J38R5uPl4OfkEHvFy/8zJ+4BbiF1AlEtIiI2X
42dO1v/wcrOJMGmJuKSqiKiyiJSaxFN1MXl9SXnDx4qWsi+dnijbPVZ2lVL2
eKriKaDgJCxnzcQTNhH9B0I6bEK67KIm/MLGnBJWrBImzzTCJNSCpDST5PWy
dL275G1qpI1LZK2qDYJ7Qyp2XVImgosXPDNHDMNbA6Pak8tmY7OH2kagfROY
1gFwVedeQz+svO0gpWrNL33cOX7APW7SO20pKGsvLO/IL3XFKWrktV3BW9cy
Vc9K3dB+r4JN+8RpVadCDc8SRc/8xw4ZfMZRKhYJdi6ZgU5plq652iY5mqZ1
xv7zrz0nXvn322fPu6ePWoVUeCTUBxWNRZbtBWcd+icdBCes+UVOWaaNJlZ3
eiRkaqS2PwwYsI+rA0aC7taCDBZgMTQ+Mef/qMQIO+Q5J5W5hERVD20AAA4A
fj2GbVyRDo5x+8St6Zudlavt1Rsi5JoMu8EdfIDfbYTiyBAIcgt/uHVK2j8h
Is+I1EvSxSXl6orBYNCPcPQF4uk8lDwOJ73HU3ewxEMc9oBMOTqhgBg4LBUN
I8KOiDAwA8eUJ+hTPIpJRShoEBl9eEoAf2AgP5ygr8ngU+z+GXYdBwcREPtk
3O4xDkTH7TD/JAp2E49YoaC2adjtcwrkmoY+oSJJyEMcdAcPAdGZtIeIZpAQ
BNQ+ErKKhzIBapeKA2PBOzgo81IHFAScgYWfEzAXFNQlBf3lgnpGhF/SiV9v
zj5cUD7fnPz++fqMjPx4SvxyTmbgkQTE0ebyYlPzXUc/u9D+1yY1Igr5HhEQ
a58VDfMGS7dGW68aQ6usmhrQhz/KXD7fAjgY7vPNl4/X3z5ekb//eleSi8OC
oLDpH9/x/1vZ/0czwGvCDzKCCgdv0Cg7v3yFYgjT89sV6+Du3sXq+uG6qIqC
l3beokYh0jaFgWUk3fA9zXCIcSJZJ4ZknEw3zjx/E3NmkN6nkzyuHtNtXbKi
lzppVwqzLSaZJFEFDJdMI65cUm/sIyEGTvXppUO0m9vLr0z0+PI7cI6lbJ2c
I/4AE+CYctHUMpmQ0phW2p1R21PWPVw7PlU1NFbSNVzUPpjU057W0l7Z1NFc
3VBTWlZXPRqavCiu3sGv0Wcas2gR32IbV+2WOW2euqWbCdMupJvWr6nHTb4O
nDcOBJkEgZS9JwQcRu7bbqgmnVqnrwY3jr/OWn7bDAgYLy7FBwC9HEC9OFDz
+nQkNjIuNrAGZJFyoOvcZ2Bfr+nRpph8xBkDF0tEa6VCTcPnvZLXAvP2ArLX
A3N3Aooh3mVw9wKQV966Z95cUPmSdcqQdeqMRtSkevCURdaeRvC4ftioSeyE
SsCQcswUt1XT3xXyfpYs/PlhCBeP4z/vy7Gwif1LWJGFTfbR49cP+bg5fv7P
k39yq/1DjoOTm4uNV5iNiSFMySPAxBPue+yP/s3B90hYiF9aVERaTPiFgJAi
J68Sj9BrUSkNQRk9yeem0i+tpF7aSio6Syi6iCl5PlULEFd24ZGzZdISVmF9
NkF9NhFDPlFjfjFDTgmLlxrB/+Q0eCTpoGKWreFYKaKRImda9NKu4aVjrZxV
iUXUSHAVk2tt+mRPmyf0+kQ0ROdP5tVs1HQc1XcdDszgK5o3art367r285s2
Y4oXvBNHHaKGfZIWA7P3fdK3wyL7bXwbzcNHmULvqWObqvuIU+yyU9iwokGG
lEmSnEeefEjRU4c0BZN4e9O8MPOyUCs7J6t8A8cFjRCYauR74/TeoMrpwKwJ
v4T+yLyBlOrplEZ0VPmtTxrdK34lOLHLJqExIrM8uKDtdenOf6LXXrsWItMd
gXYVoJYHqJcFsOVvFZ6KqcdIe/aJmYRouNuvNhcDHz8SR0YBMuZX1OHx+xkA
SwRgxI8wNP0IdroP/4wiXlAI+/C1zf0FFGyDjFs7PT44P4bTCCAccQ2GGoHg
h7HHE5jj96hjEO2EeHp1e8q4pJLxJ2TI+en+ORFzSUIziHAK/oBGAB+TYDQ8
6IyKoGJ2SKgNEnrzlLR7dQz6yNi7IG+eE5Zx2G0cbBUDWSZjNqn4XSpmnYRa
pWDWGMT9U+LBCfFu65WGPiLA9yhoCBWFwOLAFNJdezA0Yp9IPLhiYC4ZKCoB
QifA8ah9PBRERoGP8czbwXHQXcTBBlMTQXeWIDtL6KM99OEOHYv4eEb+eEYB
mFPv1+tfLik3p1TQ1kZN7Z0HrJ5Dia5dnbx68WvDOqV3hWqGKZZeeeZOqeZW
KZnZk8vz5zub9I1l8MjwHOwQfriHoOLwNDz58owBh2/uH4xicdN0wjpkb2u6
dxW5fbY+BlmbXjmlIk8vQF9+QG+/bn4HrmG4Lacgr4TC8hdmnnxvPUX0Y157
97iX4I3iIRrBIP2EfdsilHURXDN1VSli7lVEt3rciGbcuF3ZvkH6qk0+1CwF
oRl6qO4Ddcs498qm2QTMalnmpRR2nn/89U+jIwC4uf2E+/qDcdcAB/gdjTmv
qh9LzW6v7Vtrm94q6OpLrKlPbW3N7xvI7u5JaGlOrq6vauhorKurrigpqen0
SZqWMOgQMhxRC5h56Vv/LqjaOWfZvgBrXXRiUXlpUkBUSYPIxoDVwzFaoVuK
Qd0i/i18jlPO6ZcF7TcuVYuvy0AKKbdmBgPAcPQdPU5jChzn0o5p0yqQSe66
WdbOPf1uCYsBDctCD98Mi+BCg+Q+m7xVw8RZvSycchEQXLEbUAoJKsH7FSKC
ckCBWUsBudPBZUsGyb26mfOv4ucVQ6YNktdVfDrfhA3qJ0/o+A8q25TJqkXz
PglkYfVlYQ1k+bshO9dblv9i+8tPPCx/5fk7txwH7xPhhzzi/+aW+i8+Lk5e
fk5+PuZgFxFgFRRgFRBkFeB5yCvMKyEqKCMm9kJYWElQUpVXRJVbSI1HVEtE
xlhIzlziBRNMnEVfuAk+dxVRcHv8yldM0UNAwZFbypRDQo9bwohPzEhAwkj0
iYmInOszFZ+fuHQ4pBzUzHO0nWul9TMldXPU3VrkbSqfWZWaxgyGlu955s8H
lSz5lq2HpfX5J3Zl1W409aEae+H9I6i61vXG3p3avq2CxvX40hX/tCmb8H7X
2OmArL2gvKOU7EmPiKF3HgOqHrOvbAZNvSYCY2dtXRufqkWK6Mc/ti546lot
bl4lZVCnYNKpZjCu5h772q5GxWxY1WlcwbteO7E6oHwmKHUhPHYsOWckt2G5
pIOaU3cdmYX2S+j0SgzzT64wDCjQiZvQKCa9yYBoWGekWDrctkcAXW+Atn8C
PVy/jiUrvQwRtpp/YJAr5+nZVdoOnAH4RSjzu/b15IS0vvYDhPt6gD3Zx+MP
yYw96gfE5YfTj7hTKoIMJtDgdPo2hbaNwS2jMDN40jSRNIkhDGFJ74/gM0eo
dQQSgkBhcQgMFnVIQe6e4LYJqD0S/hCP3sMhd4loEAG7zdQ+JPw2GrmMgS2g
Ye/xyPljwgqNsEjHzNDREwTiERm7ScRsELGrFNwGAb1Iw66ekPYIyGUCag0H
22ByDzx0lwQ9JCDAJCgShQRhEHtI6DYWvU0mgs9PEQwGlEA8oOCOSOhDEgZK
JyLpRBQVDyEhDoiovSsqmgDbp2PATHZERh0y9dExCYpH7p0SEUzGwpRXx0T4
5spCVU0VcyrK69ooGfso6niLKdqrm/vbBoQHJMcHxEQZ2TnlFzSCoZSL8y9E
EmZnb/HyFH9xSjyjI6lEOA5+l4DHPCATIBQsBLy5c4a7OMff7M2vHoKWvnzG
wXELFzeo21+pN7/+vgNG23klJZfNKJonvXGpMY1f0AyZ0Qzf0o87eB20oB4y
Zlu6blM8qxbXrhJVrxa1oJ28Zpaz51KKNk3ZN8+C6ifs6YVvmkTs2iRsWIfN
GntUmzpn1LSO/bnN+g04/gZcfvt++fX72bdvNxcXVweHxLqmibLGhf55aP8i
qLBnLK2hKaurq2CgP72zM7e+J7e2p7Glp6W9p7yuMqWg2TauR9iiVc57QTVm
S8F3UM2v3zxhwyYDZVdCtK8mORSdqeadymReqSTg34UuvghpfBxVI+/bFpNF
is49sWu5fZq1L6yVTWwZAtrf3jkgFbDcdATYZE/p1p1rZoBl43ZY3g2Luo1F
uQS8t5edc5fojzKuTA4Mi0nWSV4SzPniUw4KLDsKKkYF5mDDUg/CkmZD0ieC
SufeJQ6/yV5VSd5+EbPwLnH1lW+vSdKo1V2qyayJbpCPzAuJPzuRsHCysPyf
e3/8YGVhcTbWYWH51z8eiN/7N78wl7jAIy5ODm5+TlH+R4Kc97i5HvKKsIoJ
cknws4nwsQuK8D0WEZITEFUQEX8jIK7FLarDI6YnJGcmImMpIm8rpuAm/sxF
6IW78HM3kZc+Ii9chGXteKRMeSSMeMR0eEX1hET1RcT0+CQs5RW8JV64CMm5
v9CJe6yZLGuU+9yi5LVzs5xlubJjjUHwgHfhsklEj3/pdvIAKbX4vYVfdUYl
E0AQLYOIzgFoQ+d208BuQ/9OcdtWas16WNa8dfCwTfCYV/JSSO5RYtm+f+au
umOXpmuXkVOzW2BzbFKfjnW25LtEUf0SSbMGGcsmOdNaeYt6BZue5+b9LKF9
PK7daiatRhYVb12yteJqPSu2QlI3w2JmY7LHs5tWirtRFc20rPyNoIRctyQL
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
AIeYww3cNvQYTKdCbsng63MU6QMOTYEQMds4+hoUvIKCo2mIj6j9C+QuZW97
a3ympak/Lacm0C/ZxSkq0D062yu6wjOiwTu6yc2nz8mjzcCqVNMwR1MvT00r
U1Mv39yh3ti83NahMixsMD1jJitjMjNtrLRwpr4G/H58ePn90tHOHhYOo+NR
F8fEDzT4NQ1+Qdino1cp0EUydIWB2TvBH50SECc4DBW+cozdoaE28OBlGnL1
mgw6w+2Roetn2P1TDOgYtU8G79HgoAs8/JxwREXsMj+LgqyQ0ds0EhNJNphg
QifvMmGEitsmo9cp6M1zChy0t1hfeSdzrs9uTui0ufcjBPT+XZntt7NvX45v
LhCtzRmzk/W3F1DgB/XiHEqn7Z2cgE/P4TfHKzQKk6VswvbngO83P24vThCH
l4gD4IT4hQJjoKGHuwco4uX0HkFa111C1/apY6BORJ1dxq5a8IKs76B8+ODL
kFnHCopNKfhd4sjb+B6TjB2jVLpaBFU9lmhYSrdPO/SpIvpVY/XDJ+xzZ9xz
xxxTG7yyq+0j0oRfKEdlF2BIx3cC5/e75JYvny8ub+mHqEPyxXnv2HRz90Rt
+2hH+1RH08jM6NxQY99o19R411xlaW9qdltB9WRz11LpNC2peT+oYFndo1XQ
uEA5cEQ3ae9t7M7LiM03ySCzAox5HsKujGSQBTHMAD3xbhNUHX7s1qWYMcjm
3CJtO5hUAIuoO9CuOv1PEP6lfjow4wZU3+2WfK/Wa+4nKScxlCJuotyzYhy9
pDyn/xp06hfb/S1CEPD/W11MsnLOr9olH3PySzqSlGeTXzLCZZk65Vf/e+MB
Ro6pS6+KfjHNw9ukzZikTKskrWgkrdhGjjoFdOt7jcl4rj7xmn/lUabgGvea
RcrrtRdjafdPBBFkYdH/Jwv7H+rm7vFvvv8Rkv43q/CD+1L37+n8930XTq5/
cXLw8nNJ8XIK8XBz8fKwsT9i/enfXI+l1GSevRaQesYr+urJcxdhaR/mOvhY
0VFIMZD/mZfwc28BRR/e5x78Ct6SKgFSqr4Czx0F5axEpU35JLXYeF6yc8rw
8j/h45N8yPOaS1STT1yb97G+mIKbpKqP5OsQMbVIQfVoedN8FevKl3YVWl6t
MqYFet6d6u5tNj6dMfmbmU2HXqlDQTljpb2QmiFYxxS2rgvU2HPY1Act79xN
LF3ySBqwjh5wjJ+0jez0TJuIqFz2K5l2zRvW8qkQ0o157VxpEzNhGTOrYFkj
aZIvZ10mZVmo7N6s6ND41KVU2q5Y0aHGOKTPImTQNmggMGspvmTXK2ncL380
snY2v2+3bghcUr6WkzRQntxuUUp0DF5IjF71ixo1zRjUSW53Tm60j6l5lbb+
Pyk/WHyunDyrgFXHu1aMTLEz9iy9YEmKT9PAMMHEM90iOnvg6IypsamXv1Co
c1R4Ixk+SIavfrqE0k83Lj7BPn+7Bj4C1yTG99sPX3+5ujinn5yeHcJPpmbp
VdWonHxCZBw2JBodk4KPysSFJB0FxG37R6O9wyEO3pv6duPqxj3qRm1vLHt0
bNv17LvsQkZ9kqYTC/eKmmAlDYfV3ajhuW/rUBKC9o12A5zcANcfv3/88OXq
9PQEi7/Akn87ZtxgiadwNGFt5xKOuIQhP2OIDOwEZLMHdTB4QV5gUBbJ2Bkq
aZmEXyLjtkm4O2dpLHIfB2WyDqaWAVMwUDpy+xi1c4xkiiAQ5Y9xjATRkQdM
kGEeUNHgSwp6e22x6o/G5Z8+3mDQ8PNL+uXJ8bdfPwPfv9xenm6tT1eWZQ4N
1p0cQwDg7NdPBAr1CIXexOL36eTlMxrzefdwe+r7pwvgl6svx3jglAx8Ypxj
Ds6J2FPGMfnkY+PwssQbh2c6Lqoh6aaxXQ7JoDfBy8oBkyphEyqxi7bFBLcq
rH76e82Y3ndx01qxMJ14kkkuw6n1k3cF2rMUYZOxaZE645j93jK5wzisPK1x
NqNu2M43rqJ9CI4n/W9MGAB+/Lg9Au9PL82C4cjGju66lv76xsGujrH21sGx
wbmB5uGu5oGmuqGiotaKupH6wbWW3vmMDmho8aJX9rR+SPdL16a3gWNvo1Z0
Yrbexm4b5SKsinAmORD7cqJ1PtwsFyLnNyxiOKgcOmecu/U0oE3Ge8A0m+TQ
CMhEwzne5U21NgNdOkDr34ACFmDYOya1RSX1xCJr0Tusy82jWcVxWNhpwi6s
diLWac9HsSbIQyt5nb8K0KlgVMZmnvmI3O3BGrL0ZCTmJpQaZ0G0ChmWmdtu
WdNW2QsGmSvqgV36fl3a/iMKHtPSdj0qTqXKrpkcXmWy/+CvN5QB2pXnhFiA
bk1yte128DNgxBHIfZmp9p87PPnXIx5xKR7Wew8fcfzjvhQH131OTj4eDnFu
DjFODg5Ojoccj7ju/YtfUlT16dNXgmLy/GKqkvKOYjK+/FKukoouIooBArLu
Qi+DxFQChBR8RJUDn7wOeazmzydnzy9jKfTYhE9Sm51HmYPzGQ/PUz4eSXYh
dWFxbQEpQ35pM4lXblLqgZJq4aJvYsQ1EmVN8xQsyxQdq3QDu+VtyvR8OzW8
O8zdm7wSx5OqtiIL3scVvy/t2K8dOOyZQTX27Tf2HTT2QSu6j5Irt71SJ2zj
Bh0SJm1iupyShsIrN/yLZj0yhvX96pkyR82pUs+3Qz+gR968RMKwQNa8VNqy
9LV76yvnFjm3imdO5apuLcbBA6YBg/aR48E5K+GFGz5Jo0E5o7GVc8Wde40D
kPK65ay0gdLMbp8ylFPEZFjKgmPcmEHqkH5Uu0Noo2NQ1evgAcGoA4k4rPxb
f1CGITDwFGh8ALRwnkxEeZraS1tNcbosWaSNF7R0X328qxT5fEWkk3fweBiS
TPoK3Hz/DXNzRqbhPlPxtwcHeCz2DIE9XdvGjMyCy6rnIlL7HP06nfyGbHyn
nYLeu8VseMauOEXNO0XO2AaPmvoPaDl1MDW4vEmZglnta9uWt87d8iaV2i69
dqHTHjHLScWwkPTN2HxQfstV29Bc48Bqff9K2+D78ZnV5bUtGBhKJ5E/HJ/+
enL9ic74Qj0hQ8FnONwFHvuJdnZKWiPAlomw5Sv60YdL6NXp/gllj4hZoWB3
ydg9AmIXBd7GQXbIyLsWflTMAR21TUftkFEgCmr/z0FC7dORIAZml47cp6KP
LikoJphU/wEmUCh4YLDvj8jI7zg0FrK3D9rZGG7veKem6OlgXlGQNjXVubI8
vDg7Mj7UuTQ3eULdAH4/vjpB7a5M0PCQSxrmFMukduhvDAINCQa+3Xkmoo8/
OYXn35My4Ja3kHBMVvJueObWL+My9dR9RDZwWCtp1zQbbpF3aJI1p5c4zAQT
w3iIVTrDOo9iU0EJqsRaZ+2/DegzTRh1TBu2im10T2tZQn3AXn5fhOIwtDPG
zafPv/3hzAj8+O3rNQaH2tpeP4Qjmtt6SiubC4oaigoa0lKKygsbq0paqita
C4sbi8t6ukZXu8a3i2q73PLmTULqDEObjCL79UInNEMn1ILn9FL29ZIPrUpw
loXYd8k7FkVonaQtjbh1CZdeWY9e43REaMsHj8odq7IthdJb8Qzgn+q9zjpa
wKoT89t118up1xTdHOmb0qGQ/1nVO0PNv+eN6/sXpt0iBuUvPJusEjpCw0vj
09tU8xHcVYBuIW0uwPVuA5Y5LFi0Kq71cqCquTiN9CP7pFn3pH7blCGj6C5t
7+p3Pp2qPlMqHoPq5oXqBn7ihsEsxkX/+PujGvW/3DUHDGIB2l5XB+iMh+gD
bapA+f8AJdzjzkJ3ePJfLH/7C4uiNOvD+ywcHOzc7PxcjyS52IXZHzFfsTFf
crPJSom+lnqiKiChKCj69rGcu6hcgKC025MXPuIvg3mf+4goBYqrhIirhEqp
hcppRD59Ey741IH7sSmfhIGQqBYrlxIb+xNubmlOTnFOgbf8Itr8Ejp8Twwl
Fd2eqvtKqoaKqodJ6CZJ6WVIG2cr2VYa+HepOdVqe7dp+XaautSa+zRG5C0l
VW8nVM5nNq6Wtu00D4Hru0H1PXt1PZCK9qPEinWfjCnXxGG3lCm7hCGH2OGo
8g3/nDmvjCnbqB5pkzRVh4rX9mU6Xs2K1mXPzUvFdPOeGBUr2dUr2zRIORTL
OZa/dq1759Vh6NXrFDUZmLnon/7eOX4gIGM4rowJX6CmAWhF41p+7nhl0WhW
GdQtatAzb9o0fdQkedwouMfOr8PRv0XHu1YjZlrUe/SJTcMrRaMPk9lAq8yd
R83M30mjSazGQ/cCv7CZdKTmNzeXlv0/Pjp35WH0b8AH4Afi6GCkY7W6ABae
0u3sV+HqV2XjW2FoV6rjUPXKoljFpFJar+SpXvljveLHhiXi+qVSJsUyFmVK
9rUyzpXyLtUvXKtknWql7Wuf2FRJWdRKWdZxaBZImNfK2bY/Nmp46dLLrpLL
oZQupFOjZhgrqx0g/cbnlZ6viXOsV2hWQVnn8NgKkXx9fvHrb38EPX+5/X57
+QuDenNz/e3LDfmSQcEjjyCHK0TE5jEBRMCsoeHLx4RdKn6fgNhDgdcwh6tE
+Db1j7JlJi35/4EJGbVPQ+4f34HJHhV9+P8Fk4L8XFEhcRc7B2cbVz0mfdPW
N9U3NNHStjXV93a28XO18XezC/ZwDPJ3cba3DPTzaq3NPNqe6m2vDfN383Qw
C3JzivXzSAv397KzDPN2nRydOISRi5smBJUcBV/7qVimvksbNM9aeRuy/iby
UDsZrJO6a12CMc2FGyatmaUumSVPG8RMm8eCrdPIlllYg5QDObsm46Ql34oD
76JFz+why6jS7I6J34D/9/EN+P329i5t/sPtydUl9er6nEwgnF+ebewcLa/v
La6Al5b2hvvnBnonRwZmRvrft3UMtPRMTSwdtE2tJeaXqfs0PrfNVHMv0w3t
0Y+e0oyY14zccCzD6yTsmxWgTfNQWsk7eol7T9z7n3uNyXtNGCYNG6VhHCs+
RnfR/LrRMvk3LGak+y/zaS2ewOBf7+xDy5UpQ81xESVGCRPC/mvSbhUG4WP2
Mevage9fek++S19yrj9y6Tg16gTeNAK+BdC1cN27dgyOLIDfP08DtPgrAZV8
lE4WUi8LZJg4bRnfZx5eZ+BTpRfUquvZYuraZmFfq6mT9OylH5+cC4ukPcv9
55YSnAAmr078T2HDx8JyX5KFBcj8213YqIU/iIvl70w4uccpwPFA9icWVi5u
bk4BbjZJLlZxtodcnKzc/HySIkJKEuKaYk80RB6rCUkZiMt5SkiHCj4LFX/h
K/QyREDeX/hFkLhSuJRq2NO3MbLqUY+VA3mlbLgfm/CKGwiIaD3kln/E+piT
U4qXTeIBhxIn3ysu3lecQu8EZazEX3qKqviKKIWIv40XeRMnrp3ywrJcy7NV
1bFW1blO07vdwLVO26naI2k6rnQ5unAmsWI+u2GxrGW1qHmlvGW1uvOwvP0g
s24rNGfOI23UPX3SPXXOPnYwrGTDN2vaK32SKXleOxUq2xcqWBRoedS9dW9Q
sqsUfJMs/i5Dxij/uVGRgHmqmFmekkOVol2dukONbfSEd9KMS/yIQ2S3W0pv
eP5EfutaQ+9+VeNmUelkdfVUdfmWd0KXc+m0de57h4w5q7ABp/ABu/Aht7jZ
N861mqGjYgELQk4TQWH5wJTPnaRl6p0ls4rCehaVkgdm75UcOgL9K5ncfA8N
9Gx8aZol1bWv1VfPu7vUqLzJkJRJ45f1+we30z1h7/si4T+LJLLKZnO9KBLS
aHhhOyhv0/7UukHcvErYtEDQqEDMLP+ZQ5mgXbugTaOgVb2ITT2/TRO3eQ2r
Ufl9veKf3v5ftt46qLFtW/vOe/Y9556zrXcLjVtCkOAS3F2DQ/Dg7gQN7u4B
grt74+7uTiC40zRN096915v03vf94/tu1SxYa2WtVKVg/vI8c8wxRjS1DpbH
pprXtkIrpF/YrkTUqVLWr0UZ1SStV8qnlsKuGAqV8KKH27JJ2Mto+mpZRNm7
Z8WldHT1HQwMH03OXa1vfTi/Ab5+IK0PvH3zeXdrb3tn42BvdX9n8WRv6fJw
6YyweLA7RVid3l+bOiaCYnvhYHPudHPq/P+jTLbmL3aXzndn/v8wCQsJ4ePl
FuAT1FZDqCupqCgoG2rq2FuhUCYGvq62FvpqBupypkYaYRi0j6dDsJ9fS2PR
9QW+vbU80MtJTVrCUk87OgCdlxQT6OIY4uuPw1WlZdWoo8L+4DCWJBpbvyah
oCZpv2FexzEx9LIcZlUhfB4RvyaDHtPATOqH9WsGdamgOzTQs8aR28Zha8p+
Az6Fm7Ypc7p+TWwa/i5Jdfldcxu3n/5K/fmxr+Trly+PV1fHX759PDnZOT7e
+fh4//rN5dcvX+/efHj3+PHrF1Jl2pOTu+3No+nZzb6BqYr6zqzyxszKlvDM
MhTaG2aRyWMcJ26dI+1epe7XoxE6ph225FL2TtZ3Qj5kVjl8SSNsXs5/nEG3
RMipQzNy2SxpWNxvitdtAZF8qBC5wmA9BOJKQfvkANMuJBOdDQL6HGIj6+XR
m4JOPUKoFGmvBefYfkxGs11Kr2nqakDeUkzlnGXTR74ywCIHWEY7k3aXWYC+
eIBSMTkGYQAyuccy7pVxwoRO/IJc2LhqYI+yX42ce42MXbmSTrqGLFpT2BHO
6crAZENBrfzb73DQT6wg0G/0/6b6sULCBaI0AoEkiIcAVpQUJvYEffZlIp7+
wW4C+olM/jfQMwqKl2Q0lC/YKMlYqMgZqCnoIPT8HMwKbDA1Vg5lVm5FKKcO
K9yFid+Xkc8bzOMMFvKg53VhEvSESQTAxNFc8n480j4sQg40MENyVg0aZjU6
sDwZpcBLCm4KSg5aKigZGZzkemiFyWjlaGFazHBLCNwKLOwMlfRlkPFlUw3l
1yfO/Qwhw0yiJRFE4bRsyxTMcs0Dm5yiO1yj2jFZA3F5I3G4oeTCwazSaVzN
Yn79TlL5QnDmoFNcu2N0m23MkCmm3S6m2zaqyzq80y2xX8uzRNgomU0VI22O
VbIrlDLPJRfwAksFQWUjuRTj6RFhTDpR4uY4Lp1EYcMMQ592JLpR06PcwKvM
LLDcLbopIqc3u3oGS2RXVl8+brA0d845us4O22eV2O8W0W3pU26CqUcEDlhG
LBpYV+s51/H4jPIkP7Lo5Q/FOAN14iSYFP8MjBrqy0j8Q6kSpDpl5LtcVLDu
GtIjoJfDLOYjKeCqp5HJJZnHIJIKEw+SN8RKIbCalu3GbtMG7qsI+2Up00lp
2xEB0w5hyxoJx1o593pJ1xIhu3why0wx6zROi042w1pqrcKXqjkvVbEv1bAU
6hnkahlgJA5mWiDkVClqXyrvWyNglcttmshpHiJmNCtvu6BoNyyBeiVp2iik
VyRkkCOBzIFrJYlrJckYpCJdKtUs0gxtsbbeFf4JYwOD+N2j7zcPwPXNl/OL
10eHBPzWPJ4oNggrZ4SFM1J52KnT7cWT/eUjUq7x3BmpuMrU8fbi37KECJDd
xfOdxf8VJsrKsvoGCGuUiR/ax8nJwdwQiTJGurnYezraRgT72FnqI3WVUcaa
yXFhgWgXXzfnlsbqs5O9qhKcv4+XCDeno6nJQEvTwfpSXWU5LqcwIDRdzcyb
XdaNVT1cz6/LPHiEzaOZ26tHxGdJLnhXPWpfN3XfJA2vFbIo59WrEdSjF9Bv
EDJmEbZhRYLJgqb/kH5wp03CWED+rLJTZn7H3PTB1V+C5PrN5fvHu48f337/
/vD27eWfwPvLy4Ob2+OPn+7e3d9++fTxw/vHxw9fv38jUXd1/ai9baiqsbeq
oTO3piU0tcgxItXQO1TL3pbbukDCqVDBp1LRu0UrbEwvZlE7dtW55F41eF7E
e0gWM6MaMiPk2kP8O4p79Jul7VlknSkGDbI7NcNDjmlstinlc6TENc+bg4Ba
CZLXKHlyUu1uju4VDPrOZdln5BGCcB10xtQ6BSXa+UWjo6tis8c909e14lfV
/duLAt0B1z8Aa9CfruDswAiZiA36NKATjYzwiiDCUyFgQs67T9q7RxI9JuM/
Km1WICrqzgFGgikMaF5o0T2XZfxD+Kf/EiWiJMrcLBJlTQ4CPf+N8hmvNugJ
N5Eer2MgpGCxJwioNSBxhgzxnF5S5AXoyfPnT59SvHzGTP2ShZacmZoKzAQW
ZGfTYOHQZGFXYeVDsAmZcwh7sQqGggX96XncGYU8wIKezKJomFQgp1QgtxyG
R9ofCnemZjOgYFKngirRQqXIqYXIKTkoqWHUlCwUFIIMdGLktMLUdOIQNgQT
nxmTIAos6Mwi4QVTDOVFxMINUnl1EoUMU2EqEVwGiaq2JbIWBTreteaB9Q7R
7RG4ybjiqaTCiYziSVzVQnnrVukrfG7dRlTBpF9Kr2tCk3vcjH1ov5lfk0Vo
p1VYu3vSiGNCD1w/mlrMSQiZqOSYJ4XK/p3dCiITCJEO4VGOZTaMZtOOk7Is
4tJN5kdmGPi263rVqDkWIjyKTNDFduE1mLT2tJKxtOLh7PzBkrLRwrIFdEKz
X+6IR2Sfd3C7dUCBZliJVGCngueMF2bdwKpY1KOOM2RL0ndaUUzvtLEQaGEi
fYnU//NthQuI3uYf1od0dv0WmEZ1AxyzQCoYFs8rEiFrVsGiUcSnk6NmmaFp
mqugnaGsXyirVyui2SSm2cKpXCek08SJKOXSzeHWT4cTSWuSJmCUIGgYK2qY
yG1SwW1YyKmXy6VfyGdczKNfxKqRDVZOoZKNpZCKZFFOFjMrlbSqVrGrVbGv
kbfIhiPxio7bCo6rwubDcNN2AfMGfpNauHGFhFWNmHmZoAFOzryARz0Rrhon
pJkgb5Zn51GQkDbUOXK+vHm/uXu1vrG3sjK/uzl7Slg62Z8jwuRkd/Z8f46o
VYgwOSDSY2eaOA43SULlcHf+dGfxeGeBBJOd/wUmJqY6Ti6Wbp6Odk4oX18P
T09nFzd7a2sja2tDNzeUnqGCpo60voFKfGJQgLejm4NpU1PDzvZ6XmZaRHCA
KJw72N/r3TUpWHt+fjk4OucZmCKi4cmjEazoVKXg2iPr2A3HjIoHTGsnnWjG
n8lhNpTDVhSDp+V8B2U8ulU8egxDxm3j151SCNaxu8ZhM4Zh45aRHYZ+jbZx
LRZ+uO6lk/d/75l/AIDHT5+uge8PwLf7D+9uiVLl3bs3b+/vPr29eHN/fH93
/fBw/+7h/afP365ef5hfxscl5yVmVWLLWvNqu73ji3TdIzRcg3VdPHicKmU8
qpSD2tRCe5FJCwaJm8oh86ZpB9pJ20KeA1JeI7K+oxyWjVQInDJm0ixuVSUF
0AruknbL4vRa+xfyjE4B1xZpAjTDgJJfiDx53emeFOZr4N/La7nCb94oZ4pB
WWaY+dci/XJRdu4BvpEu8QuqUV90fYZzHGRO3EEH7v+n2M3X3PtOwfOTpn+9
fbrPvRVLirmDnEOjgtekmVezg08Ryr/JJKIX4VzAI+f7X7Qo0FNDsj8kYX9A
KV6ygf5bfV2GKLO1gGLRS19WASI0/vkURE2CCZD0lLSl1u5/YPIf/t84BWlf
gMif/UH+lILsKZSOko2RhpWBnpkZLApj0wKDNRiZVVl4NLnF7GEiaDbxaDbx
cAYhX6iwD7OoH4d0CJdsOKdsMI98GLeULxTuRMGiRwHVoIEo04OlyWkFqKi4
6Wk4aaih1JT8EFpRahoiXoQgrOrMnLrMQpZMQg7Mkm5sckH8iGgBrTgujVgJ
MyyrUhi7Tpyydbm4aZacNU7LvdwtoSckfzoEO5hQMJ1ROJ1dPlPavFnZuo2t
XYsrnsBk9PtntHonLbrHjiHsyyyD2lBhXe7Jw6GlS3D9GEoRJ+Ls03AqkLPG
/spsxiThyyjmxy8bx4KMhWiGStngOLQS4YYZuv7tmm61qval6q44A3SBFabc
O7E5MW8gs3g0u3CotHIaWzYdlNYenjPmF97pFdZiG1KiGVUC921R9Fqy9Vtz
w/SKm6dIB3ZJ+PRxa6WYh80Ctb+RlEnxU6DHLtjJ91ctLMi0gN21UtWgQFu6
XkWli0e/msO+gFzJFSLpyi3jL6fiBZf1ZBPyoGJ1esnixQCPZRJN5tHK49fK
5USk8SISeLRjBbSjhTUTRXSS5fTSBPRjBA0SRY2TZK1ylGzLpM0L+TUzmeWS
YNLpFDxRDIKpysg2QeUqfZtxHcshZfVKTpMpUcsZUdQwm0Ezl0kTv2W9gE29
iG0Vj0kBlzGWG5khb1cCN0oV1E1kk8ewqcQoGyTr2WQHJr2q79wantlfXtvB
76zvbc0e4eeP92aPtmcONiePt6eIJDneXdjfIJ5OkHiyMU+8crjzN0yu9lb+
V5ignAxcvGzTs5LdvR39MD52LtYObja29iZunpZOLhYqCFE1LQltHYXY+EA0
2tnT06a+sXlxdTkxISEuKlpUSCghJub/rWYsb19a+aVyyDmza0Sp+fTwoRol
7Ht50UNC6Elz3INR+pVc0LJGxLISZkorZEIzdETVb0jLZ9ycKEtitlERy+Yx
E3Zpa2ZBjYr2OaiQWnRqw/Ay4a9svpubYwD4/PHdKfDh6vPd2euLo2+fHz9+
fLy5ubm/3bm53T893bq5PL68uHh4+HB+8WZoYjU1pyo9vw3XMJ5R3W8RmC1s
6CVi7KVi68VuWwJ3Llfyb9OKnDDHbhkl4yW8BtXDFk2xR0SYiLkPSnj1w8xq
IIZlRsmb1skb8KjPqgGdksZRFNp1IMUpOoVEYDyclNBHtM812pU1rQjPJk23
JjWrAjWnGl6rKivLRLvIXrPIXhW3HHWvatmIQ+nQM4x7ypkHJeADmvKgM7DL
Y0SdCiH7Eq10t8J/uXMTTbf1kHYdRIbNFwUnL/uqzngr4MJDrCObyY1KQKxe
oOeqFE+g0Jc0/0XOCfqHHuAOAoJAQDhRbAu9IEKDSBsqBxJMIp+QbI4bCChS
I8EEpv5PFtjzpyCqF8/Jfn/54g8mBmpuMCM7PT0bA4MIFKZJR6dBySjHyKfN
Ie3CLRHMLZvALZ8EkQxkFglglQjmUYjhU4zkkAnikQ/lkfZlEXahZtWjZEHQ
MKkwQuXo6ISoqbkY6NhpaZkon3OCqeHkFLxkZHx0jIpgGALCbcTCZ80o6AiT
QfOqRHGoRrKpRMrZFHKqR3HrJ8hY5MP1iK4nQ82pzC15KAg74RHXHpk/GpM7
lFowmlO1UNiwkFE+F4kbDsruDEiv80tY8UycUrbEmfu12YS8ck+ZSGw4YFfH
UIk5SJol6PuWE6n7M6MRVMofKuTNLxMB1YlgVA4St8qDaSRw66Ygg7pU3apV
nUs13EqM/cttMOVecQ3x+YPphcMZJSPFVTMZhZOhiU1Eq+UR2eQS2mQZ0agX
1Srp2aCLmUSFTVh6vXKN6uDRiZX3bJUPmgAhZ4CIJ0CrKlDOARSwA3NRwlxc
IKXw38NW1byn7XWaEDqVNNop9OYYWnkErYDmr/yW7Lxa7MLG3BL2EH4UVMyZ
TcaHRtCDWS6YRTaIWzlKWDdZBpkna4KTNyxQRBaomxXLWeRLGKSLINKENNLF
tLMldfJFELm88lhJnSomeDJYME3LbAAmkqtjNqxu2MMnlM2O7BIw7+E3auFE
VvCbV/FYl3Kj8vjsiwWs8/kssYJmOaretcpOxSouJbKWmXIonKRetKhmuKV3
Xl7VZNfE0sLS5sr64uxkz/H23OHG5P76OH5tlLA6c7gzd7i9uEsqyDZOpMUB
qRDTApEnpBSe3cWz/RVSNIdojnaX7052/h9MNE0QOhY60WnxgdEYdFiQd4i/
V0iAq5erd6CHh5+LG9rZw98tMMI3ISU6IzcjLTuprKZxen6pvqUtJSlNXVUj
Iyv36Ozy4v79ztm7rsl9x6hyBjkPQVSeA5agEjDLptdAb95omHFmW3Bvhr0S
c5uURg8r+o3IoTtNk5b0wuYU3EbtE48NMDOcOtiQ0iPnrEW/9F7r8HoBNc/C
pqmZndPXD58B4Mufn98A3+6Ah8v3Vyd/frgnVUC6uzk+Ofnw+PnL95PT843P
n67efySanXd3bz/g985fDSzmlHbWdm8Uday7p7QKm2BgGj5SNjFanmnyoSPK
Id36MZMKmH5x9z5kMt4Se8bj2KcUssJh3wY2qKREFEEMSvRjt12L32hHrHC4
jVOpl4g59j6RyvhDNr6gou9rkzmp7DDRO3e7Wfi1imFutX379c18tKyTOezG
kFY1Js7FpmHtIrHrZP4EuHNPipvblSeElD5j89NXJ/ITP/bVaJGtGOGvXuSA
KWgmUsPexofdfwbh23gdowDoggAr0GUEr01CE7nPDIV2pqislYa46tPfmUFP
eEAgDdINASAg5cW28TMSNKhiQC8TSDDJkSCFh4jKJFyQdJ1cFvSEnuEPENnT
3ynI6ajIWGmpOHg5xIQFZVlZ5V9Sy5JRKDKx67OJmtDzmdLxurFJRkGlwijg
7kwSobzykaKIFAGVBKI4EVSJFFQK55DwJGfSekGtQANVo4VI0dLxQ5nF6GjY
aamZoLRCVBQwagouCFiCjQPBxq3DSoQJPwom4cIq5c6tEiamnyRslCKgn8Kr
FcepkySIzOPWTRa3zDUOajMJbkGnD8cVL1h4F4Yk9WLLF7LL50JTWgtbFzMr
J8LzOjC5NcEZOwHJs5JGGUiPWr/UWcuQbrvoAaPAWnnbTGFktJxZspJ1KquE
6++MJhAhb1n1BEalIHqlAEpxTx5kMlEey9qVKbiWK7uXKdrmaDpnW/gVe8Q0
RmZ2ZpaP4epmShqWSipmsMWj4entLgm15hGtZpGkVmg67q36XnUWoS0WmD6k
V5uGQyVxPsJ92v/tvxcnwb3ZmgC0y5H2A1RSAl2hzxCBT+MeWL13bXx7PCIq
VdEp8U3TDcNroflNSn6pZg6RRg4RBo7hZu6xApqWTNImIgY+9JIoBnH7X1mR
T6BWlLyuT5jsXkLt6XnQ9Cxuf8Awz9kCqHnDuOSzRDQLRbVK+VSw3PI5LBJJ
jMIJPDKZ+vbdmqgWQ8duVdM6FZ1iCYteKfNWMYs6Kas6KdtqcbtKScdKcbti
adcqTd92He82g4A2j4QZu/A+FVSBgkmxmH4QTNZZ3jAopaB1agW/tLaxtDS+
vT51sjd9sb9wujePXxvZWRwlbM2f4TeO9zfPdmfOdmcPt+cJmzPEsb85TVib
Ji3Mbk1e7C4ebs5fH2zMjA/9BRM1fV1zB9uMwoL4rOyEjLzk7HxsSUlhdW1J
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
un+AfvpxCqPi+vlnbhAITM+u9NtzBh4WXsbnZM+IM59FTJBPi4MDAWWWIZoU
RmYtDj4XDiFvqKA9owiKVdKVSdKPSTQcIhPCpIRmV0riVo7i00jgVYnmlMNw
KYRySqJZ4LYUYC0KeiUImxI1vSglFRcEzANh5ICC2ZgZecC0XHRUHAy0vGCw
JB1EHsykygDVpYOZ0nCiwELObJL+HIoR3OrxfLoZoobZfGY57LqpUEQMn1GK
kEm6in2xY3SnY3iLb2JXQt5kRuEk8Zsqv2mh4NVMZs1AWlNXYQMhOn/WLqjF
NWLQOqBXy7XZJmTEJnogtGjTM7nfwKdEziRcQNkDJmTPBDOBsJjS8Nuxy/pC
pX3YlEJ4dVM5DTMFLQpEzPKlLLAihsnCuhGyhpEGrtk+0U3xBSNZFSuR7c2J
DZPYqq2CsrmM3NbAmDq7wE4jzIxhwLyp35yJ16CBZ4tWYIEuJkvFK1HGJkbf
vkrEdoZep9/UIRGYsiY12SkEAS2ovISy5wppT/VLn8tH04v7Bkf1DPbMfjwj
vCEcro0Mn22uXOIXztdHzrf7rrZ7vt7OfzidfX+y+Hi28vVmB7g/Az5efrnG
X29M7xyNXd9uff5yCgB3Pyql3wPf7779SfyX3zs7IyyuLvYPdY9OjCwtL+0T
9g5Ozo4Ju0cH+0eHu0cnO6cnW0fn6ycXu8eXu+e3hycXp8cXp+e3FxdX58Qb
z68u3n34/AX4eHt7fnKye3m1+/pi7/Jo8XB3+mh75mJ79nxn8Wht4Xht7nhn
6fpg4wi/vLs6Q5Ilm+M/wj0LB7vzJ7uLx/jFs52lw+3Jy52Fkx93zk+N/AWT
yrr+hvYxXMkrXFlXanZdXFZ1bllXVftkTedodnVnfGFFQn5dallzbkVXRlFL
am51BK4zobgntXI4r2HB2DNLSCeAWztM1adWwKFECTOgFDYhFzCuFjRrk3nq
V/HZOe1CxGVU2r0HGT+hHNCLCB3TiZjWjh2yws4YJc8YxK6ro9eRoQumoQ38
OtZJJZWb1+8evv55dvf2B0xIRufLpw/v3tx8+/z4+fXbj7d3j2/uHt68vrq+
uHv9+u3DzeXd8fHdu/O3pPZb7R3DgaHJ6VktGSXjeo65LwVduQ3zhB2bJLwG
EZGramELUoETUkGTejELqMwDVNaBQdyWZviakOMgM7IRbFTNjmo1TNqxyj41
yjwwyToQ9Rij1CwGI1voIr8aRXT3ZfkDDSggiQEooQEGtEMtNF9K5ZFZHv5L
teiJiKkQwlPaOF/To13TOU8EvSLg1CDqWiwR3AL37+d2H6Hzmf43+hCEAUB+
wBP3WzK30V/Qr0AB0/9B35E5f/g1CPBzrC21jZcK+vTPNMAkAn9hz7nvxIXC
Lv+EBZQSl9JDI6wDC3/x21AuPCgqycxLHVC2xIJorUBk1qBnDqDf7EG/o0Ev
AkE/I1loFLh/ppaHsJH9Tv+f36CMtLzslMy09Kwc7NKC3IZcnFrMTCrktJK0
9FpgVqIy8YQIODAIoRhFnMHC/tQiwfSSQQwyHhwqMRzqsSK66aI6qXC1aH7V
aB6ZAJiwIwVE+yWdAiNUnoxakJKSnZUZToQJAy0TmIaTjo6VlpKDnpaXjk4c
ApaCMKvRQzWpmHVomE1pBeyhoj4sMsFsSpG8GsnC+hl/wYQZESNgmCVmkSdv
l28c2ILyqXENb4svmEwvn8VVTWXVjJR0LeKahjKaO0tbT3MqN+wC6k296h1C
h4z9+g39eq0jhjD5K/7Zo7aYOkWTKCFlT5iQNQsMyQozpuGz5pD0YBL3hqmF
8xuk/4BJvjiqQMYKK2maJmEQq2ySZOKO84htiC6YSCqbTagfSKmZzKpeyChc
TMgbCUpqt4moQQa1GgeNmvjNGqL7DHzKUP4lZphyTY9ySdsSQxMsO2qU3Hmd
Xdt7IkUDaBYAsmiBStX7gWgHWxMZ8yRWpRxKNi93t4yKup7da+Db9R5hZY44
SS82Fm62lu4P197sTt5uT54v9u7NtmyPVa6O1WzPNO2utG3Nt85PVG3OjJ5s
Lry72Ptye/T57fG3dydf7gkPb3YA4OIHWx5+tIt5+HH8GgCuv789+P7u+OP7
gy+f8N8+H3z7tvf10+GfXw6Ir37/fv3ukXB/T7i53bm+2bm/P3x4d3h/iz8/
WCXszZ7gZ66O5q8OFk73Z443po435463Zg5X5w5XZ4gwuTrYOtlb3FmeOCCF
iacPdxeO8Isn+0vH+0une0vn+OXTvdmL/ZUflda25ib/hklOQVVV/avCsqaq
hoGolHxMZEYctiKzoqGifaikqSu7rjm1vA5bXp9bRfSYzWn5JTElI+lVk1EF
fTXDR6iQChZF9AtRD7h5Pp9DrUzgkGLogkrYqqzflAZmxSntwjhkSSlgU9yj
2yBmXMG/XS9qFpWypR8/gcwalvFtME7EG0YSTMLXVB3yZM3tyjvaL799Jyq+
u0+PH4Fvbz+8efvu+vbm7P7m4s8vj0RX8+b67vPbDx/u37y+u338eP/20+vL
2/2Dm8+HF49H5w8NbcN5BS3pOa1Bcc1EzyhqmCPj2MKDauOx75AOXJIJXhT0
HBVBz2hFzBun7FhlnVpmnevG4AWdBlmMm1mNmmX8pk3TDyyzTpHpBK24NWbT
xl+UsmlRfTR+x/qehXcVjkD2v4CCfwKvDCeqS1hVQtlRHeLOgzCVFKhyAKOm
N695nLxDubJJvah3oahljIJFnKpDGdytlcWrg9GvizZggtaPwOpyxOU0xeNY
xeaaC/FugHqsMDvciQTN2fhW+gXU6UfvGMTtlYTGENy5WwPUjAsWmPO/6qWN
xkUm2IdVQHyH5NNmw3DlIdFrWjZljCJuIAoEiMEERG4A+g3xE5UuDVSPjIyP
6in98//6b5Ynv8HIKBmfQ1joRJlY4Rys8mxsCGZGDQawEjWNLAWdNh2LI4wH
DeV1ZIRb0cFt6YTRjBLhTLJhYDkvDuVYbo0EWWOctGG2sEYcj2Iwu5gHE5/N
S0atl7SKDEzytFQiFBTsLFABMAMHIy0zNTWMjpaNhoKThpKHllaIkVGakUmN
nlmHEqpLxWxOx2ULEUMzy4awKkVyI5IFdXL4zHP5THI49JPFLPLl7IoV7Ar1
vKsNPEts/asjMvtTiyfzGuZSy/uLO+eyWkcyX3WUNB3k1m94x3bbBXe5xYxb
hY2ZBg6bBw+4JYxh8mbdotu0bFPEEX7cQjZMbEgWqD49vz1M2IVB0BWmFMaj
l8aqkypghhO3LJA0y5W2yJE3T0ZYphm5ZDuH14Zh++NLZ7H507mlQxmVQ7Hl
s/6Fm+j8ebfkOnv/PJRfpRGmWzugwdCnyNan1smvU8elC27fIqrnx29SwmJU
I2OaZ4SwuajPAqqMgfynQCsFPkva1SWF1aD5hVywkUdwbe3Q0THwcL16crix
tbKyvbB8sLJ9vXPwepewPTP27mztantib6XtcKf39nTy7nr+6Ghy92R0c/zV
0erIFX7mcmdqf21sb3WIsDq+uza8vzpxSpi/v9g5P1r5/O7s8nzt9HD94GD5
aHnxZIMoFRbOdxdJ6b37C6ek+MsCYWP6YHP+eGtlZ21+Y2lqd21+e3NmZWnq
cHN4f3MQvzSwtz54sTNxuTd9ujV5tDx2tDJJJN7ByszB8vTh1iIRFOd7c/iN
8aPdmUP87NHeIgkjhOXTg+UT/CIRJgdbE6R+oxt/RXP+Dg2np6SXFFbk5pc1
dHSFx6ehI+NDM/IjsAXZDW2F7d0l7b25Da3Y2tb8prb8+mZsWSGmeKSodzep
brSoF6/vnSuKjGbTiZbyrOV1rON36xb2ndJIOFAJWVPwmbGKO0IFrujGnEp6
9eknTkt6NOtHLVkSJUHCqEHGoCi63jjpUA9zZBK8pudRFFdYNbG980jqZ/x4
//X9d+Drd+DL+89vb27O3t5eAp++PlzfvLt58/nxw+dP7x7evv78+c3Hb3c3
bzaml86nl7YHhsbKy2pqq9swmBwtg0AV4xRJE5yc4ytBhyERj0lE4ikijiDh
uyDpP48ImVfwG1X0G1cImBL3muS06YGZdXCZdevHEezzbq2zLzWiV0U9e58j
8p/pVsDj33ElAyHVZ1+afEhL94kgoNNWXiv6Z8MxmGWrrFaoonywiFHuCy0M
s12QjH020m5JI8BG19rTUjfYARmvYxEv45qgHpCJ8kgKdAoJtfX1sAmyso6w
MIt3top3dohzco51C7LWSKqXyj9wzuoY8lP85gA68fi1NNbZJq9bNWPUKLrO
MSzPO7lZF1ODTOs1xHZbp32wd8qJRWkZsv1HiOmfcPBPCn+A1EEgXhCIAgID
wXSecitykf1D4l8g2D//TU2jxMYqysWiyESnCqFTg4AVWZk1mFnMYOxoKMyD
Ge7KBLeCCDlDxEPYFdK5NZI41INgSjECminiJtniBtl8itEwqUBmuBsjhzUF
ox4lnTyUWYWeVpCKkosVKgRh4IbQs1NQsFFQwqgpeKko4dQ04mCwEiNUh54F
SQE1omKxYeR3ZxELYZOLYlNP4NXNEtDL57Ms5Dcv5jbOkbaplLUrlbbEarkW
6rtkW6MLw1Pb04pGiluWkkv68lqnUpsHM7q6smvWMutWw3JnfdNmvJKXHWLm
USEjRn4dNiHtmOwx3/hXSKcMZZ0gfhF7CIsBGKLFwu/KJOBEzecClQvj0s2E
IFJ5jHFSNlWC+ulixukK5mmqpnGadik2/gUByc2R+cNVKetlhSPZ9d0BDYsu
9ffohiv/nHY0Js7OP9kspFI7pNzEv8zbrd3bfVrHeYTPsZPd0l5UL0hSKkLd
6BW3Wp2zfTLQ60zaC40FAYM6Ll61IL1JkFY4u40hNqsY3wq8/7D++dPN3fX1
7enbE/yb8/X3V/iH+eGFu+ODo7XRncXmg83Wy8th/Fnv5FZr/2Lj4VrN+X7H
m/OJ29ORy/2RK8LcxeHi1dHqMX7jcm/nbP9oY2nr+vgGv0jYXDra2748mtw5
Wtg+Xtq+WNs5X18/X984W109XtsmLG0dLeHPtg4P14mzf/8cf3x5erO3c3qz
O3yNn7jYGT/d7L/cHL/ZnTrbGN2d6T9emT8jwmR5/nBp9nBj6XJv9Rw/v7c5
RITJAX7mhLB8drB8SlgiwuQUv3SJX9lbGzncmDlcnzvbXZ79n9BwckUHtrov
NLmypGYyJ7cvJbEyLhKXkZBXnIcrwWWVlWHLywsyc7Jrm1/lFNc1Nnfnlsxm
Fg4k5Ix6hHfIWRVxa2dL2DSroMcF7Vol3Ls1Aqf1IxZM49f0YxY1giaUfUdk
fUcQmAmtiAGV4BadmDbFgCrzzDnr3HUZv0FE+IRx1JiqV5G2R/zo6tZ34PEz
cECqivAB+P5jxeT24vXF4RGRK98/Px7t77+7u/34SPQ6705JbRe/nt69X90+
6JjrSsip6p38Hp1xgEJ3aroWqXtWidsW85gUyqFbFAIaNGL69eMWJfwm5IJm
VOKXXbOnTfOPJEIPxH3wEqgBBdN6dXQPm3Olbt6MZnIfj10es0ULzHP7N/Ue
hUC8SvKXcf1fgIZAIEUcKKMCerlKcm1/1gujw8zxueUqWfuKGsXwomrZdQu5
VUJ0LZuV9FdkrbHSTmUyLpWi9kUiVumi1tlyTgUKbsWiDgWiLqUyruWyzlUK
DjXK9g2a7i0Gbl36wfNWwTNuCaPeSUMOaaNW2Cn70mX/6jVv3IBVdIt57JBJ
1Kxl/IaOx7ix+7iF15pVwIh1+KSGS4U0MkxWz0tN31tS0ZmWRfPn33if/AGh
ekHHwc79+zPyfz2h/PVXWgg9K6+wJiObJDWTBCNMnYHTmJLNlIrHmlbYCSrp
TSvmQy/pC1YIZFMMgamFcKhF82jEwnSShY3SWVRCJIwSuTUCwMLWz2CadPz6
z5nlaXnVoIJqlEzwF3QwFi4ubm5OBgZ6GCM9hJqcmuwlDSUVmIGFnpEDAuFn
YBJjYJNl4FAD8xqwwq3ZJV04JL24pP3EVSJFDBNFDMIE9INkLKOEzWN49VNl
7Zu0PEeVnbvNg/uDsZMp1RM59UO55V248qGymsG62o3YhFfYvIWKmtOQ5CXH
kAmnqFUtdL9WQJ9b/ppT+qQJpkHLOUdE3ZeZz+gltSQFiyGrsBWTiC2DhB2H
dhCndiiLRgiPfjSfbhyHapigdqKYXoqqRa6GY5FZUHNIwRa6uyz2VW966VxR
zkVZ3n1+0Vl84Yx9QpVeYK1a4IxK2KFs4rJcRItmZKsxekzFcEFUec/INUbG
UZjayJXWeF3JaLg51AeYRAI4OiCbF+hxz1YTYKZ1fCo7JITuj+hsWCOQssqO
XgOHZw+nF+vHJx1fH4cGOlNOLlZXCfjOxfnJs+1pws7WzulK7ymhF1ibasEv
jd4crF/vLR+uTZ5uTt8Slu4OFnfne4+2xw62h/cJo2cXC+sHo3PrncvHQwfr
Y4TtCVIVps0Jws70wc7M/hZRh4zukKoyDu+s9xK2iUAYJWwNETaHT/andlen
CFsLP7paLOM35rZWJrfXpvCbM4SduUP8/OH+1AF+cndjdGt1eHdjbHd97HBt
7mh99mR34Xh/7WR/9Qi/crRP2hyLX5/a25gibM5dHW/+gEkm8WMmFDVklbdH
Z1QXVY9m49qSkyvjYgvDQ2ITE5Kys9JyCzJzC7KTs7JLa9vSsqsKqltSCofj
sl85B1WpW2VKmKRJWZRLOzdJOLbLevepBI5pxazqJ24gY1d1w+fViDDxHlUL
mlHFjKkHDhokDFjnTCKTBiwyp/Tjp43TV02T1lTRnQj3sviysdu/ys+SFp2A
hw+fX98+fHj8eH15fnFxDHz++Pjm9dXJ4d3d7f3925tr4q/Hmw+fNvYPOvvH
0kszMbGZtZ2nHqFDCKs8BetUdTecsmutnEuDdmi/ZniPbsKEStScqM+4bOCM
YuS8QdGsXiZBM/JC1WVe3qpFwqFWNWFJOZGgn3bEjqplMS7kcm4Em9eKe41p
RJ3AQoH9dOFPJVpAERuAowTqzUzNLbnsq8UCx3UDmw19KpTciqQ86ngM43jk
0JLIXA6NCrhpghgqS8IqR9giS8g4XRCVKmGbLWlfwG+WLmSdI2mbJ2GFk7Es
kkOVqjvVaLo0aQWMWASPuyaPB2eNh2X1Bef2RhcOJtVP++R12cW1WUYPmESN
2aWsIf0nzIJnrcIX7QMnbIKHbUPaxHXRAlJGwpJ6+kbepsgAdg4lKFiM7Dnt
s2cvf/7lNzAUxs8lzsbIzSuoBWaVpmeWY2HXYodbQPmswPwOYBEXsKAbNdyd
VsiDUdqPRTGYSz2KSz2SXT0MqhYvqJ/KiYhWQGULqmHohWyeMqm9YNZ5yaxB
w67GyK1MwyJGTc/DAYPz8oqysnLAaOjpqKgpnpBR/kFF/pKRkZ4HAhVj5VSl
ZJKnZFGjYNOh47RgEnUGC7tDRLy4pYI4taJ4dSI5NP0kLGIlrDOETTJlbGvk
rRrFTcsMPOq90/tTKkextQOZVX0ZRV3Yok5cyWxccndG4VJhw3lk1pZb9IJt
2LSWe4eqd7tD8qRzyqhrQq99WJWGeQK/hD0dRImWxYSBz5ye34pe1B6q6MuC
CIWqh8O0iB8tklk+kEc1UlgrTtYsTd0u18inwiNlPLasN6l6IrloGodbKy0+
xlbvhVT326bi/GJLAgI6HdETuph+uZBqxbAyZGCnJXoB5disbRkjbeYg4BjG
Y1/Do5bvg4rcL7AHenhJm6K72W6LfcEM5swGvZyGWSgfTFHN8sUtsI4/2iZs
bR5sreNXrw6XR5ryPp4vXd9uTmxNDyzPnr29ur283J7d2J8+v9gdeXO88nC+
dU1YPF+bOFkZPV8fP96c3FsePtydJOyMkZr3na3g9yaW1sc29mYO1qYOtqYP
d2YPt/8ac4Qt0tYy4kzfXR3fW5/c35je3xrbWRsieqXd9ZGtpTE86ZFZwtbs
7urkzsrEzurENtHm/NgtTxwHm3P7RP+1MYbfGCMeHG/On2zNE2FytLdyuLt0
sLNI2J09IhWDnd3fmDzaXrg82pgl2RwSTFIL6lOLm+Jz6gtLezJymrPzGpLT
ij3cAkJDI3JzM/MLcan52em4wvyK+tjMsrSCamzlXGLBCNF1wuS9+bRjlJzr
lDzbhK0bVANHNaLmjVN2zdLwOrFryiHTSugRWY9R1dB5ROSiduS4S+GuE24J
GT+iFNgi6lDtitv1LjjUC3jlFNc5tft3VP5P4P5PAHj36eP927d3D3fnl0dX
lyffP727vTj58uXxw+Obt+/u7t4Rrc63d5+A+fX9svoWr/igoOT86rZTG68W
aZ04Ef0QOZsMRfd6vcBRteABZUy3TvSEWuy8QuiiXuIuImaTJ66bN2BCP4Ag
q98kZZgFd69QyDlDlgG64a8ZlEqgxiWM9hVUZpmojEXD0BmFBOB7vyhQTU3a
yNGhW+wdxqxRCHfstsIMuwaOGPqPq2AGNEJrpfQDBRS9RZEJEINoQYNUYdNU
UbM0YdM0uEWGiFW2qBVWzBrLb5IiiMokkcQGJ2OBU7QvRzg3ars1qrt3m4cN
+afPRuRNReX1R+a0JxR0plWPxlZMu2f2O6YP2yRPeuZtOyQsOSete6biTXyG
Dd1fucV0wsTNXjCJ/ucJTEzU0NEm1FjfXVwQwcrER/acnPw5FRsrr5SkCheb
CCOTEh1EmoVdg5vPiI3HAsprzSRgDxH0hIh50gu6Uou7QRR8uRBhvNqRnBqR
rEpBYMUwfuNMPp04JatcQfVgOl67J4xa5MxaL8AaL2kVKZjkqcHSVJS8dNQc
UBp2ehpO+hdPaZ4+e/YL2fM/Xrx4wkhFxQZhEmbjUiHOa0pGVTKwJiXMjFnQ
CQx3Awt4MYt4Q1UjYKphHOrBoqax0vZ5kla5MjZVQnp5Ajq5qs5lnsld8RUD
6dVDaeWdGUXdaSWvMnNGk/JGsKVLeTWEBNwuOmnNOnhMx6tD3aPJMmbYKu6V
R9KAd2KbgX2WsKwLFKb5nE6HkkmHnNOUUsiGTsIDph7GY5jErhvDqhoKlQvg
VgkX0oiWN0vVtM/RcS+2j+5MSF9JLlhIKOzJLuwvrVnPb92KqxtAp2SFR+fG
B9b5eHWaBw6oBbfI+ZZpoutcomdQYVnS5jg+g1xlp0wp+why9RRWgzYvD+y3
JhWg7kefnVG7rNB4TqVAbo1YbtVAG/fijr61/KK8+o6qqd1N/M2Xvd2rydba
byfzn94ub25Nd4x0PH5485Y4J+d656a6LzaHH06W3xzMn6wPn22NHq+OHSwN
EqlyvDl2tjN/uUuyFVdH68f7izu70/i92f21SSJAiFLhr01lxIMfZZ9n8WuT
xHGwNXe0M3+0s4BfndpdmSSSZG99mogX4kXibcSffz311+mPQbqZ+BRhg9Tq
Ym9j+nRn8Wxn8ZywfIhfJmzP767P7G1NHW4Sn5ohQWxr/uZka2bsb5hkV7Sl
4hrTcmrTc1pSs2vLS3uweZVODt7BmJC8ooLy2sqs/PyswsrM4taEzPq0wobC
lgNs7YY5ugQm5w/XTVN2b1L37JH37VPGTGpELBukkLJdNCMXZdBjUt6TMj7T
8qHTOnEb2rFz7iUEw/gxDUybok+Thn+HZfyEUUiXlGWmQ3jD0tH3v0qnfQXe
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
R6CEHyhW/DYGAkYNgelcYKcU2KE+7jCvoJPC8aH6EJiMKpdhkP73ohIXEGjz
t9+/J2BBxyAQhfWSsIkaDxTKpWArxKK7mo4cmtocWgr8mjBhLUthZXtuaTSn
pD6vNFRCIkwI7KOgEioi6ykgY3dXBKlh6qeAcBfVc2aDkDmkPC/zOF8XcbnC
TfiJ3QB0FS4sxYMnm9HTiHG5yCCmGNn3Ko0p2NhjubbP3D4oOLrfu7m+uDm/
uj23v7Owfry8sb8xvbcxcbA1erTXt7/ddrDTtb81eLA+fn915uHmzMHqzMn2
3MxEb25e9kWrC1q/QdiQYeQYKnIcHj5uHD6Nos9hIlZMo9YJjB3HpAOPlD3v
5BUnxohjWK+lb4cnPS69tG1i5eh7e0/gry8fnj0/BYC3f399+ez5wZt3j16+
On/18sXnt++enj7++PTjly8XvUAfv7q4+rf64LygZTI0r8MiNB/uUQ7zGFAh
zsjYjEDd+2EhY/CgGUTQsn74NCKSJbXWTJkb+vQlec9+Yds2AasmfnwtD65G
yLxWgthuGr3qWfgCx1hRcW6DYDsEHfvuEGsU3GpQvn3G0btaMStaAY0alGpO
q1WQ6WtO/Zy/eihAPejCRKLiT2ZGAZwUoxOzq0o7sA2d8I7ttYposEibsYib
sYuZtIlbN2VuYuOWrRhDluE91rROY78+Q58OPbdmTY86Xe8mA99WLa86Nfda
eWK+gk22HD4ZgooV1w4FawVKa4eqGDD4jMOFUBF8hsFCcH+wURDEhK5kGiWP
ZkDN4pWQkXwQ51u8eA5+s9v3jG7fgUlLWHJqu3BCKRJGwaq2SbLmSVK4WFWb
PEPPBi37CrhjLcarHevVgnavJwS12YV34/xb7aOagnPGE+rWE+tXE6sWkiuW
4kpnYwqnwrJGgjLHnRg9xKg+x8RJ+7gJ08hObEQ3OmpW06dVxaOaNX9lpxIF
u2xlcq46pUjeOlOOkKpASIPa52va5CtbpqjaZOg7lmpYxCnjmVDzeH2LZHVs
jDyKoYhkSqOZ4vAoIf1oPu1wAdUgEdVAQQU3DmG72+yW19mk7nBB73Hrcgvp
cAvpiYkjNbUccPhAA2NfDD4EYxEBQwcp6nlySVhc50Xd5jbhlKVANAPktYIk
VT3A0g48YDN2HtQtHtQdPtRtcexdyQvzfEHtYElUvAQyQwZdKmuVrEkuUnct
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
GEUpmCVLIGPA8GAxwygxRBTYIEzLKlODkKlukigDo4EVndmFMDc44GzcMC51
RzEdZ3mTUAUzhjQ6Wtg4SoGQBXerk8CkqloX6lNqDN2bkF5Nxr4NGP9WlE8H
LrDEPqrdL2syLG8mKn+WBSOJhTOJhbOReWPBqT2ujDbb0HrzsHar6AHLmFF8
9Ihl2gomelyP2qbpXqfuVgllcRKbDBnLRDl8oqx5opRZvLR5MgSbAjaMBhvG
CpumSpjGypgmSePiJE2YsvhEFet0NdscBatsFdsiJZt8KdM0UUQcBBkPNc+E
WebpmRcYWvpqYHwEFcyuc6r+eEXytz+kL/8J+eOK9I8/Cf12WUJACKUP93R1
z4xgtIZHtnm6F6oZ0/ikrW/yGtzggwtI4EVl8Bx8sCu3VdnBSAGIhZCyk4Cy
t5BWuLxJnjyuXBqZz0WqFXWolXFshNgVK1oUGjqUkgJaqPRuf/+G6Kju9KzJ
nNL55PzpoOR2alpHQvVIetNxbNlCZtVqVOawW2CluWOGGSmNEtBg79tk59ft
l7wVWPAcjKoGScaAeGNBXDlswpAf74J/uspx5+49GBSSHW570Bz+V58fMOkB
dJgADSpAMS+QdRXIuASk/hvIvHKR+ij8DiOFl4BKjq+Vqg9q7KfLU7vLesjE
RDWjaBnLcmGXTmHHNk5UvKi2B0jK5XdBn59/o9y8w+CQyZKxrCEmTWHobbzG
rHfHgUBKIJDij79YCQiH3JK1+k1fHa4ZHx7Sm5DYlZ1WVVlRMDFY+3Rv9WRu
6Z/jp//s3weOt4D7i8CjZeB8H3j/5ns5xtbfn5a/fF79B9j+Cmw/eDIMAO9X
t0YCgn2L86reP7s4HXn75O3TB5ufXq++erz9+IndzDSsoYWvou5yR8fdzl5w
XY1ofbXm7KzP8lLW2kLn/OTU+szB4fLDw9XDo83Nw83lvZW5vfXRw53+o71e
FjPZ3+g93B4725m7vza6tz7eWluQHhvW2dbMmopRxAKCsWqauMsKA/qSVuAY
S2VYpazTW94F5G57JE4EpI0X9xysPgJGVl4sPAZevXj3z/d2FJ//Ap48efH4
7OTt87Ovfz17/fbk89/P3r1/eHi88vzt+ftPHw5OHp49fjq9/TC3tsLYHu8W
E4WihELtGJrkDEWXPDnHKjWvJQ2vAzWfLVj4OiJ+RjdqSpM6Lu85ohM6rx44
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
6sVoj8ybisifdoqoxpBiTB3CIhhJ7RUFx4M5HweCgCYUUCcKNN++KPxg4UYJ
J5B5HcjnAMrFgEppoEYLaMECvW5AP+2k2Kci2NaXZEuwdoMRI+AexUjfEmgF
gC4D8Klf3PI+hdR98an95FkHuJYDpsw9dFi/cWiDrm+lpFWeqHmOBjmHGN7u
VFPDrK9My44oLKHXtKbMLJS+e1FzdpJw/ChrZq9+Zb1vf6NtfS69vMqF5KJh
aCj3ixoYBFYC8bmCxPJBUlU/6HfcIS78aTMpGrAGoU6KufWDLbpFcWM6LgvW
UXN2ycsp6f7JGXFl9ZXVba2j8yvH5x92zv7CWNMNkfTCgvtHx8DSwpeDw5NH
DydX99KGl4JGy9TLkkWKku82lt0baBZrqRKoLRIb7oUf7Hg/P899+bpza7Vj
cqBrsm9wY37p6d7RzsrMxsLExmL/3nrPwU7X7lbX8fboi5OVnfmRlfGu8a6a
+AjPBEZQb0ftBZhQpwlxG8SsU1zihopvh7x7k1nieGDVdmDxjBOjCmUf4h+V
OTK98vrLtyfPXpy//fD57TsWOfn297dP7z9/eP/6zatXz18+ffP2xbPzkydP
T74A/7z55/POg/Odx++OXl5071t4BTDLhtUtIwwoaXpOOarkXE2PNnjQjIb3
pKrvlLLvuCp1Wi9sQZM+q0EfhyXMoGN29ULn5dyHwMQWHrM6TtMqGZchU+YB
C090g5YNQ1exsQdq3qN39HK5EaV6XsPooveeze99cqadmD3S5Lab9ofXiQ94
YQkJfkbAuCbQcgXI4QUGoiNQVgjXDo64D1SfQlJwKzZiEhazYchYtYjsdaTV
24e2EGIuymwIoe0OtBpbehcmckQ9ZETBvwfu26buUQd1qtRwKjf0rLMIaDZx
qdTBJ9wVsuAQseYQtRWSdxTX8BRVcwMrOXMrOwrJOUqouktp+0qquYhAXcR1
PYS1PMEabnwqLqJa/rIwmgw8WFLXl13a5oYQ+o4ohkOUwAGxEYK6QYxCRAzC
ePVCpHHpem4NUIdybUoDzKMR5t6k79loyGIm/q161Base4EFrdE3aSgsfyGu
ZCGhfCGzZr6wYTWheDC+Yjw4rYsYUmVNa6LEjpFj5qyDpwyj+7ARIxj6oFFg
v4FHG9SpQco8UxiRKI5NlCWkyVmniONiRIwZougkUWyaECZF0ihVCJkIRsUJ
YZii2AswESekSlukiZiw8IQpgkqRJqRD8BmCyIu/UrFIFnZtl6a0ipHKwGbZ
d7TDr0BcLwtYXxUk3BVA3+LQu3Vb9c6f4rcvCfPcEJXkkZdmh8ioIHz8mXZ2
/qqaeH6w5o+/8l25Knn1usLVG0rcfHAxKTtxZWcJnRB5VIKSRa6MWSG7Ogls
RJUjZip71Ik5tgiRe5TD1kyz36rTtuHhm6ZhC0TGfGThdmr1BiN/NCBhIC/K
sjCB1F/oO1/ifl7tBPS5AV1WQBcayBUGKsSAvLtANOiidpGlfNO+Zz+GDIEJ
DLDiC6wnv+rJbEvP9POIR1glXVPw+1E26gelxJvoKrDTkKzXhDZtzoi2qN39
xabpnWfOMTNnIyV/LSJj2zfloWPqK1z0vmHwgAGtBk6t0/Fu0nOpxXhWkRN7
Y9I7q4r6q+LKytJzy2rrhsfbHq03bY7Gra5kzS60L0+M7011zgzHp2ba4Akw
VWkjdqjorwISvwpifhFzB4m5/awTzGWVy2dXJ2zZquo6hPEfMPVoNbLLwxIz
PQJqQ2J7a8rqqku7WxqGG9uGO/rm5rcfTSzcN3eIIzrkV1c+fXAKnB4Df70H
nj1Zn5zNaO2ndRXqFzNlc5mCZRn8VTkieUn8KQmCNZVa84vuT55nfXjftbfT
vTgzuDW3uL+6ub+wsrk4tj4/srrQsbnatLvZcbTf/2B//MXR6uHq+OHq9PpU
V2qsfyKT1lRXygITbMS8VdIqPnbZKGrKJH7OLGHaNnWUkjHomtTiyih2Dowv
q23dP3nw+e+vDx6ePHn86OImH/D3P/98evv62fPnL86fP3p6/uj16+cPH91/
9PzsC/DtIwC8/XrBW14AwMkbIHfoABtQLIeNg7lWaTiV6bjWGQWM6AbMa/st
awZPa9HGtMLG9RhrOhErWpGzBomjOoELyt7DEEqvKLldzL5LznVIL3SVkHii
5Daq7DFuQFvFxuwquY5c1khhRxYjQ1bNy19b5ZySkmccYwYUHbqv2+/+br2o
bOj0tQkJVP8LKL/0scmlLavUGBtnRBuUT1kICmglh/bgoyeN4+bN4ibt6IOO
kV224R1WjGGzuDFszBA+vMc2pMUmtB0R1C0f1G/k36TjVqbmVApzKTHzrbf3
rzNxzNZAhfOKWoKlrIWlbcSVyRJqToJKDrzSVlxylsLSJGFlkpSmm6SWs6gq
SRBKAquQhdRdOGVJYHU3iDZV1iBEQZ/KL+dwSwTDJmxyV8SSTdxOUNUNAqeL
wMJ59eiy+HQj304Ncq2uSyPCs8PAqxnm2YQIaEZSO3SC2sx9S1nT80sdjSpd
Ta5cTapcyqpdKmldzm2aza6eCs/ppUS3OEV2ODOnnaJmrKgTqKg+U8aYWcQE
MmgEyaJY7l0KVuWCqARRbLIULlECFwM2jmAxCiFktDAymd8wVhyRJISIFUYk
iGBixfEp4mbxEJYUssoUNYkDoxNkTFMVbC+s4QQRDH4jurRZLJhYLUasgNiX
S1rl8yAS7qhRr0pS2KQc2CWIN3iMfr+ldumK7I1rCoICOlJi+vzsUHERZVNj
MhJlZ4h01IGTwBKGdziUf78icY9b8x63zt17CA4wBqzipmwaJ4Vl3lEL5kcH
y9gm6flUGPi2yJGrRMzLZGzq9cltSKcGomtdgF9tXGRZdXpFd0nlSGlBX2Xt
t2aDt5V6QKUqkMMFZF8Bcn8AEkFAwncSwlK7hdxAqSJQgwS63IGVRGA4aC3P
vYgERfDfuPrTDdC/FX4QC/jNqPtnyw0QdgOEXgHh1m55HEoHnWiFbqHCNy1C
9qyKm/zyuyITGjOT63NT26Nih6hxW27xz83jH2qFTsqH9isFj+kEzGu4DBh7
tVEyJ3pKlx/1f37SdLrcPNHb1z07Ofp8ee1ouPd0fWJ7Y3JlcuDB1MTu5EhP
V39xwXw248ArIF8P6SmrjefXQvxbTAJ0lw3EIXBJDM2v6KumE22Jj/VyogW6
OoU6OyZ5RKb5Z8UGl/TUL6wtPp2aWGpu727oac2rrMBY2JGco6Niuzo7zieG
nh8fvVtfnevsSalqimwvwhQkaaczJdJixbITJFOYkvExkIJcvZExt8OjtGfP
Wva2+jaWJk429g43ttcnlnbXxu/vzR7vjm+vt22ttu5tdz06mjs/WHz/5PjT
2cHz442q/JTqwqS2phLWkrdLXDGNnoN6diDo47T217SuJ1Ypg5iQEue4qvKe
ldmNhx/++n+Pbr6wlM3Xv14Af7969+HZ8/Ozl6+fvXjx9MnF4PzZ+ePHT89e
f/7rxcdvzz4Bj94D/YsvqtvX1UgMXh1PQYNYXft6XddaXe9mw8B5Xd9lBO3C
5giVOIOIXUAk7OlFb6tQx1XC2qXJPZKO7ZKUHjnnPmXPcVjYBoqxh6JvCVo0
yVIG1H1nNPzm5V1GBAgtMs69LBpDzr6PTthDMncMWXzGZeSe3fANwzx/Dx+g
D3dx6J/z79eNNDPHVL3QGSPmJCGp1id4wSF6zjJmzDa+2yGmwz520CZinBgx
bMfowCb2GSYsGcXO2tI6HP3LMNQaudAhGLVK3SVPk5RrQCk0cc1DkVK0USFi
CvbiEGtJGRuIHEFGyVpc0ZJPCntXEs0OQYNlHcDKFAlNiqgaWUiFNbYXViby
Q0m8inZCUGeIpreMrp+sPlVQ3uGWEO6OMIZNzO62qDW/EkVUPwRsEH5POxRi
mqXv0axsW67lVKfr1nyhdNzqYT4NBoFt2tQWG78Ku7BW39QRRv5iQvF6fOl8
Zs1CXuNiUftKZtN8TPFYYGq3T8qoV9KiE3PZIWjBhDFIiJnERU6YhE3gQiZR
1BENSquMeaEoNkkIEydgFCqEogsaRYFRMcLoOGF0siwiRcYwEYJKlcMlK1jn
KNlmsgJKLlbApyqYZ6na5Os7Vao45IlhEviRdBEcA4zPFLXIlLMv1HaqhpJL
lCwzFcyS1cxTpHSCxNW9+SB21+4hr7BpcPLA7/Bog36G3LrMzs0mKsAjB5HU
M0RQ8PgADMZDV8sBa+wjL4P/46YS6JLKJX4Tfr1g1gzvIaLZ0SU8qFx+dKYg
IoZPgyKhZqENNcRAlZKcsF0hhINc8vsyJ6DK4ls57HOe2tdiLaBMAkjjBnI5
gfybQPZvF0nUtH8BNYJAuTIw4vWqPXykkDnVM+Lhl/XDdXUQ6CboX8qgSzAQ
hx1I0AckGvu7fv092zk+l43b9tO/Y3v+NGkScehXcO1XJffoOfej3GeDMzvD
M8dDYsejMmYY5cvBeQsBeXuB+Q9JsUv6IW3KtE6l4Hkt/x1luymYU6tb6swi
i5q/BoBz4MXDg63zmcPHO8BTlvh/A3w4f/v31pP7c/+cPASef/jrf1fZ28fA
9NhefcNUUmarZ1imEdFdWFtf2ciGB2x2/Srmt5+V7l7lEBf4TVnmlo6KDhrq
YWfgW5TSOjm+Pj091jdR09CfGZnjhiTpwG1QhmZWBFsqAuNOdvLz83NLSPGs
bo7fnqcO93l0tFk012N72m0H+j072py7uj2WNpk7D/J3Dqrn5htXZse2V9aO
1g6OV472N6eenK4/OZ3ZXm9fXWzY2WzfWOxeHu1cnepbHemfG2pNjw1tLM/s
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
Dr7R29yYGhkdF+KTFOVK/RgI9H46OztARgBz/3zXiNKavvWXs3ukD+D/jUcD
f/z94/PHy7dvz96eHZ6RMKen2E8fj79/fXP5ifj29cHR2dnp+eWbL5+//2RR
X0CwsmctJP2FukOOkmOeeUyPceyQgle/TuiCUc6BTgraIBuvkYVRS0MaF5H0
ctG66VAFyLxK+Iy8z5CQXReXbZuwz7Bi1LJ8wo5DKsE+HWqROCvjN8LmMM1k
McVnPUy+SpUD2vjDOvhjFhUySOZ5r20zDvUhm3Lei7aOZbyui/ccEYxaqaSW
ELD93pV8bpXbaKjVsK4xzUYYpIx75PS5JnWZhc1Zhn92Du/UzewWbC1maQ8V
L8rSC5939PnkGfjexnfVwHHBwPKdmDJR0W6IwtUBiFEA4vhZ5FN5eCoMFGcM
bSbF7Qo0jfN1+CsEZfIBFS7AHgCkgGsPyY9XRRrAlp3K8hY9yxNq2atOTzSy
VPTy1AyKNExKdExKtIyKDCyqtExy1AxyDKwqLJxqbDyaHHza3PyaVMw6NOxa
1Oy6TIKmtIKWdMLO3KoQiac5QobZopZlss4Nss6t0s51Mk51iu71sh51Ur7P
FQN79KL6ndPGXdNGAtOHYoqGs2tGaroWGnqX6rrncmoGUop7EsoHoor6w561
e0XMO0SOWEP6TSH9JrH9FsljT5NGNMM7NQM6FMlsx6VGxbVWwbFC0atS3b9a
IbBAyHtRMnBGOmxSnDwgYzLRkzIxA5KhL9Ri+tRjuuX8G2Q9qrSDOmzTZmxS
F/WipoQCX93Vr/hVPu+JYTO79fgjw97baj0P9YZ/l2m8Lpr9gM+Xlk5NV1iq
2FUDnmUL9kSDB2kgOhWc8ga7NME2GbCJA6y4C1Zdu0q5JfPJmvtgryQ4bwvu
p4PLaWCzc1HNVERohbxM8I0HjsAttz+50unUqtktnnPZ93K5jgn6LMtCELop
ROtcvFcZ0q8VllcOJpX+FV32PqTizLf8yKMc7Vy271y+F1CPCWvG+hbD1N3a
1e2aPSMXUvPx1g4D1/jcAAabPzmcHwkF08jH0cjH/MLpaRE/K2BT90A944Fm
Gq1eEYdVLa9dPevTGm7zZgHvWi6rclGfLvXEWe3kWY/kxYKi7doqRGbNTlz9
XmodsbDtS0LDJ92MXdHgaXHIsrp3v7L3oKx9vb5PvWdUW93zxbnZ3fLiyvT4
2ILctIqSzLyCtNyC1JrKZ+3t9d09XejZ2qO1nvPdV59RUz9IK1/xs+DhBvjl
4B/i2tn26MnOFPiBAP7z5j1uA740jlnexGArxsai6ltVajqoi1uAtklghXiz
dwuAlADxFbcHV6xOPj0nXUwQjhaIpK2t/VnE2hxmd4WI3MTD1hBbK7DNxUPs
7vtjwmsiigjfRmwuQTdnEdtkfrJCQm8eY/cx+9PYvcm/vyHevplbnK5enuv4
/B4/+bK3+lneeG8nFjYZG2EX5Gs2OtpJBo2IrNrmV0u49//+//okf/3z9evH
H39//3b59q/P775//nDx7vjtxcG7D8cfP5I+fSW+vTy9/P43GUAu/gZhZ+/m
9vHDGweR+YPqDoV08kG8eokGYS81QgekvAbMEqDGuRdP81+bFJ6bFL9VSEKo
piIU4rZUY9d5nF5w23YwmdayW7bI+k8aZqJ005ESUSs6ITs6UfNyQc/ZnOqe
WPYwmo1Jus2Yxs48TR/XztvQLDrWyTnWTNxWDRiS83qu4Nsr7VR6R6OCyqg7
PKIJ7Ha+IsO1wJfn5k6QSr30A6u4RcfA8oD0AcuCdbnYUesENNM6h+i+icBr
Q2pQkOKzCPeWm3xFtWrkC+PYOVXnZXmLfW6PHvZBvyenPHygphwYLvxd8nq2
BiDjKWhQLaCS4uXcpa5UQm/iqYAPsQHdi8Fsx0HnO6JiN5lVGNlMuahN7tPK
3qOWvUcl94RagZJOnoJOkZZRgYZRiZJehoZehppekopelIJOjIZWkI5ehJ6O
i5JeiZZdg5XPgEXIlIbflFrAhkMlWNQkk08/U8ysTNa1UdalTca5XtqtQcat
RtajRsazV9G7Vzt0yCJp1Clj0CWjK6ioJ6Gmr6B7orx3uvTFRFp9f1LFYHr1
ZGLFTOSzkYiYwbDoPveoXvvoMZOYMaPUJcPUVcXYOcmQERGfFxLeHfLeTTKe
1Wr+1bpBtdohZUqBzzXDenSietSiOnSjGo3imszj2gxjuxVDXspAZiWidkVj
UBJxaPkYqEzwklTwgqRXO6X2M0Ag9Hf+kJvcAX/Q2N9ndObkdXOySSmJKSD0
d4JLVeBKODimfmXuqPj1yuFC/o1aAbD+JlhPBT6XBAfJosYeXIkAiQ3gSOZU
tHWiiaGcgATlY15+ThlAofKuSR+1+ya15xGF51tan3c03geP7Nce201S2w3w
e49pxVwFggbkrwVlvPJMqE8vwGVUEuMq4KGFW+EVu9HNeNeSTY2wPvOsDbcy
TGjTiV3KumH4K5PIV0H5K3bxg3SyIVfeYUoDgN6aSiyQVTn+tnCgTmgft1EB
lXoGpU4uvcEzLosqXttmJp0iBvUCOvt8GpN8LqcaiZCXShGvbKKHMnJX6xsx
hY2Ist6Tmr6PxT1fYhovLXNQsmGzksFL2v7Dyt7d0i71Wv417smtbSPbSPzF
xuL6y/bGvq7qju6K5s6iuua8uqbCrq7qgf6eyZ6inqbsluL4rur0wdb84ZaC
pYFm7NbozuSLpdF25MbE98uzHx/Oj6/sKojvV+7To9cHI52tDuU1vGW1t19O
Pdk9E+6YepDZeLuyW2puLwZ72gPDDOwhx9C4ZRhsHrYyTYBvH2H3DxA7eNjO
MRZ9hiWeYPAkBPoABT9A7pGQOyT0LgGxjtqf298cPSdurc0+PztefP96CQbr
IyCnwL9ft1QUWxtp+zqZ97WXDr+sbqlLmxy7splUdPTh3378fxLs89eP375c
HV6cky6ODr5+eg+C3378+Pjp48W7S9KHS9LJ55Pjt6//MwYto99EFdaZBiTY
xdaY+NYq2VVLWFeo+XbY5i6ZZ6zLBcwaJsKM89+Z5J5rpxKNCs6lYnYkI9dF
gqfJg82+lelKjbZJ+A4aJKw/zcaoJuyIBkyKey0L+PTSODx7ZF3I4jgo5b+q
HbNpmbNmmj1vXkQwKrrQSsZohg7LeFSKuORIupf/4T1NY1aibxZw1N8AViiB
jQ/BFoqJKjvZ0AK9hiOzyJFQn+fhERumuVDhkiqTrloABOjA3yU/yFKD9P9V
t/rt63W2NjeZyAFRtyWKyCxWmMldEKACAQFQ3PNdNXkDO/iYedH0DwUTWZEU
QV4fQFtA74u3Lmhz4zkdYApkga0OYDTgDAASErpAFZOgHj2XPhWzLi2LNg2L
Bi2jKjXDFTOhYZSlYZCku4IRIUpqPgoKbgoKNmoqFjLaMHEq84gYcIqZ0vMY
P+Ez51YOFDfK5NPOEDErU3RsUHBtl3aqk3CqkXatlnCr0nbu1nJ7bh7c7xA3
Yp/Y75jW6/OsP7BiIKV9IuvlYs6LtdTGxZTajYI2XE4DPqkMHpcxEJ740iv2
lWP0iFncgmnGnn46XC1pXyx8WjR0VDJsWC64V9qnQyWoXT+0U8u/ydKnyiyw
yiS02TisxSi0yRLSaAdpt4X0afiPiwftcUPOOWO+M4Vf0Hvt8vnNy0XvP7Xw
EpE15yF/ehX52nBHXEsUOJcLriWAo87gsCn4UvXKXlp+Byz79YoxNv4KNv+s
IPTyLrhmDu7GgUtlCzU5SV6BUgKqAHD/pyGFFgDEgUc2gGgywB4JqCTTerTL
5+5JFWJ5UmA8EVs8wYuCnjP87hOcDr28Tr2yYTM2OVtBpTuQooWQnOGk/MGM
8snEsnFI/kh40VhYxapF7KCQRaVO5NTTlB3vmjOXctzT1EnF0Eb7ghG3qlFN
pyrgoTaDhP81Zos7vM4MChB62RBNn+aHsmGUivH0OlkUamnUWjnsRmXM+oVc
WoU01oX0xnmMpoUCrk2y3q26Xm1+sa8KK3fyGqDPOnDP2g7TKgnh1STPUqJB
2qZizKpe2JBWxLByQLuyb5VpaFV5x8LB0dd///r3r7OzD2+JR2f7GOLaPm52
Dza7tT68uTQ+N9vV01FeWpRUVJDYUJ3VUJlbXZLWWJfT1lTU21M/Nta3sDAx
NTs7szS/uQ3DnHz8drI5+jK/usSqrlqxoo61up26f4ZraFYmIf9JYa3qyEIq
kjhMOFrF4jfw2HUYbBWzO0dErRwgd8k8hIiAkRAYPBSG2t5B7+xhdvbJ62SQ
OUBt4JHLqL1p2PbYP5eH24v9qP0RLOLVAWHy7fn+57f46FBfFsp7FLd+0Vbk
y88IfjVYPzx4lZtz8v4KOi4/f/v49cfXz5++ff304c3pxcnB5evTtyeEy4uj
b3+9e/fu6PScdHJ+eP6OhD4lIE+OcG//hR39yO+Y03SOZVVyYFTyF7MoVPF+
aRg+rRMxbpq2ZJkL00uD2xS900k/UoqCcbmRKd82l880t+8Ui1MfpXkDi0ML
h32TiF+fbtyCbsoWWfWI+YyJ+I4LBW7xBo8xelVRuVbxBAzJQFZ1krbtCvb1
07eMM4l68QSN4EWNsHal4EJB93RWxwwg6IdEUGtNiDw4pg02s4M14pcvgrJz
kvWLnovlDj3NnYyM3InzxVmnTgn3BUueWZPB4fFfgHyVL0OeM/Dmj//wRAxp
Jm07LuMEBUqNGMAH/yuhF0y+rq3/m7ODfIAdryJ7LQdb0N0J/pvgn5KgEiD9
SEw7iGVcAwB/vQY+AmwkcoAv7IqWHGJ2jNyWNFzGTJzGdCy61Mzq9CxKDKxK
9MwyDAwStPSCdHQCdPT8jLScDFRMD6nl2DjVeMUMeMSMGXgMqPkt2GW8hDTi
uXWSBE1KFBwb5V2bpBzrxJ2qpVyrxdxqrGxqjZ0bbfw6XSC9ztEDLvEvvcli
J38ypnolrWUzow2eWreXUY8o6jzLbzzJKCJ4lE65Z427kGlMwphdzIhL0qJD
4uzT2HHdqEHtmGGdmCH1yGGVkH71gEFd/wlN90FNz0ntwGWVsA250E3Z0E21
4CX9wGlDnwkDz1E5uxFh+wkJlxkhq2YJw2Rrj5TY7EZYuefHwURwIx2ccQUH
xcDO+1dwUfsz4rQKAJvI8wdXqbgTVuCEC7gWBq6nf6lznEs0jbfR5KLlBv7k
Ae5rATeNAXovgMEXoPMAOCMB1VJAvRyQKgGUK2mkg+g1I5nNYqnMI+isI4Td
c/UhL+ziF0yC5hSdJ8QcR6R8xnQTFhwLtwPKtkOr9tKKB5NKRtJrJ9Ibp5Kq
Z32zhoxDWuScG7UDxwxiV73KDr0qyGAyLeFdapXbHdg9FZAy+oDfQdu55Img
4zV688cCLixKEFXXirviPlTKkay6afelITdFQ6hVU9l0CnkNSujNSmgM8yl1
c5mNCsXsq6Rsyww8GoKyJlMr9+IqNpPLt9Iaidndr8Nrj8xTNjRjF1XcX6p5
9yl6d0h7Vmr5liWXjK6vn74nfvhwdPr2CE0kbMGw89jDzbcfcd/ekd4doggH
O4SDPSxibXdnYmNteHKi40VPRXd7VVdPQ1NDRUpqpIePe1hkWGVdVfPLnme1
HR1lyWkQm+pSx4oytfi4B1GJQHzGnyUNXDVtKqUt5t398RvQV3jCLhq7h4Bu
oqA7JMwMDjaPhS1h9tfwsG3cHhS3D8Xs7KK2dlG7G6idddTeChY+f4BePjvY
eHcG/XaBwyGWiOjZpfnWrfUu2O7o/vqEuYHmw2vALQCgugsoS7NWV2VMjFwx
k2//gJ+//Tg7Of/7+1/n58cfLk6/Xr75cHH2/jXpzSH2+BT75s0x8YSwh97e
Qe2hSPtHf/9z/jc4D7v0TGoUM4BI2yUquRcoeVfzGJYYRi5aJu+rhozrJC3Y
FqLNCw+Ns440UnGKMVBOj2nFuD3hgFkO91ePTRsfm1Qx2dbLhA9pJcwZZ+0Y
pGyrxC4ohi/xe/TROU9SO3QyeXWIR47rpu2YZGMMs7YVo2ckg6dUgralnWaV
fAYlPYolA55xeheJJ8xS5oMSjhngnN3/rt4ey5rMEn2fNpP8OeWCbp3coaDE
w8TQN6ZB1RL7xsDPniTck1q2jvAgK5AtrYANlHgI/mY0mWmqeCCktEC370Te
Q0kGkJxHFDKBMnfHgRbg7lW5X+BJv4YwRSczR9H197w/Eebe75yeWjSdlPmi
V/QGBP5w0qwDQAE9HyntUCn1UDFFXxZB28fMWhT0GtSM6mzcWhw8Gqyc8kzM
EkyMwkzMgsz0/FSPqB9Tk4WPLD2rAh2nJj2PHhXPU0YpJz6taHbVaDHTIhnH
WimHOhGbSnHHaimXakGPWi2TLEPHMnPvRiv/NoeQl3Yhve6Rg74JQ/FF6xlV
Oxk1m5nlq4W1+6VNqIKa/eqybfOqNfvCOfvMMY+UgcCkvsD4517Rz92iu+xi
e/TCulWDe5UgE7ox63oRu7rBe7rBu6LRP4Sjf3DGfeeI/cYadMzkOivg8FLL
rtzYEBLoEFkWEbtQmPS6MwZ8FQAO24JjemCTCNgsBDYwgg0Pr+weDT+dL10A
+OoWOMIGLhqD8NTT5crG8jx772BZHWPgrg/AEALQ+AE0oYBgNiD6DBBM+1Oh
AJCIAfjDAH6/P0QC/5SO+FMx8b5mzmOjUhahLAqB+JuCQb8Le9+U8hYySrXw
exGStBaWhPJKxVnE7CkFz8j6D2hEDXmVLUe0QTOaUZEFS8864VHFM56Z/WEl
854Z44El0OS2C9dchLr3hG7IRFQzUdSm0BDSkNS9Vd6Dc4jpSKteF9aOAG7L
3GJ8yiDpIWSYSCfnz6YZp+Zdx6STdlskmEIhhkIyklfnGYdJA7tJOaN6DpN6
FqdRDqdejphdsRGkyz1pJLp8PaMNVTLwpnToc27PRVgN3ihyUs7hpZRjty5k
QsGrXdWzwjm8KTG5ZX+VhFyFz/QNdnfWTc0PwjFru9sz8I0lwtoqDDpxfrL7
5R3u0wX6yzvs10vcIXZ1be4FAbuEgy/OTb1yd7MQFuOXV5JTUFEwsrFI9A78
QsIdwscw0OrT44L5eceNfc/VzYDDN9UgSADBczR+CYFaJ+ERaOgWGg5H7j/H
oQYJqHkCchW7t4HZ3yHCEEdoLBa6Q0TsERAbOOgqAXXVmnx3fWh6tHmkp3F3
bQSHmELDpnHIOSR0enuFjCfTI91NyO2p14QdbydDV0eTmYnBq0oCV42zwH9/
/PPPj78+vX379vTo38t34Lcvny6O3p4dHp/gT96Szt++Pnz3+u2Xr/+AV6HB
n8kC5wh0S+xkVQ8RMElUCag1T55W9B54Gr9nmgZVj17SiJ3RT93SSoIqRuyT
H3A6CWhJyLJs1Aaf96iAzwSTYwe1aRWvR7du6rLps13DrHWt1GXNxDXlyEVu
hx5AtgiQzaKybtFPg7lWvbHMwyvELIqGDpPBRCd0Qy9gXt27m8vxGYVFCnfo
CHPsuZBre21bJ9ivdhW/RNbjz91snDNkgrZ1s3aNsp/bZpHB5H1E8GetyFKe
U37yXW+8nCCcnesRBoaqgy6mHyWTUiijTA1MRkPEQRGVTspTKfIePlDmsbm3
KPOQyh3cr4qh4qAaeZEeKcF6s56KoYIaVL4CkyNKGd4Rq1+2WBOVfrZ2BG66
GpbfAyUtIiSNYyTUY3nl/ZhFnCjYDB8yqz9mU6FiUKNhkKehl6agEaenF2Zk
FqFnEKSl4XlAKUnPKMfAoczEpc7Ao0PBY8Ak7iqqFc2tGi1qmCdjWyduVyVi
Uy7mWCXpXClqXyHhXKjiU6sd1GwQ2mUe3m1Hvoyj+0LSBhPyR7LLF/IrZnPL
RkvrF2vbVkprZyuqJjyr53zzh12S2z3jWr3jn7vFdjkmDdtkLkqHT0lEb4nG
oyUSiJLRaLlIuDYErhdJkAlb5/dZ4HYd5LVrkHWvsoZU5JQ0jLfX/Fisvsql
7SYLSaqrr7r0Z9BpIVmzPALrKcAaOrBbHBw1AXGJ4GYaOJexVR1SEWSjLy/7
gIId+JUHuK4NcPgD4hGA5jGgjwZUFwGFsV81X/2u2AyIZt2WiKZXimCSCXjC
Z32D0eAGswm1kCulsN9dbpcbfLmPJEtodTrp9Xro9bvYjbukrfoVbfoNfaas
I1adcvYsszb1EyZ144cds6a8i2YD8lF2yWuQCnh46XZyw25uJyro2XxY4XpC
47F98rqW/yvryIX4eqKmY52eZ11E0eLUHljxEpdVu/WI2wr4hf8aoxYNv52a
Y7aYQTyXdqSoSdZjKd8n0iF8hrksCvFsinGcerX8JlWc+iWCRqUyluUS9rWi
fq260QORDfD4mp2w4uXoxp3sF0dFL97E1KCtoiZMIjeehi/aZm6o+r5Uda1z
CG8rLJ64KnT6FfxAPNtfX0ZAV4+P4UeEvXck1L9nZxfHW4eYZfTuKBY6eX6w
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
9QwAgsAjZ4CzEOCsAPjaAcEuQKQDkGz9VaHuT9mSm6r5tzTyAflUajF3GjEv
KnFfWmkIg1wqg2IupWTefYmch4plgGDqLyKJT9SK6A2LHsinPpaJp1NMuatl
TmfsR2mYcE0hAxBPu6NexGLdxOXSTm9dw2zVIuD0Ssp7RSsabp9J9C/GB1bg
AotXIqt2Eut2Y8pXEiuXIflzrrEvY6v34xtJzikrukEj9gnzwcXQsIItDfti
Pde6xNKJ9UNwYOWzrD7kHrMmcE/iDwoFDfM4Ye0QGZMoMaPYO9xW9/nteNRj
WWRDmKUDmaQy+bTy+HRypHTy1G1rRF1r6TyqqR2qDGKGvTOW/ApmA2vW45v3
8lpweR1v4mpx1qnTOiEvjCMHVX1q1NzLzQPL/eJrpub2Dw+Pzw7g0M2h7ZUX
q5Mteysviftj54gFInYVh1g4QC+fHmyRkEvwjSkcdPHiFPqaBP/x8ejdOW57
ZQK6twTfW3rR1VxZXbQxMfXmAAd+fnOKWzpHLf79HveehNpbWgE/gOAl+Obg
O5lxEHGYI+w2Hjt6Qpw4JPaTCMM/mckkFraARy4TERsk7DoOMU9ALOCQ0xj4
JB4+T0QvYvdX4VsLZ3j4IWpnb3l6YXJwY2kcuj2zsz61vjCAhS9idmaJiHXk
3uLy/EhDYx0ZTA4O0d///fjPv3+9OT/658vnYwLu8vXpx4+Xf3///u0f8M2H
78jjD/P7F4PLp20Txx2jR26FE5q+DaLkx6VTu1LIpErUpGjgiHjIrEEmQQmy
b5F3ZF9JUIwYF/buEfcbZrPpUwgc4bRu4rBpYTFpFnbuUwmfU4tdNc6FWuQj
VROWBbz7BX36eNxfMNk3i/uNqcRsGiYsGyTArdMJppFwVa8pcY9hPq9xdudB
PttGftMsPrt8Bs9urth96bhtaePyoGTydSB4VZ8z/zo4FBAY/szuGTw4A56e
sRaYNelcN+JX0pfiux1n/pdc1AQAcv93198HOdm+2rH+JBjk8RDLomHQ4MZ2
COio/rciTN7JxaPIk6/M1wyIa7GCkuRFQZCZ5oavEPDyZovxffAuPxlwRGlv
K0TfnNP7nXwS8hufCjs+/CHhkiNnVyTvWKzqXKHmWq7iWChnnCquF8Uu7soq
7sgoZM3AZUnPbkTDaPCYVv0OpTo1rTQTixoruzY9lwYzly41hy6DsLWAhh+X
WjCvTpywcY6EVaGwTbG4Q7W0U424a6WCZbuqY7e2Z69ZYL9VSL9RQKNpcKtD
VEdQ0Rikaj6qYTOujZD64iKl53tM22dI22f/56B7DWibh3ZMnXGKrfeOSIkM
CXoW4TlSGIRuCAUHosBxf3DAGOwWBuupwar7VxaP0v9SXYCr6NP2P8BeLvCV
KbiRhhsq7ChKDwpN0rbL5X7aeMNwCDBdkXQa5rDsA5hjAfYsgK8IEK4EJKrv
arUCwul/iCQ9kk2mUEx4oBj3WDHlllwsIBF2Q8jrppj/PTHIfamEB8KJ90Wz
HokXPpYouS1W/AtfJiCafl+75I5uMUDeLBvzu1rqAzlPOo0oev0USo3kO4qJ
VIb5bLZ1nK4dLNYdrMYDDNqDvNojclbTdmHbgc/2Y0oxaW3zz3qgBV3wrNrF
9IrlyJyxgJTR9FZ8zeQ/fiUwOfdmec82p5zFzJ4jc0iXkksFJHtgDg1OwsGo
7D4hOWfgttiv90WoePRENLx1HdNVrZIp+G3vsptS8jk95ran4nakFIthVU2i
kw1j4vXllI1lMsq+bZF/3TRP2WfA0LtHxadJP7rTv3ihuOusZQIsHvg7tBHm
lD0ZULrqnj1uH99lHFBi6ZdS2jE4v7GKJ+yRUNMfDpdeIyY/H81/OF798mYV
AVtBQleR+8tE7PabM8L7MwIJu4veXYfvLp+ScMd4JAKx/enjaxD86/XZAQKJ
BMHVv78s/vv3+mvSKxKm78vF1ocjGGEP+fH477dEEAf9iNw5OkEfHOL3iOip
s6PJw4OhA+wkCTNDQM+RsCsk1A4RtUJELWGhcwT0JAlLXlwioZcPyfACW99f
ncHsrR+iEUQMHA1d316ZmxsbWCZzEsTSCXH7wwni4hB+SoCtL842Nl2BydmH
o3/AT9++vn//4eLTx7dYLJKARxGJ2Kts6C9/z67DU0o6HcPKTX3LzfwaLH1a
FXwbhWwqJV1ekHWNbuKeWtyGZNSMejJUMxkrF7VnlI03yt7ld2/jdmkRCxjg
ce/nta4WcGjTIksVr0GdqBXrHLRu/I5U0IR24rZy3AKLcyelRS2zdbtYwKhp
DtaqkPQ0c0smaF7Kb1ovclEnfFbMo4/WouuBTiu7SamQeQaHfT6lWx9tEEwt
es7Dym+jtQMkM5Pix2AbL6zKXSOkTC4T6ZAIDQ6agaQsWJePWpW0QIIGkyyx
etEv7vzEhN9A4MbJY/ragD+SXYFLqv+az0uWm9tTzd5m97oJXhlXBUB54ImC
Dk2tDksJIODGCBpd+YBA+ptUAerA/m3DgNv/cLGBokDin4AJqwfYaQD6AP7A
XVV7O/kzAbtscesiMdtCCet8OfsiRediTZdidacCFcts+afp0ppRYqphfNJ+
LHz2NBxWVCxWtNRy9PTqDMwatGzaTNy6tNzarGJWQhr+gnoRfHpxEqY5EtYl
ktalYlYVIraVgnYVWoa1GlaNRs7PzfwGLEIG9Dy7tL3bjcM7HBMGA7PGYitm
shuXK9rWy1o3yxrWKprWw0o2owtnkgp6K4trXlVlIhqCf3Q4gV36YB3PVXmx
qgdg8e9gFgAW/AqWXwPr//jW7wUO2IOv3MBhH/CFN6HUqSnULMjOSl7Lhlsv
/rFBzZ+WY4AjAfD8AfiBQDDI5LjPFXgKCDcDTNkAZwogmnBDIuyekM8Dfpu7
3EYP+Cwei9rdFnK9Lur7pxQEEA76aRPLBeQLAelSQDAL4E27LZJ7VyjzT+7o
e6KJt8VjbohDfhEL/UUmBlCOAdSibomXPVGuYNWtYtEvoNfNYzQqZLVpEXAe
ZDbv5zUdEzMaltDrkTNs0bFpsw/v80gcDSvpj6+dT6tbTqtezKnbSK/aSCjd
TmnCpj0/jmzCmyaM6kD67NKm4hqhTgmv9AKa3aJqClt3anpQtS+RBrYp1x9L
33giCfzOLqTmpGsfL2MMecxnep/djILP/gGb9SNW68fSIUwaEY/EPO7RmtBy
ulKqJd0wzb/xtIhGNV/KqErSslDMvUQ7uNU/czG15Six49K9YtU5dy79xXlm
Fym0eEnPq1DaMjQ0p/LlzCQMuYbdnf5A2jrcGnqNmTu4Kv8+hUasouHrCOgS
em+dhNk9I6KOcCgMdHtsoGd7efYQBT0jYYhoKGJnCY/Yvjw7P3/bjUY141At
+7vV0K1yDLQNszW8uzyD3UOgt/GYzWMi9PAUSzpE7+DRM1eJOZjRA8z8IWbt
mLBDXjxAbZBQ21dggpgioGYIqPED7CwJs0SmHATYLmZve3dlDr21fYhBnREI
Rzjk3vr0/tb8OWkHA50+Jmye4Mh/2lmcHq2pveo1/OHH6etPJNwB7PLD+Ze/
Pn7/9unrX+++frryF7+5/Nw1NO/gl8ov78UhHcCnGiconyLl3ijp2KIBWdKL
h+mkotRTETLRq+IxmwpxSOU4jFEmTi1+ic+9SdKvSy1yQipwgkEvW8ihxfUZ
0jhm2Tod4fSMpA5ZlvQeVYxalQmfprZuevi0ks6uUyZs1qrgyL7ktWU1QSF6
md9nUCJkUC74Ob/vC3q7QSqdDi6TCimbTHbX4ieBS/d8oUq+zc9TncEu4yvn
YzM72B1cFhLhmTmqkj1iU7jgHLHgGr9hUTRlUtDpEjEZ4gA1iGyg+y5AxgSu
j2yPuoUtE17ZqR/SpiX+R0Xkz6Wf3m/luJnB/tPWykYGEwojFdp6Cd44QMKQ
9yeHeQJS/sJj4nwLL0ZbcC1ARuzCyhWsDgC75aaDb+lps0vEaNmM3lPKF7Eq
ELDK4zPN4zVK5zdOl7DIVbQv03WpVLPPVzbJktSLldSIFJILYuVzpWS1vc/s
QEejwMSoS8eowcBKVjp6tDy6zKKm3IqekvoQEf0oMeMMccs8CcsSUYsyEesK
QetKJYtCNbsada8unaAJrdBlKY9RKY8R9aARq5jh4OyBvPKu9tqm6cbS1bqU
jbLA3boEsFkXbLcBu+zBFnOwSQdsUgKrOMDi+2DJHz/7vPwB1j0GX0iDI7bg
eCA46VLbPF9c0u0OqVWwKmPWq2UyaGJ52s5i0sHhNEbvOnfPc+OmP/Ju8NHj
0FP6sFP6UJKM17ZuwuE16XKALQbgjrwvlfhYCnKT3+uRmM8NHudrAm4PpQLv
S4bclY18oBpzXyHmmlwuIJl+XaHghnw5IJINCOVck8z+TSj2Gm/IA9HwhxKh
N4S8r4kE3pKPvaeUeF025oZ86wOlalr1ImadDCadDHr9fGaLFh6XMXqLl4IO
L6RcnkvblUlbPpNzrFDzb1eDTFhHd3qmjoYWrKRUQnOq4el1MPIkrGzVp2A5
sgXlW7XhUbbsnDPrmznvkTLjFj0ekNril9jpElZX2rH21C7xt/silJwad+kU
RJSc1a0ihNS8b7EbPuK2oBayf8JtR81l/SunE6N6BJd2pICUr5xaoqBV2V3b
MkAnj0WrUt++W8+nS9q7Usg2X82p0TVpzfEZyrVsxyBuPLAEGVaCck+YVXOv
VHbJzWyfmkEQEHjsxuwYamZo8XkTemEIuTV3TNjFQecOkItExApqexG+OYPf
Wj6Cbp0idwg7m7itdfKN/+4Ie4DYxOyuHqO2jpE7eNwyDr1CxMwcEScOUC+I
iL4z7OQhbhGxtYzc3kfvYg4QeBIGTUJv4xCzRPgEDjl3gFo+xm8fYWEk5D4R
uX2A3CRhVnDIWTxyDI8cxyLGcfB5HGwTD4Pi92AnGOxrPJF8hkMs9s3h4QkB
SWZNqL2ZvfWhtfk+xOb0GQG1sbRY9rPVxccfp6efsCjC2puPRAJpn3SMOD/B
f7o8voqo/+f74spedGKphnG4ikG8quEzVb0iSecaPf9B6wSkFgQqFrAuEbUu
Gr0umwxXzjjRffbWsuRcLWmR36tJMrBFJqifzb6R0yiX36rYuwRtnbblnIMx
T4Eqhi6pR22oJq0JBY7cN6+msm1i9+4VDpw0ysI4lr81qcIp5+0JJy7wQFp5
AquEg/v5vZeYjIc4dHOETRNpHcpuRWKB4HNRz/aDV3FgBx3YTabirJvJkDL3
xujwNofiZpOql7p5c8bJO2Z5S0YFQ/axm16uWJ2wYvZP1GRMcN8tYkzQDbJf
7JIETeXRt8Erx64SyKvxKFMSSBclw8hVxJogQGUowFxLIeYGqFEpkA+vQk0A
gJvR99FiGMUrOVEXwOLJVSBKMgB4UmsKVwTSvFGQWwDCIsSs8sXsS8UcinhM
8/ieZoqa5ahYFeo4VhjZFGmaZinrpEirxwrKhbPxe1OwOD1i8GCl0WJh1KOj
1WNg0qHn0qbm1qIR0GeVtRXTCRbUChPRS5Ewy5OxrJCwqJa0bRC2bpZ2rhB3
a+f3mREIQzOGnf3ufvSL8/Ed7xPR+DfWBQc5DRsDnb3wzoyzRqdv1apgve7/
qhQW/3wlj7Jfr4whFT8lDPmrG7oOPqc6K2HtjxVNcBb1MeWQNC4QsW6ldd0D
vP8F/EEgFLwZDFL7X7KFYdlDdumCViiDFpiDhyX8u/T9S039Uo09hs1DZq5x
BgHM/jf54q6LpP4pnvWLZO4fMsWAUBognPK7XPYNuaRr0hG3JEJuSvqxiXpT
CDpTSoQ9Ukz5TSrlF4Wc35XzAfGU3xSSfhcPvykZ8lgmmlo+7pFUwl2JpIeS
qb+oFV9TTqTWimIziuA2jqPXy2QwaWR0HmJ0GWB1q+d3yxBwDRP3jpUKrpGI
GuON3LMJH/PJ3kiqJuS2HOdWYzJq4OkNsKDChdDG7cg2pG3epHP+rHfBqnfa
THTmTmj8RmRuq2dUtUNAYfcU1jOk5M8HYpRsOvdYVGUMINouOZyqfjdYnt7i
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
KR0KFkkgaEBUuSPJb3GHFzoFBcHkyynl2+XBGR13iNk8JrJWLTinYZk0iF34
7z+f4NE7b9tYNueXP//nv/07ePzlr71zGKfIUkFdL5hzhk1Mm2Nqr3XMgFXs
iEvmmmsBzrX40Kv8zLXoxCRvz7IQZ1NENMrcgccsQvRQj1owSty0ycXZ5GA1
IhcgmCgGjLmUHAQ2XnpX0nVT9rTiUYqhi7JBE9IB47IBk7LBUzKhk7CYVe1M
jONrumP5oUn2tlr4pHJgt2pwPyxmRjGgV8Klns28/pVDt2DAmEJon35ov4Jv
n5j3zAvtlPG3VeCsO/j+CTgoDg4JPnfb1ogZtMydsUkac4sY9E8cCs6f9cyd
9M6Z8K9aty9fcyzejCzDI5Nm3SOHEhMoP57rajK9Db+b8/yHngSYID1bwKPi
L/kcycvtzysdISkfCXBKcOUZm4EJdmCCBYi0+KsXWwbsBwFNjudRqiZt3FbF
Dw2iefWylQxa5LQaxfXLxayKZJwKFO2yNMzDLYw8lO0Rctah0g7J4s6FInZV
Qqb1AibvhEy6OI36fzIa/MF0+J7t0APnrvtmRYCiP8BrYfRIxFhIIcpKf6Y6
+O97BeBRIUiOAdG3U24HzcFuVbBNlLXQR8NtPqQbAEdNwQVbcCsE3Mw/n6z7
9KYqIqnCNKBM3KFUIfCDSepiYD0l68N1XhuzoJbc+IaUOXudM3qWN3SR8uks
qes86dN1TOdn/8Yzs0y0VSHJuphimU/ST941TMQYxu6pB08LITeEA1dEghYl
w9YkwtYlgmbFkMviwSsKcbvyESgJ5KqA9xS/z7BIwJRU5LR4wpZpQKue/1tA
MhDgsvtRzI1Nyf8nMednku7syogXykEvlYJeKvtyqAWxwwPY4AFccG8OjWBO
TaSARgS/ZiiferigehyfWhyXcgy3YjwHPJlLJZVXI51fM5dfI5tHM4tXLYPb
KJvHqJDTIOeVYf5L/SIOy0o+u1p++zp283JRl2ZJjxYBh1pBp7fyQYMascvq
cSvaoUOKfp/UAga0Qscsk9ZiG07S2q8iq3COiePuyZOBeTMBeXOp9Zi6kc9Z
rYf++Wu+sR/tAt5IakY6B5b3DO+efvnbz9//+MvvLw/Im+i9CRJulkaax27P
UDCrRwT87tL86NjE1PjkyMhQd+fH13WN6dm50UlpEYmZiJAEr5BEK1ekpqkL
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
UwlGLWxYzKVDwu29asiEQz42pPnCr4ruUIB2LMY5lZEN07cVIqY0k1fV45bU
I6aFHJvvw1JeaaQK6OT+4NH4SK9CzbTK0DZLIbQYCBkCXFaF4PngUDnY84Tl
DmbcuivbVE1bJN3bjPM++kZMIsInPCMnXVKnPfKHA8pno0v2A/OJiNIDn6q9
gIrF8LL58No9r+pdl5IFn9fLgVXTqekDRSnDKQWTXmWT4XX9IbEFovwqXLKW
z+SN+WCGClo2YhqhT5UyHkqn/44/FHjsA7y0uvdEGQDY7gGAmeyjlnjJvQ9m
/yDkgMQSEBUDThmBkxqsoaXWJ6ytsVkT9m8x8hEAxzjAVSMQEwsetF32NXdU
1BhYhQLc5sDv9IEHTix6cEYDCgWAfC6gVAHoNAL6nYB+1+/0PjzU63hi2PrK
pJ7DpIzPJI/XNIPXLI7HNJzXBClo/lrYrlLCrUXG+4Osz4AkYkACMSmNmBd2
G5cPmNOImDeMXrZOW3RIGnXPmPArmYhvoSY2XaQ1/j71zU1OOym7bTvrLTGv
62tq+3X0O4pH3ZJRwYJeFlEv50w1lyKZvWETNW0ev2geO2EaMWAR8d4woE7b
q9DQNVffLd/QMUXfNs7AOkbfLgZihayWl7SGK5uoLsBawO939x9Lc/LBhST0
5JRtxWQslLV8ROTthRSdRJVdZTT8BeScRJTcJGAeoir+7GIOoiq+XJJOggoe
kmp+/HJe3JKuz4TtngpaPxOz55Rx4VMJENMKE9MLE9cJ4YOHcMNDeGBIbvUw
fvUYEZ0Ecb00Cb1UQf0kfp0EAa00PrM8MetqXrt6AYdWacSQTESnsG+7kG+7
mPd75fBx/ZQlw8Qlx8I9i4xFO0izVe75lqACX+8HlG0lNR2mtNKSWy/CKwj+
uRt2MaMm/i3WyGZL79KqD3PTmxT0IWVxbX55ZWR1uYdBWaSRJiiYPvzaBHV3
5hC9gF4d3ZrvR6+OQGA5wk7tbXTitz7i0X1E3ABur39/Zxi7PYlDT6ygUNvb
m5i9LezuNhmzRcVAxgR1Sto+Ia0x8SvHuHkGZu4Qu0DFQO5p+Yy4RSduHFO2
fuPDnd+BCHAHgTue3NmW33zQbW3Jv8CEBYGti6O9G4gMJ7i7d7gdMsZC73BL
p90LCFOHe8xbkkAEoxHXDwlrDArqDiwQRKEeKn6VtL9wfYb/fk2mYtexW7MQ
TP72/fIIt/W+pcrJUs/eSvd1YXp5SWZfz4fBW2Vin7evF79qW0ryav6sn01Q
Td+3KDt2qL1wraCbJG+oh05pI4fMoicc09c88/ddc3Y8c+Y9c5Zd0hecMiY9
8hYDK7Yh6ehXhnLLmXPJXHDKXLBLntCL7NcK7TNPmfYuxyIqCX6VuOBaslcl
1j4HZZG6YRA/qxIyphw2qZu0qhG1oBI8yGZcCYhHsqmnyZqXAG5l7CY5ihbF
8nZVggH9gOVbQCY7K7QIXMpk1btCl+pKoqxpGocXTjN0JjQu0zJu1TlqwT1s
2jlpyLlwJKRyJqZwL6yA5pRHca/c86+aiyhf9C9fdSnZ9CxYQWZP25fvhqTN
pUWvBMYTDbIpJq0Y7fzaHwUkZEV1pHm1RYSVX4nJAPwyAJv8vfsyDwF+Np4H
Hiaw6fLofyzVgofl4KkLiGZnLQoEfZK+p6yUadvtuG27LDhsBU55gygYSHIB
mRngahy60asqSE9X8PltyRM78MgS4E8HpNoA6U+AbCeg9gHQ62BN21dueqBa
/UyziFczV0g3R1o3XUI9SVYtSw6eL6FZxK9Twq5X/Nik4AezbMAmk8+0QsCq
Usq5Wc71jbxbm6Jrh4JHr4J7j4r7kHrAtG7kjH70pEn8pH7cgGHSgFX+sHvJ
hlcRNajia+jr4/CavZDqucQWUvnQv2f3/BryBm9TPGqcM6uXhdZOOVBL3lPM
2wjIX3PPWTSK6tfxrtPyKjP2KrD0SnPwy7ZwjbV1ibZyDLWyRfoEJcXGFyPD
U108Q/XMfPiEVe894L/3kPfxU14uDjkRMTifiBonv/r9J/I/scHYRQxk1D1e
8upyixjDdXzZxK0e8xqomoSJqrjxyznwydrxy9kJsrDjCAGHT8FBUM5VEOYu
pMLa+INX3oVP2Y8P7ssP8+dVCeCHB3OrhvBrhAlqRvPCQrhUwjhgEXzacQJm
ubymhdwWhaKODWJ+Dfxur4Xd64U8WpWDerSiJrWjJi2zVw0Sp41ix+2yFt1y
lwIqduOayKkdzKgGQvSb47hmZnLLqV/ejnXMkLFPi6ReUlLpxNu+3XXcydzq
1vr6ytr65BENujXP7qz3HO5MMfGrR9il/cXRjblh7PrcEXblgrpJxI7jdvr3
trpwuwM49BCFOHeAX6YR5slUCoVKIB5gSIRd7N4mbmeTtLtKx21TsEsQTM4o
65eHW1f0rTMy6oS4dkpEHd/Kkjto3GmPuzwJJCrukiR3pgYKqHHbv3ZysHFO
278d/907g/hA2mXVlbGqSnDXx5g7Cl2wauE2oZNvx45Zr2XlYI//mRi5QwdL
F1FQd2yBHh7iV6m4FToFdcHYpxNQNMLG9+uj//nr90sarq+zGYKJg41eR1Nl
RWnW2HDf1NQkBBPtpDWtxGXbMiqi5atDJcO2iOZWceBQTPIsJ9ukLxmGDWj5
f9T0f28e2WcXM2IZOeoU/8EnazSyYjWmGhVft5vYgIqqXA4vXbZP7nVPH3HP
nvTKmvMuWgusQAWX7wVWbPlV47zLdrxKtzxLdhwyF00TplSDhyDRIh8wqBY+
oYock/f99NKgEJAIZVNLk7Qou2+cLumYLumQ9dyp477rAofRWykeGLhZC44Y
gS1PwDXbD4kWHKZJz5C7Vhn7ccgyzaQ1q+hlt6g5t+RR1+LRoIrZ+GJ0WD7N
s/jAqXIfUTkTWDTqlDFqnzPll7OYkrGs0LhvULxnk42zyrqRz/9F7PUfeGOn
AW7jp8BTbgDgAACeR4CazLOSMJVvQ0EguRy88QYJruCsOdipxRp5GXrBGm3p
hYTHK7CDA+x5AI5xghgEeDIA7k6Suhozol111OUfscsAgDwAqAL3jQEuc0DB
FVD0BRQiAeViQLkZgLUAKrX3lXOewWN4lCr41YsF1It4VLJ4VVKF1dKFYalC
CmkyqoWS6uVi6jXCWjVcOjVshg0/mVc9NK8SN64SMauRtW2WtWuWcWqWcW6Q
dn0n79kp696jhBxRDZvUiJzTjJ+GRw3D44Z00mZsij+6lG0hyo6CKvHIijlk
cU9y03bj6H+87v8rsnLTIeW9U9akSwbeNJpkEr1jnbMbXYPyyBrX8ngtahwr
aeCvbOqvZYkws0PEpeZlZJVkJOekpWS3v+1A72G3t1GDg33NdR/b3nbFxqVp
qmqLCUmysXECwH3WVp+PeV9yynIKwJ+xqYjLmXHxanPx60iIGAtKGr/iVlNW
cxaRNIFCTNpMCe6sqOGqquMJ0/NR0nKT1fSQUvUQUXHkkbDiEDd7Lmz2XNz0
uYjpYxGbRyLWPwnbPhFyeiBkx6OM4JRDPJP14IKHCerGvdSNY9NJFDLP47Qv
4LQpFHR5LexSrxD4QSN8UAXZYxo/Le/VBvNvNwjr1gv7ZBzVG1K5l9p+HFS2
Hdd2mtp1WTD457g3xyElROeEaWGdzLCcqfYxBor8ywb6ZH0Hs7e7TaOgsduz
qLUxBmbhhLTOwK1jVua25iYJ68tHROh2v0shzFAIY1TCOIU8cXQ4d8bcvDnH
fbnAnF1Dfgl9QNpjMg5uzo8vTo/opH3S7hoFizqC6EHdvDre/3yK/eUU/5m+
e07aPr01OKwKVSbuTn7c5V3vhmzu0rB39ueWErtHxFXoTc4OWYRh1axStxnE
nSM8ikFkVamdHLDGd+iEjSPiJnQmFBBV7jzUDQN7c1tLf1dbclf1ysq43vIE
CqgN9eP3F47I68wDSOcQ/vDl5L9//frtlLo41W9tpGFlqt70uqCsOHN44NP4
+BgrZ1JMsqukedSf+daeOZYQHXMxTgV7rgUor9xli9hBg9AO08j3djEf3JMH
XOP7zYM6rCLr3VI/hpXPpjetZLaspzQsRZSM+ueNuCZ3Osa9c0nqDi6aSW7e
z3iLS6rdjy5ZcS1c9ildQxStOKVNW8YMWsSNmMROqwV/UvB4D0MOKQcOKnl/
5DQp/Z10zAv1RCHDLHHjSlGTWF6H5FeI/nu2409fulCKgsFlfbD7CbjuzJx7
DVc3VPAplwwbMImdC4qchWdM28VP+EROeiVPeJROBLxeiSjfCy8juhXj3Su3
Q2rWQ4rnrTMGDDO6neP7w4P6NWrHtEvGNZK7tWI6lUL61BGjurbvZDiN65GI
9Tzff5+sAmmTILkV3PEDFyTBoduUaTdED36wUx3ssgAHrFglc8sRIKUNXK0F
J5O3mzwjzGVesfZoeAQAvMBLV8gMAfzJgFQ1IFPHWmJdIxfQS35qGMWuHsIB
CxFUiRBXiRWUR4rIePNL23JLBvArhvOppXKpZT1XL2DXrWHXb2DTqePSqRfU
rhLUqRbXrRDTLxfRLZXQLRM3KJPSr5QyqZa0rRO1qxd2bBJyahHyaOf17hbw
G5IKm1NOWFdN2tFK29KKW9ZNXbHI3nGpeedTvxraRImuw0U3jETVdmU0bTUP
/6266w/Rr9e9Mz765y4EZh+6RVJd4/f9C3HI4knLmA+ytilC2gHSht4qxi5q
JnYGJpamFuYebs5IH6+48KBPbQ2XdNwfbg6ZlI2dxfXNhZnYkEDg/+fnpx/u
cTx6KiAoCON8JcXxREyIU0FIWpONR5aNW1ZIXE0BbgrTsFbVspFTMhOT0ZOS
M5ZRtJLTcIJre6gbeasZ+GoZIkRU7URh9kIwR0GYK7eSC4+SG4+iB6eChwAc
wavkyaXkyqfpL2oYya8bya4dwWcaw2+bK2CTIeVSKeNerxHYoR8xrBPWb5U6
p4T4YBQ+aJEwahTZD/d8E1i2nd1zldF8GN1xnDn4Lb/vD0lvrxLeXgUWY+Vt
Gpyi+3qX/rJz9N8o3JeVLTLtkEGh4Ig4FB67cbo3w8QsMHbX8KsLu0uze2tL
h9htJo2V52QeLV9drl+erx3TF5jUVYgwn5noQ+oOlbRLIW4dUtCnR9Tz40OI
Jzcnh2c0/MkR/pS+fXq09+WEtTDI51PiOSQ5/ulK/p+XuVMmd0i5S6H8lpuF
YAL9C06pqLPDu6FkiCfbx6SdIwLqhLJ7SoGAs/2/xSq7t6dB8maLNYWHunt1
hL5kYq6Y2POj/X/Wz9N2IY8DyZI7mEA9Fwz07uYkjbgGeRsIJpfHpD9dH3+F
4LU0FuBh5+Fi1liZ31hXMjE6ODLK2urCvunEq/nKtvTQJHPHNgNjn7Zlnzjv
ljFjmzxqFtlmGdPunPoRkTkSUjgVnTsTkDwSkNGGzOqKyO9NqBhPKB8Pz+tD
JL9zi6r3jnvjnfzeL60nKGc4vGgionwhvmYjtXbDvWTJJW/KNWvMIW3ENPqT
YfBHi5gRq7hZ7bABo4gpDf9BZd8uQdPqe/Ixz9QSefTT5I07hDTTRC1S+d0b
f9TOV5K3Bs8awNrbUi58mF10AmBcouzfaYGsNwr6YBy/B8/rsY/t84/4hEge
9yxe9H+9G1aJ8yvDOBSiXMpwoVX0gAqCdtaEas6gdc6UV/i8oz8iIiYuNw7Z
lue31Rrxx6F8cLEWXCsFN6PBZQdwwQIcMgHfqYLvJcCPL1kY+SQOjsuCu47g
cRlIG/w/M92DZVnZ0REwEUUAYGNpmadawDNNAJAFuOzZjNMA2TJAKl3EppFT
Lx+QCn2pnvxALvK+dBCbQsQreV8uKSc+SWc+SXsuaRcuBUi0x7Ere3FrBHNo
Rr3STX+skfFQJ/uhbsETneyX+gXcetkCejkietliekViusWC2uUi2tW8RqVC
xhXiVg2ijnWCbm943Zu5vDu4fboFfYdkIxdUE/b0kvdMk1H68UuW8QtOqRvO
FUOICox/2VVIJTW6fjW2cT69iZDf/ofMt78kNFHCm+cCazYRJVTHTLpjFgYy
hkF5ffYxbbqIYpeYytii5szyxtzy14Xlxb2f2of7P4x0t/S9r54ebMFtjRLQ
Y9sL7zcnR4nri+tjvdVF6UgPW0O4rBDf81dsj/+/VHkAAL8DWNXnbI+ecYmI
KrCxC0nLqIqJK3Jxi0nLwKRk1eXkdSTk9KTl9STl9GUUrKQVzKXlrMTkLGS0
bWS1HaU1XSS13SW1vER0fUS1EMLqfqKa/gIwL16Yu7g2UtIsXEAvkEs7gFcv
RNA6W9g6W9qxQNK+WNGrSSf4k25Ij13qon54n2XCkFPWnHv2gl5wV2w9vmzw
S8H7c4/q7ZSPF+FvTpBVB9FNl3ENp2qunXJmla8/nvaMX/VOUj+NbjDOfiZg
cWQs5oCIPd2doqGmyBvzuPVV9PLy1vIifnONgtk6IC0yj1Y/X25enC+f0OeO
yEt0yhKdsPz5nPj9hvz7z4xzGpZI2KLg0aeMw5+vL87PaF8uDq5OWTvrnR3t
Xp+x8hs30KVN37udprd3V7kKUQWC0m225J+Zk1uSsHTIGe03mEDOaIslOWi7
ZweYW5hsnR+iobg5Jn05xd8w8dfHrKl/F/QdJmX7lifbrBwsA31XRX/ndO4Y
ckTehNrQ8Zi6BXEGggmTirpmEs9o+zTiDmtc+OpodW4o3N/V09U8NQbZVF86
NT48PMLa0U+9AKdXRlNM2IRFrbuUMf0rDh2T1+zipuyThiziu1wz+9zzRnyz
JsLzF2KLV+MLNsOKu/2zPvimfQjK6gzN7fFNaXOPrbcLqfJObIkqGYmrmEBm
jHilD4YXz8fUrEeXznnVb5ol95qn9gRWLHvkzGkEd6gh3hpHDdilzlqkzqkF
DSi6fOTSLQbEwl/CE3gMkzmV3imZNCgYpT7TjACEXN+NLYIzXix50Av817QO
oGUHIBbVY5YtbJO9YnsFwnfgRe2OMR1hoR+QcX1O+YtOlQTHCqppCUPz9RfF
gj8r5f2PUMovQDwFKGOqtP+P5Rtw5/3HX+dmwYFy1mJBA2KsjEfrbbJ04h6r
AHXwtmZs8gW4Bge3NMBVHnArEOxRakoAHJQB6VvxcZv/kAJ4dAH+SECxFVBp
AYRjACm/Z5qhbEYJT/RfA1wOYko2WqpamqKSelJaMrymMhJRwnIZnBJRbLJI
XmV/Lq2QJ2rxgFI2IFf+WMf7vi7ykX7kA/2oe9ohD3SQzwzCuYxCefX9+PWD
BQzCeQ0S2LWzn+sVP9VveKDd8sqgiM2sit+hUcitkd+jjs+tXtDjDa/HWy7n
DmmfUXjwgk7wnCFy3ggxZOz30T56xCx92SHlwiHhLx7JX4NKyJFVOyGvD0Mq
/xjW+LfIjxeh/SjXNpRpGcG46NC4ake/ac4/s8MhrsU6pjaldqhvkTSPIa+j
97HQfZmMohNRNPIaYW+OsjdHh27QpBkGceR4c/dgc+0b7eDXiwPs8lhvW3Vj
VWFhfoaPr5ebp7ciXFtUVPHVc0FRHnmeH/nYAA4OLm4JcWmWarn/ku0Fz7Mn
3Hw8omwcopzcYuxcslzc8uw8CrwCcAERbXFJY0kpEwFlfSFFI2Flc1G4vZCq
uyDcjVvVg1PRQ1Ddj0fZk13RlVfDW9Qogl07+Jm6D5eO33OjxBd6cZzGqWw6
aTymxXIeTSo+7WZxI7KuDVJur2E+zRbxA6p+rb75S5HVaK/UJfcqbOboXyLf
XSGrT1I+/Llk8L8tIxcEtYt9E6cTymdL6maqmgbpx1+3UHuYffQeBne2PUNe
nyIsLpNWNtALqN25ld3lZdz2wjF9lU6dPCQPHZEHz46mr09Qnxk7pxTILKxd
MDYuTiFiEM+PKCfMIyaDRqdSLi8ZN5+Pv31mXJziz2iYM8bO5en+DavcHVIg
W5CKOKftXDJYU/Yuj3ahzgv67unhFmvLm0MIBai7422V2toJBXWrQFgIYpL2
6bitQ+wmneV0dq7ohC9nhBsmAXr5MXkdsjmQIbodzdmGxMldzfwdSQ7xqxBA
bhOwW6zjIRQsZbKDmoRY9/MZ5Yi0ScVt/v2Xq//65XJjfjglOsDX0yrM3+VN
U8X05MjQLUwcslZtk6f908eckU0xyZ8ikvs9IF8T3GYf89EvtTcurz+54F1S
TmNyfkNm+du8xt7M4sWw+I7o1NbAlMrg9Nqo3LfusTVeCQ3BGZ2R+b1x5b2x
ee+RqW+C4zvi0ieLinaDK/t8YkddghZ9ojbc4gYs/ZvNAvrtw7C2sWTH1HV1
ZJWkVxyfbeQDzZCHGhEPDaOs5T/c0yMA9l8ewXIjRQFwwwHsFgPbhUF8dKqV
qJRakJL1oJ3dB0/LIsPYISAep5c6JJOC4ku94kr5b8nUfxikMd3TBhOiIwv8
VfoiBffzpP5Yrwp2GIBDWuCIPNgrylpZvfl2FZTun8CmJ2Dd71iNBgAcFwEn
LUFaK3i8cbK62tw8K+FcDbzyAgB34FESAHgBj3MA4XyAPQ4QSOSRz3ol7P1c
QEdE0lhcxucVT/RPr5IEVDOlTZKExOwfvNAVUEAIqoTwqvi/kPPgUvF7pej6
RMz+qZjzCylPdrkAHsVQAcUIQYVwfplQTkVHyP4LwgP4NQJ41QIEtcKEdGOE
dRKldNJEtVLFNbJF4VnCqmlcikmCGtni2gXiOumSRlnyNplK9vnK7mWKHvUK
Xu/k3T/Ke/fIeXUoB3SqRXSrIN/LIXpUAiZUg+e0IxY1o4bMM7pcSyd8y1b8
SvEBpaTwWkJA1WL8B2zuwE3ch6/Brd+scki2r4+MKig+2WNw70rH1Maq8VXs
zdX5n7+SqaRz6PuP2aLj1r8foX893aPvTFyRd4nLi/Q1wuX5AJ3S9cvP8//1
K/6cucigzFyf7nz/TEBvzA71tidEhNlbWpoZGllZOwsISbA95XsmxvH/BMv9
H/9FvfzwTw1zn//BC7GHr6Tvcyo84VH8iV+PQ8KEX85SQMlKSMFWRMFGFOYk
BnMUVnUSVLETVLIRVrUTUbUVg1uLwyxFVY2FNOIFYKEc8tAfP1pOPx9mWK1t
+dbceVBZsxmm06pl0gUzfmvsPuiduuWZtu6Yigouby/qQyW3LGZ/2K0fucxs
ISCSZrVtXgdG97l51/kgihrq+2lk5t767M7SAGZr8mqz63xr8HR7+Ag1Tlgd
wi5PoNeWsJsoMhpLIRIYhwcndPrZCfnzF8qXnwkXN5uXFAoDv0fHbp0fYG6O
CDd0/CUVA8UZee+EuHdBxX1mUD4fH5wd4M+ppCv6wQkFc3N8cMOgXNKIZwe4
SzrxgsZaV+3ikHB9RD5k7RSM+fXL+QF68+KQeMM4pBHn8buTF4zt75ckBit/
svHllDXEQyesXR2jr48xx+Q1Gn75FOIPdQuCCZO8BWmSs6O9C+hZJvbqFH99
ir9kYv/wMx1qQJ7r8ynukolmHGweE9evGehz6s41Y//qGE/CbTAPMJ9vTv/4
xy/ozZXMpAhXO+NghHtvR+v64tzYAGto2DZ3yzJt2Stz3jq4FZnSj0wcconu
sQ3ttIto903/FF0yEJ/fFZVZF53ZkFDUll7ZnZgzFJr8Niz9TUBChX9SVXBO
o1dslX/iG2Tq+5j8jzFFH4NTW71iaoLj25JzJgpLNkMa+l0T35gF1DrHtPqk
1TomVFuFt1lFzjknkCyjdk2i5oTM60Us3/wok/yDcpScT7Wzo4a8Z95ztyE+
/TTwj2vgsQm49BAcN5rJiRc2iAVsmx77fhRzblK2q9JAvucM6VL2yZL2KpL3
qtLxqfENe1OU/3ai5R2+p+yX4VRwOhicdgSH4WCXANj2iFWv/g4Am4RZFuat
JNhl8m+DgeB2CchsB5fSLootugNUDF/+qzh/CLxU/EFYQVjdFmDTeC5u8VzK
gl3alk/egUfWSgRmwi4uySYlza9oJqCCfCrso2yTJO3gI6kY+IDdjE3KkV3a
hVPW45WcJ4+y70tJRzZ5d055H06VAE4Ff06FUG6lEF6IJypxnCp+XMoBUP9L
mB+HSjCbKpJbNYJXK05UK0lAI1FINUlIM4cfns6lnMylmsGvmiVgnCtglitq
UyjhkC/pVCLmWi3l/lbas0vCqwcK+aBulfBeleAuOf8eWMCEWsi8XtSSSeys
VfqUY+6Ua+6CZ/YOsuIwsoESUbef+uEgZ+Qqped7ZNufbXMpjtUMqxqqT9a4
GqLaMqa2sndxCfp6XjJJB4TzM8r6fC92uZdJGruiDhM22+nY3v3FD5TN0bPT
PsxuMxnz4ZgySMYPXp0u/Z+/H4Pgr3/6TsNtz9RVFcZF+QUF+ESEInXUVaQl
xblE+G4dD+vnxwf/CpN7AACZo2cA8JQ18gX5x4f8j9mkHrDBnvNqvBLR4RDT
4xLThcAirGgjoeEoBncQhqgCdxRRcxdTcxVQdRWAOYrAbDlVETyq3myqCDYt
JIdpPI95Bp9tsYxvy2PtDAGLUjXf94pezRqId05ZU16FK4iSDd+yvqw+Qkzj
ako7saLvOrP1KK4Ua+Pf5RXZbe5UbOmQUl7aQcIc7m6sojem93enTzc+UjcH
qRtD1M1JEmqWglqlYlDHRCzzAH9yTD1nHhwfYaA4P0fffMZ+/rrzM4N+RSed
UbGXNMLVEeaKjj2n7l/RcReQDaGiLw6xNwyICUSocQLhhbL3mUUSMgSQ80P8
52PKF+YB1GAQdyGGfGZSjkn7TDL6T59PocY1i0K0U9raMWX151P8t3MCBJNj
0tpnJv6MukPFQADZvqBB52/TWTDZvIBsDm37moG5pO+dHu1AuDg93D6HkHKC
vTnFXTD2IQVyySTcnFO+nh1AUuSSgTun7EMvpGM2Tg52jig7NOo+g0b4/vX8
lEqoKEzzcjYPRrh2tTYszUyMD7C2ujDJ2DBLnnNJmTIOaPaJ/YCI/+gV1+UQ
22Ue2hCc+ym1ZjS9tDM8rTYspSY0rTYy601s9rvo9Nao3Ea/2Byv2Ez/uBKX
iBJEfFNA0puYog+xxe+Dkqt94kqjs9rSiodzioaCKnuckxstQotdk6t9s+oc
kuttI1sdo2cDMgmO8XtOiWQpixEJo4H7knnCBiWCNmnSerdbzrK+VDy8jx6B
PRIgVRD8Wq2klw3o7QKRBCCy5qldKodBhrploJ21eVa8x5uCIHxX9N+nw8B5
BDjpzFov6L0+2K0OtomBDfdv1yq8Lfzov02lrsSB88H/WC6gzXZ+6JpKqZ43
8i4G7svf3Slvv8mPgKd8bHziwEOun17JPRG4L6+vJgRTl9DS55JTEVPXlzG0
E1Q3FNfTEtaWFtJSENI0VLSIvC9ibhyRqR7mb+5QxqfgySbpDLzQBl5oPOQz
EVfzE9ZECqkhBNSCBGHBXCqBL2V8XkgjuOVCBVWiBNQi+FXCOJVDXikFvlAK
ZIdHcKiGc6jHcKtE86gmCMCTBdQyhNTSOGGp3PAMHtV0LpMiHtMiLrNsXpss
butiXqdyXqc3Am4fRbz6xH0+yQYOwKJHVMIHFQMGVZDjmhFruuEblvEo2+xl
m4xZ68Q553RUcAk9roERVodObjvIHrxJ//iniNbvlhl4+xKqbe1BcN6qAbLd
KLAyu21scAO7QyEzz+mMo92N5S7KXvfZ0acrRicV/Zq6X7e/WkHabLpg9h2R
ui8ZQ18uZk4Ohxm0EQZ1hIAd3N/umptt7XxXUNeQXlOV/KYpNyrCE+Ft7uXn
amSmDdeQMzXVt3e0MDExVFFWkJGWlpVTkJKSExaVEhQU4+SRfMkhxM0vIySr
/Ipb5RW3IjuPIhuf0gtOuUdsEs8E5blEVdlF1Z4Kwp8Ja7BLGHJImXJJWwjK
O4jAXYX0/AQMvLn1/Z4Y+f9kGv47y2jAOv6xV8Ezt2K+gGrlpC6FsLfy/rVm
SR+ds8bc8sfd84eTOvCI0tXkVlpR75e8D5fFHz97J80g06ZsvV67+hXVNg/h
iLTV1fkd1Pz6+uLJdg9prZ+0PnyEmT9l1YNB9/0dOmWXScacMPBnxxTqwcYh
cYlGXmXS1k6P1345P4X4cEnHXB1B3IDUBeGKtdUv+uoYc5syxfx8hvvGWpkZ
f8OEOncvDnFnB+hLOu4Lk/Tt/AA6fj4mXh/hGYStawbh7GD/CI/65ZJ2Qt6F
OiEXQ8bNHxJXr08xl8w9Cm7lkLTO2iaYijokrZ5BLukUe3G8z5qDAzmaI/T5
8dY5HXdGQx/iN8h7ywT0EgW3dkjYIJHWsdglCmaZjF0moheprIwr4ZJBOKbs
M8hbpL0FBnUP4uEhBbOzucCg4WlU3Nv6UoSbQ5C3c2dL/czo0MBgPwQT0+w1
s7RZ55RJU0SNS3iLe1SzS3SLQ0yLTXRdaHF3TuNQ9uv22Pzq6LSyyJyqsPTa
1Pz67MrWpPxyn9gUt9A41/AU15Asv5jXYamNyaXvk0pagpMLQtOLcyv/L11v
ARZXsnYL93jG44JDIJDg7hDc3d3dXUICIYQwCQlJIMGCO8GlG5qmhXZ376Zx
iU9mzpwzc875uJuc797/3ufefz8vRe1iP5vdvatWrVX11lvttY96bt1+5lc2
GlwwEJI/ElO6EJYHcY+b9YoHB+TAUm9jo6oW/XLHzUNfyBnV/nStVM/7Nugb
ZRDIHgQy//abbNAXL0GgWqCF18qDPswX/6QVBFKuBxnn6zo75RRnjPcNySYf
Hi2lHE0GH026HA2ePfZRb/m0QUMn6OjFiaMXSkcvrhwNGh7Nexytxhwtp/+9
L+3tw4ii23ciIiLd/dOtY5vlQ6dPhq6CzJ+BQK7APz3e+eVHc9DXaqDPvv/i
jNwPKkYgeRPQTyfOKF05Jad3Rs0WdErrO2XLa7YR1t5Z1v4ptoFRBh5BVxzj
zH0bQD97OiU/0gzJAn1vDvrBUt08UdMq+bJp9CVt3wu6fj+qOp655ndBNwjg
Jye1gk9qhJ7SjDinEyNvlKxomCmvl3ZBN/m8Ycp549RzZulyxgCMZJw1zLxo
kKkEkBPzfHnLYnnLcjmzYkWL4u8cbp28XnXKsfhnl9LT7lXnvevP+z2+6N+h
ENyjFNKnmdCnl/FSN2UEABPjlCXLLKR1GtqzEONXBnctWvDMng8owyXXC7If
i9IaqVnNlJIucUHHblbzgWsR1r+G5N9IT69H++YMWUTeSalpbRmDwCg04dY2
AgEhIKa41FkZZ3KD3ieiPRdTOjiYTjFpEAdtxoKfkNFdTEIfCzckYk2sc+Y4
9BkpH7IlRb7aIX14Rz/cJv/jo0AswQgEq2IBmUxYhq+8JOIhQh6WgF4aGe54
0dnYcKcyryDNz8fTxMREUeHSZ/8HafnfdRCQfvflDxcUNfTlLhsrXrVW1nFW
0Xa/dNVDXtNLWcfvx6tBZ/TCfjYI/944+oR56pdWmV9Z5XzvchOklwYyyP3B
7tYJi6KTluUmMe3ehdM++eOOOcNhNRDb9L7IalTWI1bmL/TSp6LrYW2O4Y9N
3UqDE+519kFwdBEcDiWS1/AULHHlOQr8AgnvYZLAPCacTFxALI1CIKNk0gqD
fuwSz6MjucxVIQMu5sHE/JVtPn2dA9ADrJCOEQPcg3M8UrolxMmOF9mhpLy1
TRF+b/3YtkToTRFSQD92Uj3YYLzaYgGYw6chpFzs6y02n47YkVAA49Hgr7fZ
m4JP7iJcvIC1uinCvdnj723QAbIh4RB3pUwZnyRm4Tb45B0JA7BtEV3Kx/CZ
CCYZwiGjRSy8iInnMDBcBppLR9PISApxlYRbxmOgWPQSeW2Zil1hEhF8OpZH
xwGwxmdhXm3wD3bXd7fFUjH7w5vt14cbjXUVwd4OMSE+z582zhwvlT4eM3Ep
R7gUzvmXvnSKbgxNbw7JvO+fcc87vSHu5vPce90Vj7uK6n7JLL2VV1Kdc6Mu
o6Sx4EZV7aMHxbeqwtLjw9OSwzPSY7PL0orrcip/Kb7dlFd9O7mwIK+yvLax
8e7j5pqaKp/cieCcsfBsSFQW0T+O5hZE8IlGRBQuJt8eS6pt9c69aeqfeNHU
R906GXT2+qeqcnTym6NTX/z7P0HQzn/1Fwh0Tv8caKIngbt883ghLSrveKe5
0bCjbrOjGZWjJtWjZz8dS5gXn7bJHgdM7mjE8mi15M38PfSLhqe1DekJ950C
ntl4T7kGYDTK4Rej+q6kQ82rdw1vvtcr21UNGPhRLRT0jdqnuvo56H+x8C8V
QKeMfrpg/OX3ZqDv7JS1404rhp1UjNAyK/OI7gL95PzjZQAfoi+bV3nEr55Q
q02o5TjkjSto+X2l4CSvG3ZGw/28ustZNWd1E38lo6DvVRx+VHH6Xs37pGYg
ACkXdaLlDGLljWOUtFMu6SZdMkyRM0hRMM9SsMqSt8xUNM84b5goZ5qibJmj
YpsrZ5Unb5t70Srrkln2d9Yl39kVnnEqOededsaj7KznbTm/Jxf8mwE8kQt8
fjnyhUHS0LW4nqvhfTpRE6apYMtk1PV8uEfxqkvBnHveUlAZPqGWkXSPnv6Q
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
2ORyqICcWROziGwSikVCcshrPCqGgQfuiRCy0RwykUXC0rBICgEtE3Pf7G9t
iLlkHBK2BJ4aH21veXqvtrqiuCA1IS44CEAWT3trQ31tNUP9K5ZmetbmhlYW
OuFhXr6+tv4e1v6eVglRvvV3KuemX/7Hnd6ldNqlYCCqqi+8qD6x4EZmZWVs
SaZnRrhHko9vmntaeUhxVVhBSWBlVUxVbXpKZsTdO3mPmgsTUh28g1WSck1S
8y1jUvXiM80ikvUT0w0LKp2q6jxvVHlm57plpHjlpQSlFvtllUTkV+bGZxSn
FFRHZeaFZ8S4Rfg5+oU5ByRaOnpc0D6rY6X706kgEOi+ymd//He8+M+3v/6R
AwKtfwk6OnlcciPCPTAp0uDKNVcQKA50KgOkm/CDS5N6sOR0Xv+l9CGN1Dmd
tBWjHJRJGV6nFKlWDFEonL+UPnI5ddK2YMklG2IRN2Cb0OWV2+ecJTCLhDqm
L9ulLtjkz13PGogoeIpeowoZnK7+wYK7j6Mramranv9xdCQ++itjoM09tqJl
gib++xH98Ai7f1Q/wo6omivvYOc9I/oW9zjltJnEttsmzGuFjrvXQDSznoG+
0T+eU/7/mPhnn35+OHle45S87hllk9NKpqeVLM6oWMqp2yldc7yi7XFF2035
iqO8jpOqgc9Vm5Cr1uGXjYI1zcN0baI1ABpjGKpuk2joXqjllP29YdBV7Qxl
vSj5q8HKeqHyhmGKRonnDTIvmRSdMcqXt6644l6v6XNHzeO2ouvdy26PtXw7
LwT2qEUMayeOG6VMGydN6iX0GSUPmmdNBNdgkppoYfcJCc2swoHtgr7NvCFZ
5BNqXLW0vOttZhPPOWPYJ68vpXbKJ/mXutYZrHAdRUUQqNNkWh+H1cOltvNJ
3ev0QTF5RsaY2+MtvRav7vOgEvI0fW2QuNLFxgzTcH3rnJl1ziwF1cUhDG2I
FtiMUfx0FwMxipzpWBh7ggR3QWafTk80roBbKcQxHHoEhxmh4Ma55EUudZGN
mWKsjc/NPJ8eez778vnSfBcGMSGgoD7sSI7++fHPd/sf96Q7IjybDKFgxpmk
0XXe/J5s+c83W0f/9ebov979+ufe7scN7qFI8scuUM83/vGetSehbokX0GsP
OtqeveicmoWMjgyX1ff0TiA6R+bvNfc1tvffbe6529TePTr5pK2ne2Dk5cux
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
bcbhBnFLiNkSYd/uMIRMgJlAXm9R3+4yGPg5JnHh10Puf/0h+/0dm89YIGH7
ccju6Ze17c8yB7rz5yarxZy5v35nrAsWJkdqnzVltj7JHhuohsw2DnVXPnmQ
er8urv9FWeez/JulgQ/rEyYGbxCw063NlS9HGgUcmJALW5x5UXcrPSM5sCQ/
pqejfnzoycvhp0O9jb2dDR3Pbk+OPEGj5lZhL3HwGSZ5lc9YFTFRWzzM/jpl
i4PiEiF0+BgFNioizu6wYRLyAlBjl0da6Jhp3HI/Ez0mZS6usxYxsBYRaaS/
Ob+uOCg7zqmqKGF+8sX05PEArFNe5zW/fAPnYCsnJxdXEw9fXZfAa86R2haB
Z019v/OPPxeTecEnCGTpCLJwA5m7gizcQR5h33qEfx2SfDYyXSkwRjkoQjs0
ytzf38jdTcPV6ZKvv1JY6JWEKP30OIOMaP2kUu/SuuSapur0m7ElTaF5v3hE
5XkbW133sItyNvE2UVfTUz6rdPrHH7756eJZ+e9PnbL+xsbpatVFzYcgzdJz
ln6+MUE3CopC/XId/NPNo30MA/QcPJ2dzNM0LuQoaRYqXs/73rrggn2FvkP9
dZdmH+9RV78Fi+A1tWCcWpLgSqJUN1VgmIYziHupn9ZqXvzctKHTNyndNiTC
PjI67V5T7fTK02VK/+Lq6ODoyhwmJ7/bNrjNyKszsgRe375nHNRlGTpu+pTv
8eJQNY9kUMM3b1y/eoOono/3aNo2KofZVy9HP6EGNbB9y/nhDRsh9cjA1uXG
1tEFrBBBppFRUAFuZhM7/J4xsYXv5612UVYGUEtDcOgwGqDx6CkGZp6HnmRw
Vvk8lFi2Jt3CcDeQbAlMsof9+DeuULS8IUGuIfrA821r2JGh0fv5FRFJ2a5p
8allRVklxQnJSb7xCd656bFp8XHRwXF21o7Geqaqahoql9W1rupf0TLRvOpg
aRpyydL0tL7FKU13eaPwSyaBX182/+KqleL1uEs2OScN8xTsqzV8qy1TGpyz
2wxCHpoGtmhnwv3vC33qaH4PuFYlGMN0qFnGqk85Pq+NfX+cCiHx3//1Lw6d
vMfjr+PZW0g+n09g0zE0EoJJWeMwcBw6iklFsKgIDn2N+0luUwnLLOoqjQgl
ohfpxBU6Y46Cn6Cgxym4CQ52UkZe2KRBZITZTcrSBgm6SYZKidB14pKUitrn
Efcl9Pds1Hsu7h0ffcAAbzHm9/kLu/zFXe68jA3eFqwdSij7Yv6egL/NlK3T
ZDLKDk/MEkh5VDqaQ8O/lvHeS3mHJMIBCb0NhRyg4K8xuG0idpOGF9EJXDaJ
w+fuc2cO+LADKfKVDHUgRG8L4LsC9JYEA1CmXSFBxEZKuGv7MtqelHq80R4L
TebARRsMiZSOxoEFAtzWDovJQH44lOzu0GRCvISP2V3HH2xS9mS4bQnm9Q51
g4+fGWldfNlJwyyMdD98cCdndqxFxF1hUaYQK50r4MeLs43tzVl1NSHPHidO
jVX0tFUyyWOTo3czkq57uap5uahlJDvcux3/qCHtVnl4Q23i4vSjwe6qrBTH
2qowFPTx20P+q132b+/F719zX+2z1xCjBdlRLg56RXnx7c/qJ0bboOCRob6n
3R0P2prvLs70Li1Nzc+NQOb7kauT+LVF4AWxCSsA75Iy0Vzs/Np8F2q2m4Yc
5hGmCSv9kLGm+d5na1NdqzPdpJXhxZEH8Nlm8GAdcubh3ZKA3BibCE/z1Cgf
yNQAeP54bU5QsF9UbHhmYb6xnY2c1mUTV3M7H5OwDDu3iMtWrt/ae/zgFXLJ
w+eMhdVX5sYga+Ov7OzlvTw1AsLUckutI1M0PWOU3OLUPBM0bEMuWgefNXD5
3Cbga8+oC8mFhukF1pV1bk+bqu/XVxZX1hXdHEjKnSi6hcu8MZ9V3lZceycs
xsXNXeuKKkjp/HGv+tNnZ34AKZ49/5mK+nEceG0NpevWllmpmQnhEf4OluF2
FjHX7aIdHXwcHSwsbdXNzNStHLSu+xrqR+gZhmuZRRk6F1kF37VPaLZNemES
+cw06rlteq9ZQqtJQuv1jF6H9C6z+HaLzJfxMXXm9pkevnkVFY86WrqW5xdR
a7jBmfkxKDmioEHVMcMs4blLMczvrsgkDa8XjjB5fmD6gKecBzGvRhlVLFhV
rjhWogLqON5ltNg7myn1vLBqaOyd3oyHzwp6HuaMPJl5MURC47a4dNbaNGOp
Q4TqlGFbhehmNrqZi+8VEIapqAHqcj8dNsBeHRAjR6SUUTFuUIQZ4KKHiYge
4moPlzi+L0XtijBvJKRdHv6VkPLnnnCbS8ZCJ+DTI1DoKJOKFjLxxNVFIgzC
IcDpq5CVkaHm6sq6/LzcyPAEb68YZ49oT88IF8dQWwtTXdNripfVLl1SV7oo
d/7chVPnLsgpXJRTklPTPKd8TeGahbZFkK13pq1/sZVXobFTnG1Yh0dCd0Y1
LCR32DOl9XrsfdPA0sS6zrruyTsv+qbW4JJX6xjyMpu1ymdDOcQpBnaSg5/l
Eef5pAUgZeNmAarMwc8zMdM84oKQDGHj5oBCAQksoi6LKct0PIRNgrLJUEA7
0IhgOgHKpsKFHICx4IUc3LqIvHm8nI29KaTJ+JQNAUPERwr46OMhBTHmzTb9
73vMPw4ov+0QDqW4PQlCwoWK+DDhOlq4jeFtYhnbqD0efVfA2Pu0eH9LwtgQ
MTYkVMnxbRk8JlYixm0J8CIGYouFeSUk77AxuwKBiEY9EIv+2N9/LRbJeJ/W
9bMZOxLuhoT+Zo+3s0Pf2aO9es3d2yO/PmAIdvG//mudyYcyODAeF/5qn8Nl
rPz9veTDLkfCRQrJ0A02/N0mUcqA/rpPOvpdfHiAGB64iV3rm3z5oLOltDQ/
7NHtnJc9DbDZ9oXRRiK8DYd5XlJkk5p4pfKW5f2HToVFpg/uu9fXuYYGn3Nz
+T4i7KKxIej+fY/6+uuVFablZcZjo0lDI8mFxebNT6NotCfH/lBHnL/+gQcy
f/uII2EGbpQF2BifTYm263pWuvCycXr43tTw3fG+2onhW8O9ZdMjDwdf1Ax2
3AJPP6Qi+xjIQTKyR0qZEpImCUut8wN1a7OPGIhuBrIHu9Ay3lo2OlzZ05GD
hj0eG7nT8byk9nbQwEBBX0d5Xqp3ZIhmeNSpqJizCwutUyOLAJh4BoVkl5U2
ND+18XS6YqSrYaph5KARknrdL17P2u1HU4CQOIEsbD8zswA52J5wczptbnvC
w+t8cJRqUbVVfJaWX5yiV5SiV7y6jf85m4Czph6f2/h87RN1tvCW1a27Xo/b
gh81l9/9pSC3NL+svjm3pq/swUz+ncGKhucdfR03b6eHhOg72l6y0Dv3aVbj
K7mfVb87ATp96lvgVElRQV9f38vNy9XOzsXKxOyygvVVNQ8zM5/rTvaOzjpm
TvK6DhfNXXVMY7RMovWs0szci+3C7zvHt9sktFrEdFinDjpmj1kmddsmdTll
9RuE/SJ/veiiW7WtY5KrV15obNnNO829fZPTL6cmZ+dauwfGwIiMqmf63rm6
/rUO2dOBNXTTFJR24Jx8Pty6nm9bT3FrJOlkjV9J7LYpWIh+wA2+SUlqlGQ/
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
a8bHnvT33hnuvcukdKGCcS6zW0DtUknG1cJB+nRb/4s67MhdJr6NRWinY1qm
BxqbbqXU14S1PMy6dzu143Hxo3sprU9SLhV4R/ibpseZpyYfuui+4sGDkncD
GACTgOhQj0Bfv/BAM3srW09LpwArK68TZ+y37j3xlwPGkJHJF8dNvz5+9suz
5t+eNv7p8IEv9h6HTph+dc7664iUg75Rm90C17iGbvePP+gctMHad4W5E2Tp
CSXmb3vyxrOg6nBEwreWfhccg03P+533TIi0Cwk+7xsQmps1QOgXKXBq3RAq
bdNIO35bHEP4nWJe74uWy633K6tLU6KCHHOzwhMiL3q7nrU33RfjdS7M/VSi
17nCWKdLebH5qVGuF12OGZvtMTq+6YDZ9kPm2w6ZbT9mv++M29Hz/sdsYo7Z
xB6zjjZ1zzCyCD1+IcTZP9vcIcreO7XseufgyBCbK+4f7B/o6+l/0/H44bX2
Rw3Z2ckPW1o9AxMPn/c3cy8svcsoaRLHlFMj8un+NbjcNnlRK6+shVzxdLL+
Df7lFPwGixA4f2NKP4vQzyLZZ6bk0wRZ0o+l9ZE4mKknPOEIKp4WkLuEhFcq
aq+K3otQBzmYPiEJZNOEmD4too4JSX28qee00fvMsS4e7i1ouA12gDbIZfYx
SF2EyQ4uo5dP6YE5g0JGPx3zgk3rkUsmxfxRMbeXS+sCIeENiHl9QvprHum1
lN33UUucVRAW5IQ5FDevwP0+y/n7e8E/9MzPv+t+0ws/qviLWu6nWfjjDCqD
2VTS5ONH9+/euZtXUhoWneDhHejsGeQTFhedmOwZU3XeLdbKK9Erqjgmry6h
6GZO9Z22vtH+6akx/DSJRaDSx8mkfpg1IaVPsqd7qFNdfPKgkDrMI70TUIZR
zrSMPQVKpKwJlIuRczEKPlYlxCsFeCUfp+RhURFOLsKrYJJORtUjDL2MMYMy
F9W8WTlYAUnN1BqelyeJmVNc8jCHNAxzcIa3m4rwGkAJMUkHU/RS6oKctYAy
NQhVJSKCXSlhuhZhKuRMGdibjCKXEGD+NDiQDqXp1EyNgq6UURAxHpUSYREO
8GdGyZKLiSL2hFZOXlDKtTBfJmYqYNasWvRpTqNXwEImsFRSlYIvEZPedrdW
lqXlZIZdqkp5cK+GJ3r7+fPfpOJpuZykMMxSwZzXiLWGoWjseZXk7zOa33TI
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
bkEOhAEZNNMIH9iKUQZ1hITtxY4/Hxjqa21/+KC5ofvNcyxuhEqZoFInGJSR
Ga1ALiVw6e+Ik6/kYpyYOsbG9jLHB2i4PiZ+AISAOgazMUoRCYRaQpHxcHIB
EZgOjYSqldK1UhpYmZExtXKaXkGfURre5zOrYusUDKWUAnSCCqGopGQNSgVY
0Cu5syrenJq/qBerJbQZOXsG4aukLERAknDIUj4FxKxSNKeC9QrePCrSyVhA
pehFVLWIpIUxOhirEU/LRBMK8SQKY+USLOCJAsHLYaxKRpjXMRdn2AopTiae
XpxhaDRiGKaxWZN8DkmjFMplHKmEPaeQqBA2KmLoFFyYjyNO9Q70POp4Utf2
6Mb02L3P/42yqG/mFHQ9QteI2QtKybxS8l6D/Daj+k2vkvGJUwMvSgujk2Lc
A71swkNOJsZYxsec83Dfev7slwAm/v6r0jJ2V18+W150LDb8l6iYjSnJ+4qK
TKMj9gX6bomN3+7t+7PpWSgkeHNS0oGSMvOW5uCI4M1ZGQfTU/aXl5jcum5f
d80xNm63teUXjg7fVBR7pSWZF+TYxkaeCA8+7Oq44UsIOnv6++J8lzv1UQ/v
Jz64G3f7RuzlqsB7t+LbmzPq6mPvP8y825BYmO8eG2MeF3uhINfp5rWIussh
ZcVeJQXOtxoib92KLCv1KC3xKChwSYo5Ex95MjrqeHiYUXKiaVbG+YxUY3+f
/bHBpsnJZ1OSdiel7nn6vHZkzNBnYu9zwT3I3jPULirT38HX1CPMyiPwjJXH
YUvnfdaOO89Zbz5g9N22XV/s3//DiaOrj+xZueUodMjsy3N234Slb41IW5eY
tyk1b1N85lY3n6+s7b9291zn4LTDw8M4Jz3VzTks7GJKQFJtbGZ9QEKpf1Sx
nW9CfHrlzcbHQyODw/3dDMKAnDPOGH+O7X1AH38y+ube645rQy9LJnouYweu
tjRGXy33uFzqcKfK7d2TuJ4HkQPNUUOtiSMt2d2Pi57czC7LCIwNsLEPdPAO
dvYKcvD1t/fztw8NdUmM9c1ICinJji3OCE+P8rmUHfmmtX68u2miu5k++lrE
HmCQXxJGmlnEpzxqp5jaDfLxWeuVe/VVd27faG1/0XSnvbik4fGj0f63/MFX
6CRhAk8kTE729/TeZeBb2aRmhaCdOXH7g2wQJr2gDT7mT/fIGKNs7Kvpocf4
kef4yVssWpuI2QmsB8waEVFH+ESsiEEVM9gwTwDz+AI6mU/DIIxRFX9Ay+tT
i+kKLk7GnhazpgSscQFzYmmwE1bAGkbYE3LeuFo0MYfgNdJxhWBIjozOiKga
0bRKND2HkPRyMiqa4nOGmdRuGTyBCMdg/gif3MPCPINpb+SMASHxLUpqFU41
szDNnKnHjNFm2mgLF9MpIfXC9FEpaxSmD3GpgAZvqLjn2NHHE4ONuLGega7m
Vx2NA90t0yPP6dP9HMoQabITFU9KOUMccg+T1Pe3Ob6MNc3FDyMMjExCELIn
wJmDZlopJQPlD5bARwA4yCUkAAqtnAHUCPioQWkzKrZcTFJJKUqYrAYmRUrR
yGhgBQTYRIvSQejkdI2MqpAQ1QgFaBiliACMj07JVMNMVMAQ8wFPKDAXbMLX
SLkaGVsFU1U8vJKLBZdRycdK2YNywZheQtJKiUr+lFw8DQ49p2bLEZIKJevU
DLWcKpcSdSr6vJ6jRsmwxPC8LZMxzmKOyeUcDcKG+URYQEJhGmqgFmhDBqi4
Xj5jdHLo+fPWO29e1swocZjxFp2c9mlWApCI8pkKIRNmkWUchmHomgDPJPXe
rc+qLArPSPPIz3TNy3KOjTjl57PL3v5nO4dvI8M3Z6YfrKgyKSg87OO3IjBo
ZXLSvtISs8iIncFBm8MjN/kHrnFw/hbAJDZ296XS822PQ4P8fs1OP56fe6y0
+HR+lnFx3uncdCM/v3WhoVsyU20bbkbWXw/Jy7YF+iQ8/JDRESgoYO/Vy96N
t0PragOqyy9WlroW5zvWVnnduRFaWxtw/XpoTY1fdo5dVNgJP+/90dHHy8vd
aqq9i4uccvPsr9UF19R4JaWbp2VbpmZb5aWfz84xzcw0SU+xTE26kJFpnJ52
LD7uVGa8ZVqscUTEL1Gx21paS4eGxgwdsH7mkamuniEXHLyO+0ZYhSc5RiQ6
BESZB4SbuvmdMLfetv/QTxu2QQcO/Hjy1K8nD21Ytx86aPL1SQtgc364GApF
Jn0fn7EyMvnnmPgNrm4/+njtdXY+5u/hU5hxM9ilOj3sWWzqrYKqlvziprDo
Ulv70ITUgsa7T/q7Xr140ogdfPWu7dZ4123W9NPhnvqutsqJoft80t3hrrLX
rZk3a7zu1wW87Uh59zyNMVRA6ctlDJXwxy+jxLuf0Hf/mqfp4SkxvmcA04mh
9JCofRRaP4P6js8dUcGEGSVRJyP8qef+oaP/pmP8n1nWgmSKN/WcPtSKH3vI
IrzkEF6g3Lf/es/47z/4c2qSTk6UIXRYRP/wcfHTh98HeieIo3SgpmdEf5cp
8J8WkE/vOVp08B/vp+bRZ3phK22oao79VDD9gDV0T4x9gTC6qWMt2KH7RNwj
mP1Gyu2RcHtlrCEFewqmj/GowOBQREy2kM+TCHkSHkVAxcDsSQWzXy3oVXIZ
UjYBZS9NPy2lCTk4MXcCFmDErEmVCKfi42elpD90vDk5XSvBvJ9jvJcKNDyq
nEM0dF3K6HoVW4EyUJQiEGDFHAyXOcwk9gsow2rRtE6AhWnjHMx9wrt68sBd
5nQrc6KdMdbCnHzGw3RRp56xca/45LdCUq+EN6BBpj/oCZ/mCL/NSv86K/xd
w/3XvORfC9J/fZD+OceTMt4JqN0CWo+A+kbBG//8D61CTOJSx/VSwZyWtfQs
ybhcTADSAhXhEQEWyA8VQgZAAAEKQYBC8BXgA8AFYMgyT8A6ECcLWt6iDvwX
OIAnYDmv4YIlwAvgDLA/ajFZtzRAXQOzVTIG0CcKlK9WiVABE4XBoQ13tWD2
hIQxquSM6jgTGgFGyyPMikgqEUHJw6sMk78Q1DBdDgOsMWdUHHCVBOzp3z/I
/+tPvUwELvjQn5/Qf/yumNUAx8SSI0SET1AjDLmEMotyZhVMhIf7/T38+fPf
//FXIDqGxnvvvFcRaNPPPqjZf+gkchZu5M3z8bcvuzvujvS1sanv1DBOInp3
tzE5Ldnew2WPn9+BpKQLtbWB16/621uv+mUNZGX9ZX7B2fbWsOIiE0eHv4SF
bqmssCgvO+/u9pO97ddePisiojbn5J/KyT6RnGR0tdqh+1Wqp/uK4IANKXH7
MtOOBviuDQnckBR/0Nf9Fw+nn+MijN+8LGp9EPfkftybF9n3bvnHRx6MCd1f
VGRRXGgTFXHAy3OLn882r4vbYqKO5qRblRS7ZGdZxcedDgk57GT369FD0OkT
X/n5bHdxXm9tucLG8ueAoH2entusrX52dN/o6r0tOvJwQtzRjLTTJcV25eXO
BQUXYmP2BF7clhxjFht+0N//x/DI9S3thWOjBpsTHGebWRKQURTg6H00Nd87
LtPtvNNe72CTs1ZbDh//af+xn3fs/Xr/vu/XrYeMjq8+dXjNNqOVv+6GbC9u
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
RgBOvimxuIJMUnSIZYS/ZUY8yQmnpSKHZEzJywBPN53jjUl5BV5Q4Dh5A3sX
YGYBMtMca44EFZdjD580S8nfQ04D0SnC5HjVhCRrV6KqiBgQ3AdMMKDqhPK1
B15NZ0jXbwSmZSlbWgFNRaAkJqoqK2OoJWust9vKWsrKUl5WfqewKNgrAiSE
9ogL7ZKX2Wuhr2BtLGekLWptKh7haWqhKxLuY/Hm6fnuj7c+tV67cu5gZLCd
jtpubaU9eiqCng46aTEO2fFO4UFGmSl2AT4KPl7yBNxeYwNgjtluZ7vP0HCn
lhYSEdY0kzSxkbfEy9o6iQYHq/gHSeFtgJvj9rgQxZxk8+JMXCBJ2d5C3NJc
SFUeiAkAF3e5ojK3huNRJfleWfEOmXHmh0vxL6/kvrxceqE6ojhNzdcVnDuZ
1vEe8Zk8v3796vHjDy6eqjuQ1v3mBnv01dTQg/4PZ+9dK77clFSU5+jjLo+1
3pWXC/+DrEsPWqfletk4SLr76IaHWUtIAHXVHSQnHXcXjQPZzsU5+LxU86xE
o/pSYv+7o+0vDt1rSu14W/Pyfn50oEpJlo2/m3R8uE5NsXdjDflgnmd9ZfSZ
I2lXTxc8v330b2uQkPcyqC3UwWeDnY86392cHHrBorxjUj7O0j4vMPtWWBBG
kJLSdQgd07R1ztSXWcavs6xlJAEVmjkN4glEleXpsUUWZX5qdHF6iB+I4VW9
QWpBg+DwZWb8yyx1g0OBY32assYe+cqlfoOfzoxvzIytskbgng3OGPxonT2K
dEWDNosmz3OQUOwSz9ih7UMz57OO1Z+Dhz8UdIkH9Bj0ML722co9+I4UPoDw
A0D/4T9BD0MH0kKZ1zOED00IvCB4NQElzML06MYi/fcNBiQkkKVwWb1LDOoS
a3yJiazPizRemxqZnxrm0gbXZybg67dF5hx9kEXpmuzvQGrr2JPsib6xwbeb
y/Q5Vt+7X65fv3D43OkDzQ9O0amtU9Q301OfF2Z6OYy2aVrH6twwZ/JTR/vb
P35dGaN8Xpif4EwPMqZ62z4+Ghl5y2R+HKE87+q+/frtyacvDn/uOjsweu3t
p+PPnuU2Py358Kmhs/305QupdbVh164mXzgXdeyYe3m5XWa2bkaWdkqGfhRZ
J8BP3d9Hxy9Y3cVdysVTguQlTHTf7R+yOy1LtrRcu+445uhxm4pa62iyso4e
UFIA7h5qJQdCXrxNONLoGJkg7e4vEBwpG0ZWMrIAiRmGPgFyOCcBHG5ndLRW
YoJ+YIBcXKxOXiYmPELJ0WmnX4BEQoJuTIx6cIh0WLh8ZpZpUIC8PWGvkQEw
MQBEJ9nDVeHpcY6h3nqWZo57d4MdO4Gl47aSGscT58nHTqV4+OoqaQIbRwm/
EMvQCA8XB7yqopyKkqiermJhhdKjl9HXHnpefeBaUKkYFAmcPICZJVBSBrpa
AGuhTHSwsLcy01WRkRbeJS20c78UEBYB5hYqVla6hkbasjIiBgZK1lgVgV0g
KQHzsjn/TJ1HfRn+VIVzUaxWgPUuLQ3ghAfe7sJJ0fouzuI4rKCVqbCqIrxt
ASM9IQt9URtTMQJW2t5c1M5Y0FZ/j6WNoLExsLXc7ucrHxOtHhEmG+AtRHIF
5GCxlFjFmBApe1PgYLaToA2cDAXt1Pck++heqY4ZfX3q7e2CmiKHJH+tjCCH
81Xpt08lXTsTUJyt44wXbKgp7m7rgWAy9vn1ixvnHl+uv3ayuO/95aG2a5Su
y9Sey29eHLl/I7u8yN2PJG9qAny9ZNzdhX28RRxd1FzdlfQMdwrsRDSdi4Oy
v5e2igJIizUryLYtyLQsyrE+Vx9C7bkw1H6qq6Xh8/u65rv5sWF6p46GJUYZ
BnkrZCfanD0W13yn/MHVsnfPGka6bnx6fXZiqHli6DmX8Z411kIbfjUx8GKB
1f51YWQFTrgzIyucwbnJ7nla/zKLsj4z/nWO+YXL3JiZ2uRMzSOZXWM8t8k4
HHBjiT22jLQnHebHfNGCOzggmGxMUzZnxhC44MCN8a/ciS9cKnxFwISHIRBP
1hGcGYV71iC28HgLL0WcysvoGFv+CQh8BymfgfxINeFhBdJAnhcb5dMP1EOy
1X2KapkfweUtg78HhQtUNP26ClUJHfV+/PhGXrkuUsjPpq7MUdAED2SJXl6X
1/XF8dWFUc54/wJjZJWDkLdF5sjMRN8cfWAd0pJZ6gJzZINLm6H2j3S8GWxr
mR7rZY30jPS1dn54yqH3MMfb3zy/cf1i9dnGwkd3js9DejPdM01v47I62fSO
SYjzEx+pw790dr5aXaH397XOTI8w6F1DA2+fPr385s2tMcrbltfnr1+vunKt
6Nbt0sfPah81V169UXz7VkbTmfjTp2PPNCbkZDolxlocrgk4Xh98oASfnqEf
GiLr6SXi6SXh7Snp468WGKRj57QbS9gdHKqalKjr7Sfo4yuckqZSWKhz7izp
YJlJZpYOmaxoSwBGRsArULaozPHijYDcEsOQaOnYFJXqOufaelcsDuCdt2fn
Y70Dpe3sgCtRyJ6ww9wc+Pjuz0gxzsu3cnbek5SsV3LAJi5G291N1NFhV2GB
bWqSWUEuISfLLshX3dVBJj/bPchPx9IEyMvv3SUItu0BWvo7AiKUE3O00wr1
NI2AqDTQNdllhZe2d5CGSkddC2hrC1hZ6sel7s/I1w6NFiGnSKQXqlTVmlUf
sU1NN3BwELE0EzXQETHVVzA3UtBTl9FQEtJSElZU3gPBREt7v7mZpiPB1MxE
08xAXk1lz95dkJXpnDoSlp+MLc/FnzjkXZVJSPZRJxB2eLvvd7ARIDmImZsC
Ix2gJA+EBZBVaaBV6mnvxGHEHW1lsRhhc+3txirA1FJQ33CbqRF8DhJQ48TH
qacmqOWka6WS5VPjlIO9RMw0gAt2j6Ph7iBH1QQfC3+C9JF8n56Xxz89Ls9P
scAbAE9r2XOVKc+u5N1oCjqQo+tHkjxWldvdjoSGO17efn6r8cHFw+0vz412
3Hz7uK75ZunDy/m/r7e9f3GkNN8lyFsRYwFsLIGpGXC0BwHBZvZO0mLCQHAv
kJMECjJARAAoyoLIQM20RExKtHF+Fuba+YRpys2hT+cH3p9587Ly+oXk8AD1
Y9X+McEG9paC8eFmrU+raSN3H10ve363quvDlXcvzgx8hlTk2TzrPXv8PbX/
+cTAc+7k5w3uwBKrl0tD1n+cprTPTvQsTA1DofHb4vQfy9MQTzZnGDO0PmgU
84zhRdYoBBMILMvT4xBMVnlNjdC4zObCJJoqD6XKPK+L2hIHmf1RRyiicXjR
UsSKoWr4Wauywqtb2fhZSsMDkz/hgg8jfCThO0C2ggnEDfgWfhGaOgK1CdwD
96PiBdUv8EgUQPiDHwNCLwtP/7oyxVvHCmEd39bov64ykcYgSEMSpCvRGndy
gU1ZYFHQshceF6IhCa6Lo3OTI5CNQDD5Mk9fmxmfmRji0uAzZCwy4VOibEIx
Mjc63NdKGXg/Nf6JRvnEpLaP9LxenO2fnur89ObGzUu1TQ35D28d+/0r5ev6
EIfeRqO0MsbfUAZeTY600imQrnR8XZ1i0br++Mr5dY22yBnq63rCmHjHor17
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
TZ2bGuc1MYNQTKdT2sf63/R3Ph7uf0gff86kv2z7cK7leX1f56WR/lvXL2Ue
KCBFR+h7uMmmJFg2Hos83Rhz7XJay7PDH1qPNz+ouH2t8OzJ7CPV3inxZsV5
TnXVfocrfSpKPdITreJj9OPJBsnxpllpFqmJJtHhqjGRmulJJhlJppkZ5ump
prExumkpJtGxml5essGByt6BCgnJRlmF+OwD9rEpZs6ecnoW2+U1wH5FsE9u
t5A0QIv9RfcDqCx0dIGODtDWBzpawNYOBATKhEfKRcXKZuRoFh80OnuKXFXh
XnWImJmNiUvQCwxSiIrWcCUKYyyBHQ4EBEgXFtlm5ZgE+O4PDZKNDFGJT5FP
TtMIj5bz8BSxd9ntFyjv46esogmsbAVc3SQx+L0G5sDWXtjaaW9Wqe3pq+TT
N4h+Mfvi0vQcSSKWjiAyWbCywfB5S/rJpqjEJGccVsrUGEE5eIf6OgBvqebp
p+PgompnLeXto21jK2FuJmxqKrRPFFlyV0IICO8CwtuAjrJkdKhbdVFSVVHK
8SOZp08UFOeQ7cxVNZWFrQ1kpYWBp72ulhRwx8ufO5xw/1LxAvV5Q0WwtR6Q
gg9GCGCshbx8dErK/AoKvH18DfUNhEzN9lliJfUM9+pq7jQx3GNtKWFnK2GN
FTM3EXJxl7WwElDXAjrawNx8m5PDPjcnKRJJ0haz3ZUgmpOMKUzFlmU5Jgfq
VGQ5NFWHhLkpeNiIJvrrlGXaHil1OFUTcLw89ALkn0mWyREycaEiEf5KDXX5
XZ+Q0DBr9F3rk6bRrofTw790v7708fnJz69OcSdevHtST/l8vf/ztfaWM/eu
FDrhJTycpbOTLesqQy83pfu6K6jLAxlR4OutdPVi8p0bWQO957o7zrx/e+SX
l9Wd707+daN3lQtV+SNq/9PxvsfrXMiCfl2d+fzs7pHbFw90vbvU1Xb73s3q
Zw+Pd368vbkyRB1sGeh4/McG9cvS+PRE+z++sYc6m5emBzcXx1Y5UMIMLLEG
ltgjS+zhRSZlGXGMjK3NjG9wWUhtKffPTiD8PkhoDxB+kjxnsmeeOYgWFKMZ
aOhhfN7Cb6CKVujwG6Oh4MNnLGih38bcxNcFGloSy6+5+1mBS+e7OH6mlo38
TFhFSt7Q0rz/qDXmV9zwU034rZhRfyzqRZljDc2x+ngyp3uahqzfPT3ZPzs1
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
MuF3YaYXljmLcNF1FbZZ61I1vv66Mr463wuLmpkBJZKMrs6OwGtmeG1xDLZo
A3gCwGRp7At4uwU4PFepX3rhBdTKdI8cnrBTupSsjcsXBhZmexbmepflQ2vL
I/KF/rnprvWVsaX5gbnp9vmZruWlgbXVwWV5nwKIu8XewYG33d1PF6fb//7X
8X/7bWJlsW1q+NXk0KvFmeYvyx2bq13y2Q+Twy9G+x6PDT6e6fswN/Rxsu/t
ZO+b+ZFP67M9S2Mfpvpe9X580PbmWuuri0Nt98d7n/R9vtH76cZYz6O2V+fe
Pq29c0V654zg0TXJp2c1A58aJ3ovvnpQ+OyOsOm+tPlZ6Zv7sue3hM0Pi9qe
lza/PNHyumGg79Zg/53Otmt9HXfbP98BtOTetcoPL89+et7Y8ur0rcv8J3dl
164wr15knj1LKC2NoVFdKGRnFtNVIg6qrog+fzaztCCQx3KmkWwL2A71FWFn
6yLLJG5cvBUl15RHRfJpSEqOCVh8qq2YhZGw7TlkaybRipxtUCZ2uX4h/lRN
kISNqCxwrqpwlUkwPDbYdyZCpqmYYyZiW8p4tlwqEON2Eo6diGUj4aJKpfZV
RfZHi+xlQsfiAlxpoUNFiXOhBCvkIJg0EzrZgk4wZOVbSllYYoYBNcuspjCo
RhjEz0Zz6VguFVdZ4F1c4MWmoim5ZvhsYxLeNC1Ri4Q3I+aa0skIDh0JoEbE
xXJoiPx828QE7aREbQoVQ8YjcjJMOGQHDsUhJ9VMyHTlM5xFLHcK0aZU5gf0
TnGBPysPnRh5kEe1FTLMy0pxRyvsIsOgQH8on6hLoVmlpGhER+9OTD2QjdfK
JWmEx0BeHltCQ7eFR+wIC9mTka5XVORbKPNLSzJC20LOLlsccJCX104Pt61e
/ntwTpCjM+Tiuc/ebUdYlEFuNobL8c1MtQkL1sahf7bH/GyoB7fIGuhDJvoQ
xm53ZKhFZoY7M8uanG5TxPET0J1ZeUgqESUTeEUG740MPZiVoc+EiRmCmm8B
gJ1EMGVSLNkE+xKhn4juCJ4vpjlW8sErmFTyXGV8ez4ZIeXhisXuFxoTWGw0
nY0sKQ8sqQiQSFyKigKqKhIKRWESIP0KnM/VRtcUhB8vDi0Vouj5VmdPS941
wX0mqhm0v/86PT/RCijE375N/Z9/yBVTXUDg//M//7Yx13fn/NH4YMe9EBTt
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
OCCAO7MmHpK5lYZWGq2TwZzGVLs+SSsGSAGPQDmjNTykjBEtIIUKSCFiVpyS
H6cRoZT8BK0oHvh9pTBGwAgzK5NV3FgBJUxChRllKQ1QgVORCbFS+MwoKSda
yo6WMqNV0ngLlG7WpBnUaKBY1DKgRlIBQ+ymNIc5vd5eXGsrbrSmttfltdXm
2rTJTgPGrktWCaMdumSLGmVRoY1qpEYczecESAWhUn4ok76PRvCtKv2WRtzD
ou2iEL40QVF3b3FqaxNzs/+QlfEHfOVXBbnvYcs+lkkDKKRPueydGlW4yQg3
QdGQKlzE86ooea+y7H2ZyM9pRZr1CD7Hj8vyglQwpSqGxfKjU/3x5E9FkgCV
PFItg6kU0Qp+qEYcWV+bJhOGWHQxR48Um3RIcNN0kqjy3C9LMt4XE2NYpUF8
UjQLF4Yv9MzHfIlBv4ct2sOihNMIQeQq/2qcL7kqgEEOpeL9qkr3VeR44fN9
BeQYkzS9XpvbqM9zaTF1OoyQ6M0n+6n44VJ2EKSOYzD9uMJgqTyqmrg3M/Nf
yiu+w5UFFuTuTUz5Q0npxxWF32QnfZ6C/OcU1I6o6B0us/D+7ecAJm/Wxt3V
hueevd2cfLE24B5Zc0DzDyzP9f3tx8V37/7Xu7+9uHay0ee7PzCw8WwCpjR1
X0GKR7MOzycgGnTY8YcH/+Pt082pGy8XHqxP31tf7H79AqiIibfrYNQ/fzX7
bN695fr8xcLI5tLkS/dqyfjm8tTmkru2wKuNkZerAy9XBzfXhjdW3DspG1st
qwAxfjuS/1sX7996V238Vw3n7aSv1SmgK/q2FkbcCgRAY312YGNu8O+7D2+t
nGxDZmAVWB53gM90n9Vdme1/MdXzes5d1Ghl9hng6uby4Mu152tzvUtTTxcn
nkyP3h7r+37o6fXhnhvjgDN9dwaeXOt5cGHo2fXexxd6uk/3PDw38PTC88cn
7n9/4NaVlvt39t+4UnPyONRWz6mxV1vUxUZNvlGR3VxXVW8sMckyDfKUGn3e
flupU5+nESfLmOFCaohemlBvzqnRZTZa8g434FqdJS32AqMUZVUkddSUtteV
CxnhEmYkmxholCfUGrOc+mSdzL1Kz6F40/GealGYiOHHJOwR0H200sg6e0aN
PhlM6wJGYBOUcrShuN2R3WTCHK4r6agtdKkTxVUBRg68VZvRYcg+ZC7pdOEa
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
SG5yuJ0OUKTA7aoFUTUqdIM+VcUOEZG81GKUTopiEnyB06GUe2Gzv8tOfJ9C
CGLQYARcUGG+N4kYziIjKotCCIXB2Fx/RPAfchO/xOZ60ioCGKWBYmKEjotm
l/uxy/wlpFCDOFElhGFLvygr/qC0/I/JmB0FxZ8VYj8lUL8msjyITE8y+1uO
zFMBxde5cA57rt4MM5sTzp6y37jo7puzuTS6MPZscaZ/fXEAuInZse7Fyd61
+cEfN2ferE29e/fLu3d/WRy7rxGU3jrjunTCXq+skFQn3zymu3gUajIS7l6s
+Wnx/s/L3fMj1/+yNvbj2vDy2FP3WF6dXJ/pX5zucZNkdnRtfnhlZti9sbI0
+MK9gzO0lfjaCzzOOtAqC8/deaczvdudHbY3cbZbdf/WZ3Nh8unc+OOZ0e7t
Ou2zwIwM3Z8cubc+PboxNwaMzMv54dWp/oXR5xsL/W/Xxl8tj23MA5XSMz/x
sP/JlZ4HXY9/OHf/5unvrzXduXKwt/v80uSDxcmH/U/PXb1Qd6RNe6RD1trI
rnVQD+7nHG+X1JtpDgjfaGUfPyQ71Co80CQ+0CTaX8t2WEh1JnKdmdJSw210
Uptd9DNH5N23mx58X3ewhQEpcmpMhaeP8i+dVV3ulF+7IL9+WnHmEOv8YfqT
W6YTbaRmW95+c16tPrXRkXOoueJQK+50U/nRuqIj9UWt1qzLR6lPb8jvdwkO
1ReYZAiTBLjvBJchxaSMg0QwpShUyQsWioJk0lCdEi4VBNOIu5gkD6kwWCoO
q6r6uqD0wzj0DkzaP3O5QdTqvUKqr4DqSyJ6ELHflhV9xiF7s/CexJKvxKR9
pKIvWBUeMnqwSRyjZoVRsbtZVXtlzGA+w59b7SekBuplyHoo1SxBqtgwwBO9
EAlmTAktTEgP4dGDeJQASrU3mxwq4MEF1EAK1rM053Nc4TdcSiCACQguJUhA
D5SwQ1XCaK0kRsaNAGoHSHeDHGkxpFkMGKcu1Q6l2qBUizbFJEdpRfEaUaxG
gJKzkWIKnEeKFdJQEmaKkpsioqTTKpDMKiS1AobN8s1L3JmZ8BGxAAj1MA4x
TMOMt0rdysQqSYc4aDUVyeNG85lRXFoECedXlv9NfubnpHIPAEBAEjrer7oc
jOV94KlBkWjTpdmNGa224kZzvlOT41BnO+TpCloUCKsE6dKnHG0uu3SGcu4Y
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
a7SmilW+NJ5H7X5u18UuAJP/CwUq+ac=
         "], {{0, 375}, {367, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{367, 375},
       PlotRange->{{0, 367}, {0, 375}}],
      StripOnInput->False,
      Magnification->2 Inherited], 
     StyleBox[
      TemplateBox[{
       StyleBox[
        "\"Trovare \[Alpha]\\n\"", FontColor -> RGBColor[1, 0, 0], 
         StripOnInput -> False],StyleBox[
        "\"Approssima il risultato per difetto alla prima cifra \
decimale\\n\\n\"", FontColor -> RGBColor[1, 0, 0], 10, StripOnInput -> False],
        StyleBox["\"\"", StripOnInput -> False],FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`alpha2], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`alpha2, "2.5"], 
             StandardForm]]}, "RowDefault"], "\"sen(\[Alpha])\""],"\" = \"",
        FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`gamma3], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma3, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{"\"sen(\"", 
           InputFieldBox[
            Dynamic[Trigonometria`gamma2], String, FieldSize -> 1], 
           "\"\[Degree])\"", 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`gamma2, "60"], 
             StandardForm]]}, "RowDefault"]],"\" \[LongRightArrow] \"",
        "\"sen(\[Alpha]) = \"",FractionBox[
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latob], String, FieldSize -> 2], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latob, "2.5"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`latoc], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`latoc, "3"], 
             StandardForm]]}, "RowDefault"]],"\" \[CenterDot] \"",FractionBox[
        
         TemplateBox[{
           TagBox[
            SqrtBox[
             InputFieldBox[
              Dynamic[Trigonometria`num10], String, FieldSize -> 1]], 
            DisplayForm], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`num10, "3"], 
             StandardForm]]}, "RowDefault"], 
         TemplateBox[{
           InputFieldBox[
            Dynamic[Trigonometria`den10], String, FieldSize -> 1], 
           DynamicBox[
            ToBoxes[
             Trigonometria`CheckAnswer[Trigonometria`den10, "2"], 
             StandardForm]]}, "RowDefault"]],"\" = \"",TemplateBox[{
          InputFieldBox[
           Dynamic[Trigonometria`res10], String, FieldSize -> 2], 
          DynamicBox[
           ToBoxes[
            Trigonometria`CheckAnswer[Trigonometria`res10, "0.7"], 
            StandardForm]]}, "RowDefault"]},
       "RowDefault"],
      StripOnInput->False,
      Magnification->2 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{10}}, "Rows" -> {{5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.704131555740979*^9}]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 FontFamily->"OpenDyslexic",
 CellTags->"SlideShowHeader",
 ExpressionUUID -> "0b0d8546-a0e6-4e8e-8c13-213784e15ec2"]
},
WindowSize->{1598, 841},
WindowMargins->{{1, Automatic}, {1, 32}},
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4471, 100, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5630, 144, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[7337, 182, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[9585, 246, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12385, 323, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[23864, 633, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[38478, 1015, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[42975, 1135, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[62086, 1618, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[77035, 1978, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[82476, 2169, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[100751, 2614, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[117104, 3038, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[128307, 3293, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[159004, 3966, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[165388, 4133, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[173804, 4352, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[178873, 4476, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[184187, 4603, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[194646, 4870, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[205110, 5136, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[211385, 5300, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[221774, 5571, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[230558, 5791, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[238803, 5992, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[304822, 7119, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[797285, 15246, 152, 3, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 797761, 15262}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4471, 100, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5054, 124, 222, 7, 202, "Title"],
Cell[5279, 133, 314, 6, 111, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5630, 144, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5785, 149, 1515, 28, 420, "Section"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7337, 182, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[7514, 189, 337, 6, 82, "Section"],
Cell[7854, 197, 814, 15, 161, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8705, 217, 327, 6, 82, "Section"],
Cell[9035, 225, 501, 15, 251, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9585, 246, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[9740, 251, 836, 21, 73, "Input"],
Cell[CellGroupData[{
Cell[10601, 276, 531, 11, 135, "Section"],
Cell[11135, 289, 1201, 28, 491, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12385, 323, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12562, 330, 389, 7, 82, "Section"],
Cell[12954, 339, 933, 35, 147, "Text"],
Cell[CellGroupData[{
Cell[13912, 378, 386, 7, 59, "Code"],
Cell[14301, 387, 6249, 139, 520, "Output"]
}, Open  ]],
Cell[20565, 529, 1422, 47, 95, "Text"],
Cell[CellGroupData[{
Cell[22012, 580, 319, 6, 59, "Code"],
Cell[22334, 588, 618, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22989, 607, 215, 4, 59, "Code"],
Cell[23207, 613, 596, 13, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23864, 633, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[24019, 638, 1548, 56, 111, "Text"],
Cell[CellGroupData[{
Cell[25592, 698, 184, 4, 59, "Code"],
Cell[25779, 704, 7505, 165, 520, "Output"]
}, Open  ]],
Cell[33299, 872, 1841, 59, 301, "Text"],
Cell[CellGroupData[{
Cell[35165, 935, 238, 5, 59, "Code"],
Cell[35406, 942, 3023, 67, 359, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38478, 1015, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[38655, 1022, 272, 6, 59, "Code"],
Cell[38930, 1030, 435, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39402, 1044, 305, 6, 59, "Code"],
Cell[39710, 1052, 3216, 77, 539, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42975, 1135, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[43152, 1142, 285, 5, 82, "Section"],
Cell[CellGroupData[{
Cell[43462, 1151, 217, 4, 59, "Code"],
Cell[43682, 1157, 9012, 199, 520, "Output"]
}, Open  ]],
Cell[52709, 1359, 2894, 99, 287, "Text"],
Cell[CellGroupData[{
Cell[55628, 1462, 234, 5, 59, "Code"],
Cell[55865, 1469, 5334, 119, 520, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61236, 1593, 213, 4, 59, "Code"],
Cell[61452, 1599, 573, 12, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62086, 1618, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[62263, 1625, 326, 6, 82, "Section"],
Cell[CellGroupData[{
Cell[62614, 1635, 189, 4, 59, "Code"],
Cell[62806, 1641, 6990, 160, 584, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69833, 1806, 189, 4, 59, "Code"],
Cell[70025, 1812, 6949, 159, 584, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77035, 1978, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[77212, 1985, 281, 5, 82, "Section"],
Cell[77496, 1992, 4931, 171, 563, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82476, 2169, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[82653, 2176, 323, 6, 59, "Code"],
Cell[82979, 2184, 17723, 424, 1623, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100751, 2614, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[100928, 2621, 272, 6, 59, "Code"],
Cell[101203, 2629, 15852, 403, 1183, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117104, 3038, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[117281, 3045, 285, 5, 82, "Section"],
Cell[CellGroupData[{
Cell[117591, 3054, 306, 6, 64, "Subsection"],
Cell[CellGroupData[{
Cell[117922, 3064, 189, 4, 59, "Code"],
Cell[118114, 3070, 9942, 210, 426, "Output"]
}, Open  ]],
Cell[128071, 3283, 175, 3, 73, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128307, 3293, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[128484, 3300, 283, 5, 48, "Subsubsection"],
Cell[CellGroupData[{
Cell[128792, 3309, 245, 5, 59, "Code"],
Cell[129040, 3316, 8470, 181, 510, "Output"]
}, Open  ]],
Cell[137525, 3500, 8438, 181, 520, "Input"],
Cell[145966, 3683, 1234, 25, 734, "Text"],
Cell[CellGroupData[{
Cell[147225, 3712, 216, 4, 59, "Code"],
Cell[147444, 3718, 10967, 230, 520, "Output"]
}, Open  ]],
Cell[158426, 3951, 529, 9, 77, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159004, 3966, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[159181, 3973, 274, 6, 59, "Code"],
Cell[159458, 3981, 5881, 146, 749, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165388, 4133, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[165565, 4140, 276, 6, 59, "Code"],
Cell[165844, 4148, 7911, 198, 710, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173804, 4352, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[173981, 4359, 282, 5, 82, "Section"],
Cell[CellGroupData[{
Cell[174288, 4368, 310, 6, 64, "Subsection"],
Cell[CellGroupData[{
Cell[174623, 4378, 188, 4, 59, "Code"],
Cell[174814, 4384, 3986, 84, 426, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178873, 4476, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[179050, 4483, 310, 6, 95, "Subsection"],
Cell[CellGroupData[{
Cell[179385, 4493, 214, 4, 59, "Code"],
Cell[179602, 4499, 3958, 83, 426, "Output"]
}, Open  ]],
Cell[183575, 4585, 563, 12, 191, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184187, 4603, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[184364, 4610, 273, 6, 59, "Code"],
Cell[184640, 4618, 9957, 246, 1006, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194646, 4870, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[194823, 4877, 274, 6, 59, "Code"],
Cell[195100, 4885, 9961, 245, 607, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205110, 5136, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[205287, 5143, 321, 6, 82, "Section"],
Cell[CellGroupData[{
Cell[205633, 5153, 1137, 33, 64, "Subsection"],
Cell[CellGroupData[{
Cell[206795, 5190, 190, 4, 59, "Code"],
Cell[206988, 5196, 4324, 96, 359, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211385, 5300, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[211562, 5307, 279, 5, 57, "Subsection"],
Cell[CellGroupData[{
Cell[211866, 5316, 193, 4, 59, "Code"],
Cell[212062, 5322, 5518, 118, 359, "Output"]
}, Open  ]],
Cell[217595, 5443, 4130, 122, 521, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221774, 5571, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[221951, 5578, 274, 6, 59, "Code"],
Cell[222228, 5586, 8281, 199, 756, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230558, 5791, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230735, 5798, 272, 6, 59, "Code"],
Cell[231010, 5806, 7744, 180, 804, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238803, 5992, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[238980, 5999, 274, 6, 59, "Code"],
Cell[239257, 6007, 65516, 1106, 428, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[304822, 7119, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[304999, 7126, 275, 6, 59, "Code"],
Cell[305277, 7134, 491981, 8108, 559, "Output"]
}, Open  ]]
}, Open  ]],
Cell[797285, 15246, 152, 3, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"]
}
]
*)

